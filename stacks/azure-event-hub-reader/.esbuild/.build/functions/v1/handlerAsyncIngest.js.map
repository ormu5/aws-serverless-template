{
  "version": 3,
  "sources": ["../../../../../../node_modules/lodash.merge/index.js", "../../../../../../node_modules/@smithy/types/dist-cjs/index.js", "../../../../../../node_modules/@smithy/protocol-http/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-endpoints/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-config-provider/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-middleware/dist-cjs/index.js", "../../../../../../node_modules/@smithy/config-resolver/dist-cjs/index.js", "../../../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js", "../../../../../../node_modules/@smithy/property-provider/dist-cjs/index.js", "../../../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/getHomeDir.js", "../../../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/getSSOTokenFilepath.js", "../../../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/getSSOTokenFromFile.js", "../../../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/slurpFile.js", "../../../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/index.js", "../../../../../../node_modules/@smithy/node-config-provider/dist-cjs/index.js", "../../../../../../node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/getEndpointUrlConfig.js", "../../../../../../node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/getEndpointFromConfig.js", "../../../../../../node_modules/@smithy/querystring-parser/dist-cjs/index.js", "../../../../../../node_modules/@smithy/url-parser/dist-cjs/index.js", "../../../../../../node_modules/@smithy/middleware-serde/dist-cjs/index.js", "../../../../../../node_modules/@smithy/middleware-endpoint/dist-cjs/index.js", "../../../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js", "../../../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemePlugin.js", "../../../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/index.js", "../../../../../../node_modules/@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js", "../../../../../../node_modules/uuid/dist/esm-node/rng.js", "../../../../../../node_modules/uuid/dist/esm-node/regex.js", "../../../../../../node_modules/uuid/dist/esm-node/validate.js", "../../../../../../node_modules/uuid/dist/esm-node/stringify.js", "../../../../../../node_modules/uuid/dist/esm-node/v1.js", "../../../../../../node_modules/uuid/dist/esm-node/parse.js", "../../../../../../node_modules/uuid/dist/esm-node/v35.js", "../../../../../../node_modules/uuid/dist/esm-node/md5.js", "../../../../../../node_modules/uuid/dist/esm-node/v3.js", "../../../../../../node_modules/uuid/dist/esm-node/native.js", "../../../../../../node_modules/uuid/dist/esm-node/v4.js", "../../../../../../node_modules/uuid/dist/esm-node/sha1.js", "../../../../../../node_modules/uuid/dist/esm-node/v5.js", "../../../../../../node_modules/uuid/dist/esm-node/nil.js", "../../../../../../node_modules/uuid/dist/esm-node/version.js", "../../../../../../node_modules/uuid/dist/esm-node/index.js", "../../../../../../node_modules/@smithy/service-error-classification/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-retry/dist-cjs/index.js", "../../../../../../node_modules/@smithy/middleware-stack/dist-cjs/index.js", "../../../../../../node_modules/@smithy/is-array-buffer/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-buffer-from/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../../../node_modules/@smithy/util-utf8/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../../../node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-stream/dist-cjs/getAwsChunkedEncodingStream.js", "../../../../../../node_modules/@smithy/util-uri-escape/dist-cjs/index.js", "../../../../../../node_modules/@smithy/querystring-builder/dist-cjs/index.js", "../../../../../../node_modules/@smithy/node-http-handler/dist-cjs/index.js", "../../../../../../node_modules/@smithy/fetch-http-handler/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-hex-encoding/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-stream/dist-cjs/sdk-stream-mixin.browser.js", "../../../../../../node_modules/@smithy/util-stream/dist-cjs/sdk-stream-mixin.js", "../../../../../../node_modules/@smithy/util-stream/dist-cjs/index.js", "../../../../../../node_modules/@smithy/smithy-client/dist-cjs/index.js", "../../../../../../node_modules/@smithy/middleware-retry/dist-cjs/isStreamingPayload/isStreamingPayload.js", "../../../../../../node_modules/@smithy/middleware-retry/dist-cjs/index.js", "../../../../../../node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js", "../../../../../../node_modules/@smithy/core/dist-es/middleware-http-signing/index.js", "../../../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js", "../../../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpApiKeyAuth.js", "../../../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpBearerAuth.js", "../../../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/noAuth.js", "../../../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/index.js", "../../../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js", "../../../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/index.js", "../../../../../../node_modules/@smithy/core/dist-es/getSmithyContext.js", "../../../../../../node_modules/@smithy/core/dist-es/normalizeProvider.js", "../../../../../../node_modules/@smithy/core/dist-es/protocols/requestBuilder.js", "../../../../../../node_modules/@smithy/core/dist-es/pagination/createPaginator.js", "../../../../../../node_modules/@smithy/core/dist-es/index.js", "../../../../../../node_modules/@smithy/middleware-content-length/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/client/index.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/index.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js", "../../../../../../node_modules/@smithy/signature-v4/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/index.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/index.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js", "../../../../../../node_modules/fast-xml-parser/src/util.js", "../../../../../../node_modules/fast-xml-parser/src/validator.js", "../../../../../../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js", "../../../../../../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js", "../../../../../../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js", "../../../../../../node_modules/strnum/strnum.js", "../../../../../../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js", "../../../../../../node_modules/fast-xml-parser/src/xmlparser/node2json.js", "../../../../../../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js", "../../../../../../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js", "../../../../../../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js", "../../../../../../node_modules/fast-xml-parser/src/fxp.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/index.js", "../../../../../../node_modules/@aws-sdk/core/dist-es/index.js", "../../../../../../node_modules/@aws-sdk/client-ssm/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../../../node_modules/tslib/tslib.es6.mjs", "../../../../../../node_modules/@aws-sdk/client-ssm/package.json", "../../../../../../node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js", "../../../../../../node_modules/@smithy/credential-provider-imds/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/checkUrl.js", "../../../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/requestHelpers.js", "../../../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/retry-wrapper.js", "../../../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/fromHttp.js", "../../../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-sso/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../../../node_modules/@aws-sdk/client-sso/package.json", "../../../../../../node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js", "../../../../../../node_modules/@smithy/hash-node/dist-cjs/index.js", "../../../../../../node_modules/@smithy/util-body-length-node/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/ruleset.js", "../../../../../../node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/endpointResolver.js", "../../../../../../node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js", "../../../../../../node_modules/@smithy/util-defaults-mode-node/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js", "../../../../../../node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-sso/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-sso-oidc/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../../../node_modules/@aws-sdk/client-sso-oidc/package.json", "../../../../../../node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/ruleset.js", "../../../../../../node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/endpointResolver.js", "../../../../../../node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.shared.js", "../../../../../../node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.js", "../../../../../../node_modules/@aws-sdk/client-sso-oidc/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/token-providers/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/EndpointParameters.js", "../../../../../../node_modules/@aws-sdk/client-sts/package.json", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/ruleset.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/endpointResolver.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthExtensionConfiguration.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/runtimeExtensions.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js", "../../../../../../node_modules/@aws-sdk/client-sts/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js", "../../../../../../node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js", "../../../../../../node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-ssm/dist-cjs/endpoint/ruleset.js", "../../../../../../node_modules/@aws-sdk/client-ssm/dist-cjs/endpoint/endpointResolver.js", "../../../../../../node_modules/@aws-sdk/client-ssm/dist-cjs/runtimeConfig.shared.js", "../../../../../../node_modules/@aws-sdk/client-ssm/dist-cjs/runtimeConfig.js", "../../../../../../node_modules/@smithy/util-waiter/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-ssm/dist-cjs/index.js", "../../../../../../node_modules/@azure/abort-controller/src/AbortSignal.ts", "../../../../../../node_modules/@azure/abort-controller/src/AbortController.ts", "../../../../../../node_modules/@azure/logger/src/log.ts", "../../../../../../node_modules/@azure/logger/src/debug.ts", "../../../../../../node_modules/@azure/logger/src/index.ts", "../../../../../../node_modules/@azure/core-util/node_modules/@azure/abort-controller/src/AbortError.ts", "../../../../../../node_modules/@azure/core-util/node_modules/@azure/abort-controller/src/index.ts", "../../../../../../node_modules/@azure/core-util/src/createAbortablePromise.ts", "../../../../../../node_modules/@azure/core-util/src/delay.ts", "../../../../../../node_modules/@azure/core-util/src/aborterUtils.ts", "../../../../../../node_modules/@azure/core-util/src/random.ts", "../../../../../../node_modules/@azure/core-util/src/object.ts", "../../../../../../node_modules/@azure/core-util/src/error.ts", "../../../../../../node_modules/@azure/core-util/src/sha256.ts", "../../../../../../node_modules/@azure/core-util/src/typeGuards.ts", "../../../../../../node_modules/@azure/core-util/src/uuidUtils.ts", "../../../../../../node_modules/@azure/core-util/src/checkEnvironment.ts", "../../../../../../node_modules/@azure/core-util/src/bytesEncoding.ts", "../../../../../../node_modules/@azure/core-util/src/index.ts", "../../../../../../node_modules/@azure/core-amqp/node_modules/@azure/abort-controller/src/AbortError.ts", "../../../../../../node_modules/@azure/core-amqp/node_modules/@azure/abort-controller/src/index.ts", "../../../../../../node_modules/rhea/lib/errors.js", "../../../../../../node_modules/rhea/lib/util.js", "../../../../../../node_modules/rhea/lib/types.js", "../../../../../../node_modules/rhea/lib/frames.js", "../../../../../../node_modules/ms/index.js", "../../../../../../node_modules/debug/src/common.js", "../../../../../../node_modules/debug/src/browser.js", "../../../../../../node_modules/has-flag/index.js", "../../../../../../node_modules/supports-color/index.js", "../../../../../../node_modules/debug/src/node.js", "../../../../../../node_modules/debug/src/index.js", "../../../../../../node_modules/rhea/lib/log.js", "../../../../../../node_modules/rhea/lib/transport.js", "../../../../../../node_modules/rhea/lib/sasl.js", "../../../../../../node_modules/rhea/lib/endpoint.js", "../../../../../../node_modules/rhea/lib/message.js", "../../../../../../node_modules/rhea/lib/terminus.js", "../../../../../../node_modules/rhea/lib/link.js", "../../../../../../node_modules/rhea/lib/session.js", "../../../../../../node_modules/rhea/lib/connection.js", "../../../../../../node_modules/rhea/lib/eventTypes.js", "../../../../../../node_modules/rhea/lib/ws.js", "../../../../../../node_modules/rhea/lib/filter.js", "../../../../../../node_modules/rhea/lib/container.js", "../../../../../../node_modules/rhea-promise/lib/log.ts", "../../../../../../node_modules/rhea-promise/lib/util/utils.ts", "../../../../../../node_modules/rhea-promise/lib/entity.ts", "../../../../../../node_modules/rhea-promise/lib/errorDefinitions.ts", "../../../../../../node_modules/rhea-promise/lib/link.ts", "../../../../../../node_modules/rhea-promise/lib/receiver.ts", "../../../../../../node_modules/rhea-promise/lib/sender.ts", "../../../../../../node_modules/rhea-promise/lib/awaitableSender.ts", "../../../../../../node_modules/rhea-promise/lib/session.ts", "../../../../../../node_modules/rhea-promise/lib/eventContext.ts", "../../../../../../node_modules/rhea-promise/lib/util/constants.ts", "../../../../../../node_modules/rhea-promise/lib/connection.ts", "../../../../../../node_modules/rhea-promise/lib/container.ts", "../../../../../../node_modules/rhea-promise/lib/index.ts", "../../../../../../node_modules/@azure/core-amqp/src/util/constants.ts", "../../../../../../node_modules/@azure/core-amqp/src/log.ts", "../../../../../../node_modules/@azure/core-amqp/src/util/lock.ts", "../../../../../../node_modules/@azure/core-amqp/src/util/utils.ts", "../../../../../../node_modules/@azure/core-amqp/src/errors.ts", "../../../../../../node_modules/@azure/core-amqp/src/requestResponseLink.ts", "../../../../../../node_modules/@azure/core-amqp/src/util/checkNetworkConnection.ts", "../../../../../../node_modules/@azure/core-amqp/src/retry.ts", "../../../../../../node_modules/@azure/core-amqp/src/auth/token.ts", "../../../../../../node_modules/@azure/core-amqp/src/connectionConfig/connectionConfig.ts", "../../../../../../node_modules/@azure/core-amqp/src/cbs.ts", "../../../../../../node_modules/@azure/core-amqp/src/messageHeader.ts", "../../../../../../node_modules/@azure/core-amqp/src/messageProperties.ts", "../../../../../../node_modules/@azure/core-amqp/src/util/runtimeInfo.ts", "../../../../../../node_modules/@azure/core-amqp/src/ConnectionContextBase.ts", "../../../../../../node_modules/@azure/core-amqp/src/amqpAnnotatedMessage.ts", "../../../../../../node_modules/@azure/core-auth/src/azureKeyCredential.ts", "../../../../../../node_modules/@azure/core-auth/src/keyCredential.ts", "../../../../../../node_modules/@azure/core-auth/src/azureNamedKeyCredential.ts", "../../../../../../node_modules/@azure/core-auth/src/azureSASCredential.ts", "../../../../../../node_modules/@azure/core-auth/src/tokenCredential.ts", "../../../../../../node_modules/@azure/core-auth/src/index.ts", "../../../../../../node_modules/@azure/core-amqp/src/util/hmacSha256.ts", "../../../../../../node_modules/@azure/core-amqp/src/auth/tokenProvider.ts", "../../../../../../node_modules/@azure/core-amqp/src/util/typeGuards.ts", "../../../../../../node_modules/@azure/core-amqp/src/internals.ts", "../../../../../../node_modules/@azure/core-amqp/src/index.ts", "../../../../../../node_modules/is-buffer/index.js", "../../../../../../node_modules/@azure/core-tracing/src/tracingContext.ts", "../../../../../../node_modules/@azure/core-tracing/src/state-cjs.cts", "../../../../../../node_modules/@azure/core-tracing/src/instrumenter.ts", "../../../../../../node_modules/@azure/core-tracing/src/tracingClient.ts", "../../../../../../node_modules/@azure/core-tracing/src/index.ts", "../../../../../../node_modules/@azure/event-hubs/src/logger.ts", "../../../../../../node_modules/@azure/event-hubs/src/partitionProcessor.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventPosition.ts", "../../../../../../node_modules/@azure/event-hubs/src/models/public.ts", "../../../../../../node_modules/@azure/event-hubs/src/dataTransformer.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/constants.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventData.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/retries.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/utils.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/timerLoop.ts", "../../../../../../node_modules/@azure/event-hubs/src/withAuth.ts", "../../../../../../node_modules/@azure/event-hubs/src/partitionReceiver.ts", "../../../../../../node_modules/@azure/event-hubs/src/diagnostics/tracing.ts", "../../../../../../node_modules/@azure/event-hubs/src/diagnostics/instrumentEventData.ts", "../../../../../../node_modules/@azure/event-hubs/src/partitionPump.ts", "../../../../../../node_modules/@azure/event-hubs/src/pumpManager.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/delayWithoutThrow.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventProcessor.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/connectionStringUtils.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/error.ts", "../../../../../../node_modules/@azure/event-hubs/src/managementClient.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/parseEndpoint.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventhubConnectionConfig.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/runtimeInfo.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/typeGuards.ts", "../../../../../../node_modules/@azure/event-hubs/src/connectionContext.ts", "../../../../../../node_modules/@azure/event-hubs/src/loadBalancerStrategies/loadBalancingStrategy.ts", "../../../../../../node_modules/@azure/event-hubs/src/loadBalancerStrategies/balancedStrategy.ts", "../../../../../../node_modules/@azure/event-hubs/src/loadBalancerStrategies/greedyStrategy.ts", "../../../../../../node_modules/@azure/event-hubs/src/inMemoryCheckpointStore.ts", "../../../../../../node_modules/@azure/event-hubs/src/impl/partitionGate.ts", "../../../../../../node_modules/@azure/event-hubs/src/loadBalancerStrategies/unbalancedStrategy.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventHubConsumerClient.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventDataBatch.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventHubSender.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventHubProducerClient.ts", "../../../../../../node_modules/@azure/event-hubs/src/impl/awaitableQueue.ts", "../../../../../../node_modules/@azure/event-hubs/src/util/getPromiseParts.ts", "../../../../../../node_modules/@azure/event-hubs/src/batchingPartitionChannel.ts", "../../../../../../node_modules/@azure/event-hubs/src/impl/partitionKeyToIdMapper.ts", "../../../../../../node_modules/@azure/event-hubs/src/impl/partitionAssigner.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventHubBufferedProducerClient.ts", "../../../../../../node_modules/@azure/event-hubs/src/eventDataAdapter.ts", "../../../../../../node_modules/@aws-sdk/client-rds-data/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../../../node_modules/@aws-sdk/client-rds-data/package.json", "../../../../../../node_modules/@aws-sdk/client-rds-data/dist-cjs/endpoint/ruleset.js", "../../../../../../node_modules/@aws-sdk/client-rds-data/dist-cjs/endpoint/endpointResolver.js", "../../../../../../node_modules/@aws-sdk/client-rds-data/dist-cjs/runtimeConfig.shared.js", "../../../../../../node_modules/@aws-sdk/client-rds-data/dist-cjs/runtimeConfig.js", "../../../../../../node_modules/@aws-sdk/client-rds-data/dist-cjs/index.js", "../../../../../../node_modules/@aws-sdk/client-sns/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../../../node_modules/@aws-sdk/client-sns/package.json", "../../../../../../node_modules/@aws-sdk/client-sns/dist-cjs/endpoint/ruleset.js", "../../../../../../node_modules/@aws-sdk/client-sns/dist-cjs/endpoint/endpointResolver.js", "../../../../../../node_modules/@aws-sdk/client-sns/dist-cjs/runtimeConfig.shared.js", "../../../../../../node_modules/@aws-sdk/client-sns/dist-cjs/runtimeConfig.js", "../../../../../../node_modules/@aws-sdk/client-sns/dist-cjs/index.js", "../../../../functions/v1/handlerAsyncIngest.ts", "../../../../../../lib/ts/v1/initConstants.ts", "../../../../../../node_modules/@aws-lambda-powertools/commons/lib/esm/typeUtils.js", "../../../../../../node_modules/@aws-lambda-powertools/commons/lib/esm/Utility.js", "../../../../../../node_modules/@aws-lambda-powertools/commons/lib/esm/config/EnvironmentVariablesService.js", "../../../../../../node_modules/@aws-lambda-powertools/commons/lib/esm/version.js", "../../../../../../node_modules/@aws-lambda-powertools/commons/lib/esm/awsSdkUtils.js", "../../../../../../node_modules/@aws-lambda-powertools/commons/lib/esm/middleware/constants.js", "../../../../../../node_modules/@aws-lambda-powertools/logger/lib/esm/Logger.js", "../../../../../../node_modules/@aws-lambda-powertools/logger/lib/esm/config/EnvironmentVariablesService.js", "../../../../../../node_modules/@aws-lambda-powertools/logger/lib/esm/constants.js", "../../../../../../node_modules/@aws-lambda-powertools/logger/lib/esm/formatter/LogFormatter.js", "../../../../../../node_modules/@aws-lambda-powertools/logger/lib/esm/formatter/LogItem.js", "../../../../../../node_modules/@aws-lambda-powertools/logger/lib/esm/formatter/PowertoolsLogFormatter.js", "../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/esm/Metrics.js", "../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/esm/config/EnvironmentVariablesService.js", "../../../../../../node_modules/@aws-lambda-powertools/metrics/lib/esm/constants.js", "../../../../../../lib/ts/v1/utilities.ts", "../../../../../../lib/ts/v1/parameters.ts", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/constants.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/base/GetOptions.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/base/GetMultipleOptions.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/base/ExpirableValue.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/errors.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/config/EnvironmentVariablesService.js", "../../../../../../node_modules/@aws-lambda-powertools/commons/lib/esm/fromBase64.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/base/transformValue.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/base/BaseProvider.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/ssm/SSMProvider.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/base/DefaultProviders.js", "../../../../../../node_modules/@aws-lambda-powertools/parameters/lib/esm/ssm/getParametersByName.js", "../../../../../../lib/ts/v1/eventHubIngest.ts", "../../../../../../lib/ts/v1/eventHubDbCheckpointStore.ts", "../../../../../../lib/ts/v1/database.ts", "../../../../../../lib/ts/v1/dataApiUtil.ts", "../../../../../../lib/ts/v1/eventHubDbCheckpoint.ts", "../../../../../../lib/ts/v1/eventHubDbPartitionOwnership.ts", "../../../../../../lib/ts/v1/sns.ts"],
  "sourcesContent": ["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AlgorithmId: () => AlgorithmId,\n  EndpointURLScheme: () => EndpointURLScheme,\n  FieldPosition: () => FieldPosition,\n  HttpApiKeyAuthLocation: () => HttpApiKeyAuthLocation,\n  HttpAuthLocation: () => HttpAuthLocation,\n  IniSectionType: () => IniSectionType,\n  RequestHandlerProtocol: () => RequestHandlerProtocol,\n  SMITHY_CONTEXT_KEY: () => SMITHY_CONTEXT_KEY,\n  getDefaultClientConfiguration: () => getDefaultClientConfiguration,\n  resolveDefaultRuntimeConfig: () => resolveDefaultRuntimeConfig\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/auth/auth.ts\nvar HttpAuthLocation = /* @__PURE__ */ ((HttpAuthLocation2) => {\n  HttpAuthLocation2[\"HEADER\"] = \"header\";\n  HttpAuthLocation2[\"QUERY\"] = \"query\";\n  return HttpAuthLocation2;\n})(HttpAuthLocation || {});\n\n// src/auth/HttpApiKeyAuth.ts\nvar HttpApiKeyAuthLocation = /* @__PURE__ */ ((HttpApiKeyAuthLocation2) => {\n  HttpApiKeyAuthLocation2[\"HEADER\"] = \"header\";\n  HttpApiKeyAuthLocation2[\"QUERY\"] = \"query\";\n  return HttpApiKeyAuthLocation2;\n})(HttpApiKeyAuthLocation || {});\n\n// src/endpoint.ts\nvar EndpointURLScheme = /* @__PURE__ */ ((EndpointURLScheme2) => {\n  EndpointURLScheme2[\"HTTP\"] = \"http\";\n  EndpointURLScheme2[\"HTTPS\"] = \"https\";\n  return EndpointURLScheme2;\n})(EndpointURLScheme || {});\n\n// src/extensions/checksum.ts\nvar AlgorithmId = /* @__PURE__ */ ((AlgorithmId2) => {\n  AlgorithmId2[\"MD5\"] = \"md5\";\n  AlgorithmId2[\"CRC32\"] = \"crc32\";\n  AlgorithmId2[\"CRC32C\"] = \"crc32c\";\n  AlgorithmId2[\"SHA1\"] = \"sha1\";\n  AlgorithmId2[\"SHA256\"] = \"sha256\";\n  return AlgorithmId2;\n})(AlgorithmId || {});\nvar getChecksumConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  const checksumAlgorithms = [];\n  if (runtimeConfig.sha256 !== void 0) {\n    checksumAlgorithms.push({\n      algorithmId: () => \"sha256\" /* SHA256 */,\n      checksumConstructor: () => runtimeConfig.sha256\n    });\n  }\n  if (runtimeConfig.md5 != void 0) {\n    checksumAlgorithms.push({\n      algorithmId: () => \"md5\" /* MD5 */,\n      checksumConstructor: () => runtimeConfig.md5\n    });\n  }\n  return {\n    _checksumAlgorithms: checksumAlgorithms,\n    addChecksumAlgorithm(algo) {\n      this._checksumAlgorithms.push(algo);\n    },\n    checksumAlgorithms() {\n      return this._checksumAlgorithms;\n    }\n  };\n}, \"getChecksumConfiguration\");\nvar resolveChecksumRuntimeConfig = /* @__PURE__ */ __name((clientConfig) => {\n  const runtimeConfig = {};\n  clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n    runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n  });\n  return runtimeConfig;\n}, \"resolveChecksumRuntimeConfig\");\n\n// src/extensions/defaultClientConfiguration.ts\nvar getDefaultClientConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  return {\n    ...getChecksumConfiguration(runtimeConfig)\n  };\n}, \"getDefaultClientConfiguration\");\nvar resolveDefaultRuntimeConfig = /* @__PURE__ */ __name((config) => {\n  return {\n    ...resolveChecksumRuntimeConfig(config)\n  };\n}, \"resolveDefaultRuntimeConfig\");\n\n// src/http.ts\nvar FieldPosition = /* @__PURE__ */ ((FieldPosition2) => {\n  FieldPosition2[FieldPosition2[\"HEADER\"] = 0] = \"HEADER\";\n  FieldPosition2[FieldPosition2[\"TRAILER\"] = 1] = \"TRAILER\";\n  return FieldPosition2;\n})(FieldPosition || {});\n\n// src/middleware.ts\nvar SMITHY_CONTEXT_KEY = \"__smithy_context\";\n\n// src/profile.ts\nvar IniSectionType = /* @__PURE__ */ ((IniSectionType2) => {\n  IniSectionType2[\"PROFILE\"] = \"profile\";\n  IniSectionType2[\"SSO_SESSION\"] = \"sso-session\";\n  IniSectionType2[\"SERVICES\"] = \"services\";\n  return IniSectionType2;\n})(IniSectionType || {});\n\n// src/transfer.ts\nvar RequestHandlerProtocol = /* @__PURE__ */ ((RequestHandlerProtocol2) => {\n  RequestHandlerProtocol2[\"HTTP_0_9\"] = \"http/0.9\";\n  RequestHandlerProtocol2[\"HTTP_1_0\"] = \"http/1.0\";\n  RequestHandlerProtocol2[\"TDS_8_0\"] = \"tds/8.0\";\n  return RequestHandlerProtocol2;\n})(RequestHandlerProtocol || {});\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  HttpAuthLocation,\n  HttpApiKeyAuthLocation,\n  EndpointURLScheme,\n  AlgorithmId,\n  getDefaultClientConfiguration,\n  resolveDefaultRuntimeConfig,\n  FieldPosition,\n  SMITHY_CONTEXT_KEY,\n  IniSectionType,\n  RequestHandlerProtocol\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Field: () => Field,\n  Fields: () => Fields,\n  HttpRequest: () => HttpRequest,\n  HttpResponse: () => HttpResponse,\n  getHttpHandlerExtensionConfiguration: () => getHttpHandlerExtensionConfiguration,\n  isValidHostname: () => isValidHostname,\n  resolveHttpHandlerRuntimeConfig: () => resolveHttpHandlerRuntimeConfig\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/extensions/httpExtensionConfiguration.ts\nvar getHttpHandlerExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  let httpHandler = runtimeConfig.httpHandler;\n  return {\n    setHttpHandler(handler) {\n      httpHandler = handler;\n    },\n    httpHandler() {\n      return httpHandler;\n    },\n    updateHttpClientConfig(key, value) {\n      httpHandler.updateHttpClientConfig(key, value);\n    },\n    httpHandlerConfigs() {\n      return httpHandler.httpHandlerConfigs();\n    }\n  };\n}, \"getHttpHandlerExtensionConfiguration\");\nvar resolveHttpHandlerRuntimeConfig = /* @__PURE__ */ __name((httpHandlerExtensionConfiguration) => {\n  return {\n    httpHandler: httpHandlerExtensionConfiguration.httpHandler()\n  };\n}, \"resolveHttpHandlerRuntimeConfig\");\n\n// src/Field.ts\nvar import_types = require(\"@smithy/types\");\nvar _Field = class _Field {\n  constructor({ name, kind = import_types.FieldPosition.HEADER, values = [] }) {\n    this.name = name;\n    this.kind = kind;\n    this.values = values;\n  }\n  /**\n   * Appends a value to the field.\n   *\n   * @param value The value to append.\n   */\n  add(value) {\n    this.values.push(value);\n  }\n  /**\n   * Overwrite existing field values.\n   *\n   * @param values The new field values.\n   */\n  set(values) {\n    this.values = values;\n  }\n  /**\n   * Remove all matching entries from list.\n   *\n   * @param value Value to remove.\n   */\n  remove(value) {\n    this.values = this.values.filter((v) => v !== value);\n  }\n  /**\n   * Get comma-delimited string.\n   *\n   * @returns String representation of {@link Field}.\n   */\n  toString() {\n    return this.values.map((v) => v.includes(\",\") || v.includes(\" \") ? `\"${v}\"` : v).join(\", \");\n  }\n  /**\n   * Get string values as a list\n   *\n   * @returns Values in {@link Field} as a list.\n   */\n  get() {\n    return this.values;\n  }\n};\n__name(_Field, \"Field\");\nvar Field = _Field;\n\n// src/Fields.ts\nvar _Fields = class _Fields {\n  constructor({ fields = [], encoding = \"utf-8\" }) {\n    this.entries = {};\n    fields.forEach(this.setField.bind(this));\n    this.encoding = encoding;\n  }\n  /**\n   * Set entry for a {@link Field} name. The `name`\n   * attribute will be used to key the collection.\n   *\n   * @param field The {@link Field} to set.\n   */\n  setField(field) {\n    this.entries[field.name.toLowerCase()] = field;\n  }\n  /**\n   *  Retrieve {@link Field} entry by name.\n   *\n   * @param name The name of the {@link Field} entry\n   *  to retrieve\n   * @returns The {@link Field} if it exists.\n   */\n  getField(name) {\n    return this.entries[name.toLowerCase()];\n  }\n  /**\n   * Delete entry from collection.\n   *\n   * @param name Name of the entry to delete.\n   */\n  removeField(name) {\n    delete this.entries[name.toLowerCase()];\n  }\n  /**\n   * Helper function for retrieving specific types of fields.\n   * Used to grab all headers or all trailers.\n   *\n   * @param kind {@link FieldPosition} of entries to retrieve.\n   * @returns The {@link Field} entries with the specified\n   *  {@link FieldPosition}.\n   */\n  getByType(kind) {\n    return Object.values(this.entries).filter((field) => field.kind === kind);\n  }\n};\n__name(_Fields, \"Fields\");\nvar Fields = _Fields;\n\n// src/httpRequest.ts\nvar _HttpRequest = class _HttpRequest {\n  constructor(options) {\n    this.method = options.method || \"GET\";\n    this.hostname = options.hostname || \"localhost\";\n    this.port = options.port;\n    this.query = options.query || {};\n    this.headers = options.headers || {};\n    this.body = options.body;\n    this.protocol = options.protocol ? options.protocol.slice(-1) !== \":\" ? `${options.protocol}:` : options.protocol : \"https:\";\n    this.path = options.path ? options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path : \"/\";\n    this.username = options.username;\n    this.password = options.password;\n    this.fragment = options.fragment;\n  }\n  static isInstance(request) {\n    if (!request)\n      return false;\n    const req = request;\n    return \"method\" in req && \"protocol\" in req && \"hostname\" in req && \"path\" in req && typeof req[\"query\"] === \"object\" && typeof req[\"headers\"] === \"object\";\n  }\n  clone() {\n    const cloned = new _HttpRequest({\n      ...this,\n      headers: { ...this.headers }\n    });\n    if (cloned.query)\n      cloned.query = cloneQuery(cloned.query);\n    return cloned;\n  }\n};\n__name(_HttpRequest, \"HttpRequest\");\nvar HttpRequest = _HttpRequest;\nfunction cloneQuery(query) {\n  return Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n      ...carry,\n      [paramName]: Array.isArray(param) ? [...param] : param\n    };\n  }, {});\n}\n__name(cloneQuery, \"cloneQuery\");\n\n// src/httpResponse.ts\nvar _HttpResponse = class _HttpResponse {\n  constructor(options) {\n    this.statusCode = options.statusCode;\n    this.reason = options.reason;\n    this.headers = options.headers || {};\n    this.body = options.body;\n  }\n  static isInstance(response) {\n    if (!response)\n      return false;\n    const resp = response;\n    return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n  }\n};\n__name(_HttpResponse, \"HttpResponse\");\nvar HttpResponse = _HttpResponse;\n\n// src/isValidHostname.ts\nfunction isValidHostname(hostname) {\n  const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n  return hostPattern.test(hostname);\n}\n__name(isValidHostname, \"isValidHostname\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  getHttpHandlerExtensionConfiguration,\n  resolveHttpHandlerRuntimeConfig,\n  Field,\n  Fields,\n  HttpRequest,\n  HttpResponse,\n  isValidHostname\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  getHostHeaderPlugin: () => getHostHeaderPlugin,\n  hostHeaderMiddleware: () => hostHeaderMiddleware,\n  hostHeaderMiddlewareOptions: () => hostHeaderMiddlewareOptions,\n  resolveHostHeaderConfig: () => resolveHostHeaderConfig\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nfunction resolveHostHeaderConfig(input) {\n  return input;\n}\n__name(resolveHostHeaderConfig, \"resolveHostHeaderConfig\");\nvar hostHeaderMiddleware = /* @__PURE__ */ __name((options) => (next) => async (args) => {\n  if (!import_protocol_http.HttpRequest.isInstance(args.request))\n    return next(args);\n  const { request } = args;\n  const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n  if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n    delete request.headers[\"host\"];\n    request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n  } else if (!request.headers[\"host\"]) {\n    let host = request.hostname;\n    if (request.port != null)\n      host += `:${request.port}`;\n    request.headers[\"host\"] = host;\n  }\n  return next(args);\n}, \"hostHeaderMiddleware\");\nvar hostHeaderMiddlewareOptions = {\n  name: \"hostHeaderMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"HOST\"],\n  override: true\n};\nvar getHostHeaderPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n  }\n}), \"getHostHeaderPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  resolveHostHeaderConfig,\n  hostHeaderMiddleware,\n  hostHeaderMiddlewareOptions,\n  getHostHeaderPlugin\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  getLoggerPlugin: () => getLoggerPlugin,\n  loggerMiddleware: () => loggerMiddleware,\n  loggerMiddlewareOptions: () => loggerMiddlewareOptions\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/loggerMiddleware.ts\nvar loggerMiddleware = /* @__PURE__ */ __name(() => (next, context) => async (args) => {\n  var _a, _b;\n  try {\n    const response = await next(args);\n    const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n    const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n    const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n    const { $metadata, ...outputWithoutMetadata } = response.output;\n    (_a = logger == null ? void 0 : logger.info) == null ? void 0 : _a.call(logger, {\n      clientName,\n      commandName,\n      input: inputFilterSensitiveLog(args.input),\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n      metadata: $metadata\n    });\n    return response;\n  } catch (error) {\n    const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n    const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n    (_b = logger == null ? void 0 : logger.error) == null ? void 0 : _b.call(logger, {\n      clientName,\n      commandName,\n      input: inputFilterSensitiveLog(args.input),\n      error,\n      metadata: error.$metadata\n    });\n    throw error;\n  }\n}, \"loggerMiddleware\");\nvar loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true\n};\nvar getLoggerPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  }\n}), \"getLoggerPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  loggerMiddleware,\n  loggerMiddlewareOptions,\n  getLoggerPlugin\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  addRecursionDetectionMiddlewareOptions: () => addRecursionDetectionMiddlewareOptions,\n  getRecursionDetectionPlugin: () => getRecursionDetectionPlugin,\n  recursionDetectionMiddleware: () => recursionDetectionMiddleware\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nvar ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nvar ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nvar recursionDetectionMiddleware = /* @__PURE__ */ __name((options) => (next) => async (args) => {\n  const { request } = args;\n  if (!import_protocol_http.HttpRequest.isInstance(request) || options.runtime !== \"node\" || request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n    return next(args);\n  }\n  const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n  const traceId = process.env[ENV_TRACE_ID];\n  const nonEmptyString = /* @__PURE__ */ __name((str) => typeof str === \"string\" && str.length > 0, \"nonEmptyString\");\n  if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n    request.headers[TRACE_ID_HEADER_NAME] = traceId;\n  }\n  return next({\n    ...args,\n    request\n  });\n}, \"recursionDetectionMiddleware\");\nvar addRecursionDetectionMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"RECURSION_DETECTION\"],\n  name: \"recursionDetectionMiddleware\",\n  override: true,\n  priority: \"low\"\n};\nvar getRecursionDetectionPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n  }\n}), \"getRecursionDetectionPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  recursionDetectionMiddleware,\n  addRecursionDetectionMiddlewareOptions,\n  getRecursionDetectionPlugin\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  EndpointError: () => EndpointError,\n  customEndpointFunctions: () => customEndpointFunctions,\n  isIpAddress: () => isIpAddress,\n  isValidHostLabel: () => isValidHostLabel,\n  resolveEndpoint: () => resolveEndpoint\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/lib/isIpAddress.ts\nvar IP_V4_REGEX = new RegExp(\n  `^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`\n);\nvar isIpAddress = /* @__PURE__ */ __name((value) => IP_V4_REGEX.test(value) || value.startsWith(\"[\") && value.endsWith(\"]\"), \"isIpAddress\");\n\n// src/lib/isValidHostLabel.ts\nvar VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nvar isValidHostLabel = /* @__PURE__ */ __name((value, allowSubDomains = false) => {\n  if (!allowSubDomains) {\n    return VALID_HOST_LABEL_REGEX.test(value);\n  }\n  const labels = value.split(\".\");\n  for (const label of labels) {\n    if (!isValidHostLabel(label)) {\n      return false;\n    }\n  }\n  return true;\n}, \"isValidHostLabel\");\n\n// src/utils/customEndpointFunctions.ts\nvar customEndpointFunctions = {};\n\n// src/debug/debugId.ts\nvar debugId = \"endpoints\";\n\n// src/debug/toDebugString.ts\nfunction toDebugString(input) {\n  if (typeof input !== \"object\" || input == null) {\n    return input;\n  }\n  if (\"ref\" in input) {\n    return `$${toDebugString(input.ref)}`;\n  }\n  if (\"fn\" in input) {\n    return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n  }\n  return JSON.stringify(input, null, 2);\n}\n__name(toDebugString, \"toDebugString\");\n\n// src/types/EndpointError.ts\nvar _EndpointError = class _EndpointError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"EndpointError\";\n  }\n};\n__name(_EndpointError, \"EndpointError\");\nvar EndpointError = _EndpointError;\n\n// src/lib/booleanEquals.ts\nvar booleanEquals = /* @__PURE__ */ __name((value1, value2) => value1 === value2, \"booleanEquals\");\n\n// src/lib/getAttrPathList.ts\nvar getAttrPathList = /* @__PURE__ */ __name((path) => {\n  const parts = path.split(\".\");\n  const pathList = [];\n  for (const part of parts) {\n    const squareBracketIndex = part.indexOf(\"[\");\n    if (squareBracketIndex !== -1) {\n      if (part.indexOf(\"]\") !== part.length - 1) {\n        throw new EndpointError(`Path: '${path}' does not end with ']'`);\n      }\n      const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n      if (Number.isNaN(parseInt(arrayIndex))) {\n        throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n      }\n      if (squareBracketIndex !== 0) {\n        pathList.push(part.slice(0, squareBracketIndex));\n      }\n      pathList.push(arrayIndex);\n    } else {\n      pathList.push(part);\n    }\n  }\n  return pathList;\n}, \"getAttrPathList\");\n\n// src/lib/getAttr.ts\nvar getAttr = /* @__PURE__ */ __name((value, path) => getAttrPathList(path).reduce((acc, index) => {\n  if (typeof acc !== \"object\") {\n    throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n  } else if (Array.isArray(acc)) {\n    return acc[parseInt(index)];\n  }\n  return acc[index];\n}, value), \"getAttr\");\n\n// src/lib/isSet.ts\nvar isSet = /* @__PURE__ */ __name((value) => value != null, \"isSet\");\n\n// src/lib/not.ts\nvar not = /* @__PURE__ */ __name((value) => !value, \"not\");\n\n// src/lib/parseURL.ts\nvar import_types3 = require(\"@smithy/types\");\nvar DEFAULT_PORTS = {\n  [import_types3.EndpointURLScheme.HTTP]: 80,\n  [import_types3.EndpointURLScheme.HTTPS]: 443\n};\nvar parseURL = /* @__PURE__ */ __name((value) => {\n  const whatwgURL = (() => {\n    try {\n      if (value instanceof URL) {\n        return value;\n      }\n      if (typeof value === \"object\" && \"hostname\" in value) {\n        const { hostname: hostname2, port, protocol: protocol2 = \"\", path = \"\", query = {} } = value;\n        const url = new URL(`${protocol2}//${hostname2}${port ? `:${port}` : \"\"}${path}`);\n        url.search = Object.entries(query).map(([k, v]) => `${k}=${v}`).join(\"&\");\n        return url;\n      }\n      return new URL(value);\n    } catch (error) {\n      return null;\n    }\n  })();\n  if (!whatwgURL) {\n    console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n    return null;\n  }\n  const urlString = whatwgURL.href;\n  const { host, hostname, pathname, protocol, search } = whatwgURL;\n  if (search) {\n    return null;\n  }\n  const scheme = protocol.slice(0, -1);\n  if (!Object.values(import_types3.EndpointURLScheme).includes(scheme)) {\n    return null;\n  }\n  const isIp = isIpAddress(hostname);\n  const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) || typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`);\n  const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n  return {\n    scheme,\n    authority,\n    path: pathname,\n    normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n    isIp\n  };\n}, \"parseURL\");\n\n// src/lib/stringEquals.ts\nvar stringEquals = /* @__PURE__ */ __name((value1, value2) => value1 === value2, \"stringEquals\");\n\n// src/lib/substring.ts\nvar substring = /* @__PURE__ */ __name((input, start, stop, reverse) => {\n  if (start >= stop || input.length < stop) {\n    return null;\n  }\n  if (!reverse) {\n    return input.substring(start, stop);\n  }\n  return input.substring(input.length - stop, input.length - start);\n}, \"substring\");\n\n// src/lib/uriEncode.ts\nvar uriEncode = /* @__PURE__ */ __name((value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`), \"uriEncode\");\n\n// src/utils/endpointFunctions.ts\nvar endpointFunctions = {\n  booleanEquals,\n  getAttr,\n  isSet,\n  isValidHostLabel,\n  not,\n  parseURL,\n  stringEquals,\n  substring,\n  uriEncode\n};\n\n// src/utils/evaluateTemplate.ts\nvar evaluateTemplate = /* @__PURE__ */ __name((template, options) => {\n  const evaluatedTemplateArr = [];\n  const templateContext = {\n    ...options.endpointParams,\n    ...options.referenceRecord\n  };\n  let currentIndex = 0;\n  while (currentIndex < template.length) {\n    const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n    if (openingBraceIndex === -1) {\n      evaluatedTemplateArr.push(template.slice(currentIndex));\n      break;\n    }\n    evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n    const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n    if (closingBraceIndex === -1) {\n      evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n      break;\n    }\n    if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n      evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n      currentIndex = closingBraceIndex + 2;\n    }\n    const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n    if (parameterName.includes(\"#\")) {\n      const [refName, attrName] = parameterName.split(\"#\");\n      evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n    } else {\n      evaluatedTemplateArr.push(templateContext[parameterName]);\n    }\n    currentIndex = closingBraceIndex + 1;\n  }\n  return evaluatedTemplateArr.join(\"\");\n}, \"evaluateTemplate\");\n\n// src/utils/getReferenceValue.ts\nvar getReferenceValue = /* @__PURE__ */ __name(({ ref }, options) => {\n  const referenceRecord = {\n    ...options.endpointParams,\n    ...options.referenceRecord\n  };\n  return referenceRecord[ref];\n}, \"getReferenceValue\");\n\n// src/utils/evaluateExpression.ts\nvar evaluateExpression = /* @__PURE__ */ __name((obj, keyName, options) => {\n  if (typeof obj === \"string\") {\n    return evaluateTemplate(obj, options);\n  } else if (obj[\"fn\"]) {\n    return callFunction(obj, options);\n  } else if (obj[\"ref\"]) {\n    return getReferenceValue(obj, options);\n  }\n  throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n}, \"evaluateExpression\");\n\n// src/utils/callFunction.ts\nvar callFunction = /* @__PURE__ */ __name(({ fn, argv }, options) => {\n  const evaluatedArgs = argv.map(\n    (arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options)\n  );\n  const fnSegments = fn.split(\".\");\n  if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {\n    return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);\n  }\n  return endpointFunctions[fn](...evaluatedArgs);\n}, \"callFunction\");\n\n// src/utils/evaluateCondition.ts\nvar evaluateCondition = /* @__PURE__ */ __name(({ assign, ...fnArgs }, options) => {\n  var _a, _b;\n  if (assign && assign in options.referenceRecord) {\n    throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n  }\n  const value = callFunction(fnArgs, options);\n  (_b = (_a = options.logger) == null ? void 0 : _a.debug) == null ? void 0 : _b.call(_a, `${debugId} evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n  return {\n    result: value === \"\" ? true : !!value,\n    ...assign != null && { toAssign: { name: assign, value } }\n  };\n}, \"evaluateCondition\");\n\n// src/utils/evaluateConditions.ts\nvar evaluateConditions = /* @__PURE__ */ __name((conditions = [], options) => {\n  var _a, _b;\n  const conditionsReferenceRecord = {};\n  for (const condition of conditions) {\n    const { result, toAssign } = evaluateCondition(condition, {\n      ...options,\n      referenceRecord: {\n        ...options.referenceRecord,\n        ...conditionsReferenceRecord\n      }\n    });\n    if (!result) {\n      return { result };\n    }\n    if (toAssign) {\n      conditionsReferenceRecord[toAssign.name] = toAssign.value;\n      (_b = (_a = options.logger) == null ? void 0 : _a.debug) == null ? void 0 : _b.call(_a, `${debugId} assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n    }\n  }\n  return { result: true, referenceRecord: conditionsReferenceRecord };\n}, \"evaluateConditions\");\n\n// src/utils/getEndpointHeaders.ts\nvar getEndpointHeaders = /* @__PURE__ */ __name((headers, options) => Object.entries(headers).reduce(\n  (acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n      const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n      if (typeof processedExpr !== \"string\") {\n        throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n      }\n      return processedExpr;\n    })\n  }),\n  {}\n), \"getEndpointHeaders\");\n\n// src/utils/getEndpointProperty.ts\nvar getEndpointProperty = /* @__PURE__ */ __name((property, options) => {\n  if (Array.isArray(property)) {\n    return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n  }\n  switch (typeof property) {\n    case \"string\":\n      return evaluateTemplate(property, options);\n    case \"object\":\n      if (property === null) {\n        throw new EndpointError(`Unexpected endpoint property: ${property}`);\n      }\n      return getEndpointProperties(property, options);\n    case \"boolean\":\n      return property;\n    default:\n      throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n  }\n}, \"getEndpointProperty\");\n\n// src/utils/getEndpointProperties.ts\nvar getEndpointProperties = /* @__PURE__ */ __name((properties, options) => Object.entries(properties).reduce(\n  (acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options)\n  }),\n  {}\n), \"getEndpointProperties\");\n\n// src/utils/getEndpointUrl.ts\nvar getEndpointUrl = /* @__PURE__ */ __name((endpointUrl, options) => {\n  const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n  if (typeof expression === \"string\") {\n    try {\n      return new URL(expression);\n    } catch (error) {\n      console.error(`Failed to construct URL with ${expression}`, error);\n      throw error;\n    }\n  }\n  throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n}, \"getEndpointUrl\");\n\n// src/utils/evaluateEndpointRule.ts\nvar evaluateEndpointRule = /* @__PURE__ */ __name((endpointRule, options) => {\n  var _a, _b;\n  const { conditions, endpoint } = endpointRule;\n  const { result, referenceRecord } = evaluateConditions(conditions, options);\n  if (!result) {\n    return;\n  }\n  const endpointRuleOptions = {\n    ...options,\n    referenceRecord: { ...options.referenceRecord, ...referenceRecord }\n  };\n  const { url, properties, headers } = endpoint;\n  (_b = (_a = options.logger) == null ? void 0 : _a.debug) == null ? void 0 : _b.call(_a, `${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);\n  return {\n    ...headers != void 0 && {\n      headers: getEndpointHeaders(headers, endpointRuleOptions)\n    },\n    ...properties != void 0 && {\n      properties: getEndpointProperties(properties, endpointRuleOptions)\n    },\n    url: getEndpointUrl(url, endpointRuleOptions)\n  };\n}, \"evaluateEndpointRule\");\n\n// src/utils/evaluateErrorRule.ts\nvar evaluateErrorRule = /* @__PURE__ */ __name((errorRule, options) => {\n  const { conditions, error } = errorRule;\n  const { result, referenceRecord } = evaluateConditions(conditions, options);\n  if (!result) {\n    return;\n  }\n  throw new EndpointError(\n    evaluateExpression(error, \"Error\", {\n      ...options,\n      referenceRecord: { ...options.referenceRecord, ...referenceRecord }\n    })\n  );\n}, \"evaluateErrorRule\");\n\n// src/utils/evaluateTreeRule.ts\nvar evaluateTreeRule = /* @__PURE__ */ __name((treeRule, options) => {\n  const { conditions, rules } = treeRule;\n  const { result, referenceRecord } = evaluateConditions(conditions, options);\n  if (!result) {\n    return;\n  }\n  return evaluateRules(rules, {\n    ...options,\n    referenceRecord: { ...options.referenceRecord, ...referenceRecord }\n  });\n}, \"evaluateTreeRule\");\n\n// src/utils/evaluateRules.ts\nvar evaluateRules = /* @__PURE__ */ __name((rules, options) => {\n  for (const rule of rules) {\n    if (rule.type === \"endpoint\") {\n      const endpointOrUndefined = evaluateEndpointRule(rule, options);\n      if (endpointOrUndefined) {\n        return endpointOrUndefined;\n      }\n    } else if (rule.type === \"error\") {\n      evaluateErrorRule(rule, options);\n    } else if (rule.type === \"tree\") {\n      const endpointOrUndefined = evaluateTreeRule(rule, options);\n      if (endpointOrUndefined) {\n        return endpointOrUndefined;\n      }\n    } else {\n      throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n    }\n  }\n  throw new EndpointError(`Rules evaluation failed`);\n}, \"evaluateRules\");\n\n// src/resolveEndpoint.ts\nvar resolveEndpoint = /* @__PURE__ */ __name((ruleSetObject, options) => {\n  var _a, _b, _c, _d, _e;\n  const { endpointParams, logger } = options;\n  const { parameters, rules } = ruleSetObject;\n  (_b = (_a = options.logger) == null ? void 0 : _a.debug) == null ? void 0 : _b.call(_a, `${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n  const paramsWithDefault = Object.entries(parameters).filter(([, v]) => v.default != null).map(([k, v]) => [k, v.default]);\n  if (paramsWithDefault.length > 0) {\n    for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n      endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n    }\n  }\n  const requiredParams = Object.entries(parameters).filter(([, v]) => v.required).map(([k]) => k);\n  for (const requiredParam of requiredParams) {\n    if (endpointParams[requiredParam] == null) {\n      throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n    }\n  }\n  const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n  if ((_c = options.endpointParams) == null ? void 0 : _c.Endpoint) {\n    try {\n      const givenEndpoint = new URL(options.endpointParams.Endpoint);\n      const { protocol, port } = givenEndpoint;\n      endpoint.url.protocol = protocol;\n      endpoint.url.port = port;\n    } catch (e) {\n    }\n  }\n  (_e = (_d = options.logger) == null ? void 0 : _d.debug) == null ? void 0 : _e.call(_d, `${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n  return endpoint;\n}, \"resolveEndpoint\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  isIpAddress,\n  isValidHostLabel,\n  customEndpointFunctions,\n  resolveEndpoint,\n  EndpointError\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  ConditionObject: () => import_util_endpoints.ConditionObject,\n  DeprecatedObject: () => import_util_endpoints.DeprecatedObject,\n  EndpointError: () => import_util_endpoints.EndpointError,\n  EndpointObject: () => import_util_endpoints.EndpointObject,\n  EndpointObjectHeaders: () => import_util_endpoints.EndpointObjectHeaders,\n  EndpointObjectProperties: () => import_util_endpoints.EndpointObjectProperties,\n  EndpointParams: () => import_util_endpoints.EndpointParams,\n  EndpointResolverOptions: () => import_util_endpoints.EndpointResolverOptions,\n  EndpointRuleObject: () => import_util_endpoints.EndpointRuleObject,\n  ErrorRuleObject: () => import_util_endpoints.ErrorRuleObject,\n  EvaluateOptions: () => import_util_endpoints.EvaluateOptions,\n  Expression: () => import_util_endpoints.Expression,\n  FunctionArgv: () => import_util_endpoints.FunctionArgv,\n  FunctionObject: () => import_util_endpoints.FunctionObject,\n  FunctionReturn: () => import_util_endpoints.FunctionReturn,\n  ParameterObject: () => import_util_endpoints.ParameterObject,\n  ReferenceObject: () => import_util_endpoints.ReferenceObject,\n  ReferenceRecord: () => import_util_endpoints.ReferenceRecord,\n  RuleSetObject: () => import_util_endpoints.RuleSetObject,\n  RuleSetRules: () => import_util_endpoints.RuleSetRules,\n  TreeRuleObject: () => import_util_endpoints.TreeRuleObject,\n  awsEndpointFunctions: () => awsEndpointFunctions,\n  getUserAgentPrefix: () => getUserAgentPrefix,\n  isIpAddress: () => import_util_endpoints.isIpAddress,\n  partition: () => partition,\n  resolveEndpoint: () => import_util_endpoints.resolveEndpoint,\n  setPartitionInfo: () => setPartitionInfo,\n  useDefaultPartitionInfo: () => useDefaultPartitionInfo\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/aws.ts\n\n\n// src/lib/aws/isVirtualHostableS3Bucket.ts\n\n\n// src/lib/isIpAddress.ts\nvar import_util_endpoints = require(\"@smithy/util-endpoints\");\n\n// src/lib/aws/isVirtualHostableS3Bucket.ts\nvar isVirtualHostableS3Bucket = /* @__PURE__ */ __name((value, allowSubDomains = false) => {\n  if (allowSubDomains) {\n    for (const label of value.split(\".\")) {\n      if (!isVirtualHostableS3Bucket(label)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (!(0, import_util_endpoints.isValidHostLabel)(value)) {\n    return false;\n  }\n  if (value.length < 3 || value.length > 63) {\n    return false;\n  }\n  if (value !== value.toLowerCase()) {\n    return false;\n  }\n  if ((0, import_util_endpoints.isIpAddress)(value)) {\n    return false;\n  }\n  return true;\n}, \"isVirtualHostableS3Bucket\");\n\n// src/lib/aws/parseArn.ts\nvar parseArn = /* @__PURE__ */ __name((value) => {\n  const segments = value.split(\":\");\n  if (segments.length < 6)\n    return null;\n  const [arn, partition2, service, region, accountId, ...resourceId] = segments;\n  if (arn !== \"arn\" || partition2 === \"\" || service === \"\" || resourceId[0] === \"\")\n    return null;\n  return {\n    partition: partition2,\n    service,\n    region,\n    accountId,\n    resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId\n  };\n}, \"parseArn\");\n\n// src/lib/aws/partitions.json\nvar partitions_default = {\n  partitions: [{\n    id: \"aws\",\n    outputs: {\n      dnsSuffix: \"amazonaws.com\",\n      dualStackDnsSuffix: \"api.aws\",\n      implicitGlobalRegion: \"us-east-1\",\n      name: \"aws\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^(us|eu|ap|sa|ca|me|af|il)\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"af-south-1\": {\n        description: \"Africa (Cape Town)\"\n      },\n      \"ap-east-1\": {\n        description: \"Asia Pacific (Hong Kong)\"\n      },\n      \"ap-northeast-1\": {\n        description: \"Asia Pacific (Tokyo)\"\n      },\n      \"ap-northeast-2\": {\n        description: \"Asia Pacific (Seoul)\"\n      },\n      \"ap-northeast-3\": {\n        description: \"Asia Pacific (Osaka)\"\n      },\n      \"ap-south-1\": {\n        description: \"Asia Pacific (Mumbai)\"\n      },\n      \"ap-south-2\": {\n        description: \"Asia Pacific (Hyderabad)\"\n      },\n      \"ap-southeast-1\": {\n        description: \"Asia Pacific (Singapore)\"\n      },\n      \"ap-southeast-2\": {\n        description: \"Asia Pacific (Sydney)\"\n      },\n      \"ap-southeast-3\": {\n        description: \"Asia Pacific (Jakarta)\"\n      },\n      \"ap-southeast-4\": {\n        description: \"Asia Pacific (Melbourne)\"\n      },\n      \"aws-global\": {\n        description: \"AWS Standard global region\"\n      },\n      \"ca-central-1\": {\n        description: \"Canada (Central)\"\n      },\n      \"ca-west-1\": {\n        description: \"Canada West (Calgary)\"\n      },\n      \"eu-central-1\": {\n        description: \"Europe (Frankfurt)\"\n      },\n      \"eu-central-2\": {\n        description: \"Europe (Zurich)\"\n      },\n      \"eu-north-1\": {\n        description: \"Europe (Stockholm)\"\n      },\n      \"eu-south-1\": {\n        description: \"Europe (Milan)\"\n      },\n      \"eu-south-2\": {\n        description: \"Europe (Spain)\"\n      },\n      \"eu-west-1\": {\n        description: \"Europe (Ireland)\"\n      },\n      \"eu-west-2\": {\n        description: \"Europe (London)\"\n      },\n      \"eu-west-3\": {\n        description: \"Europe (Paris)\"\n      },\n      \"il-central-1\": {\n        description: \"Israel (Tel Aviv)\"\n      },\n      \"me-central-1\": {\n        description: \"Middle East (UAE)\"\n      },\n      \"me-south-1\": {\n        description: \"Middle East (Bahrain)\"\n      },\n      \"sa-east-1\": {\n        description: \"South America (Sao Paulo)\"\n      },\n      \"us-east-1\": {\n        description: \"US East (N. Virginia)\"\n      },\n      \"us-east-2\": {\n        description: \"US East (Ohio)\"\n      },\n      \"us-west-1\": {\n        description: \"US West (N. California)\"\n      },\n      \"us-west-2\": {\n        description: \"US West (Oregon)\"\n      }\n    }\n  }, {\n    id: \"aws-cn\",\n    outputs: {\n      dnsSuffix: \"amazonaws.com.cn\",\n      dualStackDnsSuffix: \"api.amazonwebservices.com.cn\",\n      implicitGlobalRegion: \"cn-northwest-1\",\n      name: \"aws-cn\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-cn-global\": {\n        description: \"AWS China global region\"\n      },\n      \"cn-north-1\": {\n        description: \"China (Beijing)\"\n      },\n      \"cn-northwest-1\": {\n        description: \"China (Ningxia)\"\n      }\n    }\n  }, {\n    id: \"aws-us-gov\",\n    outputs: {\n      dnsSuffix: \"amazonaws.com\",\n      dualStackDnsSuffix: \"api.aws\",\n      implicitGlobalRegion: \"us-gov-west-1\",\n      name: \"aws-us-gov\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-us-gov-global\": {\n        description: \"AWS GovCloud (US) global region\"\n      },\n      \"us-gov-east-1\": {\n        description: \"AWS GovCloud (US-East)\"\n      },\n      \"us-gov-west-1\": {\n        description: \"AWS GovCloud (US-West)\"\n      }\n    }\n  }, {\n    id: \"aws-iso\",\n    outputs: {\n      dnsSuffix: \"c2s.ic.gov\",\n      dualStackDnsSuffix: \"c2s.ic.gov\",\n      implicitGlobalRegion: \"us-iso-east-1\",\n      name: \"aws-iso\",\n      supportsDualStack: false,\n      supportsFIPS: true\n    },\n    regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-iso-global\": {\n        description: \"AWS ISO (US) global region\"\n      },\n      \"us-iso-east-1\": {\n        description: \"US ISO East\"\n      },\n      \"us-iso-west-1\": {\n        description: \"US ISO WEST\"\n      }\n    }\n  }, {\n    id: \"aws-iso-b\",\n    outputs: {\n      dnsSuffix: \"sc2s.sgov.gov\",\n      dualStackDnsSuffix: \"sc2s.sgov.gov\",\n      implicitGlobalRegion: \"us-isob-east-1\",\n      name: \"aws-iso-b\",\n      supportsDualStack: false,\n      supportsFIPS: true\n    },\n    regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-iso-b-global\": {\n        description: \"AWS ISOB (US) global region\"\n      },\n      \"us-isob-east-1\": {\n        description: \"US ISOB East (Ohio)\"\n      }\n    }\n  }, {\n    id: \"aws-iso-e\",\n    outputs: {\n      dnsSuffix: \"cloud.adc-e.uk\",\n      dualStackDnsSuffix: \"cloud.adc-e.uk\",\n      implicitGlobalRegion: \"eu-isoe-west-1\",\n      name: \"aws-iso-e\",\n      supportsDualStack: false,\n      supportsFIPS: true\n    },\n    regionRegex: \"^eu\\\\-isoe\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"eu-isoe-west-1\": {\n        description: \"EU ISOE West\"\n      }\n    }\n  }, {\n    id: \"aws-iso-f\",\n    outputs: {\n      dnsSuffix: \"csp.hci.ic.gov\",\n      dualStackDnsSuffix: \"csp.hci.ic.gov\",\n      implicitGlobalRegion: \"us-isof-south-1\",\n      name: \"aws-iso-f\",\n      supportsDualStack: false,\n      supportsFIPS: true\n    },\n    regionRegex: \"^us\\\\-isof\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {}\n  }],\n  version: \"1.1\"\n};\n\n// src/lib/aws/partition.ts\nvar selectedPartitionsInfo = partitions_default;\nvar selectedUserAgentPrefix = \"\";\nvar partition = /* @__PURE__ */ __name((value) => {\n  const { partitions } = selectedPartitionsInfo;\n  for (const partition2 of partitions) {\n    const { regions, outputs } = partition2;\n    for (const [region, regionData] of Object.entries(regions)) {\n      if (region === value) {\n        return {\n          ...outputs,\n          ...regionData\n        };\n      }\n    }\n  }\n  for (const partition2 of partitions) {\n    const { regionRegex, outputs } = partition2;\n    if (new RegExp(regionRegex).test(value)) {\n      return {\n        ...outputs\n      };\n    }\n  }\n  const DEFAULT_PARTITION = partitions.find((partition2) => partition2.id === \"aws\");\n  if (!DEFAULT_PARTITION) {\n    throw new Error(\n      \"Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.\"\n    );\n  }\n  return {\n    ...DEFAULT_PARTITION.outputs\n  };\n}, \"partition\");\nvar setPartitionInfo = /* @__PURE__ */ __name((partitionsInfo, userAgentPrefix = \"\") => {\n  selectedPartitionsInfo = partitionsInfo;\n  selectedUserAgentPrefix = userAgentPrefix;\n}, \"setPartitionInfo\");\nvar useDefaultPartitionInfo = /* @__PURE__ */ __name(() => {\n  setPartitionInfo(partitions_default, \"\");\n}, \"useDefaultPartitionInfo\");\nvar getUserAgentPrefix = /* @__PURE__ */ __name(() => selectedUserAgentPrefix, \"getUserAgentPrefix\");\n\n// src/aws.ts\nvar awsEndpointFunctions = {\n  isVirtualHostableS3Bucket,\n  parseArn,\n  partition\n};\nimport_util_endpoints.customEndpointFunctions.aws = awsEndpointFunctions;\n\n// src/resolveEndpoint.ts\n\n\n// src/types/EndpointError.ts\n\n\n// src/types/EndpointRuleObject.ts\n\n\n// src/types/ErrorRuleObject.ts\n\n\n// src/types/RuleSetObject.ts\n\n\n// src/types/TreeRuleObject.ts\n\n\n// src/types/shared.ts\n\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  awsEndpointFunctions,\n  partition,\n  setPartitionInfo,\n  useDefaultPartitionInfo,\n  getUserAgentPrefix,\n  isIpAddress,\n  resolveEndpoint,\n  EndpointError\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  getUserAgentMiddlewareOptions: () => getUserAgentMiddlewareOptions,\n  getUserAgentPlugin: () => getUserAgentPlugin,\n  resolveUserAgentConfig: () => resolveUserAgentConfig,\n  userAgentMiddleware: () => userAgentMiddleware\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/configurations.ts\nfunction resolveUserAgentConfig(input) {\n  return {\n    ...input,\n    customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent\n  };\n}\n__name(resolveUserAgentConfig, \"resolveUserAgentConfig\");\n\n// src/user-agent-middleware.ts\nvar import_util_endpoints = require(\"@aws-sdk/util-endpoints\");\nvar import_protocol_http = require(\"@smithy/protocol-http\");\n\n// src/constants.ts\nvar USER_AGENT = \"user-agent\";\nvar X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nvar SPACE = \" \";\nvar UA_NAME_SEPARATOR = \"/\";\nvar UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nvar UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nvar UA_ESCAPE_CHAR = \"-\";\n\n// src/user-agent-middleware.ts\nvar userAgentMiddleware = /* @__PURE__ */ __name((options) => (next, context) => async (args) => {\n  var _a, _b;\n  const { request } = args;\n  if (!import_protocol_http.HttpRequest.isInstance(request))\n    return next(args);\n  const { headers } = request;\n  const userAgent = ((_a = context == null ? void 0 : context.userAgent) == null ? void 0 : _a.map(escapeUserAgent)) || [];\n  const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n  const customUserAgent = ((_b = options == null ? void 0 : options.customUserAgent) == null ? void 0 : _b.map(escapeUserAgent)) || [];\n  const prefix = (0, import_util_endpoints.getUserAgentPrefix)();\n  const sdkUserAgentValue = (prefix ? [prefix] : []).concat([...defaultUserAgent, ...userAgent, ...customUserAgent]).join(SPACE);\n  const normalUAValue = [\n    ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n    ...customUserAgent\n  ].join(SPACE);\n  if (options.runtime !== \"browser\") {\n    if (normalUAValue) {\n      headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT] ? `${headers[USER_AGENT]} ${normalUAValue}` : normalUAValue;\n    }\n    headers[USER_AGENT] = sdkUserAgentValue;\n  } else {\n    headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n  }\n  return next({\n    ...args,\n    request\n  });\n}, \"userAgentMiddleware\");\nvar escapeUserAgent = /* @__PURE__ */ __name((userAgentPair) => {\n  var _a;\n  const name = userAgentPair[0].split(UA_NAME_SEPARATOR).map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR)).join(UA_NAME_SEPARATOR);\n  const version = (_a = userAgentPair[1]) == null ? void 0 : _a.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n  const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n  const prefix = name.substring(0, prefixSeparatorIndex);\n  let uaName = name.substring(prefixSeparatorIndex + 1);\n  if (prefix === \"api\") {\n    uaName = uaName.toLowerCase();\n  }\n  return [prefix, uaName, version].filter((item) => item && item.length > 0).reduce((acc, item, index) => {\n    switch (index) {\n      case 0:\n        return item;\n      case 1:\n        return `${acc}/${item}`;\n      default:\n        return `${acc}#${item}`;\n    }\n  }, \"\");\n}, \"escapeUserAgent\");\nvar getUserAgentMiddlewareOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n  override: true\n};\nvar getUserAgentPlugin = /* @__PURE__ */ __name((config) => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n  }\n}), \"getUserAgentPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  resolveUserAgentConfig,\n  userAgentMiddleware,\n  getUserAgentMiddlewareOptions,\n  getUserAgentPlugin\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  SelectorType: () => SelectorType,\n  booleanSelector: () => booleanSelector,\n  numberSelector: () => numberSelector\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/booleanSelector.ts\nvar booleanSelector = /* @__PURE__ */ __name((obj, key, type) => {\n  if (!(key in obj))\n    return void 0;\n  if (obj[key] === \"true\")\n    return true;\n  if (obj[key] === \"false\")\n    return false;\n  throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n}, \"booleanSelector\");\n\n// src/numberSelector.ts\nvar numberSelector = /* @__PURE__ */ __name((obj, key, type) => {\n  if (!(key in obj))\n    return void 0;\n  const numberValue = parseInt(obj[key], 10);\n  if (Number.isNaN(numberValue)) {\n    throw new TypeError(`Cannot load ${type} '${key}'. Expected number, got '${obj[key]}'.`);\n  }\n  return numberValue;\n}, \"numberSelector\");\n\n// src/types.ts\nvar SelectorType = /* @__PURE__ */ ((SelectorType2) => {\n  SelectorType2[\"ENV\"] = \"env\";\n  SelectorType2[\"CONFIG\"] = \"shared config entry\";\n  return SelectorType2;\n})(SelectorType || {});\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  booleanSelector,\n  numberSelector,\n  SelectorType\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  getSmithyContext: () => getSmithyContext,\n  normalizeProvider: () => normalizeProvider\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/getSmithyContext.ts\nvar import_types = require(\"@smithy/types\");\nvar getSmithyContext = /* @__PURE__ */ __name((context) => context[import_types.SMITHY_CONTEXT_KEY] || (context[import_types.SMITHY_CONTEXT_KEY] = {}), \"getSmithyContext\");\n\n// src/normalizeProvider.ts\nvar normalizeProvider = /* @__PURE__ */ __name((input) => {\n  if (typeof input === \"function\")\n    return input;\n  const promisified = Promise.resolve(input);\n  return () => promisified;\n}, \"normalizeProvider\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  getSmithyContext,\n  normalizeProvider\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  CONFIG_USE_DUALSTACK_ENDPOINT: () => CONFIG_USE_DUALSTACK_ENDPOINT,\n  CONFIG_USE_FIPS_ENDPOINT: () => CONFIG_USE_FIPS_ENDPOINT,\n  DEFAULT_USE_DUALSTACK_ENDPOINT: () => DEFAULT_USE_DUALSTACK_ENDPOINT,\n  DEFAULT_USE_FIPS_ENDPOINT: () => DEFAULT_USE_FIPS_ENDPOINT,\n  ENV_USE_DUALSTACK_ENDPOINT: () => ENV_USE_DUALSTACK_ENDPOINT,\n  ENV_USE_FIPS_ENDPOINT: () => ENV_USE_FIPS_ENDPOINT,\n  NODE_REGION_CONFIG_FILE_OPTIONS: () => NODE_REGION_CONFIG_FILE_OPTIONS,\n  NODE_REGION_CONFIG_OPTIONS: () => NODE_REGION_CONFIG_OPTIONS,\n  NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS: () => NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS,\n  NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS: () => NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS,\n  REGION_ENV_NAME: () => REGION_ENV_NAME,\n  REGION_INI_NAME: () => REGION_INI_NAME,\n  getRegionInfo: () => getRegionInfo,\n  resolveCustomEndpointsConfig: () => resolveCustomEndpointsConfig,\n  resolveEndpointsConfig: () => resolveEndpointsConfig,\n  resolveRegionConfig: () => resolveRegionConfig\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/endpointsConfig/NodeUseDualstackEndpointConfigOptions.ts\nvar import_util_config_provider = require(\"@smithy/util-config-provider\");\nvar ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nvar CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nvar DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nvar NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => (0, import_util_config_provider.booleanSelector)(env, ENV_USE_DUALSTACK_ENDPOINT, import_util_config_provider.SelectorType.ENV),\n  configFileSelector: (profile) => (0, import_util_config_provider.booleanSelector)(profile, CONFIG_USE_DUALSTACK_ENDPOINT, import_util_config_provider.SelectorType.CONFIG),\n  default: false\n};\n\n// src/endpointsConfig/NodeUseFipsEndpointConfigOptions.ts\n\nvar ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nvar CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nvar DEFAULT_USE_FIPS_ENDPOINT = false;\nvar NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => (0, import_util_config_provider.booleanSelector)(env, ENV_USE_FIPS_ENDPOINT, import_util_config_provider.SelectorType.ENV),\n  configFileSelector: (profile) => (0, import_util_config_provider.booleanSelector)(profile, CONFIG_USE_FIPS_ENDPOINT, import_util_config_provider.SelectorType.CONFIG),\n  default: false\n};\n\n// src/endpointsConfig/resolveCustomEndpointsConfig.ts\nvar import_util_middleware = require(\"@smithy/util-middleware\");\nvar resolveCustomEndpointsConfig = /* @__PURE__ */ __name((input) => {\n  const { endpoint, urlParser } = input;\n  return {\n    ...input,\n    tls: input.tls ?? true,\n    endpoint: (0, import_util_middleware.normalizeProvider)(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint),\n    isCustomEndpoint: true,\n    useDualstackEndpoint: (0, import_util_middleware.normalizeProvider)(input.useDualstackEndpoint ?? false)\n  };\n}, \"resolveCustomEndpointsConfig\");\n\n// src/endpointsConfig/resolveEndpointsConfig.ts\n\n\n// src/endpointsConfig/utils/getEndpointFromRegion.ts\nvar getEndpointFromRegion = /* @__PURE__ */ __name(async (input) => {\n  const { tls = true } = input;\n  const region = await input.region();\n  const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n  if (!dnsHostRegex.test(region)) {\n    throw new Error(\"Invalid region in client config\");\n  }\n  const useDualstackEndpoint = await input.useDualstackEndpoint();\n  const useFipsEndpoint = await input.useFipsEndpoint();\n  const { hostname } = await input.regionInfoProvider(region, { useDualstackEndpoint, useFipsEndpoint }) ?? {};\n  if (!hostname) {\n    throw new Error(\"Cannot resolve hostname from client config\");\n  }\n  return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n}, \"getEndpointFromRegion\");\n\n// src/endpointsConfig/resolveEndpointsConfig.ts\nvar resolveEndpointsConfig = /* @__PURE__ */ __name((input) => {\n  const useDualstackEndpoint = (0, import_util_middleware.normalizeProvider)(input.useDualstackEndpoint ?? false);\n  const { endpoint, useFipsEndpoint, urlParser } = input;\n  return {\n    ...input,\n    tls: input.tls ?? true,\n    endpoint: endpoint ? (0, import_util_middleware.normalizeProvider)(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint) : () => getEndpointFromRegion({ ...input, useDualstackEndpoint, useFipsEndpoint }),\n    isCustomEndpoint: !!endpoint,\n    useDualstackEndpoint\n  };\n}, \"resolveEndpointsConfig\");\n\n// src/regionConfig/config.ts\nvar REGION_ENV_NAME = \"AWS_REGION\";\nvar REGION_INI_NAME = \"region\";\nvar NODE_REGION_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n  configFileSelector: (profile) => profile[REGION_INI_NAME],\n  default: () => {\n    throw new Error(\"Region is missing\");\n  }\n};\nvar NODE_REGION_CONFIG_FILE_OPTIONS = {\n  preferredFile: \"credentials\"\n};\n\n// src/regionConfig/isFipsRegion.ts\nvar isFipsRegion = /* @__PURE__ */ __name((region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\")), \"isFipsRegion\");\n\n// src/regionConfig/getRealRegion.ts\nvar getRealRegion = /* @__PURE__ */ __name((region) => isFipsRegion(region) ? [\"fips-aws-global\", \"aws-fips\"].includes(region) ? \"us-east-1\" : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\") : region, \"getRealRegion\");\n\n// src/regionConfig/resolveRegionConfig.ts\nvar resolveRegionConfig = /* @__PURE__ */ __name((input) => {\n  const { region, useFipsEndpoint } = input;\n  if (!region) {\n    throw new Error(\"Region is missing\");\n  }\n  return {\n    ...input,\n    region: async () => {\n      if (typeof region === \"string\") {\n        return getRealRegion(region);\n      }\n      const providedRegion = await region();\n      return getRealRegion(providedRegion);\n    },\n    useFipsEndpoint: async () => {\n      const providedRegion = typeof region === \"string\" ? region : await region();\n      if (isFipsRegion(providedRegion)) {\n        return true;\n      }\n      return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n    }\n  };\n}, \"resolveRegionConfig\");\n\n// src/regionInfo/getHostnameFromVariants.ts\nvar getHostnameFromVariants = /* @__PURE__ */ __name((variants = [], { useFipsEndpoint, useDualstackEndpoint }) => {\n  var _a;\n  return (_a = variants.find(\n    ({ tags }) => useFipsEndpoint === tags.includes(\"fips\") && useDualstackEndpoint === tags.includes(\"dualstack\")\n  )) == null ? void 0 : _a.hostname;\n}, \"getHostnameFromVariants\");\n\n// src/regionInfo/getResolvedHostname.ts\nvar getResolvedHostname = /* @__PURE__ */ __name((resolvedRegion, { regionHostname, partitionHostname }) => regionHostname ? regionHostname : partitionHostname ? partitionHostname.replace(\"{region}\", resolvedRegion) : void 0, \"getResolvedHostname\");\n\n// src/regionInfo/getResolvedPartition.ts\nvar getResolvedPartition = /* @__PURE__ */ __name((region, { partitionHash }) => Object.keys(partitionHash || {}).find((key) => partitionHash[key].regions.includes(region)) ?? \"aws\", \"getResolvedPartition\");\n\n// src/regionInfo/getResolvedSigningRegion.ts\nvar getResolvedSigningRegion = /* @__PURE__ */ __name((hostname, { signingRegion, regionRegex, useFipsEndpoint }) => {\n  if (signingRegion) {\n    return signingRegion;\n  } else if (useFipsEndpoint) {\n    const regionRegexJs = regionRegex.replace(\"\\\\\\\\\", \"\\\\\").replace(/^\\^/g, \"\\\\.\").replace(/\\$$/g, \"\\\\.\");\n    const regionRegexmatchArray = hostname.match(regionRegexJs);\n    if (regionRegexmatchArray) {\n      return regionRegexmatchArray[0].slice(1, -1);\n    }\n  }\n}, \"getResolvedSigningRegion\");\n\n// src/regionInfo/getRegionInfo.ts\nvar getRegionInfo = /* @__PURE__ */ __name((region, {\n  useFipsEndpoint = false,\n  useDualstackEndpoint = false,\n  signingService,\n  regionHash,\n  partitionHash\n}) => {\n  var _a, _b, _c, _d, _e;\n  const partition = getResolvedPartition(region, { partitionHash });\n  const resolvedRegion = region in regionHash ? region : ((_a = partitionHash[partition]) == null ? void 0 : _a.endpoint) ?? region;\n  const hostnameOptions = { useFipsEndpoint, useDualstackEndpoint };\n  const regionHostname = getHostnameFromVariants((_b = regionHash[resolvedRegion]) == null ? void 0 : _b.variants, hostnameOptions);\n  const partitionHostname = getHostnameFromVariants((_c = partitionHash[partition]) == null ? void 0 : _c.variants, hostnameOptions);\n  const hostname = getResolvedHostname(resolvedRegion, { regionHostname, partitionHostname });\n  if (hostname === void 0) {\n    throw new Error(`Endpoint resolution failed for: ${{ resolvedRegion, useFipsEndpoint, useDualstackEndpoint }}`);\n  }\n  const signingRegion = getResolvedSigningRegion(hostname, {\n    signingRegion: (_d = regionHash[resolvedRegion]) == null ? void 0 : _d.signingRegion,\n    regionRegex: partitionHash[partition].regionRegex,\n    useFipsEndpoint\n  });\n  return {\n    partition,\n    signingService,\n    hostname,\n    ...signingRegion && { signingRegion },\n    ...((_e = regionHash[resolvedRegion]) == null ? void 0 : _e.signingService) && {\n      signingService: regionHash[resolvedRegion].signingService\n    }\n  };\n}, \"getRegionInfo\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  ENV_USE_DUALSTACK_ENDPOINT,\n  CONFIG_USE_DUALSTACK_ENDPOINT,\n  DEFAULT_USE_DUALSTACK_ENDPOINT,\n  NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS,\n  ENV_USE_FIPS_ENDPOINT,\n  CONFIG_USE_FIPS_ENDPOINT,\n  DEFAULT_USE_FIPS_ENDPOINT,\n  NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS,\n  resolveCustomEndpointsConfig,\n  resolveEndpointsConfig,\n  REGION_ENV_NAME,\n  REGION_INI_NAME,\n  NODE_REGION_CONFIG_OPTIONS,\n  NODE_REGION_CONFIG_FILE_OPTIONS,\n  resolveRegionConfig,\n  getRegionInfo\n});\n\n", "import { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nfunction convertHttpAuthSchemesToMap(httpAuthSchemes) {\n    const map = new Map();\n    for (const scheme of httpAuthSchemes) {\n        map.set(scheme.schemeId, scheme);\n    }\n    return map;\n}\nexport const httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {\n    const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));\n    const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);\n    const smithyContext = getSmithyContext(context);\n    const failureReasons = [];\n    for (const option of options) {\n        const scheme = authSchemes.get(option.schemeId);\n        if (!scheme) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` was not enabled for this service.`);\n            continue;\n        }\n        const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));\n        if (!identityProvider) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` did not have an IdentityProvider configured.`);\n            continue;\n        }\n        const { identityProperties = {}, signingProperties = {} } = option.propertiesExtractor?.(config, context) || {};\n        option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);\n        option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);\n        smithyContext.selectedHttpAuthScheme = {\n            httpAuthOption: option,\n            identity: await identityProvider(option.identityProperties),\n            signer: scheme.signer,\n        };\n        break;\n    }\n    if (!smithyContext.selectedHttpAuthScheme) {\n        throw new Error(failureReasons.join(\"\\n\"));\n    }\n    return next(args);\n};\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  CredentialsProviderError: () => CredentialsProviderError,\n  ProviderError: () => ProviderError,\n  TokenProviderError: () => TokenProviderError,\n  chain: () => chain,\n  fromStatic: () => fromStatic,\n  memoize: () => memoize\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/ProviderError.ts\nvar _ProviderError = class _ProviderError extends Error {\n  constructor(message, options = true) {\n    var _a;\n    let logger;\n    let tryNextLink = true;\n    if (typeof options === \"boolean\") {\n      logger = void 0;\n      tryNextLink = options;\n    } else if (options != null && typeof options === \"object\") {\n      logger = options.logger;\n      tryNextLink = options.tryNextLink ?? true;\n    }\n    super(message);\n    this.name = \"ProviderError\";\n    this.tryNextLink = tryNextLink;\n    Object.setPrototypeOf(this, _ProviderError.prototype);\n    (_a = logger == null ? void 0 : logger.debug) == null ? void 0 : _a.call(logger, `@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n  }\n  /**\n   * @deprecated use new operator.\n   */\n  static from(error, options = true) {\n    return Object.assign(new this(error.message, options), error);\n  }\n};\n__name(_ProviderError, \"ProviderError\");\nvar ProviderError = _ProviderError;\n\n// src/CredentialsProviderError.ts\nvar _CredentialsProviderError = class _CredentialsProviderError extends ProviderError {\n  /**\n   * @override\n   */\n  constructor(message, options = true) {\n    super(message, options);\n    this.name = \"CredentialsProviderError\";\n    Object.setPrototypeOf(this, _CredentialsProviderError.prototype);\n  }\n};\n__name(_CredentialsProviderError, \"CredentialsProviderError\");\nvar CredentialsProviderError = _CredentialsProviderError;\n\n// src/TokenProviderError.ts\nvar _TokenProviderError = class _TokenProviderError extends ProviderError {\n  /**\n   * @override\n   */\n  constructor(message, options = true) {\n    super(message, options);\n    this.name = \"TokenProviderError\";\n    Object.setPrototypeOf(this, _TokenProviderError.prototype);\n  }\n};\n__name(_TokenProviderError, \"TokenProviderError\");\nvar TokenProviderError = _TokenProviderError;\n\n// src/chain.ts\nvar chain = /* @__PURE__ */ __name((...providers) => async () => {\n  if (providers.length === 0) {\n    throw new ProviderError(\"No providers in chain\");\n  }\n  let lastProviderError;\n  for (const provider of providers) {\n    try {\n      const credentials = await provider();\n      return credentials;\n    } catch (err) {\n      lastProviderError = err;\n      if (err == null ? void 0 : err.tryNextLink) {\n        continue;\n      }\n      throw err;\n    }\n  }\n  throw lastProviderError;\n}, \"chain\");\n\n// src/fromStatic.ts\nvar fromStatic = /* @__PURE__ */ __name((staticValue) => () => Promise.resolve(staticValue), \"fromStatic\");\n\n// src/memoize.ts\nvar memoize = /* @__PURE__ */ __name((provider, isExpired, requiresRefresh) => {\n  let resolved;\n  let pending;\n  let hasResult;\n  let isConstant = false;\n  const coalesceProvider = /* @__PURE__ */ __name(async () => {\n    if (!pending) {\n      pending = provider();\n    }\n    try {\n      resolved = await pending;\n      hasResult = true;\n      isConstant = false;\n    } finally {\n      pending = void 0;\n    }\n    return resolved;\n  }, \"coalesceProvider\");\n  if (isExpired === void 0) {\n    return async (options) => {\n      if (!hasResult || (options == null ? void 0 : options.forceRefresh)) {\n        resolved = await coalesceProvider();\n      }\n      return resolved;\n    };\n  }\n  return async (options) => {\n    if (!hasResult || (options == null ? void 0 : options.forceRefresh)) {\n      resolved = await coalesceProvider();\n    }\n    if (isConstant) {\n      return resolved;\n    }\n    if (requiresRefresh && !requiresRefresh(resolved)) {\n      isConstant = true;\n      return resolved;\n    }\n    if (isExpired(resolved)) {\n      await coalesceProvider();\n      return resolved;\n    }\n    return resolved;\n  };\n}, \"memoize\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  CredentialsProviderError,\n  ProviderError,\n  TokenProviderError,\n  chain,\n  fromStatic,\n  memoize\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHomeDir = void 0;\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nconst homeDirCache = {};\nconst getHomeDirCacheKey = () => {\n    if (process && process.geteuid) {\n        return `${process.geteuid()}`;\n    }\n    return \"DEFAULT\";\n};\nconst getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${path_1.sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    const homeDirCacheKey = getHomeDirCacheKey();\n    if (!homeDirCache[homeDirCacheKey])\n        homeDirCache[homeDirCacheKey] = (0, os_1.homedir)();\n    return homeDirCache[homeDirCacheKey];\n};\nexports.getHomeDir = getHomeDir;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSSOTokenFilepath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nconst getSSOTokenFilepath = (id) => {\n    const hasher = (0, crypto_1.createHash)(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return (0, path_1.join)((0, getHomeDir_1.getHomeDir)(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\nexports.getSSOTokenFilepath = getSSOTokenFilepath;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSSOTokenFromFile = void 0;\nconst fs_1 = require(\"fs\");\nconst getSSOTokenFilepath_1 = require(\"./getSSOTokenFilepath\");\nconst { readFile } = fs_1.promises;\nconst getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = (0, getSSOTokenFilepath_1.getSSOTokenFilepath)(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\nexports.getSSOTokenFromFile = getSSOTokenFromFile;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.slurpFile = void 0;\nconst fs_1 = require(\"fs\");\nconst { readFile } = fs_1.promises;\nconst filePromisesHash = {};\nconst slurpFile = (path, options) => {\n    if (!filePromisesHash[path] || (options === null || options === void 0 ? void 0 : options.ignoreCache)) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\nexports.slurpFile = slurpFile;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  CONFIG_PREFIX_SEPARATOR: () => CONFIG_PREFIX_SEPARATOR,\n  DEFAULT_PROFILE: () => DEFAULT_PROFILE,\n  ENV_PROFILE: () => ENV_PROFILE,\n  getProfileName: () => getProfileName,\n  loadSharedConfigFiles: () => loadSharedConfigFiles,\n  loadSsoSessionData: () => loadSsoSessionData,\n  parseKnownFiles: () => parseKnownFiles\n});\nmodule.exports = __toCommonJS(src_exports);\n__reExport(src_exports, require(\"././getHomeDir\"), module.exports);\n\n// src/getProfileName.ts\nvar ENV_PROFILE = \"AWS_PROFILE\";\nvar DEFAULT_PROFILE = \"default\";\nvar getProfileName = /* @__PURE__ */ __name((init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE, \"getProfileName\");\n\n// src/index.ts\n__reExport(src_exports, require(\"././getSSOTokenFilepath\"), module.exports);\n__reExport(src_exports, require(\"././getSSOTokenFromFile\"), module.exports);\n\n// src/loadSharedConfigFiles.ts\n\n\n// src/getConfigData.ts\nvar import_types = require(\"@smithy/types\");\nvar getConfigData = /* @__PURE__ */ __name((data) => Object.entries(data).filter(([key]) => {\n  const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n  if (indexOfSeparator === -1) {\n    return false;\n  }\n  return Object.values(import_types.IniSectionType).includes(key.substring(0, indexOfSeparator));\n}).reduce(\n  (acc, [key, value]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    const updatedKey = key.substring(0, indexOfSeparator) === import_types.IniSectionType.PROFILE ? key.substring(indexOfSeparator + 1) : key;\n    acc[updatedKey] = value;\n    return acc;\n  },\n  {\n    // Populate default profile, if present.\n    ...data.default && { default: data.default }\n  }\n), \"getConfigData\");\n\n// src/getConfigFilepath.ts\nvar import_path = require(\"path\");\nvar import_getHomeDir = require(\"././getHomeDir\");\nvar ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nvar getConfigFilepath = /* @__PURE__ */ __name(() => process.env[ENV_CONFIG_PATH] || (0, import_path.join)((0, import_getHomeDir.getHomeDir)(), \".aws\", \"config\"), \"getConfigFilepath\");\n\n// src/getCredentialsFilepath.ts\n\nvar import_getHomeDir2 = require(\"././getHomeDir\");\nvar ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nvar getCredentialsFilepath = /* @__PURE__ */ __name(() => process.env[ENV_CREDENTIALS_PATH] || (0, import_path.join)((0, import_getHomeDir2.getHomeDir)(), \".aws\", \"credentials\"), \"getCredentialsFilepath\");\n\n// src/loadSharedConfigFiles.ts\nvar import_getHomeDir3 = require(\"././getHomeDir\");\n\n// src/parseIni.ts\n\nvar prefixKeyRegex = /^([\\w-]+)\\s([\"'])?([\\w-@\\+\\.%:/]+)\\2$/;\nvar profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nvar parseIni = /* @__PURE__ */ __name((iniData) => {\n  const map = {};\n  let currentSection;\n  let currentSubSection;\n  for (const iniLine of iniData.split(/\\r?\\n/)) {\n    const trimmedLine = iniLine.split(/(^|\\s)[;#]/)[0].trim();\n    const isSection = trimmedLine[0] === \"[\" && trimmedLine[trimmedLine.length - 1] === \"]\";\n    if (isSection) {\n      currentSection = void 0;\n      currentSubSection = void 0;\n      const sectionName = trimmedLine.substring(1, trimmedLine.length - 1);\n      const matches = prefixKeyRegex.exec(sectionName);\n      if (matches) {\n        const [, prefix, , name] = matches;\n        if (Object.values(import_types.IniSectionType).includes(prefix)) {\n          currentSection = [prefix, name].join(CONFIG_PREFIX_SEPARATOR);\n        }\n      } else {\n        currentSection = sectionName;\n      }\n      if (profileNameBlockList.includes(sectionName)) {\n        throw new Error(`Found invalid profile name \"${sectionName}\"`);\n      }\n    } else if (currentSection) {\n      const indexOfEqualsSign = trimmedLine.indexOf(\"=\");\n      if (![0, -1].includes(indexOfEqualsSign)) {\n        const [name, value] = [\n          trimmedLine.substring(0, indexOfEqualsSign).trim(),\n          trimmedLine.substring(indexOfEqualsSign + 1).trim()\n        ];\n        if (value === \"\") {\n          currentSubSection = name;\n        } else {\n          if (currentSubSection && iniLine.trimStart() === iniLine) {\n            currentSubSection = void 0;\n          }\n          map[currentSection] = map[currentSection] || {};\n          const key = currentSubSection ? [currentSubSection, name].join(CONFIG_PREFIX_SEPARATOR) : name;\n          map[currentSection][key] = value;\n        }\n      }\n    }\n  }\n  return map;\n}, \"parseIni\");\n\n// src/loadSharedConfigFiles.ts\nvar import_slurpFile = require(\"././slurpFile\");\nvar swallowError = /* @__PURE__ */ __name(() => ({}), \"swallowError\");\nvar CONFIG_PREFIX_SEPARATOR = \".\";\nvar loadSharedConfigFiles = /* @__PURE__ */ __name(async (init = {}) => {\n  const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n  const homeDir = (0, import_getHomeDir3.getHomeDir)();\n  const relativeHomeDirPrefix = \"~/\";\n  let resolvedFilepath = filepath;\n  if (filepath.startsWith(relativeHomeDirPrefix)) {\n    resolvedFilepath = (0, import_path.join)(homeDir, filepath.slice(2));\n  }\n  let resolvedConfigFilepath = configFilepath;\n  if (configFilepath.startsWith(relativeHomeDirPrefix)) {\n    resolvedConfigFilepath = (0, import_path.join)(homeDir, configFilepath.slice(2));\n  }\n  const parsedFiles = await Promise.all([\n    (0, import_slurpFile.slurpFile)(resolvedConfigFilepath, {\n      ignoreCache: init.ignoreCache\n    }).then(parseIni).then(getConfigData).catch(swallowError),\n    (0, import_slurpFile.slurpFile)(resolvedFilepath, {\n      ignoreCache: init.ignoreCache\n    }).then(parseIni).catch(swallowError)\n  ]);\n  return {\n    configFile: parsedFiles[0],\n    credentialsFile: parsedFiles[1]\n  };\n}, \"loadSharedConfigFiles\");\n\n// src/getSsoSessionData.ts\n\nvar getSsoSessionData = /* @__PURE__ */ __name((data) => Object.entries(data).filter(([key]) => key.startsWith(import_types.IniSectionType.SSO_SESSION + CONFIG_PREFIX_SEPARATOR)).reduce((acc, [key, value]) => ({ ...acc, [key.substring(key.indexOf(CONFIG_PREFIX_SEPARATOR) + 1)]: value }), {}), \"getSsoSessionData\");\n\n// src/loadSsoSessionData.ts\nvar import_slurpFile2 = require(\"././slurpFile\");\nvar swallowError2 = /* @__PURE__ */ __name(() => ({}), \"swallowError\");\nvar loadSsoSessionData = /* @__PURE__ */ __name(async (init = {}) => (0, import_slurpFile2.slurpFile)(init.configFilepath ?? getConfigFilepath()).then(parseIni).then(getSsoSessionData).catch(swallowError2), \"loadSsoSessionData\");\n\n// src/mergeConfigFiles.ts\nvar mergeConfigFiles = /* @__PURE__ */ __name((...files) => {\n  const merged = {};\n  for (const file of files) {\n    for (const [key, values] of Object.entries(file)) {\n      if (merged[key] !== void 0) {\n        Object.assign(merged[key], values);\n      } else {\n        merged[key] = values;\n      }\n    }\n  }\n  return merged;\n}, \"mergeConfigFiles\");\n\n// src/parseKnownFiles.ts\nvar parseKnownFiles = /* @__PURE__ */ __name(async (init) => {\n  const parsedFiles = await loadSharedConfigFiles(init);\n  return mergeConfigFiles(parsedFiles.configFile, parsedFiles.credentialsFile);\n}, \"parseKnownFiles\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  getHomeDir,\n  ENV_PROFILE,\n  DEFAULT_PROFILE,\n  getProfileName,\n  getSSOTokenFilepath,\n  getSSOTokenFromFile,\n  CONFIG_PREFIX_SEPARATOR,\n  loadSharedConfigFiles,\n  loadSsoSessionData,\n  parseKnownFiles\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  loadConfig: () => loadConfig\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/configLoader.ts\n\n\n// src/fromEnv.ts\nvar import_property_provider = require(\"@smithy/property-provider\");\n\n// src/getSelectorName.ts\nfunction getSelectorName(functionString) {\n  try {\n    const constants = new Set(Array.from(functionString.match(/([A-Z_]){3,}/g) ?? []));\n    constants.delete(\"CONFIG\");\n    constants.delete(\"CONFIG_PREFIX_SEPARATOR\");\n    constants.delete(\"ENV\");\n    return [...constants].join(\", \");\n  } catch (e) {\n    return functionString;\n  }\n}\n__name(getSelectorName, \"getSelectorName\");\n\n// src/fromEnv.ts\nvar fromEnv = /* @__PURE__ */ __name((envVarSelector, logger) => async () => {\n  try {\n    const config = envVarSelector(process.env);\n    if (config === void 0) {\n      throw new Error();\n    }\n    return config;\n  } catch (e) {\n    throw new import_property_provider.CredentialsProviderError(\n      e.message || `Not found in ENV: ${getSelectorName(envVarSelector.toString())}`,\n      { logger }\n    );\n  }\n}, \"fromEnv\");\n\n// src/fromSharedConfigFiles.ts\n\nvar import_shared_ini_file_loader = require(\"@smithy/shared-ini-file-loader\");\nvar fromSharedConfigFiles = /* @__PURE__ */ __name((configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n  const profile = (0, import_shared_ini_file_loader.getProfileName)(init);\n  const { configFile, credentialsFile } = await (0, import_shared_ini_file_loader.loadSharedConfigFiles)(init);\n  const profileFromCredentials = credentialsFile[profile] || {};\n  const profileFromConfig = configFile[profile] || {};\n  const mergedProfile = preferredFile === \"config\" ? { ...profileFromCredentials, ...profileFromConfig } : { ...profileFromConfig, ...profileFromCredentials };\n  try {\n    const cfgFile = preferredFile === \"config\" ? configFile : credentialsFile;\n    const configValue = configSelector(mergedProfile, cfgFile);\n    if (configValue === void 0) {\n      throw new Error();\n    }\n    return configValue;\n  } catch (e) {\n    throw new import_property_provider.CredentialsProviderError(\n      e.message || `Not found in config files w/ profile [${profile}]: ${getSelectorName(configSelector.toString())}`,\n      { logger: init.logger }\n    );\n  }\n}, \"fromSharedConfigFiles\");\n\n// src/fromStatic.ts\n\nvar isFunction = /* @__PURE__ */ __name((func) => typeof func === \"function\", \"isFunction\");\nvar fromStatic = /* @__PURE__ */ __name((defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : (0, import_property_provider.fromStatic)(defaultValue), \"fromStatic\");\n\n// src/configLoader.ts\nvar loadConfig = /* @__PURE__ */ __name(({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => (0, import_property_provider.memoize)(\n  (0, import_property_provider.chain)(\n    fromEnv(environmentVariableSelector),\n    fromSharedConfigFiles(configFileSelector, configuration),\n    fromStatic(defaultValue)\n  )\n), \"loadConfig\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  loadConfig\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointUrlConfig = void 0;\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst ENV_ENDPOINT_URL = \"AWS_ENDPOINT_URL\";\nconst CONFIG_ENDPOINT_URL = \"endpoint_url\";\nconst getEndpointUrlConfig = (serviceId) => ({\n    environmentVariableSelector: (env) => {\n        const serviceSuffixParts = serviceId.split(\" \").map((w) => w.toUpperCase());\n        const serviceEndpointUrl = env[[ENV_ENDPOINT_URL, ...serviceSuffixParts].join(\"_\")];\n        if (serviceEndpointUrl)\n            return serviceEndpointUrl;\n        const endpointUrl = env[ENV_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    configFileSelector: (profile, config) => {\n        if (config && profile.services) {\n            const servicesSection = config[[\"services\", profile.services].join(shared_ini_file_loader_1.CONFIG_PREFIX_SEPARATOR)];\n            if (servicesSection) {\n                const servicePrefixParts = serviceId.split(\" \").map((w) => w.toLowerCase());\n                const endpointUrl = servicesSection[[servicePrefixParts.join(\"_\"), CONFIG_ENDPOINT_URL].join(shared_ini_file_loader_1.CONFIG_PREFIX_SEPARATOR)];\n                if (endpointUrl)\n                    return endpointUrl;\n            }\n        }\n        const endpointUrl = profile[CONFIG_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    default: undefined,\n});\nexports.getEndpointUrlConfig = getEndpointUrlConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointFromConfig = void 0;\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst getEndpointUrlConfig_1 = require(\"./getEndpointUrlConfig\");\nconst getEndpointFromConfig = async (serviceId) => (0, node_config_provider_1.loadConfig)((0, getEndpointUrlConfig_1.getEndpointUrlConfig)(serviceId))();\nexports.getEndpointFromConfig = getEndpointFromConfig;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  parseQueryString: () => parseQueryString\n});\nmodule.exports = __toCommonJS(src_exports);\nfunction parseQueryString(querystring) {\n  const query = {};\n  querystring = querystring.replace(/^\\?/, \"\");\n  if (querystring) {\n    for (const pair of querystring.split(\"&\")) {\n      let [key, value = null] = pair.split(\"=\");\n      key = decodeURIComponent(key);\n      if (value) {\n        value = decodeURIComponent(value);\n      }\n      if (!(key in query)) {\n        query[key] = value;\n      } else if (Array.isArray(query[key])) {\n        query[key].push(value);\n      } else {\n        query[key] = [query[key], value];\n      }\n    }\n  }\n  return query;\n}\n__name(parseQueryString, \"parseQueryString\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  parseQueryString\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  parseUrl: () => parseUrl\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_querystring_parser = require(\"@smithy/querystring-parser\");\nvar parseUrl = /* @__PURE__ */ __name((url) => {\n  if (typeof url === \"string\") {\n    return parseUrl(new URL(url));\n  }\n  const { hostname, pathname, port, protocol, search } = url;\n  let query;\n  if (search) {\n    query = (0, import_querystring_parser.parseQueryString)(search);\n  }\n  return {\n    hostname,\n    port: port ? parseInt(port) : void 0,\n    protocol,\n    path: pathname,\n    query\n  };\n}, \"parseUrl\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  parseUrl\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  deserializerMiddleware: () => deserializerMiddleware,\n  deserializerMiddlewareOption: () => deserializerMiddlewareOption,\n  getSerdePlugin: () => getSerdePlugin,\n  serializerMiddleware: () => serializerMiddleware,\n  serializerMiddlewareOption: () => serializerMiddlewareOption\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/deserializerMiddleware.ts\nvar deserializerMiddleware = /* @__PURE__ */ __name((options, deserializer) => (next) => async (args) => {\n  const { response } = await next(args);\n  try {\n    const parsed = await deserializer(response, options);\n    return {\n      response,\n      output: parsed\n    };\n  } catch (error) {\n    Object.defineProperty(error, \"$response\", {\n      value: response\n    });\n    if (!(\"$metadata\" in error)) {\n      const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n      error.message += \"\\n  \" + hint;\n      if (typeof error.$responseBodyText !== \"undefined\") {\n        if (error.$response) {\n          error.$response.body = error.$responseBodyText;\n        }\n      }\n    }\n    throw error;\n  }\n}, \"deserializerMiddleware\");\n\n// src/serializerMiddleware.ts\nvar serializerMiddleware = /* @__PURE__ */ __name((options, serializer) => (next, context) => async (args) => {\n  var _a;\n  const endpoint = ((_a = context.endpointV2) == null ? void 0 : _a.url) && options.urlParser ? async () => options.urlParser(context.endpointV2.url) : options.endpoint;\n  if (!endpoint) {\n    throw new Error(\"No valid endpoint provider available.\");\n  }\n  const request = await serializer(args.input, { ...options, endpoint });\n  return next({\n    ...args,\n    request\n  });\n}, \"serializerMiddleware\");\n\n// src/serdePlugin.ts\nvar deserializerMiddlewareOption = {\n  name: \"deserializerMiddleware\",\n  step: \"deserialize\",\n  tags: [\"DESERIALIZER\"],\n  override: true\n};\nvar serializerMiddlewareOption = {\n  name: \"serializerMiddleware\",\n  step: \"serialize\",\n  tags: [\"SERIALIZER\"],\n  override: true\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n  return {\n    applyToStack: (commandStack) => {\n      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n    }\n  };\n}\n__name(getSerdePlugin, \"getSerdePlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  deserializerMiddleware,\n  deserializerMiddlewareOption,\n  serializerMiddlewareOption,\n  getSerdePlugin,\n  serializerMiddleware\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  endpointMiddleware: () => endpointMiddleware,\n  endpointMiddlewareOptions: () => endpointMiddlewareOptions,\n  getEndpointFromInstructions: () => getEndpointFromInstructions,\n  getEndpointPlugin: () => getEndpointPlugin,\n  resolveEndpointConfig: () => resolveEndpointConfig,\n  resolveParams: () => resolveParams,\n  toEndpointV1: () => toEndpointV1\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/service-customizations/s3.ts\nvar resolveParamsForS3 = /* @__PURE__ */ __name(async (endpointParams) => {\n  const bucket = (endpointParams == null ? void 0 : endpointParams.Bucket) || \"\";\n  if (typeof endpointParams.Bucket === \"string\") {\n    endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n  }\n  if (isArnBucketName(bucket)) {\n    if (endpointParams.ForcePathStyle === true) {\n      throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n    }\n  } else if (!isDnsCompatibleBucketName(bucket) || bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\") || bucket.toLowerCase() !== bucket || bucket.length < 3) {\n    endpointParams.ForcePathStyle = true;\n  }\n  if (endpointParams.DisableMultiRegionAccessPoints) {\n    endpointParams.disableMultiRegionAccessPoints = true;\n    endpointParams.DisableMRAP = true;\n  }\n  return endpointParams;\n}, \"resolveParamsForS3\");\nvar DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nvar IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nvar DOTS_PATTERN = /\\.\\./;\nvar isDnsCompatibleBucketName = /* @__PURE__ */ __name((bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName), \"isDnsCompatibleBucketName\");\nvar isArnBucketName = /* @__PURE__ */ __name((bucketName) => {\n  const [arn, partition, service, , , bucket] = bucketName.split(\":\");\n  const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n  const isValidArn = Boolean(isArn && partition && service && bucket);\n  if (isArn && !isValidArn) {\n    throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n  }\n  return isValidArn;\n}, \"isArnBucketName\");\n\n// src/adaptors/createConfigValueProvider.ts\nvar createConfigValueProvider = /* @__PURE__ */ __name((configKey, canonicalEndpointParamKey, config) => {\n  const configProvider = /* @__PURE__ */ __name(async () => {\n    const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n    if (typeof configValue === \"function\") {\n      return configValue();\n    }\n    return configValue;\n  }, \"configProvider\");\n  if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\n    return async () => {\n      const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n      const configValue = (credentials == null ? void 0 : credentials.credentialScope) ?? (credentials == null ? void 0 : credentials.CredentialScope);\n      return configValue;\n    };\n  }\n  if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n    return async () => {\n      const endpoint = await configProvider();\n      if (endpoint && typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n          return endpoint.url.href;\n        }\n        if (\"hostname\" in endpoint) {\n          const { protocol, hostname, port, path } = endpoint;\n          return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n        }\n      }\n      return endpoint;\n    };\n  }\n  return configProvider;\n}, \"createConfigValueProvider\");\n\n// src/adaptors/getEndpointFromInstructions.ts\nvar import_getEndpointFromConfig = require(\"./adaptors/getEndpointFromConfig\");\n\n// src/adaptors/toEndpointV1.ts\nvar import_url_parser = require(\"@smithy/url-parser\");\nvar toEndpointV1 = /* @__PURE__ */ __name((endpoint) => {\n  if (typeof endpoint === \"object\") {\n    if (\"url\" in endpoint) {\n      return (0, import_url_parser.parseUrl)(endpoint.url);\n    }\n    return endpoint;\n  }\n  return (0, import_url_parser.parseUrl)(endpoint);\n}, \"toEndpointV1\");\n\n// src/adaptors/getEndpointFromInstructions.ts\nvar getEndpointFromInstructions = /* @__PURE__ */ __name(async (commandInput, instructionsSupplier, clientConfig, context) => {\n  if (!clientConfig.endpoint) {\n    const endpointFromConfig = await (0, import_getEndpointFromConfig.getEndpointFromConfig)(clientConfig.serviceId || \"\");\n    if (endpointFromConfig) {\n      clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\n    }\n  }\n  const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n  if (typeof clientConfig.endpointProvider !== \"function\") {\n    throw new Error(\"config.endpointProvider is not set.\");\n  }\n  const endpoint = clientConfig.endpointProvider(endpointParams, context);\n  return endpoint;\n}, \"getEndpointFromInstructions\");\nvar resolveParams = /* @__PURE__ */ __name(async (commandInput, instructionsSupplier, clientConfig) => {\n  var _a;\n  const endpointParams = {};\n  const instructions = ((_a = instructionsSupplier == null ? void 0 : instructionsSupplier.getEndpointParameterInstructions) == null ? void 0 : _a.call(instructionsSupplier)) || {};\n  for (const [name, instruction] of Object.entries(instructions)) {\n    switch (instruction.type) {\n      case \"staticContextParams\":\n        endpointParams[name] = instruction.value;\n        break;\n      case \"contextParams\":\n        endpointParams[name] = commandInput[instruction.name];\n        break;\n      case \"clientContextParams\":\n      case \"builtInParams\":\n        endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n        break;\n      default:\n        throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n    }\n  }\n  if (Object.keys(instructions).length === 0) {\n    Object.assign(endpointParams, clientConfig);\n  }\n  if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n    await resolveParamsForS3(endpointParams);\n  }\n  return endpointParams;\n}, \"resolveParams\");\n\n// src/endpointMiddleware.ts\nvar import_util_middleware = require(\"@smithy/util-middleware\");\nvar endpointMiddleware = /* @__PURE__ */ __name(({\n  config,\n  instructions\n}) => {\n  return (next, context) => async (args) => {\n    var _a, _b, _c;\n    const endpoint = await getEndpointFromInstructions(\n      args.input,\n      {\n        getEndpointParameterInstructions() {\n          return instructions;\n        }\n      },\n      { ...config },\n      context\n    );\n    context.endpointV2 = endpoint;\n    context.authSchemes = (_a = endpoint.properties) == null ? void 0 : _a.authSchemes;\n    const authScheme = (_b = context.authSchemes) == null ? void 0 : _b[0];\n    if (authScheme) {\n      context[\"signing_region\"] = authScheme.signingRegion;\n      context[\"signing_service\"] = authScheme.signingName;\n      const smithyContext = (0, import_util_middleware.getSmithyContext)(context);\n      const httpAuthOption = (_c = smithyContext == null ? void 0 : smithyContext.selectedHttpAuthScheme) == null ? void 0 : _c.httpAuthOption;\n      if (httpAuthOption) {\n        httpAuthOption.signingProperties = Object.assign(\n          httpAuthOption.signingProperties || {},\n          {\n            signing_region: authScheme.signingRegion,\n            signingRegion: authScheme.signingRegion,\n            signing_service: authScheme.signingName,\n            signingName: authScheme.signingName,\n            signingRegionSet: authScheme.signingRegionSet\n          },\n          authScheme.properties\n        );\n      }\n    }\n    return next({\n      ...args\n    });\n  };\n}, \"endpointMiddleware\");\n\n// src/getEndpointPlugin.ts\nvar import_middleware_serde = require(\"@smithy/middleware-serde\");\nvar endpointMiddlewareOptions = {\n  step: \"serialize\",\n  tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n  name: \"endpointV2Middleware\",\n  override: true,\n  relation: \"before\",\n  toMiddleware: import_middleware_serde.serializerMiddlewareOption.name\n};\nvar getEndpointPlugin = /* @__PURE__ */ __name((config, instructions) => ({\n  applyToStack: (clientStack) => {\n    clientStack.addRelativeTo(\n      endpointMiddleware({\n        config,\n        instructions\n      }),\n      endpointMiddlewareOptions\n    );\n  }\n}), \"getEndpointPlugin\");\n\n// src/resolveEndpointConfig.ts\n\nvar resolveEndpointConfig = /* @__PURE__ */ __name((input) => {\n  const tls = input.tls ?? true;\n  const { endpoint } = input;\n  const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await (0, import_util_middleware.normalizeProvider)(endpoint)()) : void 0;\n  const isCustomEndpoint = !!endpoint;\n  return {\n    ...input,\n    endpoint: customEndpointProvider,\n    tls,\n    isCustomEndpoint,\n    useDualstackEndpoint: (0, import_util_middleware.normalizeProvider)(input.useDualstackEndpoint ?? false),\n    useFipsEndpoint: (0, import_util_middleware.normalizeProvider)(input.useFipsEndpoint ?? false)\n  };\n}, \"resolveEndpointConfig\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  getEndpointFromInstructions,\n  resolveParams,\n  toEndpointV1,\n  endpointMiddleware,\n  endpointMiddlewareOptions,\n  getEndpointPlugin,\n  resolveEndpointConfig\n});\n\n", "import { endpointMiddlewareOptions } from \"@smithy/middleware-endpoint\";\nimport { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\nexport const httpAuthSchemeEndpointRuleSetMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: endpointMiddlewareOptions.name,\n};\nexport const getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);\n    },\n});\n", "import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\nimport { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\nexport const httpAuthSchemeMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getHttpAuthSchemePlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeMiddlewareOptions);\n    },\n});\n", "export * from \"./httpAuthSchemeMiddleware\";\nexport * from \"./getHttpAuthSchemeEndpointRuleSetPlugin\";\nexport * from \"./getHttpAuthSchemePlugin\";\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { SMITHY_CONTEXT_KEY, } from \"@smithy/types\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nconst defaultErrorHandler = (signingProperties) => (error) => {\n    throw error;\n};\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\nexport const httpSigningMiddleware = (config) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const smithyContext = getSmithyContext(context);\n    const scheme = smithyContext.selectedHttpAuthScheme;\n    if (!scheme) {\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\n    }\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, identity, signingProperties),\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\n    return output;\n};\n", "import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "export default '00000000-0000-0000-0000-000000000000';", "import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nexport default version;", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  isClockSkewCorrectedError: () => isClockSkewCorrectedError,\n  isClockSkewError: () => isClockSkewError,\n  isRetryableByTrait: () => isRetryableByTrait,\n  isServerError: () => isServerError,\n  isThrottlingError: () => isThrottlingError,\n  isTransientError: () => isTransientError\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/constants.ts\nvar CLOCK_SKEW_ERROR_CODES = [\n  \"AuthFailure\",\n  \"InvalidSignatureException\",\n  \"RequestExpired\",\n  \"RequestInTheFuture\",\n  \"RequestTimeTooSkewed\",\n  \"SignatureDoesNotMatch\"\n];\nvar THROTTLING_ERROR_CODES = [\n  \"BandwidthLimitExceeded\",\n  \"EC2ThrottledException\",\n  \"LimitExceededException\",\n  \"PriorRequestNotComplete\",\n  \"ProvisionedThroughputExceededException\",\n  \"RequestLimitExceeded\",\n  \"RequestThrottled\",\n  \"RequestThrottledException\",\n  \"SlowDown\",\n  \"ThrottledException\",\n  \"Throttling\",\n  \"ThrottlingException\",\n  \"TooManyRequestsException\",\n  \"TransactionInProgressException\"\n  // DynamoDB\n];\nvar TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nvar TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nvar NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n\n// src/index.ts\nvar isRetryableByTrait = /* @__PURE__ */ __name((error) => error.$retryable !== void 0, \"isRetryableByTrait\");\nvar isClockSkewError = /* @__PURE__ */ __name((error) => CLOCK_SKEW_ERROR_CODES.includes(error.name), \"isClockSkewError\");\nvar isClockSkewCorrectedError = /* @__PURE__ */ __name((error) => {\n  var _a;\n  return (_a = error.$metadata) == null ? void 0 : _a.clockSkewCorrected;\n}, \"isClockSkewCorrectedError\");\nvar isThrottlingError = /* @__PURE__ */ __name((error) => {\n  var _a, _b;\n  return ((_a = error.$metadata) == null ? void 0 : _a.httpStatusCode) === 429 || THROTTLING_ERROR_CODES.includes(error.name) || ((_b = error.$retryable) == null ? void 0 : _b.throttling) == true;\n}, \"isThrottlingError\");\nvar isTransientError = /* @__PURE__ */ __name((error) => {\n  var _a;\n  return isClockSkewCorrectedError(error) || TRANSIENT_ERROR_CODES.includes(error.name) || NODEJS_TIMEOUT_ERROR_CODES.includes((error == null ? void 0 : error.code) || \"\") || TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) == null ? void 0 : _a.httpStatusCode) || 0);\n}, \"isTransientError\");\nvar isServerError = /* @__PURE__ */ __name((error) => {\n  var _a;\n  if (((_a = error.$metadata) == null ? void 0 : _a.httpStatusCode) !== void 0) {\n    const statusCode = error.$metadata.httpStatusCode;\n    if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n}, \"isServerError\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  isRetryableByTrait,\n  isClockSkewError,\n  isClockSkewCorrectedError,\n  isThrottlingError,\n  isTransientError,\n  isServerError\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AdaptiveRetryStrategy: () => AdaptiveRetryStrategy,\n  ConfiguredRetryStrategy: () => ConfiguredRetryStrategy,\n  DEFAULT_MAX_ATTEMPTS: () => DEFAULT_MAX_ATTEMPTS,\n  DEFAULT_RETRY_DELAY_BASE: () => DEFAULT_RETRY_DELAY_BASE,\n  DEFAULT_RETRY_MODE: () => DEFAULT_RETRY_MODE,\n  DefaultRateLimiter: () => DefaultRateLimiter,\n  INITIAL_RETRY_TOKENS: () => INITIAL_RETRY_TOKENS,\n  INVOCATION_ID_HEADER: () => INVOCATION_ID_HEADER,\n  MAXIMUM_RETRY_DELAY: () => MAXIMUM_RETRY_DELAY,\n  NO_RETRY_INCREMENT: () => NO_RETRY_INCREMENT,\n  REQUEST_HEADER: () => REQUEST_HEADER,\n  RETRY_COST: () => RETRY_COST,\n  RETRY_MODES: () => RETRY_MODES,\n  StandardRetryStrategy: () => StandardRetryStrategy,\n  THROTTLING_RETRY_DELAY_BASE: () => THROTTLING_RETRY_DELAY_BASE,\n  TIMEOUT_RETRY_COST: () => TIMEOUT_RETRY_COST\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/config.ts\nvar RETRY_MODES = /* @__PURE__ */ ((RETRY_MODES2) => {\n  RETRY_MODES2[\"STANDARD\"] = \"standard\";\n  RETRY_MODES2[\"ADAPTIVE\"] = \"adaptive\";\n  return RETRY_MODES2;\n})(RETRY_MODES || {});\nvar DEFAULT_MAX_ATTEMPTS = 3;\nvar DEFAULT_RETRY_MODE = \"standard\" /* STANDARD */;\n\n// src/DefaultRateLimiter.ts\nvar import_service_error_classification = require(\"@smithy/service-error-classification\");\nvar _DefaultRateLimiter = class _DefaultRateLimiter {\n  constructor(options) {\n    // Pre-set state variables\n    this.currentCapacity = 0;\n    this.enabled = false;\n    this.lastMaxRate = 0;\n    this.measuredTxRate = 0;\n    this.requestCount = 0;\n    this.lastTimestamp = 0;\n    this.timeWindow = 0;\n    this.beta = (options == null ? void 0 : options.beta) ?? 0.7;\n    this.minCapacity = (options == null ? void 0 : options.minCapacity) ?? 1;\n    this.minFillRate = (options == null ? void 0 : options.minFillRate) ?? 0.5;\n    this.scaleConstant = (options == null ? void 0 : options.scaleConstant) ?? 0.4;\n    this.smooth = (options == null ? void 0 : options.smooth) ?? 0.8;\n    const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n    this.lastThrottleTime = currentTimeInSeconds;\n    this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n    this.fillRate = this.minFillRate;\n    this.maxCapacity = this.minCapacity;\n  }\n  getCurrentTimeInSeconds() {\n    return Date.now() / 1e3;\n  }\n  async getSendToken() {\n    return this.acquireTokenBucket(1);\n  }\n  async acquireTokenBucket(amount) {\n    if (!this.enabled) {\n      return;\n    }\n    this.refillTokenBucket();\n    if (amount > this.currentCapacity) {\n      const delay = (amount - this.currentCapacity) / this.fillRate * 1e3;\n      await new Promise((resolve) => setTimeout(resolve, delay));\n    }\n    this.currentCapacity = this.currentCapacity - amount;\n  }\n  refillTokenBucket() {\n    const timestamp = this.getCurrentTimeInSeconds();\n    if (!this.lastTimestamp) {\n      this.lastTimestamp = timestamp;\n      return;\n    }\n    const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n    this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n    this.lastTimestamp = timestamp;\n  }\n  updateClientSendingRate(response) {\n    let calculatedRate;\n    this.updateMeasuredRate();\n    if ((0, import_service_error_classification.isThrottlingError)(response)) {\n      const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n      this.lastMaxRate = rateToUse;\n      this.calculateTimeWindow();\n      this.lastThrottleTime = this.getCurrentTimeInSeconds();\n      calculatedRate = this.cubicThrottle(rateToUse);\n      this.enableTokenBucket();\n    } else {\n      this.calculateTimeWindow();\n      calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n    }\n    const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n    this.updateTokenBucketRate(newRate);\n  }\n  calculateTimeWindow() {\n    this.timeWindow = this.getPrecise(Math.pow(this.lastMaxRate * (1 - this.beta) / this.scaleConstant, 1 / 3));\n  }\n  cubicThrottle(rateToUse) {\n    return this.getPrecise(rateToUse * this.beta);\n  }\n  cubicSuccess(timestamp) {\n    return this.getPrecise(\n      this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate\n    );\n  }\n  enableTokenBucket() {\n    this.enabled = true;\n  }\n  updateTokenBucketRate(newRate) {\n    this.refillTokenBucket();\n    this.fillRate = Math.max(newRate, this.minFillRate);\n    this.maxCapacity = Math.max(newRate, this.minCapacity);\n    this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n  }\n  updateMeasuredRate() {\n    const t = this.getCurrentTimeInSeconds();\n    const timeBucket = Math.floor(t * 2) / 2;\n    this.requestCount++;\n    if (timeBucket > this.lastTxRateBucket) {\n      const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n      this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n      this.requestCount = 0;\n      this.lastTxRateBucket = timeBucket;\n    }\n  }\n  getPrecise(num) {\n    return parseFloat(num.toFixed(8));\n  }\n};\n__name(_DefaultRateLimiter, \"DefaultRateLimiter\");\nvar DefaultRateLimiter = _DefaultRateLimiter;\n\n// src/constants.ts\nvar DEFAULT_RETRY_DELAY_BASE = 100;\nvar MAXIMUM_RETRY_DELAY = 20 * 1e3;\nvar THROTTLING_RETRY_DELAY_BASE = 500;\nvar INITIAL_RETRY_TOKENS = 500;\nvar RETRY_COST = 5;\nvar TIMEOUT_RETRY_COST = 10;\nvar NO_RETRY_INCREMENT = 1;\nvar INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nvar REQUEST_HEADER = \"amz-sdk-request\";\n\n// src/defaultRetryBackoffStrategy.ts\nvar getDefaultRetryBackoffStrategy = /* @__PURE__ */ __name(() => {\n  let delayBase = DEFAULT_RETRY_DELAY_BASE;\n  const computeNextBackoffDelay = /* @__PURE__ */ __name((attempts) => {\n    return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n  }, \"computeNextBackoffDelay\");\n  const setDelayBase = /* @__PURE__ */ __name((delay) => {\n    delayBase = delay;\n  }, \"setDelayBase\");\n  return {\n    computeNextBackoffDelay,\n    setDelayBase\n  };\n}, \"getDefaultRetryBackoffStrategy\");\n\n// src/defaultRetryToken.ts\nvar createDefaultRetryToken = /* @__PURE__ */ __name(({\n  retryDelay,\n  retryCount,\n  retryCost\n}) => {\n  const getRetryCount = /* @__PURE__ */ __name(() => retryCount, \"getRetryCount\");\n  const getRetryDelay = /* @__PURE__ */ __name(() => Math.min(MAXIMUM_RETRY_DELAY, retryDelay), \"getRetryDelay\");\n  const getRetryCost = /* @__PURE__ */ __name(() => retryCost, \"getRetryCost\");\n  return {\n    getRetryCount,\n    getRetryDelay,\n    getRetryCost\n  };\n}, \"createDefaultRetryToken\");\n\n// src/StandardRetryStrategy.ts\nvar _StandardRetryStrategy = class _StandardRetryStrategy {\n  constructor(maxAttempts) {\n    this.maxAttempts = maxAttempts;\n    this.mode = \"standard\" /* STANDARD */;\n    this.capacity = INITIAL_RETRY_TOKENS;\n    this.retryBackoffStrategy = getDefaultRetryBackoffStrategy();\n    this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async acquireInitialRetryToken(retryTokenScope) {\n    return createDefaultRetryToken({\n      retryDelay: DEFAULT_RETRY_DELAY_BASE,\n      retryCount: 0\n    });\n  }\n  async refreshRetryTokenForRetry(token, errorInfo) {\n    const maxAttempts = await this.getMaxAttempts();\n    if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n      const errorType = errorInfo.errorType;\n      this.retryBackoffStrategy.setDelayBase(\n        errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE\n      );\n      const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n      const retryDelay = errorInfo.retryAfterHint ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType) : delayFromErrorType;\n      const capacityCost = this.getCapacityCost(errorType);\n      this.capacity -= capacityCost;\n      return createDefaultRetryToken({\n        retryDelay,\n        retryCount: token.getRetryCount() + 1,\n        retryCost: capacityCost\n      });\n    }\n    throw new Error(\"No retry token available\");\n  }\n  recordSuccess(token) {\n    this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));\n  }\n  /**\n   * @returns the current available retry capacity.\n   *\n   * This number decreases when retries are executed and refills when requests or retries succeed.\n   */\n  getCapacity() {\n    return this.capacity;\n  }\n  async getMaxAttempts() {\n    try {\n      return await this.maxAttemptsProvider();\n    } catch (error) {\n      console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n      return DEFAULT_MAX_ATTEMPTS;\n    }\n  }\n  shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n    const attempts = tokenToRenew.getRetryCount() + 1;\n    return attempts < maxAttempts && this.capacity >= this.getCapacityCost(errorInfo.errorType) && this.isRetryableError(errorInfo.errorType);\n  }\n  getCapacityCost(errorType) {\n    return errorType === \"TRANSIENT\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n  }\n  isRetryableError(errorType) {\n    return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n  }\n};\n__name(_StandardRetryStrategy, \"StandardRetryStrategy\");\nvar StandardRetryStrategy = _StandardRetryStrategy;\n\n// src/AdaptiveRetryStrategy.ts\nvar _AdaptiveRetryStrategy = class _AdaptiveRetryStrategy {\n  constructor(maxAttemptsProvider, options) {\n    this.maxAttemptsProvider = maxAttemptsProvider;\n    this.mode = \"adaptive\" /* ADAPTIVE */;\n    const { rateLimiter } = options ?? {};\n    this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n    this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n  }\n  async acquireInitialRetryToken(retryTokenScope) {\n    await this.rateLimiter.getSendToken();\n    return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n  }\n  async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n    this.rateLimiter.updateClientSendingRate(errorInfo);\n    return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n  }\n  recordSuccess(token) {\n    this.rateLimiter.updateClientSendingRate({});\n    this.standardRetryStrategy.recordSuccess(token);\n  }\n};\n__name(_AdaptiveRetryStrategy, \"AdaptiveRetryStrategy\");\nvar AdaptiveRetryStrategy = _AdaptiveRetryStrategy;\n\n// src/ConfiguredRetryStrategy.ts\nvar _ConfiguredRetryStrategy = class _ConfiguredRetryStrategy extends StandardRetryStrategy {\n  /**\n   * @param maxAttempts - the maximum number of retry attempts allowed.\n   *                      e.g., if set to 3, then 4 total requests are possible.\n   * @param computeNextBackoffDelay - a millisecond delay for each retry or a function that takes the retry attempt\n   *                                  and returns the delay.\n   *\n   * @example exponential backoff.\n   * ```js\n   * new Client({\n   *   retryStrategy: new ConfiguredRetryStrategy(3, (attempt) => attempt ** 2)\n   * });\n   * ```\n   * @example constant delay.\n   * ```js\n   * new Client({\n   *   retryStrategy: new ConfiguredRetryStrategy(3, 2000)\n   * });\n   * ```\n   */\n  constructor(maxAttempts, computeNextBackoffDelay = DEFAULT_RETRY_DELAY_BASE) {\n    super(typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts);\n    if (typeof computeNextBackoffDelay === \"number\") {\n      this.computeNextBackoffDelay = () => computeNextBackoffDelay;\n    } else {\n      this.computeNextBackoffDelay = computeNextBackoffDelay;\n    }\n  }\n  async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n    const token = await super.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    token.getRetryDelay = () => this.computeNextBackoffDelay(token.getRetryCount());\n    return token;\n  }\n};\n__name(_ConfiguredRetryStrategy, \"ConfiguredRetryStrategy\");\nvar ConfiguredRetryStrategy = _ConfiguredRetryStrategy;\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  AdaptiveRetryStrategy,\n  ConfiguredRetryStrategy,\n  DefaultRateLimiter,\n  StandardRetryStrategy,\n  RETRY_MODES,\n  DEFAULT_MAX_ATTEMPTS,\n  DEFAULT_RETRY_MODE,\n  DEFAULT_RETRY_DELAY_BASE,\n  MAXIMUM_RETRY_DELAY,\n  THROTTLING_RETRY_DELAY_BASE,\n  INITIAL_RETRY_TOKENS,\n  RETRY_COST,\n  TIMEOUT_RETRY_COST,\n  NO_RETRY_INCREMENT,\n  INVOCATION_ID_HEADER,\n  REQUEST_HEADER\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  constructStack: () => constructStack\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/MiddlewareStack.ts\nvar getAllAliases = /* @__PURE__ */ __name((name, aliases) => {\n  const _aliases = [];\n  if (name) {\n    _aliases.push(name);\n  }\n  if (aliases) {\n    for (const alias of aliases) {\n      _aliases.push(alias);\n    }\n  }\n  return _aliases;\n}, \"getAllAliases\");\nvar getMiddlewareNameWithAliases = /* @__PURE__ */ __name((name, aliases) => {\n  return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\n}, \"getMiddlewareNameWithAliases\");\nvar constructStack = /* @__PURE__ */ __name(() => {\n  let absoluteEntries = [];\n  let relativeEntries = [];\n  let identifyOnResolve = false;\n  const entriesNameSet = /* @__PURE__ */ new Set();\n  const sort = /* @__PURE__ */ __name((entries) => entries.sort(\n    (a, b) => stepWeights[b.step] - stepWeights[a.step] || priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]\n  ), \"sort\");\n  const removeByName = /* @__PURE__ */ __name((toRemove) => {\n    let isRemoved = false;\n    const filterCb = /* @__PURE__ */ __name((entry) => {\n      const aliases = getAllAliases(entry.name, entry.aliases);\n      if (aliases.includes(toRemove)) {\n        isRemoved = true;\n        for (const alias of aliases) {\n          entriesNameSet.delete(alias);\n        }\n        return false;\n      }\n      return true;\n    }, \"filterCb\");\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  }, \"removeByName\");\n  const removeByReference = /* @__PURE__ */ __name((toRemove) => {\n    let isRemoved = false;\n    const filterCb = /* @__PURE__ */ __name((entry) => {\n      if (entry.middleware === toRemove) {\n        isRemoved = true;\n        for (const alias of getAllAliases(entry.name, entry.aliases)) {\n          entriesNameSet.delete(alias);\n        }\n        return false;\n      }\n      return true;\n    }, \"filterCb\");\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  }, \"removeByReference\");\n  const cloneTo = /* @__PURE__ */ __name((toStack) => {\n    var _a;\n    absoluteEntries.forEach((entry) => {\n      toStack.add(entry.middleware, { ...entry });\n    });\n    relativeEntries.forEach((entry) => {\n      toStack.addRelativeTo(entry.middleware, { ...entry });\n    });\n    (_a = toStack.identifyOnResolve) == null ? void 0 : _a.call(toStack, stack.identifyOnResolve());\n    return toStack;\n  }, \"cloneTo\");\n  const expandRelativeMiddlewareList = /* @__PURE__ */ __name((from) => {\n    const expandedMiddlewareList = [];\n    from.before.forEach((entry) => {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n      }\n    });\n    expandedMiddlewareList.push(from);\n    from.after.reverse().forEach((entry) => {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n      }\n    });\n    return expandedMiddlewareList;\n  }, \"expandRelativeMiddlewareList\");\n  const getMiddlewareList = /* @__PURE__ */ __name((debug = false) => {\n    const normalizedAbsoluteEntries = [];\n    const normalizedRelativeEntries = [];\n    const normalizedEntriesNameMap = {};\n    absoluteEntries.forEach((entry) => {\n      const normalizedEntry = {\n        ...entry,\n        before: [],\n        after: []\n      };\n      for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n        normalizedEntriesNameMap[alias] = normalizedEntry;\n      }\n      normalizedAbsoluteEntries.push(normalizedEntry);\n    });\n    relativeEntries.forEach((entry) => {\n      const normalizedEntry = {\n        ...entry,\n        before: [],\n        after: []\n      };\n      for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n        normalizedEntriesNameMap[alias] = normalizedEntry;\n      }\n      normalizedRelativeEntries.push(normalizedEntry);\n    });\n    normalizedRelativeEntries.forEach((entry) => {\n      if (entry.toMiddleware) {\n        const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n        if (toMiddleware === void 0) {\n          if (debug) {\n            return;\n          }\n          throw new Error(\n            `${entry.toMiddleware} is not found when adding ${getMiddlewareNameWithAliases(entry.name, entry.aliases)} middleware ${entry.relation} ${entry.toMiddleware}`\n          );\n        }\n        if (entry.relation === \"after\") {\n          toMiddleware.after.push(entry);\n        }\n        if (entry.relation === \"before\") {\n          toMiddleware.before.push(entry);\n        }\n      }\n    });\n    const mainChain = sort(normalizedAbsoluteEntries).map(expandRelativeMiddlewareList).reduce(\n      (wholeList, expandedMiddlewareList) => {\n        wholeList.push(...expandedMiddlewareList);\n        return wholeList;\n      },\n      []\n    );\n    return mainChain;\n  }, \"getMiddlewareList\");\n  const stack = {\n    add: (middleware, options = {}) => {\n      const { name, override, aliases: _aliases } = options;\n      const entry = {\n        step: \"initialize\",\n        priority: \"normal\",\n        middleware,\n        ...options\n      };\n      const aliases = getAllAliases(name, _aliases);\n      if (aliases.length > 0) {\n        if (aliases.some((alias) => entriesNameSet.has(alias))) {\n          if (!override)\n            throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n          for (const alias of aliases) {\n            const toOverrideIndex = absoluteEntries.findIndex(\n              (entry2) => {\n                var _a;\n                return entry2.name === alias || ((_a = entry2.aliases) == null ? void 0 : _a.some((a) => a === alias));\n              }\n            );\n            if (toOverrideIndex === -1) {\n              continue;\n            }\n            const toOverride = absoluteEntries[toOverrideIndex];\n            if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\n              throw new Error(\n                `\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ${entry.priority} priority in ${entry.step} step.`\n              );\n            }\n            absoluteEntries.splice(toOverrideIndex, 1);\n          }\n        }\n        for (const alias of aliases) {\n          entriesNameSet.add(alias);\n        }\n      }\n      absoluteEntries.push(entry);\n    },\n    addRelativeTo: (middleware, options) => {\n      const { name, override, aliases: _aliases } = options;\n      const entry = {\n        middleware,\n        ...options\n      };\n      const aliases = getAllAliases(name, _aliases);\n      if (aliases.length > 0) {\n        if (aliases.some((alias) => entriesNameSet.has(alias))) {\n          if (!override)\n            throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n          for (const alias of aliases) {\n            const toOverrideIndex = relativeEntries.findIndex(\n              (entry2) => {\n                var _a;\n                return entry2.name === alias || ((_a = entry2.aliases) == null ? void 0 : _a.some((a) => a === alias));\n              }\n            );\n            if (toOverrideIndex === -1) {\n              continue;\n            }\n            const toOverride = relativeEntries[toOverrideIndex];\n            if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n              throw new Error(\n                `\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`\n              );\n            }\n            relativeEntries.splice(toOverrideIndex, 1);\n          }\n        }\n        for (const alias of aliases) {\n          entriesNameSet.add(alias);\n        }\n      }\n      relativeEntries.push(entry);\n    },\n    clone: () => cloneTo(constructStack()),\n    use: (plugin) => {\n      plugin.applyToStack(stack);\n    },\n    remove: (toRemove) => {\n      if (typeof toRemove === \"string\")\n        return removeByName(toRemove);\n      else\n        return removeByReference(toRemove);\n    },\n    removeByTag: (toRemove) => {\n      let isRemoved = false;\n      const filterCb = /* @__PURE__ */ __name((entry) => {\n        const { tags, name, aliases: _aliases } = entry;\n        if (tags && tags.includes(toRemove)) {\n          const aliases = getAllAliases(name, _aliases);\n          for (const alias of aliases) {\n            entriesNameSet.delete(alias);\n          }\n          isRemoved = true;\n          return false;\n        }\n        return true;\n      }, \"filterCb\");\n      absoluteEntries = absoluteEntries.filter(filterCb);\n      relativeEntries = relativeEntries.filter(filterCb);\n      return isRemoved;\n    },\n    concat: (from) => {\n      var _a;\n      const cloned = cloneTo(constructStack());\n      cloned.use(from);\n      cloned.identifyOnResolve(\n        identifyOnResolve || cloned.identifyOnResolve() || (((_a = from.identifyOnResolve) == null ? void 0 : _a.call(from)) ?? false)\n      );\n      return cloned;\n    },\n    applyToStack: cloneTo,\n    identify: () => {\n      return getMiddlewareList(true).map((mw) => {\n        const step = mw.step ?? mw.relation + \" \" + mw.toMiddleware;\n        return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\n      });\n    },\n    identifyOnResolve(toggle) {\n      if (typeof toggle === \"boolean\")\n        identifyOnResolve = toggle;\n      return identifyOnResolve;\n    },\n    resolve: (handler, context) => {\n      for (const middleware of getMiddlewareList().map((entry) => entry.middleware).reverse()) {\n        handler = middleware(handler, context);\n      }\n      if (identifyOnResolve) {\n        console.log(stack.identify());\n      }\n      return handler;\n    }\n  };\n  return stack;\n}, \"constructStack\");\nvar stepWeights = {\n  initialize: 5,\n  serialize: 4,\n  build: 3,\n  finalizeRequest: 2,\n  deserialize: 1\n};\nvar priorityWeights = {\n  high: 3,\n  normal: 2,\n  low: 1\n};\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  constructStack\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  isArrayBuffer: () => isArrayBuffer\n});\nmodule.exports = __toCommonJS(src_exports);\nvar isArrayBuffer = /* @__PURE__ */ __name((arg) => typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer || Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\", \"isArrayBuffer\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  isArrayBuffer\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromArrayBuffer: () => fromArrayBuffer,\n  fromString: () => fromString\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_is_array_buffer = require(\"@smithy/is-array-buffer\");\nvar import_buffer = require(\"buffer\");\nvar fromArrayBuffer = /* @__PURE__ */ __name((input, offset = 0, length = input.byteLength - offset) => {\n  if (!(0, import_is_array_buffer.isArrayBuffer)(input)) {\n    throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n  }\n  return import_buffer.Buffer.from(input, offset, length);\n}, \"fromArrayBuffer\");\nvar fromString = /* @__PURE__ */ __name((input, encoding) => {\n  if (typeof input !== \"string\") {\n    throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n  }\n  return encoding ? import_buffer.Buffer.from(input, encoding) : import_buffer.Buffer.from(input);\n}, \"fromString\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromArrayBuffer,\n  fromString\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromUtf8: () => fromUtf8,\n  toUint8Array: () => toUint8Array,\n  toUtf8: () => toUtf8\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fromUtf8.ts\nvar import_util_buffer_from = require(\"@smithy/util-buffer-from\");\nvar fromUtf8 = /* @__PURE__ */ __name((input) => {\n  const buf = (0, import_util_buffer_from.fromString)(input, \"utf8\");\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n}, \"fromUtf8\");\n\n// src/toUint8Array.ts\nvar toUint8Array = /* @__PURE__ */ __name((data) => {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n  return new Uint8Array(data);\n}, \"toUint8Array\");\n\n// src/toUtf8.ts\n\nvar toUtf8 = /* @__PURE__ */ __name((input) => {\n  if (typeof input === \"string\") {\n    return input;\n  }\n  if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n    throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n  }\n  return (0, import_util_buffer_from.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n}, \"toUtf8\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromUtf8,\n  toUint8Array,\n  toUtf8\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\nmodule.exports = __toCommonJS(src_exports);\n__reExport(src_exports, require(\"././fromBase64\"), module.exports);\n__reExport(src_exports, require(\"././toBase64\"), module.exports);\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromBase64,\n  toBase64\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAwsChunkedEncodingStream = void 0;\nconst stream_1 = require(\"stream\");\nconst getAwsChunkedEncodingStream = (readableStream, options) => {\n    const { base64Encoder, bodyLengthChecker, checksumAlgorithmFn, checksumLocationName, streamHasher } = options;\n    const checksumRequired = base64Encoder !== undefined &&\n        checksumAlgorithmFn !== undefined &&\n        checksumLocationName !== undefined &&\n        streamHasher !== undefined;\n    const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n    const awsChunkedEncodingStream = new stream_1.Readable({ read: () => { } });\n    readableStream.on(\"data\", (data) => {\n        const length = bodyLengthChecker(data) || 0;\n        awsChunkedEncodingStream.push(`${length.toString(16)}\\r\\n`);\n        awsChunkedEncodingStream.push(data);\n        awsChunkedEncodingStream.push(\"\\r\\n\");\n    });\n    readableStream.on(\"end\", async () => {\n        awsChunkedEncodingStream.push(`0\\r\\n`);\n        if (checksumRequired) {\n            const checksum = base64Encoder(await digest);\n            awsChunkedEncodingStream.push(`${checksumLocationName}:${checksum}\\r\\n`);\n            awsChunkedEncodingStream.push(`\\r\\n`);\n        }\n        awsChunkedEncodingStream.push(null);\n    });\n    return awsChunkedEncodingStream;\n};\nexports.getAwsChunkedEncodingStream = getAwsChunkedEncodingStream;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  escapeUri: () => escapeUri,\n  escapeUriPath: () => escapeUriPath\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/escape-uri.ts\nvar escapeUri = /* @__PURE__ */ __name((uri) => (\n  // AWS percent-encodes some extra non-standard characters in a URI\n  encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode)\n), \"escapeUri\");\nvar hexEncode = /* @__PURE__ */ __name((c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`, \"hexEncode\");\n\n// src/escape-uri-path.ts\nvar escapeUriPath = /* @__PURE__ */ __name((uri) => uri.split(\"/\").map(escapeUri).join(\"/\"), \"escapeUriPath\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  escapeUri,\n  escapeUriPath\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  buildQueryString: () => buildQueryString\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_util_uri_escape = require(\"@smithy/util-uri-escape\");\nfunction buildQueryString(query) {\n  const parts = [];\n  for (let key of Object.keys(query).sort()) {\n    const value = query[key];\n    key = (0, import_util_uri_escape.escapeUri)(key);\n    if (Array.isArray(value)) {\n      for (let i = 0, iLen = value.length; i < iLen; i++) {\n        parts.push(`${key}=${(0, import_util_uri_escape.escapeUri)(value[i])}`);\n      }\n    } else {\n      let qsEntry = key;\n      if (value || typeof value === \"string\") {\n        qsEntry += `=${(0, import_util_uri_escape.escapeUri)(value)}`;\n      }\n      parts.push(qsEntry);\n    }\n  }\n  return parts.join(\"&\");\n}\n__name(buildQueryString, \"buildQueryString\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  buildQueryString\n});\n\n", "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  DEFAULT_REQUEST_TIMEOUT: () => DEFAULT_REQUEST_TIMEOUT,\n  NodeHttp2Handler: () => NodeHttp2Handler,\n  NodeHttpHandler: () => NodeHttpHandler,\n  streamCollector: () => streamCollector\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/node-http-handler.ts\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar import_querystring_builder = require(\"@smithy/querystring-builder\");\nvar import_http = require(\"http\");\nvar import_https = require(\"https\");\n\n// src/constants.ts\nvar NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n\n// src/get-transformed-headers.ts\nvar getTransformedHeaders = /* @__PURE__ */ __name((headers) => {\n  const transformedHeaders = {};\n  for (const name of Object.keys(headers)) {\n    const headerValues = headers[name];\n    transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n  }\n  return transformedHeaders;\n}, \"getTransformedHeaders\");\n\n// src/set-connection-timeout.ts\nvar setConnectionTimeout = /* @__PURE__ */ __name((request, reject, timeoutInMs = 0) => {\n  if (!timeoutInMs) {\n    return;\n  }\n  const timeoutId = setTimeout(() => {\n    request.destroy();\n    reject(\n      Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n        name: \"TimeoutError\"\n      })\n    );\n  }, timeoutInMs);\n  request.on(\"socket\", (socket) => {\n    if (socket.connecting) {\n      socket.on(\"connect\", () => {\n        clearTimeout(timeoutId);\n      });\n    } else {\n      clearTimeout(timeoutId);\n    }\n  });\n}, \"setConnectionTimeout\");\n\n// src/set-socket-keep-alive.ts\nvar setSocketKeepAlive = /* @__PURE__ */ __name((request, { keepAlive, keepAliveMsecs }) => {\n  if (keepAlive !== true) {\n    return;\n  }\n  request.on(\"socket\", (socket) => {\n    socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n  });\n}, \"setSocketKeepAlive\");\n\n// src/set-socket-timeout.ts\nvar setSocketTimeout = /* @__PURE__ */ __name((request, reject, timeoutInMs = 0) => {\n  request.setTimeout(timeoutInMs, () => {\n    request.destroy();\n    reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n  });\n}, \"setSocketTimeout\");\n\n// src/write-request-body.ts\nvar import_stream = require(\"stream\");\nvar MIN_WAIT_TIME = 1e3;\nasync function writeRequestBody(httpRequest, request, maxContinueTimeoutMs = MIN_WAIT_TIME) {\n  const headers = request.headers ?? {};\n  const expect = headers[\"Expect\"] || headers[\"expect\"];\n  let timeoutId = -1;\n  let hasError = false;\n  if (expect === \"100-continue\") {\n    await Promise.race([\n      new Promise((resolve) => {\n        timeoutId = Number(setTimeout(resolve, Math.max(MIN_WAIT_TIME, maxContinueTimeoutMs)));\n      }),\n      new Promise((resolve) => {\n        httpRequest.on(\"continue\", () => {\n          clearTimeout(timeoutId);\n          resolve();\n        });\n        httpRequest.on(\"error\", () => {\n          hasError = true;\n          clearTimeout(timeoutId);\n          resolve();\n        });\n      })\n    ]);\n  }\n  if (!hasError) {\n    writeBody(httpRequest, request.body);\n  }\n}\n__name(writeRequestBody, \"writeRequestBody\");\nfunction writeBody(httpRequest, body) {\n  if (body instanceof import_stream.Readable) {\n    body.pipe(httpRequest);\n    return;\n  }\n  if (body) {\n    if (Buffer.isBuffer(body) || typeof body === \"string\") {\n      httpRequest.end(body);\n      return;\n    }\n    const uint8 = body;\n    if (typeof uint8 === \"object\" && uint8.buffer && typeof uint8.byteOffset === \"number\" && typeof uint8.byteLength === \"number\") {\n      httpRequest.end(Buffer.from(uint8.buffer, uint8.byteOffset, uint8.byteLength));\n      return;\n    }\n    httpRequest.end(Buffer.from(body));\n    return;\n  }\n  httpRequest.end();\n}\n__name(writeBody, \"writeBody\");\n\n// src/node-http-handler.ts\nvar DEFAULT_REQUEST_TIMEOUT = 0;\nvar _NodeHttpHandler = class _NodeHttpHandler {\n  constructor(options) {\n    this.socketWarningTimestamp = 0;\n    // Node http handler is hard-coded to http/1.1: https://github.com/nodejs/node/blob/ff5664b83b89c55e4ab5d5f60068fb457f1f5872/lib/_http_server.js#L286\n    this.metadata = { handlerProtocol: \"http/1.1\" };\n    this.configProvider = new Promise((resolve, reject) => {\n      if (typeof options === \"function\") {\n        options().then((_options) => {\n          resolve(this.resolveDefaultConfig(_options));\n        }).catch(reject);\n      } else {\n        resolve(this.resolveDefaultConfig(options));\n      }\n    });\n  }\n  /**\n   * @returns the input if it is an HttpHandler of any class,\n   * or instantiates a new instance of this handler.\n   */\n  static create(instanceOrOptions) {\n    if (typeof (instanceOrOptions == null ? void 0 : instanceOrOptions.handle) === \"function\") {\n      return instanceOrOptions;\n    }\n    return new _NodeHttpHandler(instanceOrOptions);\n  }\n  /**\n   * @internal\n   *\n   * @param agent - http(s) agent in use by the NodeHttpHandler instance.\n   * @param socketWarningTimestamp - last socket usage check timestamp.\n   * @param logger - channel for the warning.\n   * @returns timestamp of last emitted warning.\n   */\n  static checkSocketUsage(agent, socketWarningTimestamp, logger = console) {\n    var _a, _b, _c;\n    const { sockets, requests, maxSockets } = agent;\n    if (typeof maxSockets !== \"number\" || maxSockets === Infinity) {\n      return socketWarningTimestamp;\n    }\n    const interval = 15e3;\n    if (Date.now() - interval < socketWarningTimestamp) {\n      return socketWarningTimestamp;\n    }\n    if (sockets && requests) {\n      for (const origin in sockets) {\n        const socketsInUse = ((_a = sockets[origin]) == null ? void 0 : _a.length) ?? 0;\n        const requestsEnqueued = ((_b = requests[origin]) == null ? void 0 : _b.length) ?? 0;\n        if (socketsInUse >= maxSockets && requestsEnqueued >= 2 * maxSockets) {\n          (_c = logger == null ? void 0 : logger.warn) == null ? void 0 : _c.call(\n            logger,\n            `@smithy/node-http-handler:WARN - socket usage at capacity=${socketsInUse} and ${requestsEnqueued} additional requests are enqueued.\nSee https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/node-configuring-maxsockets.html\nor increase socketAcquisitionWarningTimeout=(millis) in the NodeHttpHandler config.`\n          );\n          return Date.now();\n        }\n      }\n    }\n    return socketWarningTimestamp;\n  }\n  resolveDefaultConfig(options) {\n    const { requestTimeout, connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n    const keepAlive = true;\n    const maxSockets = 50;\n    return {\n      connectionTimeout,\n      requestTimeout: requestTimeout ?? socketTimeout,\n      httpAgent: (() => {\n        if (httpAgent instanceof import_http.Agent || typeof (httpAgent == null ? void 0 : httpAgent.destroy) === \"function\") {\n          return httpAgent;\n        }\n        return new import_http.Agent({ keepAlive, maxSockets, ...httpAgent });\n      })(),\n      httpsAgent: (() => {\n        if (httpsAgent instanceof import_https.Agent || typeof (httpsAgent == null ? void 0 : httpsAgent.destroy) === \"function\") {\n          return httpsAgent;\n        }\n        return new import_https.Agent({ keepAlive, maxSockets, ...httpsAgent });\n      })(),\n      logger: console\n    };\n  }\n  destroy() {\n    var _a, _b, _c, _d;\n    (_b = (_a = this.config) == null ? void 0 : _a.httpAgent) == null ? void 0 : _b.destroy();\n    (_d = (_c = this.config) == null ? void 0 : _c.httpsAgent) == null ? void 0 : _d.destroy();\n  }\n  async handle(request, { abortSignal } = {}) {\n    if (!this.config) {\n      this.config = await this.configProvider;\n    }\n    let socketCheckTimeoutId;\n    return new Promise((_resolve, _reject) => {\n      let writeRequestBodyPromise = void 0;\n      const resolve = /* @__PURE__ */ __name(async (arg) => {\n        await writeRequestBodyPromise;\n        clearTimeout(socketCheckTimeoutId);\n        _resolve(arg);\n      }, \"resolve\");\n      const reject = /* @__PURE__ */ __name(async (arg) => {\n        await writeRequestBodyPromise;\n        clearTimeout(socketCheckTimeoutId);\n        _reject(arg);\n      }, \"reject\");\n      if (!this.config) {\n        throw new Error(\"Node HTTP request handler config is not resolved\");\n      }\n      if (abortSignal == null ? void 0 : abortSignal.aborted) {\n        const abortError = new Error(\"Request aborted\");\n        abortError.name = \"AbortError\";\n        reject(abortError);\n        return;\n      }\n      const isSSL = request.protocol === \"https:\";\n      const agent = isSSL ? this.config.httpsAgent : this.config.httpAgent;\n      socketCheckTimeoutId = setTimeout(\n        () => {\n          this.socketWarningTimestamp = _NodeHttpHandler.checkSocketUsage(\n            agent,\n            this.socketWarningTimestamp,\n            this.config.logger\n          );\n        },\n        this.config.socketAcquisitionWarningTimeout ?? (this.config.requestTimeout ?? 2e3) + (this.config.connectionTimeout ?? 1e3)\n      );\n      const queryString = (0, import_querystring_builder.buildQueryString)(request.query || {});\n      let auth = void 0;\n      if (request.username != null || request.password != null) {\n        const username = request.username ?? \"\";\n        const password = request.password ?? \"\";\n        auth = `${username}:${password}`;\n      }\n      let path = request.path;\n      if (queryString) {\n        path += `?${queryString}`;\n      }\n      if (request.fragment) {\n        path += `#${request.fragment}`;\n      }\n      const nodeHttpsOptions = {\n        headers: request.headers,\n        host: request.hostname,\n        method: request.method,\n        path,\n        port: request.port,\n        agent,\n        auth\n      };\n      const requestFunc = isSSL ? import_https.request : import_http.request;\n      const req = requestFunc(nodeHttpsOptions, (res) => {\n        const httpResponse = new import_protocol_http.HttpResponse({\n          statusCode: res.statusCode || -1,\n          reason: res.statusMessage,\n          headers: getTransformedHeaders(res.headers),\n          body: res\n        });\n        resolve({ response: httpResponse });\n      });\n      req.on(\"error\", (err) => {\n        if (NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n          reject(Object.assign(err, { name: \"TimeoutError\" }));\n        } else {\n          reject(err);\n        }\n      });\n      setConnectionTimeout(req, reject, this.config.connectionTimeout);\n      setSocketTimeout(req, reject, this.config.requestTimeout);\n      if (abortSignal) {\n        const onAbort = /* @__PURE__ */ __name(() => {\n          req.destroy();\n          const abortError = new Error(\"Request aborted\");\n          abortError.name = \"AbortError\";\n          reject(abortError);\n        }, \"onAbort\");\n        if (typeof abortSignal.addEventListener === \"function\") {\n          const signal = abortSignal;\n          signal.addEventListener(\"abort\", onAbort, { once: true });\n          req.once(\"close\", () => signal.removeEventListener(\"abort\", onAbort));\n        } else {\n          abortSignal.onabort = onAbort;\n        }\n      }\n      const httpAgent = nodeHttpsOptions.agent;\n      if (typeof httpAgent === \"object\" && \"keepAlive\" in httpAgent) {\n        setSocketKeepAlive(req, {\n          // @ts-expect-error keepAlive is not public on httpAgent.\n          keepAlive: httpAgent.keepAlive,\n          // @ts-expect-error keepAliveMsecs is not public on httpAgent.\n          keepAliveMsecs: httpAgent.keepAliveMsecs\n        });\n      }\n      writeRequestBodyPromise = writeRequestBody(req, request, this.config.requestTimeout).catch((e) => {\n        clearTimeout(socketCheckTimeoutId);\n        return _reject(e);\n      });\n    });\n  }\n  updateHttpClientConfig(key, value) {\n    this.config = void 0;\n    this.configProvider = this.configProvider.then((config) => {\n      return {\n        ...config,\n        [key]: value\n      };\n    });\n  }\n  httpHandlerConfigs() {\n    return this.config ?? {};\n  }\n};\n__name(_NodeHttpHandler, \"NodeHttpHandler\");\nvar NodeHttpHandler = _NodeHttpHandler;\n\n// src/node-http2-handler.ts\n\n\nvar import_http22 = require(\"http2\");\n\n// src/node-http2-connection-manager.ts\nvar import_http2 = __toESM(require(\"http2\"));\n\n// src/node-http2-connection-pool.ts\nvar _NodeHttp2ConnectionPool = class _NodeHttp2ConnectionPool {\n  constructor(sessions) {\n    this.sessions = [];\n    this.sessions = sessions ?? [];\n  }\n  poll() {\n    if (this.sessions.length > 0) {\n      return this.sessions.shift();\n    }\n  }\n  offerLast(session) {\n    this.sessions.push(session);\n  }\n  contains(session) {\n    return this.sessions.includes(session);\n  }\n  remove(session) {\n    this.sessions = this.sessions.filter((s) => s !== session);\n  }\n  [Symbol.iterator]() {\n    return this.sessions[Symbol.iterator]();\n  }\n  destroy(connection) {\n    for (const session of this.sessions) {\n      if (session === connection) {\n        if (!session.destroyed) {\n          session.destroy();\n        }\n      }\n    }\n  }\n};\n__name(_NodeHttp2ConnectionPool, \"NodeHttp2ConnectionPool\");\nvar NodeHttp2ConnectionPool = _NodeHttp2ConnectionPool;\n\n// src/node-http2-connection-manager.ts\nvar _NodeHttp2ConnectionManager = class _NodeHttp2ConnectionManager {\n  constructor(config) {\n    this.sessionCache = /* @__PURE__ */ new Map();\n    this.config = config;\n    if (this.config.maxConcurrency && this.config.maxConcurrency <= 0) {\n      throw new RangeError(\"maxConcurrency must be greater than zero.\");\n    }\n  }\n  lease(requestContext, connectionConfiguration) {\n    const url = this.getUrlString(requestContext);\n    const existingPool = this.sessionCache.get(url);\n    if (existingPool) {\n      const existingSession = existingPool.poll();\n      if (existingSession && !this.config.disableConcurrency) {\n        return existingSession;\n      }\n    }\n    const session = import_http2.default.connect(url);\n    if (this.config.maxConcurrency) {\n      session.settings({ maxConcurrentStreams: this.config.maxConcurrency }, (err) => {\n        if (err) {\n          throw new Error(\n            \"Fail to set maxConcurrentStreams to \" + this.config.maxConcurrency + \"when creating new session for \" + requestContext.destination.toString()\n          );\n        }\n      });\n    }\n    session.unref();\n    const destroySessionCb = /* @__PURE__ */ __name(() => {\n      session.destroy();\n      this.deleteSession(url, session);\n    }, \"destroySessionCb\");\n    session.on(\"goaway\", destroySessionCb);\n    session.on(\"error\", destroySessionCb);\n    session.on(\"frameError\", destroySessionCb);\n    session.on(\"close\", () => this.deleteSession(url, session));\n    if (connectionConfiguration.requestTimeout) {\n      session.setTimeout(connectionConfiguration.requestTimeout, destroySessionCb);\n    }\n    const connectionPool = this.sessionCache.get(url) || new NodeHttp2ConnectionPool();\n    connectionPool.offerLast(session);\n    this.sessionCache.set(url, connectionPool);\n    return session;\n  }\n  /**\n   * Delete a session from the connection pool.\n   * @param authority The authority of the session to delete.\n   * @param session The session to delete.\n   */\n  deleteSession(authority, session) {\n    const existingConnectionPool = this.sessionCache.get(authority);\n    if (!existingConnectionPool) {\n      return;\n    }\n    if (!existingConnectionPool.contains(session)) {\n      return;\n    }\n    existingConnectionPool.remove(session);\n    this.sessionCache.set(authority, existingConnectionPool);\n  }\n  release(requestContext, session) {\n    var _a;\n    const cacheKey = this.getUrlString(requestContext);\n    (_a = this.sessionCache.get(cacheKey)) == null ? void 0 : _a.offerLast(session);\n  }\n  destroy() {\n    for (const [key, connectionPool] of this.sessionCache) {\n      for (const session of connectionPool) {\n        if (!session.destroyed) {\n          session.destroy();\n        }\n        connectionPool.remove(session);\n      }\n      this.sessionCache.delete(key);\n    }\n  }\n  setMaxConcurrentStreams(maxConcurrentStreams) {\n    if (this.config.maxConcurrency && this.config.maxConcurrency <= 0) {\n      throw new RangeError(\"maxConcurrentStreams must be greater than zero.\");\n    }\n    this.config.maxConcurrency = maxConcurrentStreams;\n  }\n  setDisableConcurrentStreams(disableConcurrentStreams) {\n    this.config.disableConcurrency = disableConcurrentStreams;\n  }\n  getUrlString(request) {\n    return request.destination.toString();\n  }\n};\n__name(_NodeHttp2ConnectionManager, \"NodeHttp2ConnectionManager\");\nvar NodeHttp2ConnectionManager = _NodeHttp2ConnectionManager;\n\n// src/node-http2-handler.ts\nvar _NodeHttp2Handler = class _NodeHttp2Handler {\n  constructor(options) {\n    this.metadata = { handlerProtocol: \"h2\" };\n    this.connectionManager = new NodeHttp2ConnectionManager({});\n    this.configProvider = new Promise((resolve, reject) => {\n      if (typeof options === \"function\") {\n        options().then((opts) => {\n          resolve(opts || {});\n        }).catch(reject);\n      } else {\n        resolve(options || {});\n      }\n    });\n  }\n  /**\n   * @returns the input if it is an HttpHandler of any class,\n   * or instantiates a new instance of this handler.\n   */\n  static create(instanceOrOptions) {\n    if (typeof (instanceOrOptions == null ? void 0 : instanceOrOptions.handle) === \"function\") {\n      return instanceOrOptions;\n    }\n    return new _NodeHttp2Handler(instanceOrOptions);\n  }\n  destroy() {\n    this.connectionManager.destroy();\n  }\n  async handle(request, { abortSignal } = {}) {\n    if (!this.config) {\n      this.config = await this.configProvider;\n      this.connectionManager.setDisableConcurrentStreams(this.config.disableConcurrentStreams || false);\n      if (this.config.maxConcurrentStreams) {\n        this.connectionManager.setMaxConcurrentStreams(this.config.maxConcurrentStreams);\n      }\n    }\n    const { requestTimeout, disableConcurrentStreams } = this.config;\n    return new Promise((_resolve, _reject) => {\n      var _a;\n      let fulfilled = false;\n      let writeRequestBodyPromise = void 0;\n      const resolve = /* @__PURE__ */ __name(async (arg) => {\n        await writeRequestBodyPromise;\n        _resolve(arg);\n      }, \"resolve\");\n      const reject = /* @__PURE__ */ __name(async (arg) => {\n        await writeRequestBodyPromise;\n        _reject(arg);\n      }, \"reject\");\n      if (abortSignal == null ? void 0 : abortSignal.aborted) {\n        fulfilled = true;\n        const abortError = new Error(\"Request aborted\");\n        abortError.name = \"AbortError\";\n        reject(abortError);\n        return;\n      }\n      const { hostname, method, port, protocol, query } = request;\n      let auth = \"\";\n      if (request.username != null || request.password != null) {\n        const username = request.username ?? \"\";\n        const password = request.password ?? \"\";\n        auth = `${username}:${password}@`;\n      }\n      const authority = `${protocol}//${auth}${hostname}${port ? `:${port}` : \"\"}`;\n      const requestContext = { destination: new URL(authority) };\n      const session = this.connectionManager.lease(requestContext, {\n        requestTimeout: (_a = this.config) == null ? void 0 : _a.sessionTimeout,\n        disableConcurrentStreams: disableConcurrentStreams || false\n      });\n      const rejectWithDestroy = /* @__PURE__ */ __name((err) => {\n        if (disableConcurrentStreams) {\n          this.destroySession(session);\n        }\n        fulfilled = true;\n        reject(err);\n      }, \"rejectWithDestroy\");\n      const queryString = (0, import_querystring_builder.buildQueryString)(query || {});\n      let path = request.path;\n      if (queryString) {\n        path += `?${queryString}`;\n      }\n      if (request.fragment) {\n        path += `#${request.fragment}`;\n      }\n      const req = session.request({\n        ...request.headers,\n        [import_http22.constants.HTTP2_HEADER_PATH]: path,\n        [import_http22.constants.HTTP2_HEADER_METHOD]: method\n      });\n      session.ref();\n      req.on(\"response\", (headers) => {\n        const httpResponse = new import_protocol_http.HttpResponse({\n          statusCode: headers[\":status\"] || -1,\n          headers: getTransformedHeaders(headers),\n          body: req\n        });\n        fulfilled = true;\n        resolve({ response: httpResponse });\n        if (disableConcurrentStreams) {\n          session.close();\n          this.connectionManager.deleteSession(authority, session);\n        }\n      });\n      if (requestTimeout) {\n        req.setTimeout(requestTimeout, () => {\n          req.close();\n          const timeoutError = new Error(`Stream timed out because of no activity for ${requestTimeout} ms`);\n          timeoutError.name = \"TimeoutError\";\n          rejectWithDestroy(timeoutError);\n        });\n      }\n      if (abortSignal) {\n        const onAbort = /* @__PURE__ */ __name(() => {\n          req.close();\n          const abortError = new Error(\"Request aborted\");\n          abortError.name = \"AbortError\";\n          rejectWithDestroy(abortError);\n        }, \"onAbort\");\n        if (typeof abortSignal.addEventListener === \"function\") {\n          const signal = abortSignal;\n          signal.addEventListener(\"abort\", onAbort, { once: true });\n          req.once(\"close\", () => signal.removeEventListener(\"abort\", onAbort));\n        } else {\n          abortSignal.onabort = onAbort;\n        }\n      }\n      req.on(\"frameError\", (type, code, id) => {\n        rejectWithDestroy(new Error(`Frame type id ${type} in stream id ${id} has failed with code ${code}.`));\n      });\n      req.on(\"error\", rejectWithDestroy);\n      req.on(\"aborted\", () => {\n        rejectWithDestroy(\n          new Error(`HTTP/2 stream is abnormally aborted in mid-communication with result code ${req.rstCode}.`)\n        );\n      });\n      req.on(\"close\", () => {\n        session.unref();\n        if (disableConcurrentStreams) {\n          session.destroy();\n        }\n        if (!fulfilled) {\n          rejectWithDestroy(new Error(\"Unexpected error: http2 request did not get a response\"));\n        }\n      });\n      writeRequestBodyPromise = writeRequestBody(req, request, requestTimeout);\n    });\n  }\n  updateHttpClientConfig(key, value) {\n    this.config = void 0;\n    this.configProvider = this.configProvider.then((config) => {\n      return {\n        ...config,\n        [key]: value\n      };\n    });\n  }\n  httpHandlerConfigs() {\n    return this.config ?? {};\n  }\n  /**\n   * Destroys a session.\n   * @param session The session to destroy.\n   */\n  destroySession(session) {\n    if (!session.destroyed) {\n      session.destroy();\n    }\n  }\n};\n__name(_NodeHttp2Handler, \"NodeHttp2Handler\");\nvar NodeHttp2Handler = _NodeHttp2Handler;\n\n// src/stream-collector/collector.ts\n\nvar _Collector = class _Collector extends import_stream.Writable {\n  constructor() {\n    super(...arguments);\n    this.bufferedBytes = [];\n  }\n  _write(chunk, encoding, callback) {\n    this.bufferedBytes.push(chunk);\n    callback();\n  }\n};\n__name(_Collector, \"Collector\");\nvar Collector = _Collector;\n\n// src/stream-collector/index.ts\nvar streamCollector = /* @__PURE__ */ __name((stream) => {\n  if (isReadableStreamInstance(stream)) {\n    return collectReadableStream(stream);\n  }\n  return new Promise((resolve, reject) => {\n    const collector = new Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n      collector.end();\n      reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function() {\n      const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n      resolve(bytes);\n    });\n  });\n}, \"streamCollector\");\nvar isReadableStreamInstance = /* @__PURE__ */ __name((stream) => typeof ReadableStream === \"function\" && stream instanceof ReadableStream, \"isReadableStreamInstance\");\nasync function collectReadableStream(stream) {\n  const chunks = [];\n  const reader = stream.getReader();\n  let isDone = false;\n  let length = 0;\n  while (!isDone) {\n    const { done, value } = await reader.read();\n    if (value) {\n      chunks.push(value);\n      length += value.length;\n    }\n    isDone = done;\n  }\n  const collected = new Uint8Array(length);\n  let offset = 0;\n  for (const chunk of chunks) {\n    collected.set(chunk, offset);\n    offset += chunk.length;\n  }\n  return collected;\n}\n__name(collectReadableStream, \"collectReadableStream\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  DEFAULT_REQUEST_TIMEOUT,\n  NodeHttpHandler,\n  NodeHttp2Handler,\n  streamCollector\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  FetchHttpHandler: () => FetchHttpHandler,\n  keepAliveSupport: () => keepAliveSupport,\n  streamCollector: () => streamCollector\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fetch-http-handler.ts\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar import_querystring_builder = require(\"@smithy/querystring-builder\");\n\n// src/request-timeout.ts\nfunction requestTimeout(timeoutInMs = 0) {\n  return new Promise((resolve, reject) => {\n    if (timeoutInMs) {\n      setTimeout(() => {\n        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}\n__name(requestTimeout, \"requestTimeout\");\n\n// src/fetch-http-handler.ts\nvar keepAliveSupport = {\n  supported: void 0\n};\nvar _FetchHttpHandler = class _FetchHttpHandler {\n  /**\n   * @returns the input if it is an HttpHandler of any class,\n   * or instantiates a new instance of this handler.\n   */\n  static create(instanceOrOptions) {\n    if (typeof (instanceOrOptions == null ? void 0 : instanceOrOptions.handle) === \"function\") {\n      return instanceOrOptions;\n    }\n    return new _FetchHttpHandler(instanceOrOptions);\n  }\n  constructor(options) {\n    if (typeof options === \"function\") {\n      this.configProvider = options().then((opts) => opts || {});\n    } else {\n      this.config = options ?? {};\n      this.configProvider = Promise.resolve(this.config);\n    }\n    if (keepAliveSupport.supported === void 0) {\n      keepAliveSupport.supported = Boolean(\n        typeof Request !== \"undefined\" && \"keepalive\" in new Request(\"https://[::1]\")\n      );\n    }\n  }\n  destroy() {\n  }\n  async handle(request, { abortSignal } = {}) {\n    if (!this.config) {\n      this.config = await this.configProvider;\n    }\n    const requestTimeoutInMs = this.config.requestTimeout;\n    const keepAlive = this.config.keepAlive === true;\n    const credentials = this.config.credentials;\n    if (abortSignal == null ? void 0 : abortSignal.aborted) {\n      const abortError = new Error(\"Request aborted\");\n      abortError.name = \"AbortError\";\n      return Promise.reject(abortError);\n    }\n    let path = request.path;\n    const queryString = (0, import_querystring_builder.buildQueryString)(request.query || {});\n    if (queryString) {\n      path += `?${queryString}`;\n    }\n    if (request.fragment) {\n      path += `#${request.fragment}`;\n    }\n    let auth = \"\";\n    if (request.username != null || request.password != null) {\n      const username = request.username ?? \"\";\n      const password = request.password ?? \"\";\n      auth = `${username}:${password}@`;\n    }\n    const { port, method } = request;\n    const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n    const body = method === \"GET\" || method === \"HEAD\" ? void 0 : request.body;\n    const requestOptions = {\n      body,\n      headers: new Headers(request.headers),\n      method,\n      credentials\n    };\n    if (body) {\n      requestOptions.duplex = \"half\";\n    }\n    if (typeof AbortController !== \"undefined\") {\n      requestOptions.signal = abortSignal;\n    }\n    if (keepAliveSupport.supported) {\n      requestOptions.keepalive = keepAlive;\n    }\n    let removeSignalEventListener = null;\n    const fetchRequest = new Request(url, requestOptions);\n    const raceOfPromises = [\n      fetch(fetchRequest).then((response) => {\n        const fetchHeaders = response.headers;\n        const transformedHeaders = {};\n        for (const pair of fetchHeaders.entries()) {\n          transformedHeaders[pair[0]] = pair[1];\n        }\n        const hasReadableStream = response.body != void 0;\n        if (!hasReadableStream) {\n          return response.blob().then((body2) => ({\n            response: new import_protocol_http.HttpResponse({\n              headers: transformedHeaders,\n              reason: response.statusText,\n              statusCode: response.status,\n              body: body2\n            })\n          }));\n        }\n        return {\n          response: new import_protocol_http.HttpResponse({\n            headers: transformedHeaders,\n            reason: response.statusText,\n            statusCode: response.status,\n            body: response.body\n          })\n        };\n      }),\n      requestTimeout(requestTimeoutInMs)\n    ];\n    if (abortSignal) {\n      raceOfPromises.push(\n        new Promise((resolve, reject) => {\n          const onAbort = /* @__PURE__ */ __name(() => {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            reject(abortError);\n          }, \"onAbort\");\n          if (typeof abortSignal.addEventListener === \"function\") {\n            const signal = abortSignal;\n            signal.addEventListener(\"abort\", onAbort, { once: true });\n            removeSignalEventListener = /* @__PURE__ */ __name(() => signal.removeEventListener(\"abort\", onAbort), \"removeSignalEventListener\");\n          } else {\n            abortSignal.onabort = onAbort;\n          }\n        })\n      );\n    }\n    return Promise.race(raceOfPromises).finally(removeSignalEventListener);\n  }\n  updateHttpClientConfig(key, value) {\n    this.config = void 0;\n    this.configProvider = this.configProvider.then((config) => {\n      config[key] = value;\n      return config;\n    });\n  }\n  httpHandlerConfigs() {\n    return this.config ?? {};\n  }\n};\n__name(_FetchHttpHandler, \"FetchHttpHandler\");\nvar FetchHttpHandler = _FetchHttpHandler;\n\n// src/stream-collector.ts\nvar import_util_base64 = require(\"@smithy/util-base64\");\nvar streamCollector = /* @__PURE__ */ __name((stream) => {\n  if (typeof Blob === \"function\" && stream instanceof Blob) {\n    return collectBlob(stream);\n  }\n  return collectStream(stream);\n}, \"streamCollector\");\nasync function collectBlob(blob) {\n  const base64 = await readToBase64(blob);\n  const arrayBuffer = (0, import_util_base64.fromBase64)(base64);\n  return new Uint8Array(arrayBuffer);\n}\n__name(collectBlob, \"collectBlob\");\nasync function collectStream(stream) {\n  const chunks = [];\n  const reader = stream.getReader();\n  let isDone = false;\n  let length = 0;\n  while (!isDone) {\n    const { done, value } = await reader.read();\n    if (value) {\n      chunks.push(value);\n      length += value.length;\n    }\n    isDone = done;\n  }\n  const collected = new Uint8Array(length);\n  let offset = 0;\n  for (const chunk of chunks) {\n    collected.set(chunk, offset);\n    offset += chunk.length;\n  }\n  return collected;\n}\n__name(collectStream, \"collectStream\");\nfunction readToBase64(blob) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (reader.readyState !== 2) {\n        return reject(new Error(\"Reader aborted too early\"));\n      }\n      const result = reader.result ?? \"\";\n      const commaIndex = result.indexOf(\",\");\n      const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n      resolve(result.substring(dataOffset));\n    };\n    reader.onabort = () => reject(new Error(\"Read aborted\"));\n    reader.onerror = () => reject(reader.error);\n    reader.readAsDataURL(blob);\n  });\n}\n__name(readToBase64, \"readToBase64\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  keepAliveSupport,\n  FetchHttpHandler,\n  streamCollector\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromHex: () => fromHex,\n  toHex: () => toHex\n});\nmodule.exports = __toCommonJS(src_exports);\nvar SHORT_TO_HEX = {};\nvar HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n  let encodedByte = i.toString(16).toLowerCase();\n  if (encodedByte.length === 1) {\n    encodedByte = `0${encodedByte}`;\n  }\n  SHORT_TO_HEX[i] = encodedByte;\n  HEX_TO_SHORT[encodedByte] = i;\n}\nfunction fromHex(encoded) {\n  if (encoded.length % 2 !== 0) {\n    throw new Error(\"Hex encoded strings must have an even number length\");\n  }\n  const out = new Uint8Array(encoded.length / 2);\n  for (let i = 0; i < encoded.length; i += 2) {\n    const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n    if (encodedByte in HEX_TO_SHORT) {\n      out[i / 2] = HEX_TO_SHORT[encodedByte];\n    } else {\n      throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n    }\n  }\n  return out;\n}\n__name(fromHex, \"fromHex\");\nfunction toHex(bytes) {\n  let out = \"\";\n  for (let i = 0; i < bytes.byteLength; i++) {\n    out += SHORT_TO_HEX[bytes[i]];\n  }\n  return out;\n}\n__name(toHex, \"toHex\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromHex,\n  toHex\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdkStreamMixin = void 0;\nconst fetch_http_handler_1 = require(\"@smithy/fetch-http-handler\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nconst sdkStreamMixin = (stream) => {\n    var _a, _b;\n    if (!isBlobInstance(stream) && !isReadableStreamInstance(stream)) {\n        const name = ((_b = (_a = stream === null || stream === void 0 ? void 0 : stream.__proto__) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name) || stream;\n        throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${name}`);\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await (0, fetch_http_handler_1.streamCollector)(stream);\n    };\n    const blobToWebStream = (blob) => {\n        if (typeof blob.stream !== \"function\") {\n            throw new Error(\"Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.\\n\" +\n                \"If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body\");\n        }\n        return blob.stream();\n    };\n    return Object.assign(stream, {\n        transformToByteArray: transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === \"base64\") {\n                return (0, util_base64_1.toBase64)(buf);\n            }\n            else if (encoding === \"hex\") {\n                return (0, util_hex_encoding_1.toHex)(buf);\n            }\n            else if (encoding === undefined || encoding === \"utf8\" || encoding === \"utf-8\") {\n                return (0, util_utf8_1.toUtf8)(buf);\n            }\n            else if (typeof TextDecoder === \"function\") {\n                return new TextDecoder(encoding).decode(buf);\n            }\n            else {\n                throw new Error(\"TextDecoder is not available, please make sure polyfill is provided.\");\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            transformed = true;\n            if (isBlobInstance(stream)) {\n                return blobToWebStream(stream);\n            }\n            else if (isReadableStreamInstance(stream)) {\n                return stream;\n            }\n            else {\n                throw new Error(`Cannot transform payload to web stream, got ${stream}`);\n            }\n        },\n    });\n};\nexports.sdkStreamMixin = sdkStreamMixin;\nconst isBlobInstance = (stream) => typeof Blob === \"function\" && stream instanceof Blob;\nconst isReadableStreamInstance = (stream) => typeof ReadableStream === \"function\" && stream instanceof ReadableStream;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdkStreamMixin = void 0;\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst stream_1 = require(\"stream\");\nconst util_1 = require(\"util\");\nconst sdk_stream_mixin_browser_1 = require(\"./sdk-stream-mixin.browser\");\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nconst sdkStreamMixin = (stream) => {\n    var _a, _b;\n    if (!(stream instanceof stream_1.Readable)) {\n        try {\n            return (0, sdk_stream_mixin_browser_1.sdkStreamMixin)(stream);\n        }\n        catch (e) {\n            const name = ((_b = (_a = stream === null || stream === void 0 ? void 0 : stream.__proto__) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.name) || stream;\n            throw new Error(`Unexpected stream implementation, expect Stream.Readable instance, got ${name}`);\n        }\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await (0, node_http_handler_1.streamCollector)(stream);\n    };\n    return Object.assign(stream, {\n        transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === undefined || Buffer.isEncoding(encoding)) {\n                return (0, util_buffer_from_1.fromArrayBuffer)(buf.buffer, buf.byteOffset, buf.byteLength).toString(encoding);\n            }\n            else {\n                const decoder = new util_1.TextDecoder(encoding);\n                return decoder.decode(buf);\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            if (stream.readableFlowing !== null) {\n                throw new Error(\"The stream has been consumed by other callbacks.\");\n            }\n            if (typeof stream_1.Readable.toWeb !== \"function\") {\n                throw new Error(\"Readable.toWeb() is not supported. Please make sure you are using Node.js >= 17.0.0, or polyfill is available.\");\n            }\n            transformed = true;\n            return stream_1.Readable.toWeb(stream);\n        },\n    });\n};\nexports.sdkStreamMixin = sdkStreamMixin;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Uint8ArrayBlobAdapter: () => Uint8ArrayBlobAdapter\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/blob/transforms.ts\nvar import_util_base64 = require(\"@smithy/util-base64\");\nvar import_util_utf8 = require(\"@smithy/util-utf8\");\nfunction transformToString(payload, encoding = \"utf-8\") {\n  if (encoding === \"base64\") {\n    return (0, import_util_base64.toBase64)(payload);\n  }\n  return (0, import_util_utf8.toUtf8)(payload);\n}\n__name(transformToString, \"transformToString\");\nfunction transformFromString(str, encoding) {\n  if (encoding === \"base64\") {\n    return Uint8ArrayBlobAdapter.mutate((0, import_util_base64.fromBase64)(str));\n  }\n  return Uint8ArrayBlobAdapter.mutate((0, import_util_utf8.fromUtf8)(str));\n}\n__name(transformFromString, \"transformFromString\");\n\n// src/blob/Uint8ArrayBlobAdapter.ts\nvar _Uint8ArrayBlobAdapter = class _Uint8ArrayBlobAdapter extends Uint8Array {\n  /**\n   * @param source - such as a string or Stream.\n   * @returns a new Uint8ArrayBlobAdapter extending Uint8Array.\n   */\n  static fromString(source, encoding = \"utf-8\") {\n    switch (typeof source) {\n      case \"string\":\n        return transformFromString(source, encoding);\n      default:\n        throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n    }\n  }\n  /**\n   * @param source - Uint8Array to be mutated.\n   * @returns the same Uint8Array but with prototype switched to Uint8ArrayBlobAdapter.\n   */\n  static mutate(source) {\n    Object.setPrototypeOf(source, _Uint8ArrayBlobAdapter.prototype);\n    return source;\n  }\n  /**\n   * @param encoding - default 'utf-8'.\n   * @returns the blob as string.\n   */\n  transformToString(encoding = \"utf-8\") {\n    return transformToString(this, encoding);\n  }\n};\n__name(_Uint8ArrayBlobAdapter, \"Uint8ArrayBlobAdapter\");\nvar Uint8ArrayBlobAdapter = _Uint8ArrayBlobAdapter;\n\n// src/index.ts\n__reExport(src_exports, require(\"././getAwsChunkedEncodingStream\"), module.exports);\n__reExport(src_exports, require(\"././sdk-stream-mixin\"), module.exports);\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  Uint8ArrayBlobAdapter,\n  getAwsChunkedEncodingStream,\n  sdkStreamMixin\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Client: () => Client,\n  Command: () => Command,\n  LazyJsonString: () => LazyJsonString,\n  NoOpLogger: () => NoOpLogger,\n  SENSITIVE_STRING: () => SENSITIVE_STRING,\n  ServiceException: () => ServiceException,\n  StringWrapper: () => StringWrapper,\n  _json: () => _json,\n  collectBody: () => collectBody,\n  convertMap: () => convertMap,\n  createAggregatedClient: () => createAggregatedClient,\n  dateToUtcString: () => dateToUtcString,\n  decorateServiceException: () => decorateServiceException,\n  emitWarningIfUnsupportedVersion: () => emitWarningIfUnsupportedVersion,\n  expectBoolean: () => expectBoolean,\n  expectByte: () => expectByte,\n  expectFloat32: () => expectFloat32,\n  expectInt: () => expectInt,\n  expectInt32: () => expectInt32,\n  expectLong: () => expectLong,\n  expectNonNull: () => expectNonNull,\n  expectNumber: () => expectNumber,\n  expectObject: () => expectObject,\n  expectShort: () => expectShort,\n  expectString: () => expectString,\n  expectUnion: () => expectUnion,\n  extendedEncodeURIComponent: () => extendedEncodeURIComponent,\n  getArrayIfSingleItem: () => getArrayIfSingleItem,\n  getDefaultClientConfiguration: () => getDefaultClientConfiguration,\n  getDefaultExtensionConfiguration: () => getDefaultExtensionConfiguration,\n  getValueFromTextNode: () => getValueFromTextNode,\n  handleFloat: () => handleFloat,\n  limitedParseDouble: () => limitedParseDouble,\n  limitedParseFloat: () => limitedParseFloat,\n  limitedParseFloat32: () => limitedParseFloat32,\n  loadConfigsForDefaultMode: () => loadConfigsForDefaultMode,\n  logger: () => logger,\n  map: () => map,\n  parseBoolean: () => parseBoolean,\n  parseEpochTimestamp: () => parseEpochTimestamp,\n  parseRfc3339DateTime: () => parseRfc3339DateTime,\n  parseRfc3339DateTimeWithOffset: () => parseRfc3339DateTimeWithOffset,\n  parseRfc7231DateTime: () => parseRfc7231DateTime,\n  resolveDefaultRuntimeConfig: () => resolveDefaultRuntimeConfig,\n  resolvedPath: () => resolvedPath,\n  serializeDateTime: () => serializeDateTime,\n  serializeFloat: () => serializeFloat,\n  splitEvery: () => splitEvery,\n  strictParseByte: () => strictParseByte,\n  strictParseDouble: () => strictParseDouble,\n  strictParseFloat: () => strictParseFloat,\n  strictParseFloat32: () => strictParseFloat32,\n  strictParseInt: () => strictParseInt,\n  strictParseInt32: () => strictParseInt32,\n  strictParseLong: () => strictParseLong,\n  strictParseShort: () => strictParseShort,\n  take: () => take,\n  throwDefaultError: () => throwDefaultError,\n  withBaseException: () => withBaseException\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/NoOpLogger.ts\nvar _NoOpLogger = class _NoOpLogger {\n  trace() {\n  }\n  debug() {\n  }\n  info() {\n  }\n  warn() {\n  }\n  error() {\n  }\n};\n__name(_NoOpLogger, \"NoOpLogger\");\nvar NoOpLogger = _NoOpLogger;\n\n// src/client.ts\nvar import_middleware_stack = require(\"@smithy/middleware-stack\");\nvar _Client = class _Client {\n  constructor(config) {\n    this.middlewareStack = (0, import_middleware_stack.constructStack)();\n    this.config = config;\n  }\n  send(command, optionsOrCb, cb) {\n    const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : void 0;\n    const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n    const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n    if (callback) {\n      handler(command).then(\n        (result) => callback(null, result.output),\n        (err) => callback(err)\n      ).catch(\n        // prevent any errors thrown in the callback from triggering an\n        // unhandled promise rejection\n        () => {\n        }\n      );\n    } else {\n      return handler(command).then((result) => result.output);\n    }\n  }\n  destroy() {\n    if (this.config.requestHandler.destroy)\n      this.config.requestHandler.destroy();\n  }\n};\n__name(_Client, \"Client\");\nvar Client = _Client;\n\n// src/collect-stream-body.ts\nvar import_util_stream = require(\"@smithy/util-stream\");\nvar collectBody = /* @__PURE__ */ __name(async (streamBody = new Uint8Array(), context) => {\n  if (streamBody instanceof Uint8Array) {\n    return import_util_stream.Uint8ArrayBlobAdapter.mutate(streamBody);\n  }\n  if (!streamBody) {\n    return import_util_stream.Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n  }\n  const fromContext = context.streamCollector(streamBody);\n  return import_util_stream.Uint8ArrayBlobAdapter.mutate(await fromContext);\n}, \"collectBody\");\n\n// src/command.ts\n\nvar import_types = require(\"@smithy/types\");\nvar _Command = class _Command {\n  constructor() {\n    this.middlewareStack = (0, import_middleware_stack.constructStack)();\n  }\n  /**\n   * Factory for Command ClassBuilder.\n   * @internal\n   */\n  static classBuilder() {\n    return new ClassBuilder();\n  }\n  /**\n   * @internal\n   */\n  resolveMiddlewareWithContext(clientStack, configuration, options, {\n    middlewareFn,\n    clientName,\n    commandName,\n    inputFilterSensitiveLog,\n    outputFilterSensitiveLog,\n    smithyContext,\n    additionalContext,\n    CommandCtor\n  }) {\n    for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\n      this.middlewareStack.use(mw);\n    }\n    const stack = clientStack.concat(this.middlewareStack);\n    const { logger: logger2 } = configuration;\n    const handlerExecutionContext = {\n      logger: logger2,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog,\n      outputFilterSensitiveLog,\n      [import_types.SMITHY_CONTEXT_KEY]: {\n        ...smithyContext\n      },\n      ...additionalContext\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request) => requestHandler.handle(request.request, options || {}),\n      handlerExecutionContext\n    );\n  }\n};\n__name(_Command, \"Command\");\nvar Command = _Command;\nvar _ClassBuilder = class _ClassBuilder {\n  constructor() {\n    this._init = () => {\n    };\n    this._ep = {};\n    this._middlewareFn = () => [];\n    this._commandName = \"\";\n    this._clientName = \"\";\n    this._additionalContext = {};\n    this._smithyContext = {};\n    this._inputFilterSensitiveLog = (_) => _;\n    this._outputFilterSensitiveLog = (_) => _;\n    this._serializer = null;\n    this._deserializer = null;\n  }\n  /**\n   * Optional init callback.\n   */\n  init(cb) {\n    this._init = cb;\n  }\n  /**\n   * Set the endpoint parameter instructions.\n   */\n  ep(endpointParameterInstructions) {\n    this._ep = endpointParameterInstructions;\n    return this;\n  }\n  /**\n   * Add any number of middleware.\n   */\n  m(middlewareSupplier) {\n    this._middlewareFn = middlewareSupplier;\n    return this;\n  }\n  /**\n   * Set the initial handler execution context Smithy field.\n   */\n  s(service, operation, smithyContext = {}) {\n    this._smithyContext = {\n      service,\n      operation,\n      ...smithyContext\n    };\n    return this;\n  }\n  /**\n   * Set the initial handler execution context.\n   */\n  c(additionalContext = {}) {\n    this._additionalContext = additionalContext;\n    return this;\n  }\n  /**\n   * Set constant string identifiers for the operation.\n   */\n  n(clientName, commandName) {\n    this._clientName = clientName;\n    this._commandName = commandName;\n    return this;\n  }\n  /**\n   * Set the input and output sensistive log filters.\n   */\n  f(inputFilter = (_) => _, outputFilter = (_) => _) {\n    this._inputFilterSensitiveLog = inputFilter;\n    this._outputFilterSensitiveLog = outputFilter;\n    return this;\n  }\n  /**\n   * Sets the serializer.\n   */\n  ser(serializer) {\n    this._serializer = serializer;\n    return this;\n  }\n  /**\n   * Sets the deserializer.\n   */\n  de(deserializer) {\n    this._deserializer = deserializer;\n    return this;\n  }\n  /**\n   * @returns a Command class with the classBuilder properties.\n   */\n  build() {\n    var _a;\n    const closure = this;\n    let CommandRef;\n    return CommandRef = (_a = class extends Command {\n      /**\n       * @public\n       */\n      constructor(...[input]) {\n        super();\n        /**\n         * @internal\n         */\n        // @ts-ignore used in middlewareFn closure.\n        this.serialize = closure._serializer;\n        /**\n         * @internal\n         */\n        // @ts-ignore used in middlewareFn closure.\n        this.deserialize = closure._deserializer;\n        this.input = input ?? {};\n        closure._init(this);\n      }\n      /**\n       * @public\n       */\n      static getEndpointParameterInstructions() {\n        return closure._ep;\n      }\n      /**\n       * @internal\n       */\n      resolveMiddleware(stack, configuration, options) {\n        return this.resolveMiddlewareWithContext(stack, configuration, options, {\n          CommandCtor: CommandRef,\n          middlewareFn: closure._middlewareFn,\n          clientName: closure._clientName,\n          commandName: closure._commandName,\n          inputFilterSensitiveLog: closure._inputFilterSensitiveLog,\n          outputFilterSensitiveLog: closure._outputFilterSensitiveLog,\n          smithyContext: closure._smithyContext,\n          additionalContext: closure._additionalContext\n        });\n      }\n    }, __name(_a, \"CommandRef\"), _a);\n  }\n};\n__name(_ClassBuilder, \"ClassBuilder\");\nvar ClassBuilder = _ClassBuilder;\n\n// src/constants.ts\nvar SENSITIVE_STRING = \"***SensitiveInformation***\";\n\n// src/create-aggregated-client.ts\nvar createAggregatedClient = /* @__PURE__ */ __name((commands, Client2) => {\n  for (const command of Object.keys(commands)) {\n    const CommandCtor = commands[command];\n    const methodImpl = /* @__PURE__ */ __name(async function(args, optionsOrCb, cb) {\n      const command2 = new CommandCtor(args);\n      if (typeof optionsOrCb === \"function\") {\n        this.send(command2, optionsOrCb);\n      } else if (typeof cb === \"function\") {\n        if (typeof optionsOrCb !== \"object\")\n          throw new Error(`Expected http options but got ${typeof optionsOrCb}`);\n        this.send(command2, optionsOrCb || {}, cb);\n      } else {\n        return this.send(command2, optionsOrCb);\n      }\n    }, \"methodImpl\");\n    const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, \"\");\n    Client2.prototype[methodName] = methodImpl;\n  }\n}, \"createAggregatedClient\");\n\n// src/parse-utils.ts\nvar parseBoolean = /* @__PURE__ */ __name((value) => {\n  switch (value) {\n    case \"true\":\n      return true;\n    case \"false\":\n      return false;\n    default:\n      throw new Error(`Unable to parse boolean value \"${value}\"`);\n  }\n}, \"parseBoolean\");\nvar expectBoolean = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  if (typeof value === \"number\") {\n    if (value === 0 || value === 1) {\n      logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n    }\n    if (value === 0) {\n      return false;\n    }\n    if (value === 1) {\n      return true;\n    }\n  }\n  if (typeof value === \"string\") {\n    const lower = value.toLowerCase();\n    if (lower === \"false\" || lower === \"true\") {\n      logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n    }\n    if (lower === \"false\") {\n      return false;\n    }\n    if (lower === \"true\") {\n      return true;\n    }\n  }\n  if (typeof value === \"boolean\") {\n    return value;\n  }\n  throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n}, \"expectBoolean\");\nvar expectNumber = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  if (typeof value === \"string\") {\n    const parsed = parseFloat(value);\n    if (!Number.isNaN(parsed)) {\n      if (String(parsed) !== String(value)) {\n        logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n      }\n      return parsed;\n    }\n  }\n  if (typeof value === \"number\") {\n    return value;\n  }\n  throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n}, \"expectNumber\");\nvar MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nvar expectFloat32 = /* @__PURE__ */ __name((value) => {\n  const expected = expectNumber(value);\n  if (expected !== void 0 && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n    if (Math.abs(expected) > MAX_FLOAT) {\n      throw new TypeError(`Expected 32-bit float, got ${value}`);\n    }\n  }\n  return expected;\n}, \"expectFloat32\");\nvar expectLong = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  if (Number.isInteger(value) && !Number.isNaN(value)) {\n    return value;\n  }\n  throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n}, \"expectLong\");\nvar expectInt = expectLong;\nvar expectInt32 = /* @__PURE__ */ __name((value) => expectSizedInt(value, 32), \"expectInt32\");\nvar expectShort = /* @__PURE__ */ __name((value) => expectSizedInt(value, 16), \"expectShort\");\nvar expectByte = /* @__PURE__ */ __name((value) => expectSizedInt(value, 8), \"expectByte\");\nvar expectSizedInt = /* @__PURE__ */ __name((value, size) => {\n  const expected = expectLong(value);\n  if (expected !== void 0 && castInt(expected, size) !== expected) {\n    throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n  }\n  return expected;\n}, \"expectSizedInt\");\nvar castInt = /* @__PURE__ */ __name((value, size) => {\n  switch (size) {\n    case 32:\n      return Int32Array.of(value)[0];\n    case 16:\n      return Int16Array.of(value)[0];\n    case 8:\n      return Int8Array.of(value)[0];\n  }\n}, \"castInt\");\nvar expectNonNull = /* @__PURE__ */ __name((value, location) => {\n  if (value === null || value === void 0) {\n    if (location) {\n      throw new TypeError(`Expected a non-null value for ${location}`);\n    }\n    throw new TypeError(\"Expected a non-null value\");\n  }\n  return value;\n}, \"expectNonNull\");\nvar expectObject = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  if (typeof value === \"object\" && !Array.isArray(value)) {\n    return value;\n  }\n  const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n  throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n}, \"expectObject\");\nvar expectString = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  if (typeof value === \"string\") {\n    return value;\n  }\n  if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n    logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n    return String(value);\n  }\n  throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n}, \"expectString\");\nvar expectUnion = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  const asObject = expectObject(value);\n  const setKeys = Object.entries(asObject).filter(([, v]) => v != null).map(([k]) => k);\n  if (setKeys.length === 0) {\n    throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n  }\n  if (setKeys.length > 1) {\n    throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n  }\n  return asObject;\n}, \"expectUnion\");\nvar strictParseDouble = /* @__PURE__ */ __name((value) => {\n  if (typeof value == \"string\") {\n    return expectNumber(parseNumber(value));\n  }\n  return expectNumber(value);\n}, \"strictParseDouble\");\nvar strictParseFloat = strictParseDouble;\nvar strictParseFloat32 = /* @__PURE__ */ __name((value) => {\n  if (typeof value == \"string\") {\n    return expectFloat32(parseNumber(value));\n  }\n  return expectFloat32(value);\n}, \"strictParseFloat32\");\nvar NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nvar parseNumber = /* @__PURE__ */ __name((value) => {\n  const matches = value.match(NUMBER_REGEX);\n  if (matches === null || matches[0].length !== value.length) {\n    throw new TypeError(`Expected real number, got implicit NaN`);\n  }\n  return parseFloat(value);\n}, \"parseNumber\");\nvar limitedParseDouble = /* @__PURE__ */ __name((value) => {\n  if (typeof value == \"string\") {\n    return parseFloatString(value);\n  }\n  return expectNumber(value);\n}, \"limitedParseDouble\");\nvar handleFloat = limitedParseDouble;\nvar limitedParseFloat = limitedParseDouble;\nvar limitedParseFloat32 = /* @__PURE__ */ __name((value) => {\n  if (typeof value == \"string\") {\n    return parseFloatString(value);\n  }\n  return expectFloat32(value);\n}, \"limitedParseFloat32\");\nvar parseFloatString = /* @__PURE__ */ __name((value) => {\n  switch (value) {\n    case \"NaN\":\n      return NaN;\n    case \"Infinity\":\n      return Infinity;\n    case \"-Infinity\":\n      return -Infinity;\n    default:\n      throw new Error(`Unable to parse float value: ${value}`);\n  }\n}, \"parseFloatString\");\nvar strictParseLong = /* @__PURE__ */ __name((value) => {\n  if (typeof value === \"string\") {\n    return expectLong(parseNumber(value));\n  }\n  return expectLong(value);\n}, \"strictParseLong\");\nvar strictParseInt = strictParseLong;\nvar strictParseInt32 = /* @__PURE__ */ __name((value) => {\n  if (typeof value === \"string\") {\n    return expectInt32(parseNumber(value));\n  }\n  return expectInt32(value);\n}, \"strictParseInt32\");\nvar strictParseShort = /* @__PURE__ */ __name((value) => {\n  if (typeof value === \"string\") {\n    return expectShort(parseNumber(value));\n  }\n  return expectShort(value);\n}, \"strictParseShort\");\nvar strictParseByte = /* @__PURE__ */ __name((value) => {\n  if (typeof value === \"string\") {\n    return expectByte(parseNumber(value));\n  }\n  return expectByte(value);\n}, \"strictParseByte\");\nvar stackTraceWarning = /* @__PURE__ */ __name((message) => {\n  return String(new TypeError(message).stack || message).split(\"\\n\").slice(0, 5).filter((s) => !s.includes(\"stackTraceWarning\")).join(\"\\n\");\n}, \"stackTraceWarning\");\nvar logger = {\n  warn: console.warn\n};\n\n// src/date-utils.ts\nvar DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nvar MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth();\n  const dayOfWeek = date.getUTCDay();\n  const dayOfMonthInt = date.getUTCDate();\n  const hoursInt = date.getUTCHours();\n  const minutesInt = date.getUTCMinutes();\n  const secondsInt = date.getUTCSeconds();\n  const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n  const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n  const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n  const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n  return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\n__name(dateToUtcString, \"dateToUtcString\");\nvar RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nvar parseRfc3339DateTime = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  if (typeof value !== \"string\") {\n    throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n  }\n  const match = RFC3339.exec(value);\n  if (!match) {\n    throw new TypeError(\"Invalid RFC-3339 date-time value\");\n  }\n  const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n  const year = strictParseShort(stripLeadingZeroes(yearStr));\n  const month = parseDateValue(monthStr, \"month\", 1, 12);\n  const day = parseDateValue(dayStr, \"day\", 1, 31);\n  return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n}, \"parseRfc3339DateTime\");\nvar RFC3339_WITH_OFFSET = new RegExp(\n  /^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/\n);\nvar parseRfc3339DateTimeWithOffset = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  if (typeof value !== \"string\") {\n    throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n  }\n  const match = RFC3339_WITH_OFFSET.exec(value);\n  if (!match) {\n    throw new TypeError(\"Invalid RFC-3339 date-time value\");\n  }\n  const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n  const year = strictParseShort(stripLeadingZeroes(yearStr));\n  const month = parseDateValue(monthStr, \"month\", 1, 12);\n  const day = parseDateValue(dayStr, \"day\", 1, 31);\n  const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n  if (offsetStr.toUpperCase() != \"Z\") {\n    date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n  }\n  return date;\n}, \"parseRfc3339DateTimeWithOffset\");\nvar IMF_FIXDATE = new RegExp(\n  /^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/\n);\nvar RFC_850_DATE = new RegExp(\n  /^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/\n);\nvar ASC_TIME = new RegExp(\n  /^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/\n);\nvar parseRfc7231DateTime = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  if (typeof value !== \"string\") {\n    throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n  }\n  let match = IMF_FIXDATE.exec(value);\n  if (match) {\n    const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    return buildDate(\n      strictParseShort(stripLeadingZeroes(yearStr)),\n      parseMonthByShortName(monthStr),\n      parseDateValue(dayStr, \"day\", 1, 31),\n      { hours, minutes, seconds, fractionalMilliseconds }\n    );\n  }\n  match = RFC_850_DATE.exec(value);\n  if (match) {\n    const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    return adjustRfc850Year(\n      buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n        hours,\n        minutes,\n        seconds,\n        fractionalMilliseconds\n      })\n    );\n  }\n  match = ASC_TIME.exec(value);\n  if (match) {\n    const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n    return buildDate(\n      strictParseShort(stripLeadingZeroes(yearStr)),\n      parseMonthByShortName(monthStr),\n      parseDateValue(dayStr.trimLeft(), \"day\", 1, 31),\n      { hours, minutes, seconds, fractionalMilliseconds }\n    );\n  }\n  throw new TypeError(\"Invalid RFC-7231 date-time value\");\n}, \"parseRfc7231DateTime\");\nvar parseEpochTimestamp = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return void 0;\n  }\n  let valueAsDouble;\n  if (typeof value === \"number\") {\n    valueAsDouble = value;\n  } else if (typeof value === \"string\") {\n    valueAsDouble = strictParseDouble(value);\n  } else {\n    throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n  }\n  if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n    throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n  }\n  return new Date(Math.round(valueAsDouble * 1e3));\n}, \"parseEpochTimestamp\");\nvar buildDate = /* @__PURE__ */ __name((year, month, day, time) => {\n  const adjustedMonth = month - 1;\n  validateDayOfMonth(year, adjustedMonth, day);\n  return new Date(\n    Date.UTC(\n      year,\n      adjustedMonth,\n      day,\n      parseDateValue(time.hours, \"hour\", 0, 23),\n      parseDateValue(time.minutes, \"minute\", 0, 59),\n      // seconds can go up to 60 for leap seconds\n      parseDateValue(time.seconds, \"seconds\", 0, 60),\n      parseMilliseconds(time.fractionalMilliseconds)\n    )\n  );\n}, \"buildDate\");\nvar parseTwoDigitYear = /* @__PURE__ */ __name((value) => {\n  const thisYear = (/* @__PURE__ */ new Date()).getUTCFullYear();\n  const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n  if (valueInThisCentury < thisYear) {\n    return valueInThisCentury + 100;\n  }\n  return valueInThisCentury;\n}, \"parseTwoDigitYear\");\nvar FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1e3;\nvar adjustRfc850Year = /* @__PURE__ */ __name((input) => {\n  if (input.getTime() - (/* @__PURE__ */ new Date()).getTime() > FIFTY_YEARS_IN_MILLIS) {\n    return new Date(\n      Date.UTC(\n        input.getUTCFullYear() - 100,\n        input.getUTCMonth(),\n        input.getUTCDate(),\n        input.getUTCHours(),\n        input.getUTCMinutes(),\n        input.getUTCSeconds(),\n        input.getUTCMilliseconds()\n      )\n    );\n  }\n  return input;\n}, \"adjustRfc850Year\");\nvar parseMonthByShortName = /* @__PURE__ */ __name((value) => {\n  const monthIdx = MONTHS.indexOf(value);\n  if (monthIdx < 0) {\n    throw new TypeError(`Invalid month: ${value}`);\n  }\n  return monthIdx + 1;\n}, \"parseMonthByShortName\");\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar validateDayOfMonth = /* @__PURE__ */ __name((year, month, day) => {\n  let maxDays = DAYS_IN_MONTH[month];\n  if (month === 1 && isLeapYear(year)) {\n    maxDays = 29;\n  }\n  if (day > maxDays) {\n    throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n  }\n}, \"validateDayOfMonth\");\nvar isLeapYear = /* @__PURE__ */ __name((year) => {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}, \"isLeapYear\");\nvar parseDateValue = /* @__PURE__ */ __name((value, type, lower, upper) => {\n  const dateVal = strictParseByte(stripLeadingZeroes(value));\n  if (dateVal < lower || dateVal > upper) {\n    throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n  }\n  return dateVal;\n}, \"parseDateValue\");\nvar parseMilliseconds = /* @__PURE__ */ __name((value) => {\n  if (value === null || value === void 0) {\n    return 0;\n  }\n  return strictParseFloat32(\"0.\" + value) * 1e3;\n}, \"parseMilliseconds\");\nvar parseOffsetToMilliseconds = /* @__PURE__ */ __name((value) => {\n  const directionStr = value[0];\n  let direction = 1;\n  if (directionStr == \"+\") {\n    direction = 1;\n  } else if (directionStr == \"-\") {\n    direction = -1;\n  } else {\n    throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n  }\n  const hour = Number(value.substring(1, 3));\n  const minute = Number(value.substring(4, 6));\n  return direction * (hour * 60 + minute) * 60 * 1e3;\n}, \"parseOffsetToMilliseconds\");\nvar stripLeadingZeroes = /* @__PURE__ */ __name((value) => {\n  let idx = 0;\n  while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n    idx++;\n  }\n  if (idx === 0) {\n    return value;\n  }\n  return value.slice(idx);\n}, \"stripLeadingZeroes\");\n\n// src/exceptions.ts\nvar _ServiceException = class _ServiceException extends Error {\n  constructor(options) {\n    super(options.message);\n    Object.setPrototypeOf(this, _ServiceException.prototype);\n    this.name = options.name;\n    this.$fault = options.$fault;\n    this.$metadata = options.$metadata;\n  }\n};\n__name(_ServiceException, \"ServiceException\");\nvar ServiceException = _ServiceException;\nvar decorateServiceException = /* @__PURE__ */ __name((exception, additions = {}) => {\n  Object.entries(additions).filter(([, v]) => v !== void 0).forEach(([k, v]) => {\n    if (exception[k] == void 0 || exception[k] === \"\") {\n      exception[k] = v;\n    }\n  });\n  const message = exception.message || exception.Message || \"UnknownError\";\n  exception.message = message;\n  delete exception.Message;\n  return exception;\n}, \"decorateServiceException\");\n\n// src/default-error-handler.ts\nvar throwDefaultError = /* @__PURE__ */ __name(({ output, parsedBody, exceptionCtor, errorCode }) => {\n  const $metadata = deserializeMetadata(output);\n  const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : void 0;\n  const response = new exceptionCtor({\n    name: (parsedBody == null ? void 0 : parsedBody.code) || (parsedBody == null ? void 0 : parsedBody.Code) || errorCode || statusCode || \"UnknownError\",\n    $fault: \"client\",\n    $metadata\n  });\n  throw decorateServiceException(response, parsedBody);\n}, \"throwDefaultError\");\nvar withBaseException = /* @__PURE__ */ __name((ExceptionCtor) => {\n  return ({ output, parsedBody, errorCode }) => {\n    throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n  };\n}, \"withBaseException\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output) => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n}), \"deserializeMetadata\");\n\n// src/defaults-mode.ts\nvar loadConfigsForDefaultMode = /* @__PURE__ */ __name((mode) => {\n  switch (mode) {\n    case \"standard\":\n      return {\n        retryMode: \"standard\",\n        connectionTimeout: 3100\n      };\n    case \"in-region\":\n      return {\n        retryMode: \"standard\",\n        connectionTimeout: 1100\n      };\n    case \"cross-region\":\n      return {\n        retryMode: \"standard\",\n        connectionTimeout: 3100\n      };\n    case \"mobile\":\n      return {\n        retryMode: \"standard\",\n        connectionTimeout: 3e4\n      };\n    default:\n      return {};\n  }\n}, \"loadConfigsForDefaultMode\");\n\n// src/emitWarningIfUnsupportedVersion.ts\nvar warningEmitted = false;\nvar emitWarningIfUnsupportedVersion = /* @__PURE__ */ __name((version) => {\n  if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 16) {\n    warningEmitted = true;\n  }\n}, \"emitWarningIfUnsupportedVersion\");\n\n// src/extensions/checksum.ts\n\nvar getChecksumConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  const checksumAlgorithms = [];\n  for (const id in import_types.AlgorithmId) {\n    const algorithmId = import_types.AlgorithmId[id];\n    if (runtimeConfig[algorithmId] === void 0) {\n      continue;\n    }\n    checksumAlgorithms.push({\n      algorithmId: () => algorithmId,\n      checksumConstructor: () => runtimeConfig[algorithmId]\n    });\n  }\n  return {\n    _checksumAlgorithms: checksumAlgorithms,\n    addChecksumAlgorithm(algo) {\n      this._checksumAlgorithms.push(algo);\n    },\n    checksumAlgorithms() {\n      return this._checksumAlgorithms;\n    }\n  };\n}, \"getChecksumConfiguration\");\nvar resolveChecksumRuntimeConfig = /* @__PURE__ */ __name((clientConfig) => {\n  const runtimeConfig = {};\n  clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n    runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n  });\n  return runtimeConfig;\n}, \"resolveChecksumRuntimeConfig\");\n\n// src/extensions/retry.ts\nvar getRetryConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  let _retryStrategy = runtimeConfig.retryStrategy;\n  return {\n    setRetryStrategy(retryStrategy) {\n      _retryStrategy = retryStrategy;\n    },\n    retryStrategy() {\n      return _retryStrategy;\n    }\n  };\n}, \"getRetryConfiguration\");\nvar resolveRetryRuntimeConfig = /* @__PURE__ */ __name((retryStrategyConfiguration) => {\n  const runtimeConfig = {};\n  runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\n  return runtimeConfig;\n}, \"resolveRetryRuntimeConfig\");\n\n// src/extensions/defaultExtensionConfiguration.ts\nvar getDefaultExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  return {\n    ...getChecksumConfiguration(runtimeConfig),\n    ...getRetryConfiguration(runtimeConfig)\n  };\n}, \"getDefaultExtensionConfiguration\");\nvar getDefaultClientConfiguration = getDefaultExtensionConfiguration;\nvar resolveDefaultRuntimeConfig = /* @__PURE__ */ __name((config) => {\n  return {\n    ...resolveChecksumRuntimeConfig(config),\n    ...resolveRetryRuntimeConfig(config)\n  };\n}, \"resolveDefaultRuntimeConfig\");\n\n// src/extended-encode-uri-component.ts\nfunction extendedEncodeURIComponent(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n__name(extendedEncodeURIComponent, \"extendedEncodeURIComponent\");\n\n// src/get-array-if-single-item.ts\nvar getArrayIfSingleItem = /* @__PURE__ */ __name((mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray], \"getArrayIfSingleItem\");\n\n// src/get-value-from-text-node.ts\nvar getValueFromTextNode = /* @__PURE__ */ __name((obj) => {\n  const textNodeName = \"#text\";\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== void 0) {\n      obj[key] = obj[key][textNodeName];\n    } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n      obj[key] = getValueFromTextNode(obj[key]);\n    }\n  }\n  return obj;\n}, \"getValueFromTextNode\");\n\n// src/lazy-json.ts\nvar StringWrapper = /* @__PURE__ */ __name(function() {\n  const Class = Object.getPrototypeOf(this).constructor;\n  const Constructor = Function.bind.apply(String, [null, ...arguments]);\n  const instance = new Constructor();\n  Object.setPrototypeOf(instance, Class.prototype);\n  return instance;\n}, \"StringWrapper\");\nStringWrapper.prototype = Object.create(String.prototype, {\n  constructor: {\n    value: StringWrapper,\n    enumerable: false,\n    writable: true,\n    configurable: true\n  }\n});\nObject.setPrototypeOf(StringWrapper, String);\nvar _LazyJsonString = class _LazyJsonString extends StringWrapper {\n  deserializeJSON() {\n    return JSON.parse(super.toString());\n  }\n  toJSON() {\n    return super.toString();\n  }\n  static fromObject(object) {\n    if (object instanceof _LazyJsonString) {\n      return object;\n    } else if (object instanceof String || typeof object === \"string\") {\n      return new _LazyJsonString(object);\n    }\n    return new _LazyJsonString(JSON.stringify(object));\n  }\n};\n__name(_LazyJsonString, \"LazyJsonString\");\nvar LazyJsonString = _LazyJsonString;\n\n// src/object-mapping.ts\nfunction map(arg0, arg1, arg2) {\n  let target;\n  let filter;\n  let instructions;\n  if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n    target = {};\n    instructions = arg0;\n  } else {\n    target = arg0;\n    if (typeof arg1 === \"function\") {\n      filter = arg1;\n      instructions = arg2;\n      return mapWithFilter(target, filter, instructions);\n    } else {\n      instructions = arg1;\n    }\n  }\n  for (const key of Object.keys(instructions)) {\n    if (!Array.isArray(instructions[key])) {\n      target[key] = instructions[key];\n      continue;\n    }\n    applyInstruction(target, null, instructions, key);\n  }\n  return target;\n}\n__name(map, \"map\");\nvar convertMap = /* @__PURE__ */ __name((target) => {\n  const output = {};\n  for (const [k, v] of Object.entries(target || {})) {\n    output[k] = [, v];\n  }\n  return output;\n}, \"convertMap\");\nvar take = /* @__PURE__ */ __name((source, instructions) => {\n  const out = {};\n  for (const key in instructions) {\n    applyInstruction(out, source, instructions, key);\n  }\n  return out;\n}, \"take\");\nvar mapWithFilter = /* @__PURE__ */ __name((target, filter, instructions) => {\n  return map(\n    target,\n    Object.entries(instructions).reduce(\n      (_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n          _instructions[key] = value;\n        } else {\n          if (typeof value === \"function\") {\n            _instructions[key] = [filter, value()];\n          } else {\n            _instructions[key] = [filter, value];\n          }\n        }\n        return _instructions;\n      },\n      {}\n    )\n  );\n}, \"mapWithFilter\");\nvar applyInstruction = /* @__PURE__ */ __name((target, source, instructions, targetKey) => {\n  if (source !== null) {\n    let instruction = instructions[targetKey];\n    if (typeof instruction === \"function\") {\n      instruction = [, instruction];\n    }\n    const [filter2 = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n    if (typeof filter2 === \"function\" && filter2(source[sourceKey]) || typeof filter2 !== \"function\" && !!filter2) {\n      target[targetKey] = valueFn(source[sourceKey]);\n    }\n    return;\n  }\n  let [filter, value] = instructions[targetKey];\n  if (typeof value === \"function\") {\n    let _value;\n    const defaultFilterPassed = filter === void 0 && (_value = value()) != null;\n    const customFilterPassed = typeof filter === \"function\" && !!filter(void 0) || typeof filter !== \"function\" && !!filter;\n    if (defaultFilterPassed) {\n      target[targetKey] = _value;\n    } else if (customFilterPassed) {\n      target[targetKey] = value();\n    }\n  } else {\n    const defaultFilterPassed = filter === void 0 && value != null;\n    const customFilterPassed = typeof filter === \"function\" && !!filter(value) || typeof filter !== \"function\" && !!filter;\n    if (defaultFilterPassed || customFilterPassed) {\n      target[targetKey] = value;\n    }\n  }\n}, \"applyInstruction\");\nvar nonNullish = /* @__PURE__ */ __name((_) => _ != null, \"nonNullish\");\nvar pass = /* @__PURE__ */ __name((_) => _, \"pass\");\n\n// src/resolve-path.ts\nvar resolvedPath = /* @__PURE__ */ __name((resolvedPath2, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n  if (input != null && input[memberName] !== void 0) {\n    const labelValue = labelValueProvider();\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n    }\n    resolvedPath2 = resolvedPath2.replace(\n      uriLabel,\n      isGreedyLabel ? labelValue.split(\"/\").map((segment) => extendedEncodeURIComponent(segment)).join(\"/\") : extendedEncodeURIComponent(labelValue)\n    );\n  } else {\n    throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n  }\n  return resolvedPath2;\n}, \"resolvedPath\");\n\n// src/ser-utils.ts\nvar serializeFloat = /* @__PURE__ */ __name((value) => {\n  if (value !== value) {\n    return \"NaN\";\n  }\n  switch (value) {\n    case Infinity:\n      return \"Infinity\";\n    case -Infinity:\n      return \"-Infinity\";\n    default:\n      return value;\n  }\n}, \"serializeFloat\");\nvar serializeDateTime = /* @__PURE__ */ __name((date) => date.toISOString().replace(\".000Z\", \"Z\"), \"serializeDateTime\");\n\n// src/serde-json.ts\nvar _json = /* @__PURE__ */ __name((obj) => {\n  if (obj == null) {\n    return {};\n  }\n  if (Array.isArray(obj)) {\n    return obj.filter((_) => _ != null).map(_json);\n  }\n  if (typeof obj === \"object\") {\n    const target = {};\n    for (const key of Object.keys(obj)) {\n      if (obj[key] == null) {\n        continue;\n      }\n      target[key] = _json(obj[key]);\n    }\n    return target;\n  }\n  return obj;\n}, \"_json\");\n\n// src/split-every.ts\nfunction splitEvery(value, delimiter, numDelimiters) {\n  if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n    throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n  }\n  const segments = value.split(delimiter);\n  if (numDelimiters === 1) {\n    return segments;\n  }\n  const compoundSegments = [];\n  let currentSegment = \"\";\n  for (let i = 0; i < segments.length; i++) {\n    if (currentSegment === \"\") {\n      currentSegment = segments[i];\n    } else {\n      currentSegment += delimiter + segments[i];\n    }\n    if ((i + 1) % numDelimiters === 0) {\n      compoundSegments.push(currentSegment);\n      currentSegment = \"\";\n    }\n  }\n  if (currentSegment !== \"\") {\n    compoundSegments.push(currentSegment);\n  }\n  return compoundSegments;\n}\n__name(splitEvery, \"splitEvery\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  NoOpLogger,\n  Client,\n  collectBody,\n  Command,\n  SENSITIVE_STRING,\n  createAggregatedClient,\n  dateToUtcString,\n  parseRfc3339DateTime,\n  parseRfc3339DateTimeWithOffset,\n  parseRfc7231DateTime,\n  parseEpochTimestamp,\n  throwDefaultError,\n  withBaseException,\n  loadConfigsForDefaultMode,\n  emitWarningIfUnsupportedVersion,\n  getDefaultExtensionConfiguration,\n  getDefaultClientConfiguration,\n  resolveDefaultRuntimeConfig,\n  ServiceException,\n  decorateServiceException,\n  extendedEncodeURIComponent,\n  getArrayIfSingleItem,\n  getValueFromTextNode,\n  StringWrapper,\n  LazyJsonString,\n  map,\n  convertMap,\n  take,\n  parseBoolean,\n  expectBoolean,\n  expectNumber,\n  expectFloat32,\n  expectLong,\n  expectInt,\n  expectInt32,\n  expectShort,\n  expectByte,\n  expectNonNull,\n  expectObject,\n  expectString,\n  expectUnion,\n  strictParseDouble,\n  strictParseFloat,\n  strictParseFloat32,\n  limitedParseDouble,\n  handleFloat,\n  limitedParseFloat,\n  limitedParseFloat32,\n  strictParseLong,\n  strictParseInt,\n  strictParseInt32,\n  strictParseShort,\n  strictParseByte,\n  logger,\n  resolvedPath,\n  serializeFloat,\n  serializeDateTime,\n  _json,\n  splitEvery\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isStreamingPayload = void 0;\nconst stream_1 = require(\"stream\");\nconst isStreamingPayload = (request) => (request === null || request === void 0 ? void 0 : request.body) instanceof stream_1.Readable ||\n    (typeof ReadableStream !== \"undefined\" && (request === null || request === void 0 ? void 0 : request.body) instanceof ReadableStream);\nexports.isStreamingPayload = isStreamingPayload;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AdaptiveRetryStrategy: () => AdaptiveRetryStrategy,\n  CONFIG_MAX_ATTEMPTS: () => CONFIG_MAX_ATTEMPTS,\n  CONFIG_RETRY_MODE: () => CONFIG_RETRY_MODE,\n  ENV_MAX_ATTEMPTS: () => ENV_MAX_ATTEMPTS,\n  ENV_RETRY_MODE: () => ENV_RETRY_MODE,\n  NODE_MAX_ATTEMPT_CONFIG_OPTIONS: () => NODE_MAX_ATTEMPT_CONFIG_OPTIONS,\n  NODE_RETRY_MODE_CONFIG_OPTIONS: () => NODE_RETRY_MODE_CONFIG_OPTIONS,\n  StandardRetryStrategy: () => StandardRetryStrategy,\n  defaultDelayDecider: () => defaultDelayDecider,\n  defaultRetryDecider: () => defaultRetryDecider,\n  getOmitRetryHeadersPlugin: () => getOmitRetryHeadersPlugin,\n  getRetryAfterHint: () => getRetryAfterHint,\n  getRetryPlugin: () => getRetryPlugin,\n  omitRetryHeadersMiddleware: () => omitRetryHeadersMiddleware,\n  omitRetryHeadersMiddlewareOptions: () => omitRetryHeadersMiddlewareOptions,\n  resolveRetryConfig: () => resolveRetryConfig,\n  retryMiddleware: () => retryMiddleware,\n  retryMiddlewareOptions: () => retryMiddlewareOptions\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/AdaptiveRetryStrategy.ts\n\n\n// src/StandardRetryStrategy.ts\nvar import_protocol_http = require(\"@smithy/protocol-http\");\n\n\nvar import_uuid = require(\"uuid\");\n\n// src/defaultRetryQuota.ts\nvar import_util_retry = require(\"@smithy/util-retry\");\nvar getDefaultRetryQuota = /* @__PURE__ */ __name((initialRetryTokens, options) => {\n  const MAX_CAPACITY = initialRetryTokens;\n  const noRetryIncrement = (options == null ? void 0 : options.noRetryIncrement) ?? import_util_retry.NO_RETRY_INCREMENT;\n  const retryCost = (options == null ? void 0 : options.retryCost) ?? import_util_retry.RETRY_COST;\n  const timeoutRetryCost = (options == null ? void 0 : options.timeoutRetryCost) ?? import_util_retry.TIMEOUT_RETRY_COST;\n  let availableCapacity = initialRetryTokens;\n  const getCapacityAmount = /* @__PURE__ */ __name((error) => error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost, \"getCapacityAmount\");\n  const hasRetryTokens = /* @__PURE__ */ __name((error) => getCapacityAmount(error) <= availableCapacity, \"hasRetryTokens\");\n  const retrieveRetryTokens = /* @__PURE__ */ __name((error) => {\n    if (!hasRetryTokens(error)) {\n      throw new Error(\"No retry token available\");\n    }\n    const capacityAmount = getCapacityAmount(error);\n    availableCapacity -= capacityAmount;\n    return capacityAmount;\n  }, \"retrieveRetryTokens\");\n  const releaseRetryTokens = /* @__PURE__ */ __name((capacityReleaseAmount) => {\n    availableCapacity += capacityReleaseAmount ?? noRetryIncrement;\n    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n  }, \"releaseRetryTokens\");\n  return Object.freeze({\n    hasRetryTokens,\n    retrieveRetryTokens,\n    releaseRetryTokens\n  });\n}, \"getDefaultRetryQuota\");\n\n// src/delayDecider.ts\n\nvar defaultDelayDecider = /* @__PURE__ */ __name((delayBase, attempts) => Math.floor(Math.min(import_util_retry.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase)), \"defaultDelayDecider\");\n\n// src/retryDecider.ts\nvar import_service_error_classification = require(\"@smithy/service-error-classification\");\nvar defaultRetryDecider = /* @__PURE__ */ __name((error) => {\n  if (!error) {\n    return false;\n  }\n  return (0, import_service_error_classification.isRetryableByTrait)(error) || (0, import_service_error_classification.isClockSkewError)(error) || (0, import_service_error_classification.isThrottlingError)(error) || (0, import_service_error_classification.isTransientError)(error);\n}, \"defaultRetryDecider\");\n\n// src/util.ts\nvar asSdkError = /* @__PURE__ */ __name((error) => {\n  if (error instanceof Error)\n    return error;\n  if (error instanceof Object)\n    return Object.assign(new Error(), error);\n  if (typeof error === \"string\")\n    return new Error(error);\n  return new Error(`AWS SDK error wrapper for ${error}`);\n}, \"asSdkError\");\n\n// src/StandardRetryStrategy.ts\nvar _StandardRetryStrategy = class _StandardRetryStrategy {\n  constructor(maxAttemptsProvider, options) {\n    this.maxAttemptsProvider = maxAttemptsProvider;\n    this.mode = import_util_retry.RETRY_MODES.STANDARD;\n    this.retryDecider = (options == null ? void 0 : options.retryDecider) ?? defaultRetryDecider;\n    this.delayDecider = (options == null ? void 0 : options.delayDecider) ?? defaultDelayDecider;\n    this.retryQuota = (options == null ? void 0 : options.retryQuota) ?? getDefaultRetryQuota(import_util_retry.INITIAL_RETRY_TOKENS);\n  }\n  shouldRetry(error, attempts, maxAttempts) {\n    return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n  }\n  async getMaxAttempts() {\n    let maxAttempts;\n    try {\n      maxAttempts = await this.maxAttemptsProvider();\n    } catch (error) {\n      maxAttempts = import_util_retry.DEFAULT_MAX_ATTEMPTS;\n    }\n    return maxAttempts;\n  }\n  async retry(next, args, options) {\n    let retryTokenAmount;\n    let attempts = 0;\n    let totalDelay = 0;\n    const maxAttempts = await this.getMaxAttempts();\n    const { request } = args;\n    if (import_protocol_http.HttpRequest.isInstance(request)) {\n      request.headers[import_util_retry.INVOCATION_ID_HEADER] = (0, import_uuid.v4)();\n    }\n    while (true) {\n      try {\n        if (import_protocol_http.HttpRequest.isInstance(request)) {\n          request.headers[import_util_retry.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n        }\n        if (options == null ? void 0 : options.beforeRequest) {\n          await options.beforeRequest();\n        }\n        const { response, output } = await next(args);\n        if (options == null ? void 0 : options.afterRequest) {\n          options.afterRequest(response);\n        }\n        this.retryQuota.releaseRetryTokens(retryTokenAmount);\n        output.$metadata.attempts = attempts + 1;\n        output.$metadata.totalRetryDelay = totalDelay;\n        return { response, output };\n      } catch (e) {\n        const err = asSdkError(e);\n        attempts++;\n        if (this.shouldRetry(err, attempts, maxAttempts)) {\n          retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n          const delayFromDecider = this.delayDecider(\n            (0, import_service_error_classification.isThrottlingError)(err) ? import_util_retry.THROTTLING_RETRY_DELAY_BASE : import_util_retry.DEFAULT_RETRY_DELAY_BASE,\n            attempts\n          );\n          const delayFromResponse = getDelayFromRetryAfterHeader(err.$response);\n          const delay = Math.max(delayFromResponse || 0, delayFromDecider);\n          totalDelay += delay;\n          await new Promise((resolve) => setTimeout(resolve, delay));\n          continue;\n        }\n        if (!err.$metadata) {\n          err.$metadata = {};\n        }\n        err.$metadata.attempts = attempts;\n        err.$metadata.totalRetryDelay = totalDelay;\n        throw err;\n      }\n    }\n  }\n};\n__name(_StandardRetryStrategy, \"StandardRetryStrategy\");\nvar StandardRetryStrategy = _StandardRetryStrategy;\nvar getDelayFromRetryAfterHeader = /* @__PURE__ */ __name((response) => {\n  if (!import_protocol_http.HttpResponse.isInstance(response))\n    return;\n  const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n  if (!retryAfterHeaderName)\n    return;\n  const retryAfter = response.headers[retryAfterHeaderName];\n  const retryAfterSeconds = Number(retryAfter);\n  if (!Number.isNaN(retryAfterSeconds))\n    return retryAfterSeconds * 1e3;\n  const retryAfterDate = new Date(retryAfter);\n  return retryAfterDate.getTime() - Date.now();\n}, \"getDelayFromRetryAfterHeader\");\n\n// src/AdaptiveRetryStrategy.ts\nvar _AdaptiveRetryStrategy = class _AdaptiveRetryStrategy extends StandardRetryStrategy {\n  constructor(maxAttemptsProvider, options) {\n    const { rateLimiter, ...superOptions } = options ?? {};\n    super(maxAttemptsProvider, superOptions);\n    this.rateLimiter = rateLimiter ?? new import_util_retry.DefaultRateLimiter();\n    this.mode = import_util_retry.RETRY_MODES.ADAPTIVE;\n  }\n  async retry(next, args) {\n    return super.retry(next, args, {\n      beforeRequest: async () => {\n        return this.rateLimiter.getSendToken();\n      },\n      afterRequest: (response) => {\n        this.rateLimiter.updateClientSendingRate(response);\n      }\n    });\n  }\n};\n__name(_AdaptiveRetryStrategy, \"AdaptiveRetryStrategy\");\nvar AdaptiveRetryStrategy = _AdaptiveRetryStrategy;\n\n// src/configurations.ts\nvar import_util_middleware = require(\"@smithy/util-middleware\");\n\nvar ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nvar CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nvar NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => {\n    const value = env[ENV_MAX_ATTEMPTS];\n    if (!value)\n      return void 0;\n    const maxAttempt = parseInt(value);\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n    }\n    return maxAttempt;\n  },\n  configFileSelector: (profile) => {\n    const value = profile[CONFIG_MAX_ATTEMPTS];\n    if (!value)\n      return void 0;\n    const maxAttempt = parseInt(value);\n    if (Number.isNaN(maxAttempt)) {\n      throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n    }\n    return maxAttempt;\n  },\n  default: import_util_retry.DEFAULT_MAX_ATTEMPTS\n};\nvar resolveRetryConfig = /* @__PURE__ */ __name((input) => {\n  const { retryStrategy } = input;\n  const maxAttempts = (0, import_util_middleware.normalizeProvider)(input.maxAttempts ?? import_util_retry.DEFAULT_MAX_ATTEMPTS);\n  return {\n    ...input,\n    maxAttempts,\n    retryStrategy: async () => {\n      if (retryStrategy) {\n        return retryStrategy;\n      }\n      const retryMode = await (0, import_util_middleware.normalizeProvider)(input.retryMode)();\n      if (retryMode === import_util_retry.RETRY_MODES.ADAPTIVE) {\n        return new import_util_retry.AdaptiveRetryStrategy(maxAttempts);\n      }\n      return new import_util_retry.StandardRetryStrategy(maxAttempts);\n    }\n  };\n}, \"resolveRetryConfig\");\nvar ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nvar CONFIG_RETRY_MODE = \"retry_mode\";\nvar NODE_RETRY_MODE_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n  configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n  default: import_util_retry.DEFAULT_RETRY_MODE\n};\n\n// src/omitRetryHeadersMiddleware.ts\n\n\nvar omitRetryHeadersMiddleware = /* @__PURE__ */ __name(() => (next) => async (args) => {\n  const { request } = args;\n  if (import_protocol_http.HttpRequest.isInstance(request)) {\n    delete request.headers[import_util_retry.INVOCATION_ID_HEADER];\n    delete request.headers[import_util_retry.REQUEST_HEADER];\n  }\n  return next(args);\n}, \"omitRetryHeadersMiddleware\");\nvar omitRetryHeadersMiddlewareOptions = {\n  name: \"omitRetryHeadersMiddleware\",\n  tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n  relation: \"before\",\n  toMiddleware: \"awsAuthMiddleware\",\n  override: true\n};\nvar getOmitRetryHeadersPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: (clientStack) => {\n    clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n  }\n}), \"getOmitRetryHeadersPlugin\");\n\n// src/retryMiddleware.ts\n\n\nvar import_smithy_client = require(\"@smithy/smithy-client\");\n\n\nvar import_isStreamingPayload = require(\"./isStreamingPayload/isStreamingPayload\");\nvar retryMiddleware = /* @__PURE__ */ __name((options) => (next, context) => async (args) => {\n  var _a;\n  let retryStrategy = await options.retryStrategy();\n  const maxAttempts = await options.maxAttempts();\n  if (isRetryStrategyV2(retryStrategy)) {\n    retryStrategy = retryStrategy;\n    let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n    let lastError = new Error();\n    let attempts = 0;\n    let totalRetryDelay = 0;\n    const { request } = args;\n    const isRequest = import_protocol_http.HttpRequest.isInstance(request);\n    if (isRequest) {\n      request.headers[import_util_retry.INVOCATION_ID_HEADER] = (0, import_uuid.v4)();\n    }\n    while (true) {\n      try {\n        if (isRequest) {\n          request.headers[import_util_retry.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n        }\n        const { response, output } = await next(args);\n        retryStrategy.recordSuccess(retryToken);\n        output.$metadata.attempts = attempts + 1;\n        output.$metadata.totalRetryDelay = totalRetryDelay;\n        return { response, output };\n      } catch (e) {\n        const retryErrorInfo = getRetryErrorInfo(e);\n        lastError = asSdkError(e);\n        if (isRequest && (0, import_isStreamingPayload.isStreamingPayload)(request)) {\n          (_a = context.logger instanceof import_smithy_client.NoOpLogger ? console : context.logger) == null ? void 0 : _a.warn(\n            \"An error was encountered in a non-retryable streaming request.\"\n          );\n          throw lastError;\n        }\n        try {\n          retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n        } catch (refreshError) {\n          if (!lastError.$metadata) {\n            lastError.$metadata = {};\n          }\n          lastError.$metadata.attempts = attempts + 1;\n          lastError.$metadata.totalRetryDelay = totalRetryDelay;\n          throw lastError;\n        }\n        attempts = retryToken.getRetryCount();\n        const delay = retryToken.getRetryDelay();\n        totalRetryDelay += delay;\n        await new Promise((resolve) => setTimeout(resolve, delay));\n      }\n    }\n  } else {\n    retryStrategy = retryStrategy;\n    if (retryStrategy == null ? void 0 : retryStrategy.mode)\n      context.userAgent = [...context.userAgent || [], [\"cfg/retry-mode\", retryStrategy.mode]];\n    return retryStrategy.retry(next, args);\n  }\n}, \"retryMiddleware\");\nvar isRetryStrategyV2 = /* @__PURE__ */ __name((retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" && typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" && typeof retryStrategy.recordSuccess !== \"undefined\", \"isRetryStrategyV2\");\nvar getRetryErrorInfo = /* @__PURE__ */ __name((error) => {\n  const errorInfo = {\n    error,\n    errorType: getRetryErrorType(error)\n  };\n  const retryAfterHint = getRetryAfterHint(error.$response);\n  if (retryAfterHint) {\n    errorInfo.retryAfterHint = retryAfterHint;\n  }\n  return errorInfo;\n}, \"getRetryErrorInfo\");\nvar getRetryErrorType = /* @__PURE__ */ __name((error) => {\n  if ((0, import_service_error_classification.isThrottlingError)(error))\n    return \"THROTTLING\";\n  if ((0, import_service_error_classification.isTransientError)(error))\n    return \"TRANSIENT\";\n  if ((0, import_service_error_classification.isServerError)(error))\n    return \"SERVER_ERROR\";\n  return \"CLIENT_ERROR\";\n}, \"getRetryErrorType\");\nvar retryMiddlewareOptions = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true\n};\nvar getRetryPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  }\n}), \"getRetryPlugin\");\nvar getRetryAfterHint = /* @__PURE__ */ __name((response) => {\n  if (!import_protocol_http.HttpResponse.isInstance(response))\n    return;\n  const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n  if (!retryAfterHeaderName)\n    return;\n  const retryAfter = response.headers[retryAfterHeaderName];\n  const retryAfterSeconds = Number(retryAfter);\n  if (!Number.isNaN(retryAfterSeconds))\n    return new Date(retryAfterSeconds * 1e3);\n  const retryAfterDate = new Date(retryAfter);\n  return retryAfterDate;\n}, \"getRetryAfterHint\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  AdaptiveRetryStrategy,\n  StandardRetryStrategy,\n  ENV_MAX_ATTEMPTS,\n  CONFIG_MAX_ATTEMPTS,\n  NODE_MAX_ATTEMPT_CONFIG_OPTIONS,\n  resolveRetryConfig,\n  ENV_RETRY_MODE,\n  CONFIG_RETRY_MODE,\n  NODE_RETRY_MODE_CONFIG_OPTIONS,\n  defaultDelayDecider,\n  omitRetryHeadersMiddleware,\n  omitRetryHeadersMiddlewareOptions,\n  getOmitRetryHeadersPlugin,\n  defaultRetryDecider,\n  retryMiddleware,\n  retryMiddlewareOptions,\n  getRetryPlugin,\n  getRetryAfterHint\n});\n\n", "import { retryMiddlewareOptions } from \"@smithy/middleware-retry\";\nimport { httpSigningMiddleware } from \"./httpSigningMiddleware\";\nexport const httpSigningMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"HTTP_SIGNING\"],\n    name: \"httpSigningMiddleware\",\n    aliases: [\"apiKeyMiddleware\", \"tokenMiddleware\", \"awsAuthMiddleware\"],\n    override: true,\n    relation: \"after\",\n    toMiddleware: retryMiddlewareOptions.name,\n};\nexport const getHttpSigningPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpSigningMiddleware(config), httpSigningMiddlewareOptions);\n    },\n});\n", "export * from \"./httpSigningMiddleware\";\nexport * from \"./getHttpSigningMiddleware\";\n", "export class DefaultIdentityProviderConfig {\n    constructor(config) {\n        this.authSchemes = new Map();\n        for (const [key, value] of Object.entries(config)) {\n            if (value !== undefined) {\n                this.authSchemes.set(key, value);\n            }\n        }\n    }\n    getIdentityProvider(schemeId) {\n        return this.authSchemes.get(schemeId);\n    }\n}\n", "import { HttpApiKeyAuthLocation } from \"@smithy/types\";\nexport class HttpApiKeyAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!signingProperties) {\n            throw new Error(\"request could not be signed with `apiKey` since the `name` and `in` signer properties are missing\");\n        }\n        if (!signingProperties.name) {\n            throw new Error(\"request could not be signed with `apiKey` since the `name` signer property is missing\");\n        }\n        if (!signingProperties.in) {\n            throw new Error(\"request could not be signed with `apiKey` since the `in` signer property is missing\");\n        }\n        if (!identity.apiKey) {\n            throw new Error(\"request could not be signed with `apiKey` since the `apiKey` is not defined\");\n        }\n        const clonedRequest = httpRequest.clone();\n        if (signingProperties.in === HttpApiKeyAuthLocation.QUERY) {\n            clonedRequest.query[signingProperties.name] = identity.apiKey;\n        }\n        else if (signingProperties.in === HttpApiKeyAuthLocation.HEADER) {\n            clonedRequest.headers[signingProperties.name] = signingProperties.scheme\n                ? `${signingProperties.scheme} ${identity.apiKey}`\n                : identity.apiKey;\n        }\n        else {\n            throw new Error(\"request can only be signed with `apiKey` locations `query` or `header`, \" +\n                \"but found: `\" +\n                signingProperties.in +\n                \"`\");\n        }\n        return clonedRequest;\n    }\n}\n", "export class HttpBearerAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        const clonedRequest = httpRequest.clone();\n        if (!identity.token) {\n            throw new Error(\"request could not be signed with `token` since the `token` is not defined\");\n        }\n        clonedRequest.headers[\"Authorization\"] = `Bearer ${identity.token}`;\n        return clonedRequest;\n    }\n}\n", "export class NoAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        return httpRequest;\n    }\n}\n", "export * from \"./httpApiKeyAuth\";\nexport * from \"./httpBearerAuth\";\nexport * from \"./noAuth\";\n", "export const createIsIdentityExpiredFunction = (expirationMs) => (identity) => doesIdentityRequireRefresh(identity) && identity.expiration.getTime() - Date.now() < expirationMs;\nexport const EXPIRATION_MS = 300000;\nexport const isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);\nexport const doesIdentityRequireRefresh = (identity) => identity.expiration !== undefined;\nexport const memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {\n    if (provider === undefined) {\n        return undefined;\n    }\n    const normalizedProvider = typeof provider !== \"function\" ? async () => Promise.resolve(provider) : provider;\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async (options) => {\n        if (!pending) {\n            pending = normalizedProvider(options);\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider(options);\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider(options);\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (!requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider(options);\n            return resolved;\n        }\n        return resolved;\n    };\n};\n", "export * from \"./DefaultIdentityProviderConfig\";\nexport * from \"./httpAuthSchemes\";\nexport * from \"./memoizeIdentityProvider\";\n", "import { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport const getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});\n", "export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { resolvedPath } from \"@smithy/smithy-client\";\nexport function requestBuilder(input, context) {\n    return new RequestBuilder(input, context);\n}\nexport class RequestBuilder {\n    constructor(input, context) {\n        this.input = input;\n        this.context = context;\n        this.query = {};\n        this.method = \"\";\n        this.headers = {};\n        this.path = \"\";\n        this.body = null;\n        this.hostname = \"\";\n        this.resolvePathStack = [];\n    }\n    async build() {\n        const { hostname, protocol = \"https\", port, path: basePath } = await this.context.endpoint();\n        this.path = basePath;\n        for (const resolvePath of this.resolvePathStack) {\n            resolvePath(this.path);\n        }\n        return new HttpRequest({\n            protocol,\n            hostname: this.hostname || hostname,\n            port,\n            method: this.method,\n            path: this.path,\n            query: this.query,\n            body: this.body,\n            headers: this.headers,\n        });\n    }\n    hn(hostname) {\n        this.hostname = hostname;\n        return this;\n    }\n    bp(uriLabel) {\n        this.resolvePathStack.push((basePath) => {\n            this.path = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + uriLabel;\n        });\n        return this;\n    }\n    p(memberName, labelValueProvider, uriLabel, isGreedyLabel) {\n        this.resolvePathStack.push((path) => {\n            this.path = resolvedPath(path, this.input, memberName, labelValueProvider, uriLabel, isGreedyLabel);\n        });\n        return this;\n    }\n    h(headers) {\n        this.headers = headers;\n        return this;\n    }\n    q(query) {\n        this.query = query;\n        return this;\n    }\n    b(body) {\n        this.body = body;\n        return this;\n    }\n    m(method) {\n        this.method = method;\n        return this;\n    }\n}\n", "const makePagedClientRequest = async (CommandCtor, client, input, ...args) => {\n    return await client.send(new CommandCtor(input), ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n    return async function* paginateOperation(config, input, ...additionalArguments) {\n        let token = config.startingToken || undefined;\n        let hasNext = true;\n        let page;\n        while (hasNext) {\n            input[inputTokenName] = token;\n            if (pageSizeTokenName) {\n                input[pageSizeTokenName] = input[pageSizeTokenName] ?? config.pageSize;\n            }\n            if (config.client instanceof ClientCtor) {\n                page = await makePagedClientRequest(CommandCtor, config.client, input, ...additionalArguments);\n            }\n            else {\n                throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\n            }\n            yield page;\n            const prevToken = token;\n            token = get(page, outputTokenName);\n            hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n        }\n        return undefined;\n    };\n}\nconst get = (fromObject, path) => {\n    let cursor = fromObject;\n    const pathComponents = path.split(\".\");\n    for (const step of pathComponents) {\n        if (!cursor || typeof cursor !== \"object\") {\n            return undefined;\n        }\n        cursor = cursor[step];\n    }\n    return cursor;\n};\n", "export * from \"./middleware-http-auth-scheme\";\nexport * from \"./middleware-http-signing\";\nexport * from \"./util-identity-and-auth\";\nexport * from \"./getSmithyContext\";\nexport * from \"./normalizeProvider\";\nexport * from \"./protocols/requestBuilder\";\nexport { createPaginator } from \"./pagination/createPaginator\";\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  contentLengthMiddleware: () => contentLengthMiddleware,\n  contentLengthMiddlewareOptions: () => contentLengthMiddlewareOptions,\n  getContentLengthPlugin: () => getContentLengthPlugin\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n  return (next) => async (args) => {\n    const request = args.request;\n    if (import_protocol_http.HttpRequest.isInstance(request)) {\n      const { body, headers } = request;\n      if (body && Object.keys(headers).map((str) => str.toLowerCase()).indexOf(CONTENT_LENGTH_HEADER) === -1) {\n        try {\n          const length = bodyLengthChecker(body);\n          request.headers = {\n            ...request.headers,\n            [CONTENT_LENGTH_HEADER]: String(length)\n          };\n        } catch (error) {\n        }\n      }\n    }\n    return next({\n      ...args,\n      request\n    });\n  };\n}\n__name(contentLengthMiddleware, \"contentLengthMiddleware\");\nvar contentLengthMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n  name: \"contentLengthMiddleware\",\n  override: true\n};\nvar getContentLengthPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n  }\n}), \"getContentLengthPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  contentLengthMiddleware,\n  contentLengthMiddlewareOptions,\n  getContentLengthPlugin\n});\n\n", "let warningEmitted = false;\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 18) {\n        warningEmitted = true;\n        process.emitWarning(`NodeDeprecationWarning: The AWS SDK for JavaScript (v3) will\nno longer support Node.js 16.x on January 6, 2025.\n\nTo continue receiving updates to AWS services, bug fixes, and security\nupdates please upgrade to a supported Node.js LTS version.\n\nMore information can be found at: https://a.co/74kJMmI`);\n    }\n};\n", "export * from \"./emitWarningIfUnsupportedVersion\";\n", "import { HttpResponse } from \"@smithy/protocol-http\";\nexport const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n", "export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n", "import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n", "import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n", "export * from \"./getDateHeader\";\nexport * from \"./getSkewCorrectedDate\";\nexport * from \"./getUpdatedSystemClockOffset\";\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getDateHeader, getSkewCorrectedDate, getUpdatedSystemClockOffset } from \"../utils\";\nconst throwSigningPropertyError = (name, property) => {\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nconst validateSigningProperties = async (signingProperties) => {\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingName,\n    };\n};\nexport class AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const { config, signer, signingRegion, signingName } = await validateSigningProperties(signingProperties);\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error) => {\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = getDateHeader(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n        }\n    }\n}\nexport const AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  SignatureV4: () => SignatureV4,\n  clearCredentialCache: () => clearCredentialCache,\n  createScope: () => createScope,\n  getCanonicalHeaders: () => getCanonicalHeaders,\n  getCanonicalQuery: () => getCanonicalQuery,\n  getPayloadHash: () => getPayloadHash,\n  getSigningKey: () => getSigningKey,\n  moveHeadersToQuery: () => moveHeadersToQuery,\n  prepareRequest: () => prepareRequest\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/SignatureV4.ts\n\nvar import_util_middleware = require(\"@smithy/util-middleware\");\n\nvar import_util_utf84 = require(\"@smithy/util-utf8\");\n\n// src/constants.ts\nvar ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nvar CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nvar AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nvar SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nvar EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nvar SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nvar TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nvar AUTH_HEADER = \"authorization\";\nvar AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nvar DATE_HEADER = \"date\";\nvar GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nvar SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nvar SHA256_HEADER = \"x-amz-content-sha256\";\nvar TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nvar ALWAYS_UNSIGNABLE_HEADERS = {\n  authorization: true,\n  \"cache-control\": true,\n  connection: true,\n  expect: true,\n  from: true,\n  \"keep-alive\": true,\n  \"max-forwards\": true,\n  pragma: true,\n  referer: true,\n  te: true,\n  trailer: true,\n  \"transfer-encoding\": true,\n  upgrade: true,\n  \"user-agent\": true,\n  \"x-amzn-trace-id\": true\n};\nvar PROXY_HEADER_PATTERN = /^proxy-/;\nvar SEC_HEADER_PATTERN = /^sec-/;\nvar ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nvar EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nvar UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nvar MAX_CACHE_SIZE = 50;\nvar KEY_TYPE_IDENTIFIER = \"aws4_request\";\nvar MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n\n// src/credentialDerivation.ts\nvar import_util_hex_encoding = require(\"@smithy/util-hex-encoding\");\nvar import_util_utf8 = require(\"@smithy/util-utf8\");\nvar signingKeyCache = {};\nvar cacheQueue = [];\nvar createScope = /* @__PURE__ */ __name((shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`, \"createScope\");\nvar getSigningKey = /* @__PURE__ */ __name(async (sha256Constructor, credentials, shortDate, region, service) => {\n  const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n  const cacheKey = `${shortDate}:${region}:${service}:${(0, import_util_hex_encoding.toHex)(credsHash)}:${credentials.sessionToken}`;\n  if (cacheKey in signingKeyCache) {\n    return signingKeyCache[cacheKey];\n  }\n  cacheQueue.push(cacheKey);\n  while (cacheQueue.length > MAX_CACHE_SIZE) {\n    delete signingKeyCache[cacheQueue.shift()];\n  }\n  let key = `AWS4${credentials.secretAccessKey}`;\n  for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n    key = await hmac(sha256Constructor, key, signable);\n  }\n  return signingKeyCache[cacheKey] = key;\n}, \"getSigningKey\");\nvar clearCredentialCache = /* @__PURE__ */ __name(() => {\n  cacheQueue.length = 0;\n  Object.keys(signingKeyCache).forEach((cacheKey) => {\n    delete signingKeyCache[cacheKey];\n  });\n}, \"clearCredentialCache\");\nvar hmac = /* @__PURE__ */ __name((ctor, secret, data) => {\n  const hash = new ctor(secret);\n  hash.update((0, import_util_utf8.toUint8Array)(data));\n  return hash.digest();\n}, \"hmac\");\n\n// src/getCanonicalHeaders.ts\nvar getCanonicalHeaders = /* @__PURE__ */ __name(({ headers }, unsignableHeaders, signableHeaders) => {\n  const canonical = {};\n  for (const headerName of Object.keys(headers).sort()) {\n    if (headers[headerName] == void 0) {\n      continue;\n    }\n    const canonicalHeaderName = headerName.toLowerCase();\n    if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS || (unsignableHeaders == null ? void 0 : unsignableHeaders.has(canonicalHeaderName)) || PROXY_HEADER_PATTERN.test(canonicalHeaderName) || SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n      if (!signableHeaders || signableHeaders && !signableHeaders.has(canonicalHeaderName)) {\n        continue;\n      }\n    }\n    canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n  }\n  return canonical;\n}, \"getCanonicalHeaders\");\n\n// src/getCanonicalQuery.ts\nvar import_util_uri_escape = require(\"@smithy/util-uri-escape\");\nvar getCanonicalQuery = /* @__PURE__ */ __name(({ query = {} }) => {\n  const keys = [];\n  const serialized = {};\n  for (const key of Object.keys(query).sort()) {\n    if (key.toLowerCase() === SIGNATURE_HEADER) {\n      continue;\n    }\n    keys.push(key);\n    const value = query[key];\n    if (typeof value === \"string\") {\n      serialized[key] = `${(0, import_util_uri_escape.escapeUri)(key)}=${(0, import_util_uri_escape.escapeUri)(value)}`;\n    } else if (Array.isArray(value)) {\n      serialized[key] = value.slice(0).reduce(\n        (encoded, value2) => encoded.concat([`${(0, import_util_uri_escape.escapeUri)(key)}=${(0, import_util_uri_escape.escapeUri)(value2)}`]),\n        []\n      ).sort().join(\"&\");\n    }\n  }\n  return keys.map((key) => serialized[key]).filter((serialized2) => serialized2).join(\"&\");\n}, \"getCanonicalQuery\");\n\n// src/getPayloadHash.ts\nvar import_is_array_buffer = require(\"@smithy/is-array-buffer\");\n\nvar import_util_utf82 = require(\"@smithy/util-utf8\");\nvar getPayloadHash = /* @__PURE__ */ __name(async ({ headers, body }, hashConstructor) => {\n  for (const headerName of Object.keys(headers)) {\n    if (headerName.toLowerCase() === SHA256_HEADER) {\n      return headers[headerName];\n    }\n  }\n  if (body == void 0) {\n    return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n  } else if (typeof body === \"string\" || ArrayBuffer.isView(body) || (0, import_is_array_buffer.isArrayBuffer)(body)) {\n    const hashCtor = new hashConstructor();\n    hashCtor.update((0, import_util_utf82.toUint8Array)(body));\n    return (0, import_util_hex_encoding.toHex)(await hashCtor.digest());\n  }\n  return UNSIGNED_PAYLOAD;\n}, \"getPayloadHash\");\n\n// src/HeaderFormatter.ts\n\nvar import_util_utf83 = require(\"@smithy/util-utf8\");\nvar _HeaderFormatter = class _HeaderFormatter {\n  format(headers) {\n    const chunks = [];\n    for (const headerName of Object.keys(headers)) {\n      const bytes = (0, import_util_utf83.fromUtf8)(headerName);\n      chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n    }\n    const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n    let position = 0;\n    for (const chunk of chunks) {\n      out.set(chunk, position);\n      position += chunk.byteLength;\n    }\n    return out;\n  }\n  formatHeaderValue(header) {\n    switch (header.type) {\n      case \"boolean\":\n        return Uint8Array.from([header.value ? 0 /* boolTrue */ : 1 /* boolFalse */]);\n      case \"byte\":\n        return Uint8Array.from([2 /* byte */, header.value]);\n      case \"short\":\n        const shortView = new DataView(new ArrayBuffer(3));\n        shortView.setUint8(0, 3 /* short */);\n        shortView.setInt16(1, header.value, false);\n        return new Uint8Array(shortView.buffer);\n      case \"integer\":\n        const intView = new DataView(new ArrayBuffer(5));\n        intView.setUint8(0, 4 /* integer */);\n        intView.setInt32(1, header.value, false);\n        return new Uint8Array(intView.buffer);\n      case \"long\":\n        const longBytes = new Uint8Array(9);\n        longBytes[0] = 5 /* long */;\n        longBytes.set(header.value.bytes, 1);\n        return longBytes;\n      case \"binary\":\n        const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n        binView.setUint8(0, 6 /* byteArray */);\n        binView.setUint16(1, header.value.byteLength, false);\n        const binBytes = new Uint8Array(binView.buffer);\n        binBytes.set(header.value, 3);\n        return binBytes;\n      case \"string\":\n        const utf8Bytes = (0, import_util_utf83.fromUtf8)(header.value);\n        const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n        strView.setUint8(0, 7 /* string */);\n        strView.setUint16(1, utf8Bytes.byteLength, false);\n        const strBytes = new Uint8Array(strView.buffer);\n        strBytes.set(utf8Bytes, 3);\n        return strBytes;\n      case \"timestamp\":\n        const tsBytes = new Uint8Array(9);\n        tsBytes[0] = 8 /* timestamp */;\n        tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n        return tsBytes;\n      case \"uuid\":\n        if (!UUID_PATTERN.test(header.value)) {\n          throw new Error(`Invalid UUID received: ${header.value}`);\n        }\n        const uuidBytes = new Uint8Array(17);\n        uuidBytes[0] = 9 /* uuid */;\n        uuidBytes.set((0, import_util_hex_encoding.fromHex)(header.value.replace(/\\-/g, \"\")), 1);\n        return uuidBytes;\n    }\n  }\n};\n__name(_HeaderFormatter, \"HeaderFormatter\");\nvar HeaderFormatter = _HeaderFormatter;\nvar UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\nvar _Int64 = class _Int64 {\n  constructor(bytes) {\n    this.bytes = bytes;\n    if (bytes.byteLength !== 8) {\n      throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n    }\n  }\n  static fromNumber(number) {\n    if (number > 9223372036854776e3 || number < -9223372036854776e3) {\n      throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n    }\n    const bytes = new Uint8Array(8);\n    for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n      bytes[i] = remaining;\n    }\n    if (number < 0) {\n      negate(bytes);\n    }\n    return new _Int64(bytes);\n  }\n  /**\n   * Called implicitly by infix arithmetic operators.\n   */\n  valueOf() {\n    const bytes = this.bytes.slice(0);\n    const negative = bytes[0] & 128;\n    if (negative) {\n      negate(bytes);\n    }\n    return parseInt((0, import_util_hex_encoding.toHex)(bytes), 16) * (negative ? -1 : 1);\n  }\n  toString() {\n    return String(this.valueOf());\n  }\n};\n__name(_Int64, \"Int64\");\nvar Int64 = _Int64;\nfunction negate(bytes) {\n  for (let i = 0; i < 8; i++) {\n    bytes[i] ^= 255;\n  }\n  for (let i = 7; i > -1; i--) {\n    bytes[i]++;\n    if (bytes[i] !== 0)\n      break;\n  }\n}\n__name(negate, \"negate\");\n\n// src/headerUtil.ts\nvar hasHeader = /* @__PURE__ */ __name((soughtHeader, headers) => {\n  soughtHeader = soughtHeader.toLowerCase();\n  for (const headerName of Object.keys(headers)) {\n    if (soughtHeader === headerName.toLowerCase()) {\n      return true;\n    }\n  }\n  return false;\n}, \"hasHeader\");\n\n// src/cloneRequest.ts\nvar cloneRequest = /* @__PURE__ */ __name(({ headers, query, ...rest }) => ({\n  ...rest,\n  headers: { ...headers },\n  query: query ? cloneQuery(query) : void 0\n}), \"cloneRequest\");\nvar cloneQuery = /* @__PURE__ */ __name((query) => Object.keys(query).reduce((carry, paramName) => {\n  const param = query[paramName];\n  return {\n    ...carry,\n    [paramName]: Array.isArray(param) ? [...param] : param\n  };\n}, {}), \"cloneQuery\");\n\n// src/moveHeadersToQuery.ts\nvar moveHeadersToQuery = /* @__PURE__ */ __name((request, options = {}) => {\n  var _a;\n  const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n  for (const name of Object.keys(headers)) {\n    const lname = name.toLowerCase();\n    if (lname.slice(0, 6) === \"x-amz-\" && !((_a = options.unhoistableHeaders) == null ? void 0 : _a.has(lname))) {\n      query[name] = headers[name];\n      delete headers[name];\n    }\n  }\n  return {\n    ...request,\n    headers,\n    query\n  };\n}, \"moveHeadersToQuery\");\n\n// src/prepareRequest.ts\nvar prepareRequest = /* @__PURE__ */ __name((request) => {\n  request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n  for (const headerName of Object.keys(request.headers)) {\n    if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n      delete request.headers[headerName];\n    }\n  }\n  return request;\n}, \"prepareRequest\");\n\n// src/utilDate.ts\nvar iso8601 = /* @__PURE__ */ __name((time) => toDate(time).toISOString().replace(/\\.\\d{3}Z$/, \"Z\"), \"iso8601\");\nvar toDate = /* @__PURE__ */ __name((time) => {\n  if (typeof time === \"number\") {\n    return new Date(time * 1e3);\n  }\n  if (typeof time === \"string\") {\n    if (Number(time)) {\n      return new Date(Number(time) * 1e3);\n    }\n    return new Date(time);\n  }\n  return time;\n}, \"toDate\");\n\n// src/SignatureV4.ts\nvar _SignatureV4 = class _SignatureV4 {\n  constructor({\n    applyChecksum,\n    credentials,\n    region,\n    service,\n    sha256,\n    uriEscapePath = true\n  }) {\n    this.headerFormatter = new HeaderFormatter();\n    this.service = service;\n    this.sha256 = sha256;\n    this.uriEscapePath = uriEscapePath;\n    this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n    this.regionProvider = (0, import_util_middleware.normalizeProvider)(region);\n    this.credentialProvider = (0, import_util_middleware.normalizeProvider)(credentials);\n  }\n  async presign(originalRequest, options = {}) {\n    const {\n      signingDate = /* @__PURE__ */ new Date(),\n      expiresIn = 3600,\n      unsignableHeaders,\n      unhoistableHeaders,\n      signableHeaders,\n      signingRegion,\n      signingService\n    } = options;\n    const credentials = await this.credentialProvider();\n    this.validateResolvedCredentials(credentials);\n    const region = signingRegion ?? await this.regionProvider();\n    const { longDate, shortDate } = formatDate(signingDate);\n    if (expiresIn > MAX_PRESIGNED_TTL) {\n      return Promise.reject(\n        \"Signature version 4 presigned URLs must have an expiration date less than one week in the future\"\n      );\n    }\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n    const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n    if (credentials.sessionToken) {\n      request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n    }\n    request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n    request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n    request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n    request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n    request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n    request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(\n      longDate,\n      scope,\n      this.getSigningKey(credentials, region, shortDate, signingService),\n      this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256))\n    );\n    return request;\n  }\n  async sign(toSign, options) {\n    if (typeof toSign === \"string\") {\n      return this.signString(toSign, options);\n    } else if (toSign.headers && toSign.payload) {\n      return this.signEvent(toSign, options);\n    } else if (toSign.message) {\n      return this.signMessage(toSign, options);\n    } else {\n      return this.signRequest(toSign, options);\n    }\n  }\n  async signEvent({ headers, payload }, { signingDate = /* @__PURE__ */ new Date(), priorSignature, signingRegion, signingService }) {\n    const region = signingRegion ?? await this.regionProvider();\n    const { shortDate, longDate } = formatDate(signingDate);\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n    const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n    const hash = new this.sha256();\n    hash.update(headers);\n    const hashedHeaders = (0, import_util_hex_encoding.toHex)(await hash.digest());\n    const stringToSign = [\n      EVENT_ALGORITHM_IDENTIFIER,\n      longDate,\n      scope,\n      priorSignature,\n      hashedHeaders,\n      hashedPayload\n    ].join(\"\\n\");\n    return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n  }\n  async signMessage(signableMessage, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService }) {\n    const promise = this.signEvent(\n      {\n        headers: this.headerFormatter.format(signableMessage.message.headers),\n        payload: signableMessage.message.body\n      },\n      {\n        signingDate,\n        signingRegion,\n        signingService,\n        priorSignature: signableMessage.priorSignature\n      }\n    );\n    return promise.then((signature) => {\n      return { message: signableMessage.message, signature };\n    });\n  }\n  async signString(stringToSign, { signingDate = /* @__PURE__ */ new Date(), signingRegion, signingService } = {}) {\n    const credentials = await this.credentialProvider();\n    this.validateResolvedCredentials(credentials);\n    const region = signingRegion ?? await this.regionProvider();\n    const { shortDate } = formatDate(signingDate);\n    const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n    hash.update((0, import_util_utf84.toUint8Array)(stringToSign));\n    return (0, import_util_hex_encoding.toHex)(await hash.digest());\n  }\n  async signRequest(requestToSign, {\n    signingDate = /* @__PURE__ */ new Date(),\n    signableHeaders,\n    unsignableHeaders,\n    signingRegion,\n    signingService\n  } = {}) {\n    const credentials = await this.credentialProvider();\n    this.validateResolvedCredentials(credentials);\n    const region = signingRegion ?? await this.regionProvider();\n    const request = prepareRequest(requestToSign);\n    const { longDate, shortDate } = formatDate(signingDate);\n    const scope = createScope(shortDate, region, signingService ?? this.service);\n    request.headers[AMZ_DATE_HEADER] = longDate;\n    if (credentials.sessionToken) {\n      request.headers[TOKEN_HEADER] = credentials.sessionToken;\n    }\n    const payloadHash = await getPayloadHash(request, this.sha256);\n    if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n      request.headers[SHA256_HEADER] = payloadHash;\n    }\n    const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n    const signature = await this.getSignature(\n      longDate,\n      scope,\n      this.getSigningKey(credentials, region, shortDate, signingService),\n      this.createCanonicalRequest(request, canonicalHeaders, payloadHash)\n    );\n    request.headers[AUTH_HEADER] = `${ALGORITHM_IDENTIFIER} Credential=${credentials.accessKeyId}/${scope}, SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, Signature=${signature}`;\n    return request;\n  }\n  createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n    const sortedHeaders = Object.keys(canonicalHeaders).sort();\n    return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n  }\n  async createStringToSign(longDate, credentialScope, canonicalRequest) {\n    const hash = new this.sha256();\n    hash.update((0, import_util_utf84.toUint8Array)(canonicalRequest));\n    const hashedRequest = await hash.digest();\n    return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${(0, import_util_hex_encoding.toHex)(hashedRequest)}`;\n  }\n  getCanonicalPath({ path }) {\n    if (this.uriEscapePath) {\n      const normalizedPathSegments = [];\n      for (const pathSegment of path.split(\"/\")) {\n        if ((pathSegment == null ? void 0 : pathSegment.length) === 0)\n          continue;\n        if (pathSegment === \".\")\n          continue;\n        if (pathSegment === \"..\") {\n          normalizedPathSegments.pop();\n        } else {\n          normalizedPathSegments.push(pathSegment);\n        }\n      }\n      const normalizedPath = `${(path == null ? void 0 : path.startsWith(\"/\")) ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && (path == null ? void 0 : path.endsWith(\"/\")) ? \"/\" : \"\"}`;\n      const doubleEncoded = (0, import_util_uri_escape.escapeUri)(normalizedPath);\n      return doubleEncoded.replace(/%2F/g, \"/\");\n    }\n    return path;\n  }\n  async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n    const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n    const hash = new this.sha256(await keyPromise);\n    hash.update((0, import_util_utf84.toUint8Array)(stringToSign));\n    return (0, import_util_hex_encoding.toHex)(await hash.digest());\n  }\n  getSigningKey(credentials, region, shortDate, service) {\n    return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n  }\n  validateResolvedCredentials(credentials) {\n    if (typeof credentials !== \"object\" || // @ts-expect-error: Property 'accessKeyId' does not exist on type 'object'.ts(2339)\n    typeof credentials.accessKeyId !== \"string\" || // @ts-expect-error: Property 'secretAccessKey' does not exist on type 'object'.ts(2339)\n    typeof credentials.secretAccessKey !== \"string\") {\n      throw new Error(\"Resolved credential object is not valid\");\n    }\n  }\n};\n__name(_SignatureV4, \"SignatureV4\");\nvar SignatureV4 = _SignatureV4;\nvar formatDate = /* @__PURE__ */ __name((now) => {\n  const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n  return {\n    longDate,\n    shortDate: longDate.slice(0, 8)\n  };\n}, \"formatDate\");\nvar getCanonicalHeaderList = /* @__PURE__ */ __name((headers) => Object.keys(headers).sort().join(\";\"), \"getCanonicalHeaderList\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  getCanonicalHeaders,\n  getCanonicalQuery,\n  getPayloadHash,\n  moveHeadersToQuery,\n  prepareRequest,\n  SignatureV4,\n  createScope,\n  getSigningKey,\n  clearCredentialCache\n});\n\n", "import { doesIdentityRequireRefresh, isIdentityExpired, memoizeIdentityProvider, normalizeProvider, } from \"@smithy/core\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nexport const resolveAwsSdkSigV4Config = (config) => {\n    let normalizedCreds;\n    if (config.credentials) {\n        normalizedCreds = memoizeIdentityProvider(config.credentials, isIdentityExpired, doesIdentityRequireRefresh);\n    }\n    if (!normalizedCreds) {\n        if (config.credentialDefaultProvider) {\n            normalizedCreds = normalizeProvider(config.credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config,\n            })));\n        }\n        else {\n            normalizedCreds = async () => {\n                throw new Error(\"`credentials` is missing\");\n            };\n        }\n    }\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\n    let signer;\n    if (config.signer) {\n        signer = normalizeProvider(config.signer);\n    }\n    else if (config.regionInfoProvider) {\n        signer = () => normalizeProvider(config.region)()\n            .then(async (region) => [\n            (await config.regionInfoProvider(region, {\n                useFipsEndpoint: await config.useFipsEndpoint(),\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            config.signingRegion = config.signingRegion || signingRegion || region;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: normalizedCreds,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await normalizeProvider(config.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: normalizedCreds,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...config,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexport const resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\n", "export * from \"./AwsSdkSigV4Signer\";\nexport * from \"./resolveAwsSdkSigV4Config\";\n", "export * from \"./aws_sdk\";\n", "export const _toStr = (val) => {\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"number\" || typeof val === \"bigint\") {\n        const warning = new Error(`Received number ${val} where a string was expected.`);\n        warning.name = \"Warning\";\n        console.warn(warning);\n        return String(val);\n    }\n    if (typeof val === \"boolean\") {\n        const warning = new Error(`Received boolean ${val} where a string was expected.`);\n        warning.name = \"Warning\";\n        console.warn(warning);\n        return String(val);\n    }\n    return val;\n};\nexport const _toBool = (val) => {\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"number\") {\n    }\n    if (typeof val === \"string\") {\n        const lowercase = val.toLowerCase();\n        if (val !== \"\" && lowercase !== \"false\" && lowercase !== \"true\") {\n            const warning = new Error(`Received string \"${val}\" where a boolean was expected.`);\n            warning.name = \"Warning\";\n            console.warn(warning);\n        }\n        return val !== \"\" && lowercase !== \"false\";\n    }\n    return val;\n};\nexport const _toNum = (val) => {\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"boolean\") {\n    }\n    if (typeof val === \"string\") {\n        const num = Number(val);\n        if (num.toString() !== val) {\n            const warning = new Error(`Received string \"${val}\" where a number was expected.`);\n            warning.name = \"Warning\";\n            console.warn(warning);\n            return val;\n        }\n        return num;\n    }\n    return val;\n};\n", "import { expectUnion } from \"@smithy/smithy-client\";\nexport const awsExpectUnion = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && \"__type\" in value) {\n        delete value.__type;\n    }\n    return expectUnion(value);\n};\n", "import { collectBody } from \"@smithy/smithy-client\";\nexport const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n", "import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n", "'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n", "'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n", "\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;", "'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;", "const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n", "const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n", "'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"\u00A2\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"\u00A3\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"\u00A5\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"\u20AC\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"\u00A9\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"\u00AE\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"\u20B9\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n", "'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n", "const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;", "const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n", "'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup ){\n            listTagVal += this.j2x(item, level + 1).val;\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          listTagVal += this.buildTextValNode(item, key, '', level);\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, '', level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    if (attrStr && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n", "'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}", "import { getValueFromTextNode } from \"@smithy/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { collectBodyString } from \"../common\";\nexport const parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        let parsedObj;\n        try {\n            parsedObj = parser.parse(encoded, true);\n        }\n        catch (e) {\n            if (e && typeof e === \"object\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nexport const parseXmlErrorBody = async (errorBody, context) => {\n    const value = await parseXmlBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nexport const loadRestXmlErrorCode = (output, data) => {\n    if (data?.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n", "export * from \"./coercing-serializers\";\nexport * from \"./json/awsExpectUnion\";\nexport * from \"./json/parseJsonBody\";\nexport * from \"./xml/parseXmlBody\";\n", "export * from \"./submodules/client/index\";\nexport * from \"./submodules/httpAuthSchemes/index\";\nexport * from \"./submodules/protocols/index\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultSSMHttpAuthSchemeProvider = exports.defaultSSMHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultSSMHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultSSMHttpAuthSchemeParametersProvider = defaultSSMHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"ssm\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nconst defaultSSMHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultSSMHttpAuthSchemeProvider = defaultSSMHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return {\n        ...config_0,\n    };\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "{\n  \"name\": \"@aws-sdk/client-ssm\",\n  \"description\": \"AWS SDK for JavaScript Ssm Client for Node.js, Browser and React Native\",\n  \"version\": \"3.614.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-ssm\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo ssm\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/client-sso-oidc\": \"3.614.0\",\n    \"@aws-sdk/client-sts\": \"3.614.0\",\n    \"@aws-sdk/core\": \"3.614.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.614.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.609.0\",\n    \"@aws-sdk/middleware-logger\": \"3.609.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.609.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.614.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.614.0\",\n    \"@aws-sdk/types\": \"3.609.0\",\n    \"@aws-sdk/util-endpoints\": \"3.614.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.609.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.614.0\",\n    \"@smithy/config-resolver\": \"^3.0.5\",\n    \"@smithy/core\": \"^2.2.6\",\n    \"@smithy/fetch-http-handler\": \"^3.2.1\",\n    \"@smithy/hash-node\": \"^3.0.3\",\n    \"@smithy/invalid-dependency\": \"^3.0.3\",\n    \"@smithy/middleware-content-length\": \"^3.0.3\",\n    \"@smithy/middleware-endpoint\": \"^3.0.5\",\n    \"@smithy/middleware-retry\": \"^3.0.9\",\n    \"@smithy/middleware-serde\": \"^3.0.3\",\n    \"@smithy/middleware-stack\": \"^3.0.3\",\n    \"@smithy/node-config-provider\": \"^3.1.4\",\n    \"@smithy/node-http-handler\": \"^3.1.2\",\n    \"@smithy/protocol-http\": \"^4.0.3\",\n    \"@smithy/smithy-client\": \"^3.1.7\",\n    \"@smithy/types\": \"^3.3.0\",\n    \"@smithy/url-parser\": \"^3.0.3\",\n    \"@smithy/util-base64\": \"^3.0.0\",\n    \"@smithy/util-body-length-browser\": \"^3.0.0\",\n    \"@smithy/util-body-length-node\": \"^3.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^3.0.9\",\n    \"@smithy/util-defaults-mode-node\": \"^3.0.9\",\n    \"@smithy/util-endpoints\": \"^2.0.5\",\n    \"@smithy/util-middleware\": \"^3.0.3\",\n    \"@smithy/util-retry\": \"^3.0.3\",\n    \"@smithy/util-utf8\": \"^3.0.0\",\n    \"@smithy/util-waiter\": \"^3.1.2\",\n    \"tslib\": \"^2.6.2\",\n    \"uuid\": \"^9.0.1\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node16\": \"16.1.3\",\n    \"@types/node\": \"^16.18.96\",\n    \"@types/uuid\": \"^9.0.4\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=16.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-ssm\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-ssm\"\n  }\n}\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  ENV_CREDENTIAL_SCOPE: () => ENV_CREDENTIAL_SCOPE,\n  ENV_EXPIRATION: () => ENV_EXPIRATION,\n  ENV_KEY: () => ENV_KEY,\n  ENV_SECRET: () => ENV_SECRET,\n  ENV_SESSION: () => ENV_SESSION,\n  fromEnv: () => fromEnv\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fromEnv.ts\nvar import_property_provider = require(\"@smithy/property-provider\");\nvar ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nvar ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nvar ENV_SESSION = \"AWS_SESSION_TOKEN\";\nvar ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nvar ENV_CREDENTIAL_SCOPE = \"AWS_CREDENTIAL_SCOPE\";\nvar fromEnv = /* @__PURE__ */ __name((init) => async () => {\n  var _a;\n  (_a = init == null ? void 0 : init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-env - fromEnv\");\n  const accessKeyId = process.env[ENV_KEY];\n  const secretAccessKey = process.env[ENV_SECRET];\n  const sessionToken = process.env[ENV_SESSION];\n  const expiry = process.env[ENV_EXPIRATION];\n  const credentialScope = process.env[ENV_CREDENTIAL_SCOPE];\n  if (accessKeyId && secretAccessKey) {\n    return {\n      accessKeyId,\n      secretAccessKey,\n      ...sessionToken && { sessionToken },\n      ...expiry && { expiration: new Date(expiry) },\n      ...credentialScope && { credentialScope }\n    };\n  }\n  throw new import_property_provider.CredentialsProviderError(\"Unable to find environment variable credentials.\", { logger: init == null ? void 0 : init.logger });\n}, \"fromEnv\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  ENV_KEY,\n  ENV_SECRET,\n  ENV_SESSION,\n  ENV_EXPIRATION,\n  ENV_CREDENTIAL_SCOPE,\n  fromEnv\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  DEFAULT_MAX_RETRIES: () => DEFAULT_MAX_RETRIES,\n  DEFAULT_TIMEOUT: () => DEFAULT_TIMEOUT,\n  ENV_CMDS_AUTH_TOKEN: () => ENV_CMDS_AUTH_TOKEN,\n  ENV_CMDS_FULL_URI: () => ENV_CMDS_FULL_URI,\n  ENV_CMDS_RELATIVE_URI: () => ENV_CMDS_RELATIVE_URI,\n  Endpoint: () => Endpoint,\n  fromContainerMetadata: () => fromContainerMetadata,\n  fromInstanceMetadata: () => fromInstanceMetadata,\n  getInstanceMetadataEndpoint: () => getInstanceMetadataEndpoint,\n  httpRequest: () => httpRequest,\n  providerConfigFromInit: () => providerConfigFromInit\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fromContainerMetadata.ts\n\nvar import_url = require(\"url\");\n\n// src/remoteProvider/httpRequest.ts\nvar import_property_provider = require(\"@smithy/property-provider\");\nvar import_buffer = require(\"buffer\");\nvar import_http = require(\"http\");\nfunction httpRequest(options) {\n  return new Promise((resolve, reject) => {\n    var _a;\n    const req = (0, import_http.request)({\n      method: \"GET\",\n      ...options,\n      // Node.js http module doesn't accept hostname with square brackets\n      // Refs: https://github.com/nodejs/node/issues/39738\n      hostname: (_a = options.hostname) == null ? void 0 : _a.replace(/^\\[(.+)\\]$/, \"$1\")\n    });\n    req.on(\"error\", (err) => {\n      reject(Object.assign(new import_property_provider.ProviderError(\"Unable to connect to instance metadata service\"), err));\n      req.destroy();\n    });\n    req.on(\"timeout\", () => {\n      reject(new import_property_provider.ProviderError(\"TimeoutError from instance metadata service\"));\n      req.destroy();\n    });\n    req.on(\"response\", (res) => {\n      const { statusCode = 400 } = res;\n      if (statusCode < 200 || 300 <= statusCode) {\n        reject(\n          Object.assign(new import_property_provider.ProviderError(\"Error response received from instance metadata service\"), { statusCode })\n        );\n        req.destroy();\n      }\n      const chunks = [];\n      res.on(\"data\", (chunk) => {\n        chunks.push(chunk);\n      });\n      res.on(\"end\", () => {\n        resolve(import_buffer.Buffer.concat(chunks));\n        req.destroy();\n      });\n    });\n    req.end();\n  });\n}\n__name(httpRequest, \"httpRequest\");\n\n// src/remoteProvider/ImdsCredentials.ts\nvar isImdsCredentials = /* @__PURE__ */ __name((arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.AccessKeyId === \"string\" && typeof arg.SecretAccessKey === \"string\" && typeof arg.Token === \"string\" && typeof arg.Expiration === \"string\", \"isImdsCredentials\");\nvar fromImdsCredentials = /* @__PURE__ */ __name((creds) => ({\n  accessKeyId: creds.AccessKeyId,\n  secretAccessKey: creds.SecretAccessKey,\n  sessionToken: creds.Token,\n  expiration: new Date(creds.Expiration)\n}), \"fromImdsCredentials\");\n\n// src/remoteProvider/RemoteProviderInit.ts\nvar DEFAULT_TIMEOUT = 1e3;\nvar DEFAULT_MAX_RETRIES = 0;\nvar providerConfigFromInit = /* @__PURE__ */ __name(({\n  maxRetries = DEFAULT_MAX_RETRIES,\n  timeout = DEFAULT_TIMEOUT\n}) => ({ maxRetries, timeout }), \"providerConfigFromInit\");\n\n// src/remoteProvider/retry.ts\nvar retry = /* @__PURE__ */ __name((toRetry, maxRetries) => {\n  let promise = toRetry();\n  for (let i = 0; i < maxRetries; i++) {\n    promise = promise.catch(toRetry);\n  }\n  return promise;\n}, \"retry\");\n\n// src/fromContainerMetadata.ts\nvar ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nvar ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nvar ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nvar fromContainerMetadata = /* @__PURE__ */ __name((init = {}) => {\n  const { timeout, maxRetries } = providerConfigFromInit(init);\n  return () => retry(async () => {\n    const requestOptions = await getCmdsUri({ logger: init.logger });\n    const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n    if (!isImdsCredentials(credsResponse)) {\n      throw new import_property_provider.CredentialsProviderError(\"Invalid response received from instance metadata service.\", {\n        logger: init.logger\n      });\n    }\n    return fromImdsCredentials(credsResponse);\n  }, maxRetries);\n}, \"fromContainerMetadata\");\nvar requestFromEcsImds = /* @__PURE__ */ __name(async (timeout, options) => {\n  if (process.env[ENV_CMDS_AUTH_TOKEN]) {\n    options.headers = {\n      ...options.headers,\n      Authorization: process.env[ENV_CMDS_AUTH_TOKEN]\n    };\n  }\n  const buffer = await httpRequest({\n    ...options,\n    timeout\n  });\n  return buffer.toString();\n}, \"requestFromEcsImds\");\nvar CMDS_IP = \"169.254.170.2\";\nvar GREENGRASS_HOSTS = {\n  localhost: true,\n  \"127.0.0.1\": true\n};\nvar GREENGRASS_PROTOCOLS = {\n  \"http:\": true,\n  \"https:\": true\n};\nvar getCmdsUri = /* @__PURE__ */ __name(async ({ logger }) => {\n  if (process.env[ENV_CMDS_RELATIVE_URI]) {\n    return {\n      hostname: CMDS_IP,\n      path: process.env[ENV_CMDS_RELATIVE_URI]\n    };\n  }\n  if (process.env[ENV_CMDS_FULL_URI]) {\n    const parsed = (0, import_url.parse)(process.env[ENV_CMDS_FULL_URI]);\n    if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n      throw new import_property_provider.CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, {\n        tryNextLink: false,\n        logger\n      });\n    }\n    if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n      throw new import_property_provider.CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, {\n        tryNextLink: false,\n        logger\n      });\n    }\n    return {\n      ...parsed,\n      port: parsed.port ? parseInt(parsed.port, 10) : void 0\n    };\n  }\n  throw new import_property_provider.CredentialsProviderError(\n    `The container metadata credential provider cannot be used unless the ${ENV_CMDS_RELATIVE_URI} or ${ENV_CMDS_FULL_URI} environment variable is set`,\n    {\n      tryNextLink: false,\n      logger\n    }\n  );\n}, \"getCmdsUri\");\n\n// src/fromInstanceMetadata.ts\n\n\n\n// src/error/InstanceMetadataV1FallbackError.ts\n\nvar _InstanceMetadataV1FallbackError = class _InstanceMetadataV1FallbackError extends import_property_provider.CredentialsProviderError {\n  constructor(message, tryNextLink = true) {\n    super(message, tryNextLink);\n    this.tryNextLink = tryNextLink;\n    this.name = \"InstanceMetadataV1FallbackError\";\n    Object.setPrototypeOf(this, _InstanceMetadataV1FallbackError.prototype);\n  }\n};\n__name(_InstanceMetadataV1FallbackError, \"InstanceMetadataV1FallbackError\");\nvar InstanceMetadataV1FallbackError = _InstanceMetadataV1FallbackError;\n\n// src/utils/getInstanceMetadataEndpoint.ts\nvar import_node_config_provider = require(\"@smithy/node-config-provider\");\nvar import_url_parser = require(\"@smithy/url-parser\");\n\n// src/config/Endpoint.ts\nvar Endpoint = /* @__PURE__ */ ((Endpoint2) => {\n  Endpoint2[\"IPv4\"] = \"http://169.254.169.254\";\n  Endpoint2[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n  return Endpoint2;\n})(Endpoint || {});\n\n// src/config/EndpointConfigOptions.ts\nvar ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nvar CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nvar ENDPOINT_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => env[ENV_ENDPOINT_NAME],\n  configFileSelector: (profile) => profile[CONFIG_ENDPOINT_NAME],\n  default: void 0\n};\n\n// src/config/EndpointMode.ts\nvar EndpointMode = /* @__PURE__ */ ((EndpointMode2) => {\n  EndpointMode2[\"IPv4\"] = \"IPv4\";\n  EndpointMode2[\"IPv6\"] = \"IPv6\";\n  return EndpointMode2;\n})(EndpointMode || {});\n\n// src/config/EndpointModeConfigOptions.ts\nvar ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nvar CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nvar ENDPOINT_MODE_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => env[ENV_ENDPOINT_MODE_NAME],\n  configFileSelector: (profile) => profile[CONFIG_ENDPOINT_MODE_NAME],\n  default: \"IPv4\" /* IPv4 */\n};\n\n// src/utils/getInstanceMetadataEndpoint.ts\nvar getInstanceMetadataEndpoint = /* @__PURE__ */ __name(async () => (0, import_url_parser.parseUrl)(await getFromEndpointConfig() || await getFromEndpointModeConfig()), \"getInstanceMetadataEndpoint\");\nvar getFromEndpointConfig = /* @__PURE__ */ __name(async () => (0, import_node_config_provider.loadConfig)(ENDPOINT_CONFIG_OPTIONS)(), \"getFromEndpointConfig\");\nvar getFromEndpointModeConfig = /* @__PURE__ */ __name(async () => {\n  const endpointMode = await (0, import_node_config_provider.loadConfig)(ENDPOINT_MODE_CONFIG_OPTIONS)();\n  switch (endpointMode) {\n    case \"IPv4\" /* IPv4 */:\n      return \"http://169.254.169.254\" /* IPv4 */;\n    case \"IPv6\" /* IPv6 */:\n      return \"http://[fd00:ec2::254]\" /* IPv6 */;\n    default:\n      throw new Error(`Unsupported endpoint mode: ${endpointMode}. Select from ${Object.values(EndpointMode)}`);\n  }\n}, \"getFromEndpointModeConfig\");\n\n// src/utils/getExtendedInstanceMetadataCredentials.ts\nvar STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\nvar STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nvar STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nvar getExtendedInstanceMetadataCredentials = /* @__PURE__ */ __name((credentials, logger) => {\n  const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS + Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n  const newExpiration = new Date(Date.now() + refreshInterval * 1e3);\n  logger.warn(\n    `Attempting credential expiration extension due to a credential service availability issue. A refresh of these credentials will be attempted after ${new Date(newExpiration)}.\nFor more information, please visit: ` + STATIC_STABILITY_DOC_URL\n  );\n  const originalExpiration = credentials.originalExpiration ?? credentials.expiration;\n  return {\n    ...credentials,\n    ...originalExpiration ? { originalExpiration } : {},\n    expiration: newExpiration\n  };\n}, \"getExtendedInstanceMetadataCredentials\");\n\n// src/utils/staticStabilityProvider.ts\nvar staticStabilityProvider = /* @__PURE__ */ __name((provider, options = {}) => {\n  const logger = (options == null ? void 0 : options.logger) || console;\n  let pastCredentials;\n  return async () => {\n    let credentials;\n    try {\n      credentials = await provider();\n      if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n        credentials = getExtendedInstanceMetadataCredentials(credentials, logger);\n      }\n    } catch (e) {\n      if (pastCredentials) {\n        logger.warn(\"Credential renew failed: \", e);\n        credentials = getExtendedInstanceMetadataCredentials(pastCredentials, logger);\n      } else {\n        throw e;\n      }\n    }\n    pastCredentials = credentials;\n    return credentials;\n  };\n}, \"staticStabilityProvider\");\n\n// src/fromInstanceMetadata.ts\nvar IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nvar IMDS_TOKEN_PATH = \"/latest/api/token\";\nvar AWS_EC2_METADATA_V1_DISABLED = \"AWS_EC2_METADATA_V1_DISABLED\";\nvar PROFILE_AWS_EC2_METADATA_V1_DISABLED = \"ec2_metadata_v1_disabled\";\nvar X_AWS_EC2_METADATA_TOKEN = \"x-aws-ec2-metadata-token\";\nvar fromInstanceMetadata = /* @__PURE__ */ __name((init = {}) => staticStabilityProvider(getInstanceMetadataProvider(init), { logger: init.logger }), \"fromInstanceMetadata\");\nvar getInstanceMetadataProvider = /* @__PURE__ */ __name((init = {}) => {\n  let disableFetchToken = false;\n  const { logger, profile } = init;\n  const { timeout, maxRetries } = providerConfigFromInit(init);\n  const getCredentials = /* @__PURE__ */ __name(async (maxRetries2, options) => {\n    var _a;\n    const isImdsV1Fallback = disableFetchToken || ((_a = options.headers) == null ? void 0 : _a[X_AWS_EC2_METADATA_TOKEN]) == null;\n    if (isImdsV1Fallback) {\n      let fallbackBlockedFromProfile = false;\n      let fallbackBlockedFromProcessEnv = false;\n      const configValue = await (0, import_node_config_provider.loadConfig)(\n        {\n          environmentVariableSelector: (env) => {\n            const envValue = env[AWS_EC2_METADATA_V1_DISABLED];\n            fallbackBlockedFromProcessEnv = !!envValue && envValue !== \"false\";\n            if (envValue === void 0) {\n              throw new import_property_provider.CredentialsProviderError(\n                `${AWS_EC2_METADATA_V1_DISABLED} not set in env, checking config file next.`,\n                { logger: init.logger }\n              );\n            }\n            return fallbackBlockedFromProcessEnv;\n          },\n          configFileSelector: (profile2) => {\n            const profileValue = profile2[PROFILE_AWS_EC2_METADATA_V1_DISABLED];\n            fallbackBlockedFromProfile = !!profileValue && profileValue !== \"false\";\n            return fallbackBlockedFromProfile;\n          },\n          default: false\n        },\n        {\n          profile\n        }\n      )();\n      if (init.ec2MetadataV1Disabled || configValue) {\n        const causes = [];\n        if (init.ec2MetadataV1Disabled)\n          causes.push(\"credential provider initialization (runtime option ec2MetadataV1Disabled)\");\n        if (fallbackBlockedFromProfile)\n          causes.push(`config file profile (${PROFILE_AWS_EC2_METADATA_V1_DISABLED})`);\n        if (fallbackBlockedFromProcessEnv)\n          causes.push(`process environment variable (${AWS_EC2_METADATA_V1_DISABLED})`);\n        throw new InstanceMetadataV1FallbackError(\n          `AWS EC2 Metadata v1 fallback has been blocked by AWS SDK configuration in the following: [${causes.join(\n            \", \"\n          )}].`\n        );\n      }\n    }\n    const imdsProfile = (await retry(async () => {\n      let profile2;\n      try {\n        profile2 = await getProfile(options);\n      } catch (err) {\n        if (err.statusCode === 401) {\n          disableFetchToken = false;\n        }\n        throw err;\n      }\n      return profile2;\n    }, maxRetries2)).trim();\n    return retry(async () => {\n      let creds;\n      try {\n        creds = await getCredentialsFromProfile(imdsProfile, options, init);\n      } catch (err) {\n        if (err.statusCode === 401) {\n          disableFetchToken = false;\n        }\n        throw err;\n      }\n      return creds;\n    }, maxRetries2);\n  }, \"getCredentials\");\n  return async () => {\n    const endpoint = await getInstanceMetadataEndpoint();\n    if (disableFetchToken) {\n      logger == null ? void 0 : logger.debug(\"AWS SDK Instance Metadata\", \"using v1 fallback (no token fetch)\");\n      return getCredentials(maxRetries, { ...endpoint, timeout });\n    } else {\n      let token;\n      try {\n        token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n      } catch (error) {\n        if ((error == null ? void 0 : error.statusCode) === 400) {\n          throw Object.assign(error, {\n            message: \"EC2 Metadata token request returned error\"\n          });\n        } else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n          disableFetchToken = true;\n        }\n        logger == null ? void 0 : logger.debug(\"AWS SDK Instance Metadata\", \"using v1 fallback (initial)\");\n        return getCredentials(maxRetries, { ...endpoint, timeout });\n      }\n      return getCredentials(maxRetries, {\n        ...endpoint,\n        headers: {\n          [X_AWS_EC2_METADATA_TOKEN]: token\n        },\n        timeout\n      });\n    }\n  };\n}, \"getInstanceMetadataProvider\");\nvar getMetadataToken = /* @__PURE__ */ __name(async (options) => httpRequest({\n  ...options,\n  path: IMDS_TOKEN_PATH,\n  method: \"PUT\",\n  headers: {\n    \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\"\n  }\n}), \"getMetadataToken\");\nvar getProfile = /* @__PURE__ */ __name(async (options) => (await httpRequest({ ...options, path: IMDS_PATH })).toString(), \"getProfile\");\nvar getCredentialsFromProfile = /* @__PURE__ */ __name(async (profile, options, init) => {\n  const credentialsResponse = JSON.parse(\n    (await httpRequest({\n      ...options,\n      path: IMDS_PATH + profile\n    })).toString()\n  );\n  if (!isImdsCredentials(credentialsResponse)) {\n    throw new import_property_provider.CredentialsProviderError(\"Invalid response received from instance metadata service.\", {\n      logger: init.logger\n    });\n  }\n  return fromImdsCredentials(credentialsResponse);\n}, \"getCredentialsFromProfile\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  httpRequest,\n  getInstanceMetadataEndpoint,\n  Endpoint,\n  ENV_CMDS_FULL_URI,\n  ENV_CMDS_RELATIVE_URI,\n  ENV_CMDS_AUTH_TOKEN,\n  fromContainerMetadata,\n  fromInstanceMetadata,\n  DEFAULT_TIMEOUT,\n  DEFAULT_MAX_RETRIES,\n  providerConfigFromInit\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkUrl = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst LOOPBACK_CIDR_IPv4 = \"127.0.0.0/8\";\nconst LOOPBACK_CIDR_IPv6 = \"::1/128\";\nconst ECS_CONTAINER_HOST = \"169.254.170.2\";\nconst EKS_CONTAINER_HOST_IPv4 = \"169.254.170.23\";\nconst EKS_CONTAINER_HOST_IPv6 = \"[fd00:ec2::23]\";\nconst checkUrl = (url, logger) => {\n    if (url.protocol === \"https:\") {\n        return;\n    }\n    if (url.hostname === ECS_CONTAINER_HOST ||\n        url.hostname === EKS_CONTAINER_HOST_IPv4 ||\n        url.hostname === EKS_CONTAINER_HOST_IPv6) {\n        return;\n    }\n    if (url.hostname.includes(\"[\")) {\n        if (url.hostname === \"[::1]\" || url.hostname === \"[0000:0000:0000:0000:0000:0000:0000:0001]\") {\n            return;\n        }\n    }\n    else {\n        if (url.hostname === \"localhost\") {\n            return;\n        }\n        const ipComponents = url.hostname.split(\".\");\n        const inRange = (component) => {\n            const num = parseInt(component, 10);\n            return 0 <= num && num <= 255;\n        };\n        if (ipComponents[0] === \"127\" &&\n            inRange(ipComponents[1]) &&\n            inRange(ipComponents[2]) &&\n            inRange(ipComponents[3]) &&\n            ipComponents.length === 4) {\n            return;\n        }\n    }\n    throw new property_provider_1.CredentialsProviderError(`URL not accepted. It must either be HTTPS or match one of the following:\n  - loopback CIDR 127.0.0.0/8 or [::1/128]\n  - ECS container host 169.254.170.2\n  - EKS container host 169.254.170.23 or [fd00:ec2::23]`, { logger });\n};\nexports.checkUrl = checkUrl;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCredentials = exports.createGetRequest = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_stream_1 = require(\"@smithy/util-stream\");\nfunction createGetRequest(url) {\n    return new protocol_http_1.HttpRequest({\n        protocol: url.protocol,\n        hostname: url.hostname,\n        port: Number(url.port),\n        path: url.pathname,\n        query: Array.from(url.searchParams.entries()).reduce((acc, [k, v]) => {\n            acc[k] = v;\n            return acc;\n        }, {}),\n        fragment: url.hash,\n    });\n}\nexports.createGetRequest = createGetRequest;\nasync function getCredentials(response, logger) {\n    const stream = (0, util_stream_1.sdkStreamMixin)(response.body);\n    const str = await stream.transformToString();\n    if (response.statusCode === 200) {\n        const parsed = JSON.parse(str);\n        if (typeof parsed.AccessKeyId !== \"string\" ||\n            typeof parsed.SecretAccessKey !== \"string\" ||\n            typeof parsed.Token !== \"string\" ||\n            typeof parsed.Expiration !== \"string\") {\n            throw new property_provider_1.CredentialsProviderError(\"HTTP credential provider response not of the required format, an object matching: \" +\n                \"{ AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }\", { logger });\n        }\n        return {\n            accessKeyId: parsed.AccessKeyId,\n            secretAccessKey: parsed.SecretAccessKey,\n            sessionToken: parsed.Token,\n            expiration: (0, smithy_client_1.parseRfc3339DateTime)(parsed.Expiration),\n        };\n    }\n    if (response.statusCode >= 400 && response.statusCode < 500) {\n        let parsedBody = {};\n        try {\n            parsedBody = JSON.parse(str);\n        }\n        catch (e) { }\n        throw Object.assign(new property_provider_1.CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger }), {\n            Code: parsedBody.Code,\n            Message: parsedBody.Message,\n        });\n    }\n    throw new property_provider_1.CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger });\n}\nexports.getCredentials = getCredentials;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retryWrapper = void 0;\nconst retryWrapper = (toRetry, maxRetries, delayMs) => {\n    return async () => {\n        for (let i = 0; i < maxRetries; ++i) {\n            try {\n                return await toRetry();\n            }\n            catch (e) {\n                await new Promise((resolve) => setTimeout(resolve, delayMs));\n            }\n        }\n        return await toRetry();\n    };\n};\nexports.retryWrapper = retryWrapper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromHttp = void 0;\nconst tslib_1 = require(\"tslib\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst promises_1 = tslib_1.__importDefault(require(\"fs/promises\"));\nconst checkUrl_1 = require(\"./checkUrl\");\nconst requestHelpers_1 = require(\"./requestHelpers\");\nconst retry_wrapper_1 = require(\"./retry-wrapper\");\nconst AWS_CONTAINER_CREDENTIALS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nconst DEFAULT_LINK_LOCAL_HOST = \"http://169.254.170.2\";\nconst AWS_CONTAINER_CREDENTIALS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE = \"AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nconst fromHttp = (options = {}) => {\n    options.logger?.debug(\"@aws-sdk/credential-provider-http - fromHttp\");\n    let host;\n    const relative = options.awsContainerCredentialsRelativeUri ?? process.env[AWS_CONTAINER_CREDENTIALS_RELATIVE_URI];\n    const full = options.awsContainerCredentialsFullUri ?? process.env[AWS_CONTAINER_CREDENTIALS_FULL_URI];\n    const token = options.awsContainerAuthorizationToken ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN];\n    const tokenFile = options.awsContainerAuthorizationTokenFile ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE];\n    const warn = options.logger?.constructor?.name === \"NoOpLogger\" || !options.logger ? console.warn : options.logger.warn;\n    if (relative && full) {\n        warn(\"@aws-sdk/credential-provider-http: \" +\n            \"you have set both awsContainerCredentialsRelativeUri and awsContainerCredentialsFullUri.\");\n        warn(\"awsContainerCredentialsFullUri will take precedence.\");\n    }\n    if (token && tokenFile) {\n        warn(\"@aws-sdk/credential-provider-http: \" +\n            \"you have set both awsContainerAuthorizationToken and awsContainerAuthorizationTokenFile.\");\n        warn(\"awsContainerAuthorizationToken will take precedence.\");\n    }\n    if (full) {\n        host = full;\n    }\n    else if (relative) {\n        host = `${DEFAULT_LINK_LOCAL_HOST}${relative}`;\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`No HTTP credential provider host provided.\nSet AWS_CONTAINER_CREDENTIALS_FULL_URI or AWS_CONTAINER_CREDENTIALS_RELATIVE_URI.`, { logger: options.logger });\n    }\n    const url = new URL(host);\n    (0, checkUrl_1.checkUrl)(url, options.logger);\n    const requestHandler = new node_http_handler_1.NodeHttpHandler({\n        requestTimeout: options.timeout ?? 1000,\n        connectionTimeout: options.timeout ?? 1000,\n    });\n    return (0, retry_wrapper_1.retryWrapper)(async () => {\n        const request = (0, requestHelpers_1.createGetRequest)(url);\n        if (token) {\n            request.headers.Authorization = token;\n        }\n        else if (tokenFile) {\n            request.headers.Authorization = (await promises_1.default.readFile(tokenFile)).toString();\n        }\n        try {\n            const result = await requestHandler.handle(request);\n            return (0, requestHelpers_1.getCredentials)(result.response);\n        }\n        catch (e) {\n            throw new property_provider_1.CredentialsProviderError(String(e), { logger: options.logger });\n        }\n    }, options.maxRetries ?? 3, options.timeout ?? 1000);\n};\nexports.fromHttp = fromHttp;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromHttp = void 0;\nvar fromHttp_1 = require(\"./fromHttp/fromHttp\");\nObject.defineProperty(exports, \"fromHttp\", { enumerable: true, get: function () { return fromHttp_1.fromHttp; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultSSOHttpAuthSchemeProvider = exports.defaultSSOHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultSSOHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultSSOHttpAuthSchemeParametersProvider = defaultSSOHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"awsssoportal\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nconst defaultSSOHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"GetRoleCredentials\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccountRoles\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccounts\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"Logout\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultSSOHttpAuthSchemeProvider = defaultSSOHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return {\n        ...config_0,\n    };\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "{\n  \"name\": \"@aws-sdk/client-sso\",\n  \"description\": \"AWS SDK for JavaScript Sso Client for Node.js, Browser and React Native\",\n  \"version\": \"3.614.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-sso\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sso\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.614.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.609.0\",\n    \"@aws-sdk/middleware-logger\": \"3.609.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.609.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.614.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.614.0\",\n    \"@aws-sdk/types\": \"3.609.0\",\n    \"@aws-sdk/util-endpoints\": \"3.614.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.609.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.614.0\",\n    \"@smithy/config-resolver\": \"^3.0.5\",\n    \"@smithy/core\": \"^2.2.6\",\n    \"@smithy/fetch-http-handler\": \"^3.2.1\",\n    \"@smithy/hash-node\": \"^3.0.3\",\n    \"@smithy/invalid-dependency\": \"^3.0.3\",\n    \"@smithy/middleware-content-length\": \"^3.0.3\",\n    \"@smithy/middleware-endpoint\": \"^3.0.5\",\n    \"@smithy/middleware-retry\": \"^3.0.9\",\n    \"@smithy/middleware-serde\": \"^3.0.3\",\n    \"@smithy/middleware-stack\": \"^3.0.3\",\n    \"@smithy/node-config-provider\": \"^3.1.4\",\n    \"@smithy/node-http-handler\": \"^3.1.2\",\n    \"@smithy/protocol-http\": \"^4.0.3\",\n    \"@smithy/smithy-client\": \"^3.1.7\",\n    \"@smithy/types\": \"^3.3.0\",\n    \"@smithy/url-parser\": \"^3.0.3\",\n    \"@smithy/util-base64\": \"^3.0.0\",\n    \"@smithy/util-body-length-browser\": \"^3.0.0\",\n    \"@smithy/util-body-length-node\": \"^3.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^3.0.9\",\n    \"@smithy/util-defaults-mode-node\": \"^3.0.9\",\n    \"@smithy/util-endpoints\": \"^2.0.5\",\n    \"@smithy/util-middleware\": \"^3.0.3\",\n    \"@smithy/util-retry\": \"^3.0.3\",\n    \"@smithy/util-utf8\": \"^3.0.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node16\": \"16.1.3\",\n    \"@types/node\": \"^16.18.96\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=16.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sso\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sso\"\n  }\n}\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  UA_APP_ID_ENV_NAME: () => UA_APP_ID_ENV_NAME,\n  UA_APP_ID_INI_NAME: () => UA_APP_ID_INI_NAME,\n  crtAvailability: () => crtAvailability,\n  defaultUserAgent: () => defaultUserAgent\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_node_config_provider = require(\"@smithy/node-config-provider\");\nvar import_os = require(\"os\");\nvar import_process = require(\"process\");\n\n// src/crt-availability.ts\nvar crtAvailability = {\n  isCrtAvailable: false\n};\n\n// src/is-crt-available.ts\nvar isCrtAvailable = /* @__PURE__ */ __name(() => {\n  if (crtAvailability.isCrtAvailable) {\n    return [\"md/crt-avail\"];\n  }\n  return null;\n}, \"isCrtAvailable\");\n\n// src/index.ts\nvar UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nvar UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nvar defaultUserAgent = /* @__PURE__ */ __name(({ serviceId, clientVersion }) => {\n  const sections = [\n    // sdk-metadata\n    [\"aws-sdk-js\", clientVersion],\n    // ua-metadata\n    [\"ua\", \"2.0\"],\n    // os-metadata\n    [`os/${(0, import_os.platform)()}`, (0, import_os.release)()],\n    // language-metadata\n    // ECMAScript edition doesn't matter in JS, so no version needed.\n    [\"lang/js\"],\n    [\"md/nodejs\", `${import_process.versions.node}`]\n  ];\n  const crtAvailable = isCrtAvailable();\n  if (crtAvailable) {\n    sections.push(crtAvailable);\n  }\n  if (serviceId) {\n    sections.push([`api/${serviceId}`, clientVersion]);\n  }\n  if (import_process.env.AWS_EXECUTION_ENV) {\n    sections.push([`exec-env/${import_process.env.AWS_EXECUTION_ENV}`]);\n  }\n  const appIdPromise = (0, import_node_config_provider.loadConfig)({\n    environmentVariableSelector: (env2) => env2[UA_APP_ID_ENV_NAME],\n    configFileSelector: (profile) => profile[UA_APP_ID_INI_NAME],\n    default: void 0\n  })();\n  let resolvedUserAgent = void 0;\n  return async () => {\n    if (!resolvedUserAgent) {\n      const appId = await appIdPromise;\n      resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n    }\n    return resolvedUserAgent;\n  };\n}, \"defaultUserAgent\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  crtAvailability,\n  UA_APP_ID_ENV_NAME,\n  UA_APP_ID_INI_NAME,\n  defaultUserAgent\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Hash: () => Hash\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_util_buffer_from = require(\"@smithy/util-buffer-from\");\nvar import_util_utf8 = require(\"@smithy/util-utf8\");\nvar import_buffer = require(\"buffer\");\nvar import_crypto = require(\"crypto\");\nvar _Hash = class _Hash {\n  constructor(algorithmIdentifier, secret) {\n    this.algorithmIdentifier = algorithmIdentifier;\n    this.secret = secret;\n    this.reset();\n  }\n  update(toHash, encoding) {\n    this.hash.update((0, import_util_utf8.toUint8Array)(castSourceData(toHash, encoding)));\n  }\n  digest() {\n    return Promise.resolve(this.hash.digest());\n  }\n  reset() {\n    this.hash = this.secret ? (0, import_crypto.createHmac)(this.algorithmIdentifier, castSourceData(this.secret)) : (0, import_crypto.createHash)(this.algorithmIdentifier);\n  }\n};\n__name(_Hash, \"Hash\");\nvar Hash = _Hash;\nfunction castSourceData(toCast, encoding) {\n  if (import_buffer.Buffer.isBuffer(toCast)) {\n    return toCast;\n  }\n  if (typeof toCast === \"string\") {\n    return (0, import_util_buffer_from.fromString)(toCast, encoding);\n  }\n  if (ArrayBuffer.isView(toCast)) {\n    return (0, import_util_buffer_from.fromArrayBuffer)(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n  }\n  return (0, import_util_buffer_from.fromArrayBuffer)(toCast);\n}\n__name(castSourceData, \"castSourceData\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  Hash\n});\n\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  calculateBodyLength: () => calculateBodyLength\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/calculateBodyLength.ts\nvar import_fs = require(\"fs\");\nvar calculateBodyLength = /* @__PURE__ */ __name((body) => {\n  if (!body) {\n    return 0;\n  }\n  if (typeof body === \"string\") {\n    return Buffer.byteLength(body);\n  } else if (typeof body.byteLength === \"number\") {\n    return body.byteLength;\n  } else if (typeof body.size === \"number\") {\n    return body.size;\n  } else if (typeof body.start === \"number\" && typeof body.end === \"number\") {\n    return body.end + 1 - body.start;\n  } else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n    return (0, import_fs.lstatSync)(body.path).size;\n  } else if (typeof body.fd === \"number\") {\n    return (0, import_fs.fstatSync)(body.fd).size;\n  }\n  throw new Error(`Body Length computation failed for ${body}`);\n}, \"calculateBodyLength\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  calculateBodyLength\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, \"supportsFIPS\"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [{ [x]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: \"stringEquals\", [w]: [{ [v]: h, [w]: [p, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://portal.sso.{Region}.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst core_2 = require(\"@smithy/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSSOHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new core_2.NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  resolveDefaultsModeConfig: () => resolveDefaultsModeConfig\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/resolveDefaultsModeConfig.ts\nvar import_config_resolver = require(\"@smithy/config-resolver\");\nvar import_node_config_provider = require(\"@smithy/node-config-provider\");\nvar import_property_provider = require(\"@smithy/property-provider\");\n\n// src/constants.ts\nvar AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nvar AWS_REGION_ENV = \"AWS_REGION\";\nvar AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nvar ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nvar DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nvar IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n\n// src/defaultsModeConfig.ts\nvar AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nvar AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nvar NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => {\n    return env[AWS_DEFAULTS_MODE_ENV];\n  },\n  configFileSelector: (profile) => {\n    return profile[AWS_DEFAULTS_MODE_CONFIG];\n  },\n  default: \"legacy\"\n};\n\n// src/resolveDefaultsModeConfig.ts\nvar resolveDefaultsModeConfig = /* @__PURE__ */ __name(({\n  region = (0, import_node_config_provider.loadConfig)(import_config_resolver.NODE_REGION_CONFIG_OPTIONS),\n  defaultsMode = (0, import_node_config_provider.loadConfig)(NODE_DEFAULTS_MODE_CONFIG_OPTIONS)\n} = {}) => (0, import_property_provider.memoize)(async () => {\n  const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n  switch (mode == null ? void 0 : mode.toLowerCase()) {\n    case \"auto\":\n      return resolveNodeDefaultsModeAuto(region);\n    case \"in-region\":\n    case \"cross-region\":\n    case \"mobile\":\n    case \"standard\":\n    case \"legacy\":\n      return Promise.resolve(mode == null ? void 0 : mode.toLocaleLowerCase());\n    case void 0:\n      return Promise.resolve(\"legacy\");\n    default:\n      throw new Error(\n        `Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`\n      );\n  }\n}), \"resolveDefaultsModeConfig\");\nvar resolveNodeDefaultsModeAuto = /* @__PURE__ */ __name(async (clientRegion) => {\n  if (clientRegion) {\n    const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n    const inferredRegion = await inferPhysicalRegion();\n    if (!inferredRegion) {\n      return \"standard\";\n    }\n    if (resolvedRegion === inferredRegion) {\n      return \"in-region\";\n    } else {\n      return \"cross-region\";\n    }\n  }\n  return \"standard\";\n}, \"resolveNodeDefaultsModeAuto\");\nvar inferPhysicalRegion = /* @__PURE__ */ __name(async () => {\n  if (process.env[AWS_EXECUTION_ENV] && (process.env[AWS_REGION_ENV] || process.env[AWS_DEFAULT_REGION_ENV])) {\n    return process.env[AWS_REGION_ENV] ?? process.env[AWS_DEFAULT_REGION_ENV];\n  }\n  if (!process.env[ENV_IMDS_DISABLED]) {\n    try {\n      const { getInstanceMetadataEndpoint, httpRequest } = await Promise.resolve().then(() => __toESM(require(\"@smithy/credential-provider-imds\")));\n      const endpoint = await getInstanceMetadataEndpoint();\n      return (await httpRequest({ ...endpoint, path: IMDS_REGION_PATH })).toString();\n    } catch (e) {\n    }\n  }\n}, \"inferPhysicalRegion\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  resolveDefaultsModeConfig\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  NODE_REGION_CONFIG_FILE_OPTIONS: () => NODE_REGION_CONFIG_FILE_OPTIONS,\n  NODE_REGION_CONFIG_OPTIONS: () => NODE_REGION_CONFIG_OPTIONS,\n  REGION_ENV_NAME: () => REGION_ENV_NAME,\n  REGION_INI_NAME: () => REGION_INI_NAME,\n  getAwsRegionExtensionConfiguration: () => getAwsRegionExtensionConfiguration,\n  resolveAwsRegionExtensionConfiguration: () => resolveAwsRegionExtensionConfiguration,\n  resolveRegionConfig: () => resolveRegionConfig\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/extensions/index.ts\nvar getAwsRegionExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  let runtimeConfigRegion = /* @__PURE__ */ __name(async () => {\n    if (runtimeConfig.region === void 0) {\n      throw new Error(\"Region is missing from runtimeConfig\");\n    }\n    const region = runtimeConfig.region;\n    if (typeof region === \"string\") {\n      return region;\n    }\n    return region();\n  }, \"runtimeConfigRegion\");\n  return {\n    setRegion(region) {\n      runtimeConfigRegion = region;\n    },\n    region() {\n      return runtimeConfigRegion;\n    }\n  };\n}, \"getAwsRegionExtensionConfiguration\");\nvar resolveAwsRegionExtensionConfiguration = /* @__PURE__ */ __name((awsRegionExtensionConfiguration) => {\n  return {\n    region: awsRegionExtensionConfiguration.region()\n  };\n}, \"resolveAwsRegionExtensionConfiguration\");\n\n// src/regionConfig/config.ts\nvar REGION_ENV_NAME = \"AWS_REGION\";\nvar REGION_INI_NAME = \"region\";\nvar NODE_REGION_CONFIG_OPTIONS = {\n  environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n  configFileSelector: (profile) => profile[REGION_INI_NAME],\n  default: () => {\n    throw new Error(\"Region is missing\");\n  }\n};\nvar NODE_REGION_CONFIG_FILE_OPTIONS = {\n  preferredFile: \"credentials\"\n};\n\n// src/regionConfig/isFipsRegion.ts\nvar isFipsRegion = /* @__PURE__ */ __name((region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\")), \"isFipsRegion\");\n\n// src/regionConfig/getRealRegion.ts\nvar getRealRegion = /* @__PURE__ */ __name((region) => isFipsRegion(region) ? [\"fips-aws-global\", \"aws-fips\"].includes(region) ? \"us-east-1\" : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\") : region, \"getRealRegion\");\n\n// src/regionConfig/resolveRegionConfig.ts\nvar resolveRegionConfig = /* @__PURE__ */ __name((input) => {\n  const { region, useFipsEndpoint } = input;\n  if (!region) {\n    throw new Error(\"Region is missing\");\n  }\n  return {\n    ...input,\n    region: async () => {\n      if (typeof region === \"string\") {\n        return getRealRegion(region);\n      }\n      const providedRegion = await region();\n      return getRealRegion(providedRegion);\n    },\n    useFipsEndpoint: async () => {\n      const providedRegion = typeof region === \"string\" ? region : await region();\n      if (isFipsRegion(providedRegion)) {\n        return true;\n      }\n      return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n    }\n  };\n}, \"resolveRegionConfig\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  getAwsRegionExtensionConfiguration,\n  resolveAwsRegionExtensionConfiguration,\n  REGION_ENV_NAME,\n  REGION_INI_NAME,\n  NODE_REGION_CONFIG_OPTIONS,\n  NODE_REGION_CONFIG_FILE_OPTIONS,\n  resolveRegionConfig\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  GetRoleCredentialsCommand: () => GetRoleCredentialsCommand,\n  GetRoleCredentialsRequestFilterSensitiveLog: () => GetRoleCredentialsRequestFilterSensitiveLog,\n  GetRoleCredentialsResponseFilterSensitiveLog: () => GetRoleCredentialsResponseFilterSensitiveLog,\n  InvalidRequestException: () => InvalidRequestException,\n  ListAccountRolesCommand: () => ListAccountRolesCommand,\n  ListAccountRolesRequestFilterSensitiveLog: () => ListAccountRolesRequestFilterSensitiveLog,\n  ListAccountsCommand: () => ListAccountsCommand,\n  ListAccountsRequestFilterSensitiveLog: () => ListAccountsRequestFilterSensitiveLog,\n  LogoutCommand: () => LogoutCommand,\n  LogoutRequestFilterSensitiveLog: () => LogoutRequestFilterSensitiveLog,\n  ResourceNotFoundException: () => ResourceNotFoundException,\n  RoleCredentialsFilterSensitiveLog: () => RoleCredentialsFilterSensitiveLog,\n  SSO: () => SSO,\n  SSOClient: () => SSOClient,\n  SSOServiceException: () => SSOServiceException,\n  TooManyRequestsException: () => TooManyRequestsException,\n  UnauthorizedException: () => UnauthorizedException,\n  __Client: () => import_smithy_client.Client,\n  paginateListAccountRoles: () => paginateListAccountRoles,\n  paginateListAccounts: () => paginateListAccounts\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/SSOClient.ts\nvar import_middleware_host_header = require(\"@aws-sdk/middleware-host-header\");\nvar import_middleware_logger = require(\"@aws-sdk/middleware-logger\");\nvar import_middleware_recursion_detection = require(\"@aws-sdk/middleware-recursion-detection\");\nvar import_middleware_user_agent = require(\"@aws-sdk/middleware-user-agent\");\nvar import_config_resolver = require(\"@smithy/config-resolver\");\nvar import_core = require(\"@smithy/core\");\nvar import_middleware_content_length = require(\"@smithy/middleware-content-length\");\nvar import_middleware_endpoint = require(\"@smithy/middleware-endpoint\");\nvar import_middleware_retry = require(\"@smithy/middleware-retry\");\n\nvar import_httpAuthSchemeProvider = require(\"./auth/httpAuthSchemeProvider\");\n\n// src/endpoint/EndpointParameters.ts\nvar resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {\n  return {\n    ...options,\n    useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n    useFipsEndpoint: options.useFipsEndpoint ?? false,\n    defaultSigningName: \"awsssoportal\"\n  };\n}, \"resolveClientEndpointParameters\");\nvar commonParams = {\n  UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n  Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n  Region: { type: \"builtInParams\", name: \"region\" },\n  UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" }\n};\n\n// src/SSOClient.ts\nvar import_runtimeConfig = require(\"././runtimeConfig\");\n\n// src/runtimeExtensions.ts\nvar import_region_config_resolver = require(\"@aws-sdk/region-config-resolver\");\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar import_smithy_client = require(\"@smithy/smithy-client\");\n\n// src/auth/httpAuthExtensionConfiguration.ts\nvar getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n  let _credentials = runtimeConfig.credentials;\n  return {\n    setHttpAuthScheme(httpAuthScheme) {\n      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n      if (index === -1) {\n        _httpAuthSchemes.push(httpAuthScheme);\n      } else {\n        _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n      }\n    },\n    httpAuthSchemes() {\n      return _httpAuthSchemes;\n    },\n    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n      _httpAuthSchemeProvider = httpAuthSchemeProvider;\n    },\n    httpAuthSchemeProvider() {\n      return _httpAuthSchemeProvider;\n    },\n    setCredentials(credentials) {\n      _credentials = credentials;\n    },\n    credentials() {\n      return _credentials;\n    }\n  };\n}, \"getHttpAuthExtensionConfiguration\");\nvar resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {\n  return {\n    httpAuthSchemes: config.httpAuthSchemes(),\n    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n    credentials: config.credentials()\n  };\n}, \"resolveHttpAuthRuntimeConfig\");\n\n// src/runtimeExtensions.ts\nvar asPartial = /* @__PURE__ */ __name((t) => t, \"asPartial\");\nvar resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {\n  const extensionConfiguration = {\n    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),\n    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))\n  };\n  extensions.forEach((extension) => extension.configure(extensionConfiguration));\n  return {\n    ...runtimeConfig,\n    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),\n    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),\n    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)\n  };\n}, \"resolveRuntimeExtensions\");\n\n// src/SSOClient.ts\nvar _SSOClient = class _SSOClient extends import_smithy_client.Client {\n  constructor(...[configuration]) {\n    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});\n    const _config_1 = resolveClientEndpointParameters(_config_0);\n    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);\n    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);\n    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);\n    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);\n    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);\n    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);\n    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);\n    super(_config_8);\n    this.config = _config_8;\n    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));\n    this.middlewareStack.use(\n      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()\n      })\n    );\n    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));\n  }\n  /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */\n  destroy() {\n    super.destroy();\n  }\n  getDefaultHttpAuthSchemeParametersProvider() {\n    return import_httpAuthSchemeProvider.defaultSSOHttpAuthSchemeParametersProvider;\n  }\n  getIdentityProviderConfigProvider() {\n    return async (config) => new import_core.DefaultIdentityProviderConfig({\n      \"aws.auth#sigv4\": config.credentials\n    });\n  }\n};\n__name(_SSOClient, \"SSOClient\");\nvar SSOClient = _SSOClient;\n\n// src/SSO.ts\n\n\n// src/commands/GetRoleCredentialsCommand.ts\n\nvar import_middleware_serde = require(\"@smithy/middleware-serde\");\n\n\n// src/models/models_0.ts\n\n\n// src/models/SSOServiceException.ts\n\nvar _SSOServiceException = class _SSOServiceException extends import_smithy_client.ServiceException {\n  /**\n   * @internal\n   */\n  constructor(options) {\n    super(options);\n    Object.setPrototypeOf(this, _SSOServiceException.prototype);\n  }\n};\n__name(_SSOServiceException, \"SSOServiceException\");\nvar SSOServiceException = _SSOServiceException;\n\n// src/models/models_0.ts\nvar _InvalidRequestException = class _InvalidRequestException extends SSOServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidRequestException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidRequestException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidRequestException.prototype);\n  }\n};\n__name(_InvalidRequestException, \"InvalidRequestException\");\nvar InvalidRequestException = _InvalidRequestException;\nvar _ResourceNotFoundException = class _ResourceNotFoundException extends SSOServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);\n  }\n};\n__name(_ResourceNotFoundException, \"ResourceNotFoundException\");\nvar ResourceNotFoundException = _ResourceNotFoundException;\nvar _TooManyRequestsException = class _TooManyRequestsException extends SSOServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TooManyRequestsException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TooManyRequestsException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TooManyRequestsException.prototype);\n  }\n};\n__name(_TooManyRequestsException, \"TooManyRequestsException\");\nvar TooManyRequestsException = _TooManyRequestsException;\nvar _UnauthorizedException = class _UnauthorizedException extends SSOServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnauthorizedException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnauthorizedException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnauthorizedException.prototype);\n  }\n};\n__name(_UnauthorizedException, \"UnauthorizedException\");\nvar UnauthorizedException = _UnauthorizedException;\nvar GetRoleCredentialsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }\n}), \"GetRoleCredentialsRequestFilterSensitiveLog\");\nvar RoleCredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.secretAccessKey && { secretAccessKey: import_smithy_client.SENSITIVE_STRING },\n  ...obj.sessionToken && { sessionToken: import_smithy_client.SENSITIVE_STRING }\n}), \"RoleCredentialsFilterSensitiveLog\");\nvar GetRoleCredentialsResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.roleCredentials && { roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials) }\n}), \"GetRoleCredentialsResponseFilterSensitiveLog\");\nvar ListAccountRolesRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }\n}), \"ListAccountRolesRequestFilterSensitiveLog\");\nvar ListAccountsRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }\n}), \"ListAccountsRequestFilterSensitiveLog\");\nvar LogoutRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING }\n}), \"LogoutRequestFilterSensitiveLog\");\n\n// src/protocols/Aws_restJson1.ts\nvar import_core2 = require(\"@aws-sdk/core\");\n\n\nvar se_GetRoleCredentialsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {\n    [_xasbt]: input[_aT]\n  });\n  b.bp(\"/federation/credentials\");\n  const query = (0, import_smithy_client.map)({\n    [_rn]: [, (0, import_smithy_client.expectNonNull)(input[_rN], `roleName`)],\n    [_ai]: [, (0, import_smithy_client.expectNonNull)(input[_aI], `accountId`)]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n}, \"se_GetRoleCredentialsCommand\");\nvar se_ListAccountRolesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {\n    [_xasbt]: input[_aT]\n  });\n  b.bp(\"/assignment/roles\");\n  const query = (0, import_smithy_client.map)({\n    [_nt]: [, input[_nT]],\n    [_mr]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n    [_ai]: [, (0, import_smithy_client.expectNonNull)(input[_aI], `accountId`)]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n}, \"se_ListAccountRolesCommand\");\nvar se_ListAccountsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {\n    [_xasbt]: input[_aT]\n  });\n  b.bp(\"/assignment/accounts\");\n  const query = (0, import_smithy_client.map)({\n    [_nt]: [, input[_nT]],\n    [_mr]: [() => input.maxResults !== void 0, () => input[_mR].toString()]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n}, \"se_ListAccountsCommand\");\nvar se_LogoutCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = (0, import_smithy_client.map)({}, isSerializableHeaderValue, {\n    [_xasbt]: input[_aT]\n  });\n  b.bp(\"/logout\");\n  let body;\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_LogoutCommand\");\nvar de_GetRoleCredentialsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    roleCredentials: import_smithy_client._json\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_GetRoleCredentialsCommand\");\nvar de_ListAccountRolesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    nextToken: import_smithy_client.expectString,\n    roleList: import_smithy_client._json\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_ListAccountRolesCommand\");\nvar de_ListAccountsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    accountList: import_smithy_client._json,\n    nextToken: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_ListAccountsCommand\");\nvar de_LogoutCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  return contents;\n}, \"de_LogoutCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)\n  };\n  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.sso#InvalidRequestException\":\n      throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.sso#ResourceNotFoundException\":\n      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.sso#TooManyRequestsException\":\n      throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n    case \"UnauthorizedException\":\n    case \"com.amazonaws.sso#UnauthorizedException\":\n      throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode\n      });\n  }\n}, \"de_CommandError\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(SSOServiceException);\nvar de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidRequestException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidRequestExceptionRes\");\nvar de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ResourceNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_ResourceNotFoundExceptionRes\");\nvar de_TooManyRequestsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new TooManyRequestsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_TooManyRequestsExceptionRes\");\nvar de_UnauthorizedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new UnauthorizedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_UnauthorizedExceptionRes\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output) => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n}), \"deserializeMetadata\");\nvar isSerializableHeaderValue = /* @__PURE__ */ __name((value) => value !== void 0 && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0), \"isSerializableHeaderValue\");\nvar _aI = \"accountId\";\nvar _aT = \"accessToken\";\nvar _ai = \"account_id\";\nvar _mR = \"maxResults\";\nvar _mr = \"max_result\";\nvar _nT = \"nextToken\";\nvar _nt = \"next_token\";\nvar _rN = \"roleName\";\nvar _rn = \"role_name\";\nvar _xasbt = \"x-amz-sso_bearer_token\";\n\n// src/commands/GetRoleCredentialsCommand.ts\nvar _GetRoleCredentialsCommand = class _GetRoleCredentialsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"SWBPortalService\", \"GetRoleCredentials\", {}).n(\"SSOClient\", \"GetRoleCredentialsCommand\").f(GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog).ser(se_GetRoleCredentialsCommand).de(de_GetRoleCredentialsCommand).build() {\n};\n__name(_GetRoleCredentialsCommand, \"GetRoleCredentialsCommand\");\nvar GetRoleCredentialsCommand = _GetRoleCredentialsCommand;\n\n// src/commands/ListAccountRolesCommand.ts\n\n\n\nvar _ListAccountRolesCommand = class _ListAccountRolesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"SWBPortalService\", \"ListAccountRoles\", {}).n(\"SSOClient\", \"ListAccountRolesCommand\").f(ListAccountRolesRequestFilterSensitiveLog, void 0).ser(se_ListAccountRolesCommand).de(de_ListAccountRolesCommand).build() {\n};\n__name(_ListAccountRolesCommand, \"ListAccountRolesCommand\");\nvar ListAccountRolesCommand = _ListAccountRolesCommand;\n\n// src/commands/ListAccountsCommand.ts\n\n\n\nvar _ListAccountsCommand = class _ListAccountsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"SWBPortalService\", \"ListAccounts\", {}).n(\"SSOClient\", \"ListAccountsCommand\").f(ListAccountsRequestFilterSensitiveLog, void 0).ser(se_ListAccountsCommand).de(de_ListAccountsCommand).build() {\n};\n__name(_ListAccountsCommand, \"ListAccountsCommand\");\nvar ListAccountsCommand = _ListAccountsCommand;\n\n// src/commands/LogoutCommand.ts\n\n\n\nvar _LogoutCommand = class _LogoutCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"SWBPortalService\", \"Logout\", {}).n(\"SSOClient\", \"LogoutCommand\").f(LogoutRequestFilterSensitiveLog, void 0).ser(se_LogoutCommand).de(de_LogoutCommand).build() {\n};\n__name(_LogoutCommand, \"LogoutCommand\");\nvar LogoutCommand = _LogoutCommand;\n\n// src/SSO.ts\nvar commands = {\n  GetRoleCredentialsCommand,\n  ListAccountRolesCommand,\n  ListAccountsCommand,\n  LogoutCommand\n};\nvar _SSO = class _SSO extends SSOClient {\n};\n__name(_SSO, \"SSO\");\nvar SSO = _SSO;\n(0, import_smithy_client.createAggregatedClient)(commands, SSO);\n\n// src/pagination/ListAccountRolesPaginator.ts\n\nvar paginateListAccountRoles = (0, import_core.createPaginator)(SSOClient, ListAccountRolesCommand, \"nextToken\", \"nextToken\", \"maxResults\");\n\n// src/pagination/ListAccountsPaginator.ts\n\nvar paginateListAccounts = (0, import_core.createPaginator)(SSOClient, ListAccountsCommand, \"nextToken\", \"nextToken\", \"maxResults\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  SSOServiceException,\n  __Client,\n  SSOClient,\n  SSO,\n  $Command,\n  GetRoleCredentialsCommand,\n  ListAccountRolesCommand,\n  ListAccountsCommand,\n  LogoutCommand,\n  paginateListAccountRoles,\n  paginateListAccounts,\n  InvalidRequestException,\n  ResourceNotFoundException,\n  TooManyRequestsException,\n  UnauthorizedException,\n  GetRoleCredentialsRequestFilterSensitiveLog,\n  RoleCredentialsFilterSensitiveLog,\n  GetRoleCredentialsResponseFilterSensitiveLog,\n  ListAccountRolesRequestFilterSensitiveLog,\n  ListAccountsRequestFilterSensitiveLog,\n  LogoutRequestFilterSensitiveLog\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultSSOOIDCHttpAuthSchemeProvider = exports.defaultSSOOIDCHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultSSOOIDCHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultSSOOIDCHttpAuthSchemeParametersProvider = defaultSSOOIDCHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sso-oauth\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nconst defaultSSOOIDCHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"CreateToken\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"RegisterClient\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"StartDeviceAuthorization\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultSSOOIDCHttpAuthSchemeProvider = defaultSSOOIDCHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return {\n        ...config_0,\n    };\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "{\n  \"name\": \"@aws-sdk/client-sso-oidc\",\n  \"description\": \"AWS SDK for JavaScript Sso Oidc Client for Node.js, Browser and React Native\",\n  \"version\": \"3.614.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-sso-oidc\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sso-oidc\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.614.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.614.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.609.0\",\n    \"@aws-sdk/middleware-logger\": \"3.609.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.609.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.614.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.614.0\",\n    \"@aws-sdk/types\": \"3.609.0\",\n    \"@aws-sdk/util-endpoints\": \"3.614.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.609.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.614.0\",\n    \"@smithy/config-resolver\": \"^3.0.5\",\n    \"@smithy/core\": \"^2.2.6\",\n    \"@smithy/fetch-http-handler\": \"^3.2.1\",\n    \"@smithy/hash-node\": \"^3.0.3\",\n    \"@smithy/invalid-dependency\": \"^3.0.3\",\n    \"@smithy/middleware-content-length\": \"^3.0.3\",\n    \"@smithy/middleware-endpoint\": \"^3.0.5\",\n    \"@smithy/middleware-retry\": \"^3.0.9\",\n    \"@smithy/middleware-serde\": \"^3.0.3\",\n    \"@smithy/middleware-stack\": \"^3.0.3\",\n    \"@smithy/node-config-provider\": \"^3.1.4\",\n    \"@smithy/node-http-handler\": \"^3.1.2\",\n    \"@smithy/protocol-http\": \"^4.0.3\",\n    \"@smithy/smithy-client\": \"^3.1.7\",\n    \"@smithy/types\": \"^3.3.0\",\n    \"@smithy/url-parser\": \"^3.0.3\",\n    \"@smithy/util-base64\": \"^3.0.0\",\n    \"@smithy/util-body-length-browser\": \"^3.0.0\",\n    \"@smithy/util-body-length-node\": \"^3.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^3.0.9\",\n    \"@smithy/util-defaults-mode-node\": \"^3.0.9\",\n    \"@smithy/util-endpoints\": \"^2.0.5\",\n    \"@smithy/util-middleware\": \"^3.0.3\",\n    \"@smithy/util-retry\": \"^3.0.3\",\n    \"@smithy/util-utf8\": \"^3.0.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node16\": \"16.1.3\",\n    \"@types/node\": \"^16.18.96\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=16.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"peerDependencies\": {\n    \"@aws-sdk/client-sts\": \"^3.614.0\"\n  },\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sso-oidc\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sso-oidc\"\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, \"supportsFIPS\"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [{ [x]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: \"stringEquals\", [w]: [{ [v]: h, [w]: [p, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://oidc.{Region}.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst core_2 = require(\"@smithy/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSSOOIDCHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new core_2.NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO OIDC\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AccessDeniedException: () => AccessDeniedException,\n  AuthorizationPendingException: () => AuthorizationPendingException,\n  CreateTokenCommand: () => CreateTokenCommand,\n  CreateTokenRequestFilterSensitiveLog: () => CreateTokenRequestFilterSensitiveLog,\n  CreateTokenResponseFilterSensitiveLog: () => CreateTokenResponseFilterSensitiveLog,\n  CreateTokenWithIAMCommand: () => CreateTokenWithIAMCommand,\n  CreateTokenWithIAMRequestFilterSensitiveLog: () => CreateTokenWithIAMRequestFilterSensitiveLog,\n  CreateTokenWithIAMResponseFilterSensitiveLog: () => CreateTokenWithIAMResponseFilterSensitiveLog,\n  ExpiredTokenException: () => ExpiredTokenException,\n  InternalServerException: () => InternalServerException,\n  InvalidClientException: () => InvalidClientException,\n  InvalidClientMetadataException: () => InvalidClientMetadataException,\n  InvalidGrantException: () => InvalidGrantException,\n  InvalidRedirectUriException: () => InvalidRedirectUriException,\n  InvalidRequestException: () => InvalidRequestException,\n  InvalidRequestRegionException: () => InvalidRequestRegionException,\n  InvalidScopeException: () => InvalidScopeException,\n  RegisterClientCommand: () => RegisterClientCommand,\n  RegisterClientResponseFilterSensitiveLog: () => RegisterClientResponseFilterSensitiveLog,\n  SSOOIDC: () => SSOOIDC,\n  SSOOIDCClient: () => SSOOIDCClient,\n  SSOOIDCServiceException: () => SSOOIDCServiceException,\n  SlowDownException: () => SlowDownException,\n  StartDeviceAuthorizationCommand: () => StartDeviceAuthorizationCommand,\n  StartDeviceAuthorizationRequestFilterSensitiveLog: () => StartDeviceAuthorizationRequestFilterSensitiveLog,\n  UnauthorizedClientException: () => UnauthorizedClientException,\n  UnsupportedGrantTypeException: () => UnsupportedGrantTypeException,\n  __Client: () => import_smithy_client.Client\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/SSOOIDCClient.ts\nvar import_middleware_host_header = require(\"@aws-sdk/middleware-host-header\");\nvar import_middleware_logger = require(\"@aws-sdk/middleware-logger\");\nvar import_middleware_recursion_detection = require(\"@aws-sdk/middleware-recursion-detection\");\nvar import_middleware_user_agent = require(\"@aws-sdk/middleware-user-agent\");\nvar import_config_resolver = require(\"@smithy/config-resolver\");\nvar import_core = require(\"@smithy/core\");\nvar import_middleware_content_length = require(\"@smithy/middleware-content-length\");\nvar import_middleware_endpoint = require(\"@smithy/middleware-endpoint\");\nvar import_middleware_retry = require(\"@smithy/middleware-retry\");\n\nvar import_httpAuthSchemeProvider = require(\"./auth/httpAuthSchemeProvider\");\n\n// src/endpoint/EndpointParameters.ts\nvar resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {\n  return {\n    ...options,\n    useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n    useFipsEndpoint: options.useFipsEndpoint ?? false,\n    defaultSigningName: \"sso-oauth\"\n  };\n}, \"resolveClientEndpointParameters\");\nvar commonParams = {\n  UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n  Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n  Region: { type: \"builtInParams\", name: \"region\" },\n  UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" }\n};\n\n// src/SSOOIDCClient.ts\nvar import_runtimeConfig = require(\"././runtimeConfig\");\n\n// src/runtimeExtensions.ts\nvar import_region_config_resolver = require(\"@aws-sdk/region-config-resolver\");\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar import_smithy_client = require(\"@smithy/smithy-client\");\n\n// src/auth/httpAuthExtensionConfiguration.ts\nvar getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n  let _credentials = runtimeConfig.credentials;\n  return {\n    setHttpAuthScheme(httpAuthScheme) {\n      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n      if (index === -1) {\n        _httpAuthSchemes.push(httpAuthScheme);\n      } else {\n        _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n      }\n    },\n    httpAuthSchemes() {\n      return _httpAuthSchemes;\n    },\n    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n      _httpAuthSchemeProvider = httpAuthSchemeProvider;\n    },\n    httpAuthSchemeProvider() {\n      return _httpAuthSchemeProvider;\n    },\n    setCredentials(credentials) {\n      _credentials = credentials;\n    },\n    credentials() {\n      return _credentials;\n    }\n  };\n}, \"getHttpAuthExtensionConfiguration\");\nvar resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {\n  return {\n    httpAuthSchemes: config.httpAuthSchemes(),\n    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n    credentials: config.credentials()\n  };\n}, \"resolveHttpAuthRuntimeConfig\");\n\n// src/runtimeExtensions.ts\nvar asPartial = /* @__PURE__ */ __name((t) => t, \"asPartial\");\nvar resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {\n  const extensionConfiguration = {\n    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),\n    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))\n  };\n  extensions.forEach((extension) => extension.configure(extensionConfiguration));\n  return {\n    ...runtimeConfig,\n    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),\n    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),\n    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)\n  };\n}, \"resolveRuntimeExtensions\");\n\n// src/SSOOIDCClient.ts\nvar _SSOOIDCClient = class _SSOOIDCClient extends import_smithy_client.Client {\n  constructor(...[configuration]) {\n    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});\n    const _config_1 = resolveClientEndpointParameters(_config_0);\n    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);\n    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);\n    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);\n    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);\n    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);\n    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);\n    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);\n    super(_config_8);\n    this.config = _config_8;\n    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));\n    this.middlewareStack.use(\n      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()\n      })\n    );\n    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));\n  }\n  /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */\n  destroy() {\n    super.destroy();\n  }\n  getDefaultHttpAuthSchemeParametersProvider() {\n    return import_httpAuthSchemeProvider.defaultSSOOIDCHttpAuthSchemeParametersProvider;\n  }\n  getIdentityProviderConfigProvider() {\n    return async (config) => new import_core.DefaultIdentityProviderConfig({\n      \"aws.auth#sigv4\": config.credentials\n    });\n  }\n};\n__name(_SSOOIDCClient, \"SSOOIDCClient\");\nvar SSOOIDCClient = _SSOOIDCClient;\n\n// src/SSOOIDC.ts\n\n\n// src/commands/CreateTokenCommand.ts\n\nvar import_middleware_serde = require(\"@smithy/middleware-serde\");\n\n\n// src/models/models_0.ts\n\n\n// src/models/SSOOIDCServiceException.ts\n\nvar _SSOOIDCServiceException = class _SSOOIDCServiceException extends import_smithy_client.ServiceException {\n  /**\n   * @internal\n   */\n  constructor(options) {\n    super(options);\n    Object.setPrototypeOf(this, _SSOOIDCServiceException.prototype);\n  }\n};\n__name(_SSOOIDCServiceException, \"SSOOIDCServiceException\");\nvar SSOOIDCServiceException = _SSOOIDCServiceException;\n\n// src/models/models_0.ts\nvar _AccessDeniedException = class _AccessDeniedException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AccessDeniedException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AccessDeniedException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AccessDeniedException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_AccessDeniedException, \"AccessDeniedException\");\nvar AccessDeniedException = _AccessDeniedException;\nvar _AuthorizationPendingException = class _AuthorizationPendingException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AuthorizationPendingException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AuthorizationPendingException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AuthorizationPendingException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_AuthorizationPendingException, \"AuthorizationPendingException\");\nvar AuthorizationPendingException = _AuthorizationPendingException;\nvar _ExpiredTokenException = class _ExpiredTokenException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ExpiredTokenException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ExpiredTokenException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ExpiredTokenException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_ExpiredTokenException, \"ExpiredTokenException\");\nvar ExpiredTokenException = _ExpiredTokenException;\nvar _InternalServerException = class _InternalServerException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InternalServerException\",\n      $fault: \"server\",\n      ...opts\n    });\n    this.name = \"InternalServerException\";\n    this.$fault = \"server\";\n    Object.setPrototypeOf(this, _InternalServerException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_InternalServerException, \"InternalServerException\");\nvar InternalServerException = _InternalServerException;\nvar _InvalidClientException = class _InvalidClientException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidClientException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidClientException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidClientException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_InvalidClientException, \"InvalidClientException\");\nvar InvalidClientException = _InvalidClientException;\nvar _InvalidGrantException = class _InvalidGrantException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidGrantException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidGrantException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidGrantException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_InvalidGrantException, \"InvalidGrantException\");\nvar InvalidGrantException = _InvalidGrantException;\nvar _InvalidRequestException = class _InvalidRequestException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidRequestException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidRequestException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidRequestException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_InvalidRequestException, \"InvalidRequestException\");\nvar InvalidRequestException = _InvalidRequestException;\nvar _InvalidScopeException = class _InvalidScopeException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidScopeException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidScopeException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidScopeException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_InvalidScopeException, \"InvalidScopeException\");\nvar InvalidScopeException = _InvalidScopeException;\nvar _SlowDownException = class _SlowDownException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"SlowDownException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"SlowDownException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _SlowDownException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_SlowDownException, \"SlowDownException\");\nvar SlowDownException = _SlowDownException;\nvar _UnauthorizedClientException = class _UnauthorizedClientException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnauthorizedClientException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnauthorizedClientException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnauthorizedClientException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_UnauthorizedClientException, \"UnauthorizedClientException\");\nvar UnauthorizedClientException = _UnauthorizedClientException;\nvar _UnsupportedGrantTypeException = class _UnsupportedGrantTypeException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedGrantTypeException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedGrantTypeException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedGrantTypeException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_UnsupportedGrantTypeException, \"UnsupportedGrantTypeException\");\nvar UnsupportedGrantTypeException = _UnsupportedGrantTypeException;\nvar _InvalidRequestRegionException = class _InvalidRequestRegionException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidRequestRegionException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidRequestRegionException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidRequestRegionException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n    this.endpoint = opts.endpoint;\n    this.region = opts.region;\n  }\n};\n__name(_InvalidRequestRegionException, \"InvalidRequestRegionException\");\nvar InvalidRequestRegionException = _InvalidRequestRegionException;\nvar _InvalidClientMetadataException = class _InvalidClientMetadataException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidClientMetadataException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidClientMetadataException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidClientMetadataException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_InvalidClientMetadataException, \"InvalidClientMetadataException\");\nvar InvalidClientMetadataException = _InvalidClientMetadataException;\nvar _InvalidRedirectUriException = class _InvalidRedirectUriException extends SSOOIDCServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidRedirectUriException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidRedirectUriException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidRedirectUriException.prototype);\n    this.error = opts.error;\n    this.error_description = opts.error_description;\n  }\n};\n__name(_InvalidRedirectUriException, \"InvalidRedirectUriException\");\nvar InvalidRedirectUriException = _InvalidRedirectUriException;\nvar CreateTokenRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING },\n  ...obj.refreshToken && { refreshToken: import_smithy_client.SENSITIVE_STRING },\n  ...obj.codeVerifier && { codeVerifier: import_smithy_client.SENSITIVE_STRING }\n}), \"CreateTokenRequestFilterSensitiveLog\");\nvar CreateTokenResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING },\n  ...obj.refreshToken && { refreshToken: import_smithy_client.SENSITIVE_STRING },\n  ...obj.idToken && { idToken: import_smithy_client.SENSITIVE_STRING }\n}), \"CreateTokenResponseFilterSensitiveLog\");\nvar CreateTokenWithIAMRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.refreshToken && { refreshToken: import_smithy_client.SENSITIVE_STRING },\n  ...obj.assertion && { assertion: import_smithy_client.SENSITIVE_STRING },\n  ...obj.subjectToken && { subjectToken: import_smithy_client.SENSITIVE_STRING },\n  ...obj.codeVerifier && { codeVerifier: import_smithy_client.SENSITIVE_STRING }\n}), \"CreateTokenWithIAMRequestFilterSensitiveLog\");\nvar CreateTokenWithIAMResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.accessToken && { accessToken: import_smithy_client.SENSITIVE_STRING },\n  ...obj.refreshToken && { refreshToken: import_smithy_client.SENSITIVE_STRING },\n  ...obj.idToken && { idToken: import_smithy_client.SENSITIVE_STRING }\n}), \"CreateTokenWithIAMResponseFilterSensitiveLog\");\nvar RegisterClientResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING }\n}), \"RegisterClientResponseFilterSensitiveLog\");\nvar StartDeviceAuthorizationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.clientSecret && { clientSecret: import_smithy_client.SENSITIVE_STRING }\n}), \"StartDeviceAuthorizationRequestFilterSensitiveLog\");\n\n// src/protocols/Aws_restJson1.ts\nvar import_core2 = require(\"@aws-sdk/core\");\n\n\nvar se_CreateTokenCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/token\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      clientId: [],\n      clientSecret: [],\n      code: [],\n      codeVerifier: [],\n      deviceCode: [],\n      grantType: [],\n      redirectUri: [],\n      refreshToken: [],\n      scope: (_) => (0, import_smithy_client._json)(_)\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_CreateTokenCommand\");\nvar se_CreateTokenWithIAMCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/token\");\n  const query = (0, import_smithy_client.map)({\n    [_ai]: [, \"t\"]\n  });\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      assertion: [],\n      clientId: [],\n      code: [],\n      codeVerifier: [],\n      grantType: [],\n      redirectUri: [],\n      refreshToken: [],\n      requestedTokenType: [],\n      scope: (_) => (0, import_smithy_client._json)(_),\n      subjectToken: [],\n      subjectTokenType: []\n    })\n  );\n  b.m(\"POST\").h(headers).q(query).b(body);\n  return b.build();\n}, \"se_CreateTokenWithIAMCommand\");\nvar se_RegisterClientCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/client/register\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      clientName: [],\n      clientType: [],\n      entitledApplicationArn: [],\n      grantTypes: (_) => (0, import_smithy_client._json)(_),\n      issuerUrl: [],\n      redirectUris: (_) => (0, import_smithy_client._json)(_),\n      scopes: (_) => (0, import_smithy_client._json)(_)\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_RegisterClientCommand\");\nvar se_StartDeviceAuthorizationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/device_authorization\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      clientId: [],\n      clientSecret: [],\n      startUrl: []\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_StartDeviceAuthorizationCommand\");\nvar de_CreateTokenCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    accessToken: import_smithy_client.expectString,\n    expiresIn: import_smithy_client.expectInt32,\n    idToken: import_smithy_client.expectString,\n    refreshToken: import_smithy_client.expectString,\n    tokenType: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_CreateTokenCommand\");\nvar de_CreateTokenWithIAMCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    accessToken: import_smithy_client.expectString,\n    expiresIn: import_smithy_client.expectInt32,\n    idToken: import_smithy_client.expectString,\n    issuedTokenType: import_smithy_client.expectString,\n    refreshToken: import_smithy_client.expectString,\n    scope: import_smithy_client._json,\n    tokenType: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_CreateTokenWithIAMCommand\");\nvar de_RegisterClientCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    authorizationEndpoint: import_smithy_client.expectString,\n    clientId: import_smithy_client.expectString,\n    clientIdIssuedAt: import_smithy_client.expectLong,\n    clientSecret: import_smithy_client.expectString,\n    clientSecretExpiresAt: import_smithy_client.expectLong,\n    tokenEndpoint: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_RegisterClientCommand\");\nvar de_StartDeviceAuthorizationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    deviceCode: import_smithy_client.expectString,\n    expiresIn: import_smithy_client.expectInt32,\n    interval: import_smithy_client.expectInt32,\n    userCode: import_smithy_client.expectString,\n    verificationUri: import_smithy_client.expectString,\n    verificationUriComplete: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_StartDeviceAuthorizationCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)\n  };\n  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.ssooidc#AccessDeniedException\":\n      throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n    case \"AuthorizationPendingException\":\n    case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n      throw await de_AuthorizationPendingExceptionRes(parsedOutput, context);\n    case \"ExpiredTokenException\":\n    case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n      throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n    case \"InternalServerException\":\n    case \"com.amazonaws.ssooidc#InternalServerException\":\n      throw await de_InternalServerExceptionRes(parsedOutput, context);\n    case \"InvalidClientException\":\n    case \"com.amazonaws.ssooidc#InvalidClientException\":\n      throw await de_InvalidClientExceptionRes(parsedOutput, context);\n    case \"InvalidGrantException\":\n    case \"com.amazonaws.ssooidc#InvalidGrantException\":\n      throw await de_InvalidGrantExceptionRes(parsedOutput, context);\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.ssooidc#InvalidRequestException\":\n      throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n    case \"InvalidScopeException\":\n    case \"com.amazonaws.ssooidc#InvalidScopeException\":\n      throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n    case \"SlowDownException\":\n    case \"com.amazonaws.ssooidc#SlowDownException\":\n      throw await de_SlowDownExceptionRes(parsedOutput, context);\n    case \"UnauthorizedClientException\":\n    case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n      throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n    case \"UnsupportedGrantTypeException\":\n    case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n      throw await de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);\n    case \"InvalidRequestRegionException\":\n    case \"com.amazonaws.ssooidc#InvalidRequestRegionException\":\n      throw await de_InvalidRequestRegionExceptionRes(parsedOutput, context);\n    case \"InvalidClientMetadataException\":\n    case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\n      throw await de_InvalidClientMetadataExceptionRes(parsedOutput, context);\n    case \"InvalidRedirectUriException\":\n    case \"com.amazonaws.ssooidc#InvalidRedirectUriException\":\n      throw await de_InvalidRedirectUriExceptionRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode\n      });\n  }\n}, \"de_CommandError\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(SSOOIDCServiceException);\nvar de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new AccessDeniedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_AccessDeniedExceptionRes\");\nvar de_AuthorizationPendingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new AuthorizationPendingException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_AuthorizationPendingExceptionRes\");\nvar de_ExpiredTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ExpiredTokenException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_ExpiredTokenExceptionRes\");\nvar de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InternalServerException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InternalServerExceptionRes\");\nvar de_InvalidClientExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidClientException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidClientExceptionRes\");\nvar de_InvalidClientMetadataExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidClientMetadataException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidClientMetadataExceptionRes\");\nvar de_InvalidGrantExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidGrantException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidGrantExceptionRes\");\nvar de_InvalidRedirectUriExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidRedirectUriException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidRedirectUriExceptionRes\");\nvar de_InvalidRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidRequestException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidRequestExceptionRes\");\nvar de_InvalidRequestRegionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    endpoint: import_smithy_client.expectString,\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString,\n    region: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidRequestRegionException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidRequestRegionExceptionRes\");\nvar de_InvalidScopeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidScopeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidScopeExceptionRes\");\nvar de_SlowDownExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new SlowDownException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_SlowDownExceptionRes\");\nvar de_UnauthorizedClientExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new UnauthorizedClientException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_UnauthorizedClientExceptionRes\");\nvar de_UnsupportedGrantTypeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    error: import_smithy_client.expectString,\n    error_description: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new UnsupportedGrantTypeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_UnsupportedGrantTypeExceptionRes\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output) => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n}), \"deserializeMetadata\");\nvar _ai = \"aws_iam\";\n\n// src/commands/CreateTokenCommand.ts\nvar _CreateTokenCommand = class _CreateTokenCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSSOOIDCService\", \"CreateToken\", {}).n(\"SSOOIDCClient\", \"CreateTokenCommand\").f(CreateTokenRequestFilterSensitiveLog, CreateTokenResponseFilterSensitiveLog).ser(se_CreateTokenCommand).de(de_CreateTokenCommand).build() {\n};\n__name(_CreateTokenCommand, \"CreateTokenCommand\");\nvar CreateTokenCommand = _CreateTokenCommand;\n\n// src/commands/CreateTokenWithIAMCommand.ts\n\n\n\nvar _CreateTokenWithIAMCommand = class _CreateTokenWithIAMCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSSOOIDCService\", \"CreateTokenWithIAM\", {}).n(\"SSOOIDCClient\", \"CreateTokenWithIAMCommand\").f(CreateTokenWithIAMRequestFilterSensitiveLog, CreateTokenWithIAMResponseFilterSensitiveLog).ser(se_CreateTokenWithIAMCommand).de(de_CreateTokenWithIAMCommand).build() {\n};\n__name(_CreateTokenWithIAMCommand, \"CreateTokenWithIAMCommand\");\nvar CreateTokenWithIAMCommand = _CreateTokenWithIAMCommand;\n\n// src/commands/RegisterClientCommand.ts\n\n\n\nvar _RegisterClientCommand = class _RegisterClientCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSSOOIDCService\", \"RegisterClient\", {}).n(\"SSOOIDCClient\", \"RegisterClientCommand\").f(void 0, RegisterClientResponseFilterSensitiveLog).ser(se_RegisterClientCommand).de(de_RegisterClientCommand).build() {\n};\n__name(_RegisterClientCommand, \"RegisterClientCommand\");\nvar RegisterClientCommand = _RegisterClientCommand;\n\n// src/commands/StartDeviceAuthorizationCommand.ts\n\n\n\nvar _StartDeviceAuthorizationCommand = class _StartDeviceAuthorizationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSSOOIDCService\", \"StartDeviceAuthorization\", {}).n(\"SSOOIDCClient\", \"StartDeviceAuthorizationCommand\").f(StartDeviceAuthorizationRequestFilterSensitiveLog, void 0).ser(se_StartDeviceAuthorizationCommand).de(de_StartDeviceAuthorizationCommand).build() {\n};\n__name(_StartDeviceAuthorizationCommand, \"StartDeviceAuthorizationCommand\");\nvar StartDeviceAuthorizationCommand = _StartDeviceAuthorizationCommand;\n\n// src/SSOOIDC.ts\nvar commands = {\n  CreateTokenCommand,\n  CreateTokenWithIAMCommand,\n  RegisterClientCommand,\n  StartDeviceAuthorizationCommand\n};\nvar _SSOOIDC = class _SSOOIDC extends SSOOIDCClient {\n};\n__name(_SSOOIDC, \"SSOOIDC\");\nvar SSOOIDC = _SSOOIDC;\n(0, import_smithy_client.createAggregatedClient)(commands, SSOOIDC);\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  SSOOIDCServiceException,\n  __Client,\n  SSOOIDCClient,\n  SSOOIDC,\n  $Command,\n  CreateTokenCommand,\n  CreateTokenWithIAMCommand,\n  RegisterClientCommand,\n  StartDeviceAuthorizationCommand,\n  AccessDeniedException,\n  AuthorizationPendingException,\n  ExpiredTokenException,\n  InternalServerException,\n  InvalidClientException,\n  InvalidGrantException,\n  InvalidRequestException,\n  InvalidScopeException,\n  SlowDownException,\n  UnauthorizedClientException,\n  UnsupportedGrantTypeException,\n  InvalidRequestRegionException,\n  InvalidClientMetadataException,\n  InvalidRedirectUriException,\n  CreateTokenRequestFilterSensitiveLog,\n  CreateTokenResponseFilterSensitiveLog,\n  CreateTokenWithIAMRequestFilterSensitiveLog,\n  CreateTokenWithIAMResponseFilterSensitiveLog,\n  RegisterClientResponseFilterSensitiveLog,\n  StartDeviceAuthorizationRequestFilterSensitiveLog\n});\n\n", "\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromSso: () => fromSso,\n  fromStatic: () => fromStatic,\n  nodeProvider: () => nodeProvider\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fromSso.ts\n\n\n\n// src/constants.ts\nvar EXPIRE_WINDOW_MS = 5 * 60 * 1e3;\nvar REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n\n// src/getSsoOidcClient.ts\nvar ssoOidcClientsHash = {};\nvar getSsoOidcClient = /* @__PURE__ */ __name(async (ssoRegion) => {\n  const { SSOOIDCClient } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/client-sso-oidc\")));\n  if (ssoOidcClientsHash[ssoRegion]) {\n    return ssoOidcClientsHash[ssoRegion];\n  }\n  const ssoOidcClient = new SSOOIDCClient({ region: ssoRegion });\n  ssoOidcClientsHash[ssoRegion] = ssoOidcClient;\n  return ssoOidcClient;\n}, \"getSsoOidcClient\");\n\n// src/getNewSsoOidcToken.ts\nvar getNewSsoOidcToken = /* @__PURE__ */ __name(async (ssoToken, ssoRegion) => {\n  const { CreateTokenCommand } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/client-sso-oidc\")));\n  const ssoOidcClient = await getSsoOidcClient(ssoRegion);\n  return ssoOidcClient.send(\n    new CreateTokenCommand({\n      clientId: ssoToken.clientId,\n      clientSecret: ssoToken.clientSecret,\n      refreshToken: ssoToken.refreshToken,\n      grantType: \"refresh_token\"\n    })\n  );\n}, \"getNewSsoOidcToken\");\n\n// src/validateTokenExpiry.ts\nvar import_property_provider = require(\"@smithy/property-provider\");\nvar validateTokenExpiry = /* @__PURE__ */ __name((token) => {\n  if (token.expiration && token.expiration.getTime() < Date.now()) {\n    throw new import_property_provider.TokenProviderError(`Token is expired. ${REFRESH_MESSAGE}`, false);\n  }\n}, \"validateTokenExpiry\");\n\n// src/validateTokenKey.ts\n\nvar validateTokenKey = /* @__PURE__ */ __name((key, value, forRefresh = false) => {\n  if (typeof value === \"undefined\") {\n    throw new import_property_provider.TokenProviderError(\n      `Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`,\n      false\n    );\n  }\n}, \"validateTokenKey\");\n\n// src/writeSSOTokenToFile.ts\nvar import_shared_ini_file_loader = require(\"@smithy/shared-ini-file-loader\");\nvar import_fs = require(\"fs\");\nvar { writeFile } = import_fs.promises;\nvar writeSSOTokenToFile = /* @__PURE__ */ __name((id, ssoToken) => {\n  const tokenFilepath = (0, import_shared_ini_file_loader.getSSOTokenFilepath)(id);\n  const tokenString = JSON.stringify(ssoToken, null, 2);\n  return writeFile(tokenFilepath, tokenString);\n}, \"writeSSOTokenToFile\");\n\n// src/fromSso.ts\nvar lastRefreshAttemptTime = /* @__PURE__ */ new Date(0);\nvar fromSso = /* @__PURE__ */ __name((init = {}) => async () => {\n  var _a;\n  (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/token-providers - fromSso\");\n  const profiles = await (0, import_shared_ini_file_loader.parseKnownFiles)(init);\n  const profileName = (0, import_shared_ini_file_loader.getProfileName)(init);\n  const profile = profiles[profileName];\n  if (!profile) {\n    throw new import_property_provider.TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n  } else if (!profile[\"sso_session\"]) {\n    throw new import_property_provider.TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n  }\n  const ssoSessionName = profile[\"sso_session\"];\n  const ssoSessions = await (0, import_shared_ini_file_loader.loadSsoSessionData)(init);\n  const ssoSession = ssoSessions[ssoSessionName];\n  if (!ssoSession) {\n    throw new import_property_provider.TokenProviderError(\n      `Sso session '${ssoSessionName}' could not be found in shared credentials file.`,\n      false\n    );\n  }\n  for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n    if (!ssoSession[ssoSessionRequiredKey]) {\n      throw new import_property_provider.TokenProviderError(\n        `Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`,\n        false\n      );\n    }\n  }\n  const ssoStartUrl = ssoSession[\"sso_start_url\"];\n  const ssoRegion = ssoSession[\"sso_region\"];\n  let ssoToken;\n  try {\n    ssoToken = await (0, import_shared_ini_file_loader.getSSOTokenFromFile)(ssoSessionName);\n  } catch (e) {\n    throw new import_property_provider.TokenProviderError(\n      `The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`,\n      false\n    );\n  }\n  validateTokenKey(\"accessToken\", ssoToken.accessToken);\n  validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n  const { accessToken, expiresAt } = ssoToken;\n  const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n  if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n    return existingToken;\n  }\n  if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1e3) {\n    validateTokenExpiry(existingToken);\n    return existingToken;\n  }\n  validateTokenKey(\"clientId\", ssoToken.clientId, true);\n  validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n  validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n  try {\n    lastRefreshAttemptTime.setTime(Date.now());\n    const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion);\n    validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n    validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n    const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1e3);\n    try {\n      await writeSSOTokenToFile(ssoSessionName, {\n        ...ssoToken,\n        accessToken: newSsoOidcToken.accessToken,\n        expiresAt: newTokenExpiration.toISOString(),\n        refreshToken: newSsoOidcToken.refreshToken\n      });\n    } catch (error) {\n    }\n    return {\n      token: newSsoOidcToken.accessToken,\n      expiration: newTokenExpiration\n    };\n  } catch (error) {\n    validateTokenExpiry(existingToken);\n    return existingToken;\n  }\n}, \"fromSso\");\n\n// src/fromStatic.ts\n\nvar fromStatic = /* @__PURE__ */ __name(({ token, logger }) => async () => {\n  logger == null ? void 0 : logger.debug(\"@aws-sdk/token-providers - fromStatic\");\n  if (!token || !token.token) {\n    throw new import_property_provider.TokenProviderError(`Please pass a valid token to fromStatic`, false);\n  }\n  return token;\n}, \"fromStatic\");\n\n// src/nodeProvider.ts\n\nvar nodeProvider = /* @__PURE__ */ __name((init = {}) => (0, import_property_provider.memoize)(\n  (0, import_property_provider.chain)(fromSso(init), async () => {\n    throw new import_property_provider.TokenProviderError(\"Could not load token from any providers\", false);\n  }),\n  (token) => token.expiration !== void 0 && token.expiration.getTime() - Date.now() < 3e5,\n  (token) => token.expiration !== void 0\n), \"nodeProvider\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromSso,\n  fromStatic,\n  nodeProvider\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/loadSso.ts\nvar loadSso_exports = {};\n__export(loadSso_exports, {\n  GetRoleCredentialsCommand: () => import_client_sso.GetRoleCredentialsCommand,\n  SSOClient: () => import_client_sso.SSOClient\n});\nvar import_client_sso;\nvar init_loadSso = __esm({\n  \"src/loadSso.ts\"() {\n    \"use strict\";\n    import_client_sso = require(\"@aws-sdk/client-sso\");\n  }\n});\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromSSO: () => fromSSO,\n  isSsoProfile: () => isSsoProfile,\n  validateSsoProfile: () => validateSsoProfile\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fromSSO.ts\n\n\n\n// src/isSsoProfile.ts\nvar isSsoProfile = /* @__PURE__ */ __name((arg) => arg && (typeof arg.sso_start_url === \"string\" || typeof arg.sso_account_id === \"string\" || typeof arg.sso_session === \"string\" || typeof arg.sso_region === \"string\" || typeof arg.sso_role_name === \"string\"), \"isSsoProfile\");\n\n// src/resolveSSOCredentials.ts\nvar import_token_providers = require(\"@aws-sdk/token-providers\");\nvar import_property_provider = require(\"@smithy/property-provider\");\nvar import_shared_ini_file_loader = require(\"@smithy/shared-ini-file-loader\");\nvar SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nvar resolveSSOCredentials = /* @__PURE__ */ __name(async ({\n  ssoStartUrl,\n  ssoSession,\n  ssoAccountId,\n  ssoRegion,\n  ssoRoleName,\n  ssoClient,\n  clientConfig,\n  profile,\n  logger\n}) => {\n  let token;\n  const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n  if (ssoSession) {\n    try {\n      const _token = await (0, import_token_providers.fromSso)({ profile })();\n      token = {\n        accessToken: _token.token,\n        expiresAt: new Date(_token.expiration).toISOString()\n      };\n    } catch (e) {\n      throw new import_property_provider.CredentialsProviderError(e.message, {\n        tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n        logger\n      });\n    }\n  } else {\n    try {\n      token = await (0, import_shared_ini_file_loader.getSSOTokenFromFile)(ssoStartUrl);\n    } catch (e) {\n      throw new import_property_provider.CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, {\n        tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n        logger\n      });\n    }\n  }\n  if (new Date(token.expiresAt).getTime() - Date.now() <= 0) {\n    throw new import_property_provider.CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, {\n      tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n      logger\n    });\n  }\n  const { accessToken } = token;\n  const { SSOClient: SSOClient2, GetRoleCredentialsCommand: GetRoleCredentialsCommand2 } = await Promise.resolve().then(() => (init_loadSso(), loadSso_exports));\n  const sso = ssoClient || new SSOClient2(\n    Object.assign({}, clientConfig ?? {}, {\n      region: (clientConfig == null ? void 0 : clientConfig.region) ?? ssoRegion\n    })\n  );\n  let ssoResp;\n  try {\n    ssoResp = await sso.send(\n      new GetRoleCredentialsCommand2({\n        accountId: ssoAccountId,\n        roleName: ssoRoleName,\n        accessToken\n      })\n    );\n  } catch (e) {\n    throw new import_property_provider.CredentialsProviderError(e, {\n      tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n      logger\n    });\n  }\n  const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration, credentialScope } = {} } = ssoResp;\n  if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n    throw new import_property_provider.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", {\n      tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n      logger\n    });\n  }\n  return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration), credentialScope };\n}, \"resolveSSOCredentials\");\n\n// src/validateSsoProfile.ts\n\nvar validateSsoProfile = /* @__PURE__ */ __name((profile, logger) => {\n  const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n  if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n    throw new import_property_provider.CredentialsProviderError(\n      `Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", \"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\n        \", \"\n      )}\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`,\n      { tryNextLink: false, logger }\n    );\n  }\n  return profile;\n}, \"validateSsoProfile\");\n\n// src/fromSSO.ts\nvar fromSSO = /* @__PURE__ */ __name((init = {}) => async () => {\n  var _a;\n  (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-sso - fromSSO\");\n  const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n  const { ssoClient } = init;\n  const profileName = (0, import_shared_ini_file_loader.getProfileName)(init);\n  if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n    const profiles = await (0, import_shared_ini_file_loader.parseKnownFiles)(init);\n    const profile = profiles[profileName];\n    if (!profile) {\n      throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} was not found.`, { logger: init.logger });\n    }\n    if (!isSsoProfile(profile)) {\n      throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`, {\n        logger: init.logger\n      });\n    }\n    if (profile == null ? void 0 : profile.sso_session) {\n      const ssoSessions = await (0, import_shared_ini_file_loader.loadSsoSessionData)(init);\n      const session = ssoSessions[profile.sso_session];\n      const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n      if (ssoRegion && ssoRegion !== session.sso_region) {\n        throw new import_property_provider.CredentialsProviderError(`Conflicting SSO region` + conflictMsg, {\n          tryNextLink: false,\n          logger: init.logger\n        });\n      }\n      if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n        throw new import_property_provider.CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, {\n          tryNextLink: false,\n          logger: init.logger\n        });\n      }\n      profile.sso_region = session.sso_region;\n      profile.sso_start_url = session.sso_start_url;\n    }\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = validateSsoProfile(\n      profile,\n      init.logger\n    );\n    return resolveSSOCredentials({\n      ssoStartUrl: sso_start_url,\n      ssoSession: sso_session,\n      ssoAccountId: sso_account_id,\n      ssoRegion: sso_region,\n      ssoRoleName: sso_role_name,\n      ssoClient,\n      clientConfig: init.clientConfig,\n      profile: profileName\n    });\n  } else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n    throw new import_property_provider.CredentialsProviderError(\n      'Incomplete configuration. The fromSSO() argument hash must include \"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"',\n      { tryNextLink: false, logger: init.logger }\n    );\n  } else {\n    return resolveSSOCredentials({\n      ssoStartUrl,\n      ssoSession,\n      ssoAccountId,\n      ssoRegion,\n      ssoRoleName,\n      ssoClient,\n      clientConfig: init.clientConfig,\n      profile: profileName\n    });\n  }\n}, \"fromSSO\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromSSO,\n  isSsoProfile,\n  validateSsoProfile\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.resolveStsAuthConfig = exports.defaultSTSHttpAuthSchemeProvider = exports.defaultSTSHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst STSClient_1 = require(\"../STSClient\");\nconst defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultSTSHttpAuthSchemeParametersProvider = defaultSTSHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nconst defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithSAML\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultSTSHttpAuthSchemeProvider = defaultSTSHttpAuthSchemeProvider;\nconst resolveStsAuthConfig = (input) => ({\n    ...input,\n    stsClientCtor: STSClient_1.STSClient,\n});\nexports.resolveStsAuthConfig = resolveStsAuthConfig;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, exports.resolveStsAuthConfig)(config);\n    const config_1 = (0, core_1.resolveAwsSdkSigV4Config)(config_0);\n    return {\n        ...config_1,\n    };\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.commonParams = exports.resolveClientEndpointParameters = void 0;\nconst resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\nexports.resolveClientEndpointParameters = resolveClientEndpointParameters;\nexports.commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n", "{\n  \"name\": \"@aws-sdk/client-sts\",\n  \"description\": \"AWS SDK for JavaScript Sts Client for Node.js, Browser and React Native\",\n  \"version\": \"3.614.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-sts\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"rimraf ./dist-types tsconfig.types.tsbuildinfo && tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sts\",\n    \"test\": \"yarn test:unit\",\n    \"test:unit\": \"jest\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/client-sso-oidc\": \"3.614.0\",\n    \"@aws-sdk/core\": \"3.614.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.614.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.609.0\",\n    \"@aws-sdk/middleware-logger\": \"3.609.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.609.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.614.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.614.0\",\n    \"@aws-sdk/types\": \"3.609.0\",\n    \"@aws-sdk/util-endpoints\": \"3.614.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.609.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.614.0\",\n    \"@smithy/config-resolver\": \"^3.0.5\",\n    \"@smithy/core\": \"^2.2.6\",\n    \"@smithy/fetch-http-handler\": \"^3.2.1\",\n    \"@smithy/hash-node\": \"^3.0.3\",\n    \"@smithy/invalid-dependency\": \"^3.0.3\",\n    \"@smithy/middleware-content-length\": \"^3.0.3\",\n    \"@smithy/middleware-endpoint\": \"^3.0.5\",\n    \"@smithy/middleware-retry\": \"^3.0.9\",\n    \"@smithy/middleware-serde\": \"^3.0.3\",\n    \"@smithy/middleware-stack\": \"^3.0.3\",\n    \"@smithy/node-config-provider\": \"^3.1.4\",\n    \"@smithy/node-http-handler\": \"^3.1.2\",\n    \"@smithy/protocol-http\": \"^4.0.3\",\n    \"@smithy/smithy-client\": \"^3.1.7\",\n    \"@smithy/types\": \"^3.3.0\",\n    \"@smithy/url-parser\": \"^3.0.3\",\n    \"@smithy/util-base64\": \"^3.0.0\",\n    \"@smithy/util-body-length-browser\": \"^3.0.0\",\n    \"@smithy/util-body-length-node\": \"^3.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^3.0.9\",\n    \"@smithy/util-defaults-mode-node\": \"^3.0.9\",\n    \"@smithy/util-endpoints\": \"^2.0.5\",\n    \"@smithy/util-middleware\": \"^3.0.3\",\n    \"@smithy/util-retry\": \"^3.0.3\",\n    \"@smithy/util-utf8\": \"^3.0.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node16\": \"16.1.3\",\n    \"@types/node\": \"^16.18.96\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=16.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sts\"\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst core_2 = require(\"@smithy/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new core_2.NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst core_2 = require(\"@smithy/core\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await (0, credential_provider_node_1.defaultProvider)(idProps?.__config || {})()),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new core_2.NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthRuntimeConfig = exports.getHttpAuthExtensionConfiguration = void 0;\nconst getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexports.getHttpAuthExtensionConfiguration = getHttpAuthExtensionConfiguration;\nconst resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\nexports.resolveHttpAuthRuntimeConfig = resolveHttpAuthRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRuntimeExtensions = void 0;\nconst region_config_resolver_1 = require(\"@aws-sdk/region-config-resolver\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst httpAuthExtensionConfiguration_1 = require(\"./auth/httpAuthExtensionConfiguration\");\nconst asPartial = (t) => t;\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial((0, region_config_resolver_1.getAwsRegionExtensionConfiguration)(runtimeConfig)),\n        ...asPartial((0, smithy_client_1.getDefaultExtensionConfiguration)(runtimeConfig)),\n        ...asPartial((0, protocol_http_1.getHttpHandlerExtensionConfiguration)(runtimeConfig)),\n        ...asPartial((0, httpAuthExtensionConfiguration_1.getHttpAuthExtensionConfiguration)(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...(0, region_config_resolver_1.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),\n        ...(0, smithy_client_1.resolveDefaultRuntimeConfig)(extensionConfiguration),\n        ...(0, protocol_http_1.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),\n        ...(0, httpAuthExtensionConfiguration_1.resolveHttpAuthRuntimeConfig)(extensionConfiguration),\n    };\n};\nexports.resolveRuntimeExtensions = resolveRuntimeExtensions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSClient = exports.__Client = void 0;\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst core_1 = require(\"@smithy/core\");\nconst middleware_content_length_1 = require(\"@smithy/middleware-content-length\");\nconst middleware_endpoint_1 = require(\"@smithy/middleware-endpoint\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nObject.defineProperty(exports, \"__Client\", { enumerable: true, get: function () { return smithy_client_1.Client; } });\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst EndpointParameters_1 = require(\"./endpoint/EndpointParameters\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst runtimeExtensions_1 = require(\"./runtimeExtensions\");\nclass STSClient extends smithy_client_1.Client {\n    constructor(...[configuration]) {\n        const _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration || {});\n        const _config_1 = (0, EndpointParameters_1.resolveClientEndpointParameters)(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveRegionConfig)(_config_1);\n        const _config_3 = (0, middleware_endpoint_1.resolveEndpointConfig)(_config_2);\n        const _config_4 = (0, middleware_retry_1.resolveRetryConfig)(_config_3);\n        const _config_5 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_4);\n        const _config_6 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_5);\n        const _config_7 = (0, httpAuthSchemeProvider_1.resolveHttpAuthSchemeConfig)(_config_6);\n        const _config_8 = (0, runtimeExtensions_1.resolveRuntimeExtensions)(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n        this.middlewareStack.use((0, core_1.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n            httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n            identityProviderConfigProvider: this.getIdentityProviderConfigProvider(),\n        }));\n        this.middlewareStack.use((0, core_1.getHttpSigningPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n    getDefaultHttpAuthSchemeParametersProvider() {\n        return httpAuthSchemeProvider_1.defaultSTSHttpAuthSchemeParametersProvider;\n    }\n    getIdentityProviderConfigProvider() {\n        return async (config) => new core_1.DefaultIdentityProviderConfig({\n            \"aws.auth#sigv4\": config.credentials,\n        });\n    }\n}\nexports.STSClient = STSClient;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AssumeRoleCommand: () => AssumeRoleCommand,\n  AssumeRoleResponseFilterSensitiveLog: () => AssumeRoleResponseFilterSensitiveLog,\n  AssumeRoleWithSAMLCommand: () => AssumeRoleWithSAMLCommand,\n  AssumeRoleWithSAMLRequestFilterSensitiveLog: () => AssumeRoleWithSAMLRequestFilterSensitiveLog,\n  AssumeRoleWithSAMLResponseFilterSensitiveLog: () => AssumeRoleWithSAMLResponseFilterSensitiveLog,\n  AssumeRoleWithWebIdentityCommand: () => AssumeRoleWithWebIdentityCommand,\n  AssumeRoleWithWebIdentityRequestFilterSensitiveLog: () => AssumeRoleWithWebIdentityRequestFilterSensitiveLog,\n  AssumeRoleWithWebIdentityResponseFilterSensitiveLog: () => AssumeRoleWithWebIdentityResponseFilterSensitiveLog,\n  ClientInputEndpointParameters: () => import_EndpointParameters9.ClientInputEndpointParameters,\n  CredentialsFilterSensitiveLog: () => CredentialsFilterSensitiveLog,\n  DecodeAuthorizationMessageCommand: () => DecodeAuthorizationMessageCommand,\n  ExpiredTokenException: () => ExpiredTokenException,\n  GetAccessKeyInfoCommand: () => GetAccessKeyInfoCommand,\n  GetCallerIdentityCommand: () => GetCallerIdentityCommand,\n  GetFederationTokenCommand: () => GetFederationTokenCommand,\n  GetFederationTokenResponseFilterSensitiveLog: () => GetFederationTokenResponseFilterSensitiveLog,\n  GetSessionTokenCommand: () => GetSessionTokenCommand,\n  GetSessionTokenResponseFilterSensitiveLog: () => GetSessionTokenResponseFilterSensitiveLog,\n  IDPCommunicationErrorException: () => IDPCommunicationErrorException,\n  IDPRejectedClaimException: () => IDPRejectedClaimException,\n  InvalidAuthorizationMessageException: () => InvalidAuthorizationMessageException,\n  InvalidIdentityTokenException: () => InvalidIdentityTokenException,\n  MalformedPolicyDocumentException: () => MalformedPolicyDocumentException,\n  PackedPolicyTooLargeException: () => PackedPolicyTooLargeException,\n  RegionDisabledException: () => RegionDisabledException,\n  STS: () => STS,\n  STSServiceException: () => STSServiceException,\n  decorateDefaultCredentialProvider: () => decorateDefaultCredentialProvider,\n  getDefaultRoleAssumer: () => getDefaultRoleAssumer2,\n  getDefaultRoleAssumerWithWebIdentity: () => getDefaultRoleAssumerWithWebIdentity2\n});\nmodule.exports = __toCommonJS(src_exports);\n__reExport(src_exports, require(\"././STSClient\"), module.exports);\n\n// src/STS.ts\n\n\n// src/commands/AssumeRoleCommand.ts\nvar import_middleware_endpoint = require(\"@smithy/middleware-endpoint\");\nvar import_middleware_serde = require(\"@smithy/middleware-serde\");\n\nvar import_EndpointParameters = require(\"./endpoint/EndpointParameters\");\n\n// src/models/models_0.ts\n\n\n// src/models/STSServiceException.ts\nvar import_smithy_client = require(\"@smithy/smithy-client\");\nvar _STSServiceException = class _STSServiceException extends import_smithy_client.ServiceException {\n  /**\n   * @internal\n   */\n  constructor(options) {\n    super(options);\n    Object.setPrototypeOf(this, _STSServiceException.prototype);\n  }\n};\n__name(_STSServiceException, \"STSServiceException\");\nvar STSServiceException = _STSServiceException;\n\n// src/models/models_0.ts\nvar _ExpiredTokenException = class _ExpiredTokenException extends STSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ExpiredTokenException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ExpiredTokenException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ExpiredTokenException.prototype);\n  }\n};\n__name(_ExpiredTokenException, \"ExpiredTokenException\");\nvar ExpiredTokenException = _ExpiredTokenException;\nvar _MalformedPolicyDocumentException = class _MalformedPolicyDocumentException extends STSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"MalformedPolicyDocumentException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"MalformedPolicyDocumentException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _MalformedPolicyDocumentException.prototype);\n  }\n};\n__name(_MalformedPolicyDocumentException, \"MalformedPolicyDocumentException\");\nvar MalformedPolicyDocumentException = _MalformedPolicyDocumentException;\nvar _PackedPolicyTooLargeException = class _PackedPolicyTooLargeException extends STSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"PackedPolicyTooLargeException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"PackedPolicyTooLargeException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _PackedPolicyTooLargeException.prototype);\n  }\n};\n__name(_PackedPolicyTooLargeException, \"PackedPolicyTooLargeException\");\nvar PackedPolicyTooLargeException = _PackedPolicyTooLargeException;\nvar _RegionDisabledException = class _RegionDisabledException extends STSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"RegionDisabledException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"RegionDisabledException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _RegionDisabledException.prototype);\n  }\n};\n__name(_RegionDisabledException, \"RegionDisabledException\");\nvar RegionDisabledException = _RegionDisabledException;\nvar _IDPRejectedClaimException = class _IDPRejectedClaimException extends STSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"IDPRejectedClaimException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"IDPRejectedClaimException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _IDPRejectedClaimException.prototype);\n  }\n};\n__name(_IDPRejectedClaimException, \"IDPRejectedClaimException\");\nvar IDPRejectedClaimException = _IDPRejectedClaimException;\nvar _InvalidIdentityTokenException = class _InvalidIdentityTokenException extends STSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidIdentityTokenException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidIdentityTokenException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidIdentityTokenException.prototype);\n  }\n};\n__name(_InvalidIdentityTokenException, \"InvalidIdentityTokenException\");\nvar InvalidIdentityTokenException = _InvalidIdentityTokenException;\nvar _IDPCommunicationErrorException = class _IDPCommunicationErrorException extends STSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"IDPCommunicationErrorException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"IDPCommunicationErrorException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _IDPCommunicationErrorException.prototype);\n  }\n};\n__name(_IDPCommunicationErrorException, \"IDPCommunicationErrorException\");\nvar IDPCommunicationErrorException = _IDPCommunicationErrorException;\nvar _InvalidAuthorizationMessageException = class _InvalidAuthorizationMessageException extends STSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidAuthorizationMessageException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAuthorizationMessageException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidAuthorizationMessageException.prototype);\n  }\n};\n__name(_InvalidAuthorizationMessageException, \"InvalidAuthorizationMessageException\");\nvar InvalidAuthorizationMessageException = _InvalidAuthorizationMessageException;\nvar CredentialsFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.SecretAccessKey && { SecretAccessKey: import_smithy_client.SENSITIVE_STRING }\n}), \"CredentialsFilterSensitiveLog\");\nvar AssumeRoleResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }\n}), \"AssumeRoleResponseFilterSensitiveLog\");\nvar AssumeRoleWithSAMLRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.SAMLAssertion && { SAMLAssertion: import_smithy_client.SENSITIVE_STRING }\n}), \"AssumeRoleWithSAMLRequestFilterSensitiveLog\");\nvar AssumeRoleWithSAMLResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }\n}), \"AssumeRoleWithSAMLResponseFilterSensitiveLog\");\nvar AssumeRoleWithWebIdentityRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.WebIdentityToken && { WebIdentityToken: import_smithy_client.SENSITIVE_STRING }\n}), \"AssumeRoleWithWebIdentityRequestFilterSensitiveLog\");\nvar AssumeRoleWithWebIdentityResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }\n}), \"AssumeRoleWithWebIdentityResponseFilterSensitiveLog\");\nvar GetFederationTokenResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }\n}), \"GetFederationTokenResponseFilterSensitiveLog\");\nvar GetSessionTokenResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }\n}), \"GetSessionTokenResponseFilterSensitiveLog\");\n\n// src/protocols/Aws_query.ts\nvar import_core = require(\"@aws-sdk/core\");\nvar import_protocol_http = require(\"@smithy/protocol-http\");\n\nvar se_AssumeRoleCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_AssumeRoleRequest(input, context),\n    [_A]: _AR,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AssumeRoleCommand\");\nvar se_AssumeRoleWithSAMLCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_AssumeRoleWithSAMLRequest(input, context),\n    [_A]: _ARWSAML,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AssumeRoleWithSAMLCommand\");\nvar se_AssumeRoleWithWebIdentityCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_AssumeRoleWithWebIdentityRequest(input, context),\n    [_A]: _ARWWI,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AssumeRoleWithWebIdentityCommand\");\nvar se_DecodeAuthorizationMessageCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_DecodeAuthorizationMessageRequest(input, context),\n    [_A]: _DAM,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DecodeAuthorizationMessageCommand\");\nvar se_GetAccessKeyInfoCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetAccessKeyInfoRequest(input, context),\n    [_A]: _GAKI,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetAccessKeyInfoCommand\");\nvar se_GetCallerIdentityCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetCallerIdentityRequest(input, context),\n    [_A]: _GCI,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetCallerIdentityCommand\");\nvar se_GetFederationTokenCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetFederationTokenRequest(input, context),\n    [_A]: _GFT,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetFederationTokenCommand\");\nvar se_GetSessionTokenCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetSessionTokenRequest(input, context),\n    [_A]: _GST,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetSessionTokenCommand\");\nvar de_AssumeRoleCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_AssumeRoleCommand\");\nvar de_AssumeRoleWithSAMLCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_AssumeRoleWithSAMLCommand\");\nvar de_AssumeRoleWithWebIdentityCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_AssumeRoleWithWebIdentityCommand\");\nvar de_DecodeAuthorizationMessageCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DecodeAuthorizationMessageCommand\");\nvar de_GetAccessKeyInfoCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetAccessKeyInfoCommand\");\nvar de_GetCallerIdentityCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetCallerIdentityCommand\");\nvar de_GetFederationTokenCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetFederationTokenCommand\");\nvar de_GetSessionTokenCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetSessionTokenCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await (0, import_core.parseXmlErrorBody)(output.body, context)\n  };\n  const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredTokenException\":\n    case \"com.amazonaws.sts#ExpiredTokenException\":\n      throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n    case \"MalformedPolicyDocument\":\n    case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n      throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n    case \"PackedPolicyTooLarge\":\n    case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n      throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n    case \"RegionDisabledException\":\n    case \"com.amazonaws.sts#RegionDisabledException\":\n      throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n    case \"IDPRejectedClaim\":\n    case \"com.amazonaws.sts#IDPRejectedClaimException\":\n      throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n    case \"InvalidIdentityToken\":\n    case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n      throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n    case \"IDPCommunicationError\":\n    case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n      throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n    case \"InvalidAuthorizationMessageException\":\n    case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n      throw await de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        errorCode\n      });\n  }\n}, \"de_CommandError\");\nvar de_ExpiredTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_ExpiredTokenException(body.Error, context);\n  const exception = new ExpiredTokenException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ExpiredTokenExceptionRes\");\nvar de_IDPCommunicationErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n  const exception = new IDPCommunicationErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_IDPCommunicationErrorExceptionRes\");\nvar de_IDPRejectedClaimExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_IDPRejectedClaimException(body.Error, context);\n  const exception = new IDPRejectedClaimException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_IDPRejectedClaimExceptionRes\");\nvar de_InvalidAuthorizationMessageExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_InvalidAuthorizationMessageException(body.Error, context);\n  const exception = new InvalidAuthorizationMessageException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAuthorizationMessageExceptionRes\");\nvar de_InvalidIdentityTokenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n  const exception = new InvalidIdentityTokenException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidIdentityTokenExceptionRes\");\nvar de_MalformedPolicyDocumentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n  const exception = new MalformedPolicyDocumentException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_MalformedPolicyDocumentExceptionRes\");\nvar de_PackedPolicyTooLargeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n  const exception = new PackedPolicyTooLargeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_PackedPolicyTooLargeExceptionRes\");\nvar de_RegionDisabledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_RegionDisabledException(body.Error, context);\n  const exception = new RegionDisabledException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_RegionDisabledExceptionRes\");\nvar se_AssumeRoleRequest = /* @__PURE__ */ __name((input, context) => {\n  var _a2, _b, _c, _d;\n  const entries = {};\n  if (input[_RA] != null) {\n    entries[_RA] = input[_RA];\n  }\n  if (input[_RSN] != null) {\n    entries[_RSN] = input[_RSN];\n  }\n  if (input[_PA] != null) {\n    const memberEntries = se_policyDescriptorListType(input[_PA], context);\n    if (((_a2 = input[_PA]) == null ? void 0 : _a2.length) === 0) {\n      entries.PolicyArns = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `PolicyArns.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_P] != null) {\n    entries[_P] = input[_P];\n  }\n  if (input[_DS] != null) {\n    entries[_DS] = input[_DS];\n  }\n  if (input[_T] != null) {\n    const memberEntries = se_tagListType(input[_T], context);\n    if (((_b = input[_T]) == null ? void 0 : _b.length) === 0) {\n      entries.Tags = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Tags.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_TTK] != null) {\n    const memberEntries = se_tagKeyListType(input[_TTK], context);\n    if (((_c = input[_TTK]) == null ? void 0 : _c.length) === 0) {\n      entries.TransitiveTagKeys = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `TransitiveTagKeys.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_EI] != null) {\n    entries[_EI] = input[_EI];\n  }\n  if (input[_SN] != null) {\n    entries[_SN] = input[_SN];\n  }\n  if (input[_TC] != null) {\n    entries[_TC] = input[_TC];\n  }\n  if (input[_SI] != null) {\n    entries[_SI] = input[_SI];\n  }\n  if (input[_PC] != null) {\n    const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n    if (((_d = input[_PC]) == null ? void 0 : _d.length) === 0) {\n      entries.ProvidedContexts = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `ProvidedContexts.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_AssumeRoleRequest\");\nvar se_AssumeRoleWithSAMLRequest = /* @__PURE__ */ __name((input, context) => {\n  var _a2;\n  const entries = {};\n  if (input[_RA] != null) {\n    entries[_RA] = input[_RA];\n  }\n  if (input[_PAr] != null) {\n    entries[_PAr] = input[_PAr];\n  }\n  if (input[_SAMLA] != null) {\n    entries[_SAMLA] = input[_SAMLA];\n  }\n  if (input[_PA] != null) {\n    const memberEntries = se_policyDescriptorListType(input[_PA], context);\n    if (((_a2 = input[_PA]) == null ? void 0 : _a2.length) === 0) {\n      entries.PolicyArns = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `PolicyArns.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_P] != null) {\n    entries[_P] = input[_P];\n  }\n  if (input[_DS] != null) {\n    entries[_DS] = input[_DS];\n  }\n  return entries;\n}, \"se_AssumeRoleWithSAMLRequest\");\nvar se_AssumeRoleWithWebIdentityRequest = /* @__PURE__ */ __name((input, context) => {\n  var _a2;\n  const entries = {};\n  if (input[_RA] != null) {\n    entries[_RA] = input[_RA];\n  }\n  if (input[_RSN] != null) {\n    entries[_RSN] = input[_RSN];\n  }\n  if (input[_WIT] != null) {\n    entries[_WIT] = input[_WIT];\n  }\n  if (input[_PI] != null) {\n    entries[_PI] = input[_PI];\n  }\n  if (input[_PA] != null) {\n    const memberEntries = se_policyDescriptorListType(input[_PA], context);\n    if (((_a2 = input[_PA]) == null ? void 0 : _a2.length) === 0) {\n      entries.PolicyArns = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `PolicyArns.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_P] != null) {\n    entries[_P] = input[_P];\n  }\n  if (input[_DS] != null) {\n    entries[_DS] = input[_DS];\n  }\n  return entries;\n}, \"se_AssumeRoleWithWebIdentityRequest\");\nvar se_DecodeAuthorizationMessageRequest = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_EM] != null) {\n    entries[_EM] = input[_EM];\n  }\n  return entries;\n}, \"se_DecodeAuthorizationMessageRequest\");\nvar se_GetAccessKeyInfoRequest = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_AKI] != null) {\n    entries[_AKI] = input[_AKI];\n  }\n  return entries;\n}, \"se_GetAccessKeyInfoRequest\");\nvar se_GetCallerIdentityRequest = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  return entries;\n}, \"se_GetCallerIdentityRequest\");\nvar se_GetFederationTokenRequest = /* @__PURE__ */ __name((input, context) => {\n  var _a2, _b;\n  const entries = {};\n  if (input[_N] != null) {\n    entries[_N] = input[_N];\n  }\n  if (input[_P] != null) {\n    entries[_P] = input[_P];\n  }\n  if (input[_PA] != null) {\n    const memberEntries = se_policyDescriptorListType(input[_PA], context);\n    if (((_a2 = input[_PA]) == null ? void 0 : _a2.length) === 0) {\n      entries.PolicyArns = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `PolicyArns.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_DS] != null) {\n    entries[_DS] = input[_DS];\n  }\n  if (input[_T] != null) {\n    const memberEntries = se_tagListType(input[_T], context);\n    if (((_b = input[_T]) == null ? void 0 : _b.length) === 0) {\n      entries.Tags = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Tags.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_GetFederationTokenRequest\");\nvar se_GetSessionTokenRequest = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_DS] != null) {\n    entries[_DS] = input[_DS];\n  }\n  if (input[_SN] != null) {\n    entries[_SN] = input[_SN];\n  }\n  if (input[_TC] != null) {\n    entries[_TC] = input[_TC];\n  }\n  return entries;\n}, \"se_GetSessionTokenRequest\");\nvar se_policyDescriptorListType = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    const memberEntries = se_PolicyDescriptorType(entry, context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      entries[`member.${counter}.${key}`] = value;\n    });\n    counter++;\n  }\n  return entries;\n}, \"se_policyDescriptorListType\");\nvar se_PolicyDescriptorType = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_a] != null) {\n    entries[_a] = input[_a];\n  }\n  return entries;\n}, \"se_PolicyDescriptorType\");\nvar se_ProvidedContext = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PAro] != null) {\n    entries[_PAro] = input[_PAro];\n  }\n  if (input[_CA] != null) {\n    entries[_CA] = input[_CA];\n  }\n  return entries;\n}, \"se_ProvidedContext\");\nvar se_ProvidedContextsListType = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    const memberEntries = se_ProvidedContext(entry, context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      entries[`member.${counter}.${key}`] = value;\n    });\n    counter++;\n  }\n  return entries;\n}, \"se_ProvidedContextsListType\");\nvar se_Tag = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_K] != null) {\n    entries[_K] = input[_K];\n  }\n  if (input[_Va] != null) {\n    entries[_Va] = input[_Va];\n  }\n  return entries;\n}, \"se_Tag\");\nvar se_tagKeyListType = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    entries[`member.${counter}`] = entry;\n    counter++;\n  }\n  return entries;\n}, \"se_tagKeyListType\");\nvar se_tagListType = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    const memberEntries = se_Tag(entry, context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      entries[`member.${counter}.${key}`] = value;\n    });\n    counter++;\n  }\n  return entries;\n}, \"se_tagListType\");\nvar de_AssumedRoleUser = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_ARI] != null) {\n    contents[_ARI] = (0, import_smithy_client.expectString)(output[_ARI]);\n  }\n  if (output[_Ar] != null) {\n    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n  }\n  return contents;\n}, \"de_AssumedRoleUser\");\nvar de_AssumeRoleResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_C] != null) {\n    contents[_C] = de_Credentials(output[_C], context);\n  }\n  if (output[_ARU] != null) {\n    contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n  }\n  if (output[_PPS] != null) {\n    contents[_PPS] = (0, import_smithy_client.strictParseInt32)(output[_PPS]);\n  }\n  if (output[_SI] != null) {\n    contents[_SI] = (0, import_smithy_client.expectString)(output[_SI]);\n  }\n  return contents;\n}, \"de_AssumeRoleResponse\");\nvar de_AssumeRoleWithSAMLResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_C] != null) {\n    contents[_C] = de_Credentials(output[_C], context);\n  }\n  if (output[_ARU] != null) {\n    contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n  }\n  if (output[_PPS] != null) {\n    contents[_PPS] = (0, import_smithy_client.strictParseInt32)(output[_PPS]);\n  }\n  if (output[_S] != null) {\n    contents[_S] = (0, import_smithy_client.expectString)(output[_S]);\n  }\n  if (output[_ST] != null) {\n    contents[_ST] = (0, import_smithy_client.expectString)(output[_ST]);\n  }\n  if (output[_I] != null) {\n    contents[_I] = (0, import_smithy_client.expectString)(output[_I]);\n  }\n  if (output[_Au] != null) {\n    contents[_Au] = (0, import_smithy_client.expectString)(output[_Au]);\n  }\n  if (output[_NQ] != null) {\n    contents[_NQ] = (0, import_smithy_client.expectString)(output[_NQ]);\n  }\n  if (output[_SI] != null) {\n    contents[_SI] = (0, import_smithy_client.expectString)(output[_SI]);\n  }\n  return contents;\n}, \"de_AssumeRoleWithSAMLResponse\");\nvar de_AssumeRoleWithWebIdentityResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_C] != null) {\n    contents[_C] = de_Credentials(output[_C], context);\n  }\n  if (output[_SFWIT] != null) {\n    contents[_SFWIT] = (0, import_smithy_client.expectString)(output[_SFWIT]);\n  }\n  if (output[_ARU] != null) {\n    contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n  }\n  if (output[_PPS] != null) {\n    contents[_PPS] = (0, import_smithy_client.strictParseInt32)(output[_PPS]);\n  }\n  if (output[_Pr] != null) {\n    contents[_Pr] = (0, import_smithy_client.expectString)(output[_Pr]);\n  }\n  if (output[_Au] != null) {\n    contents[_Au] = (0, import_smithy_client.expectString)(output[_Au]);\n  }\n  if (output[_SI] != null) {\n    contents[_SI] = (0, import_smithy_client.expectString)(output[_SI]);\n  }\n  return contents;\n}, \"de_AssumeRoleWithWebIdentityResponse\");\nvar de_Credentials = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_AKI] != null) {\n    contents[_AKI] = (0, import_smithy_client.expectString)(output[_AKI]);\n  }\n  if (output[_SAK] != null) {\n    contents[_SAK] = (0, import_smithy_client.expectString)(output[_SAK]);\n  }\n  if (output[_STe] != null) {\n    contents[_STe] = (0, import_smithy_client.expectString)(output[_STe]);\n  }\n  if (output[_E] != null) {\n    contents[_E] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_E]));\n  }\n  return contents;\n}, \"de_Credentials\");\nvar de_DecodeAuthorizationMessageResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_DM] != null) {\n    contents[_DM] = (0, import_smithy_client.expectString)(output[_DM]);\n  }\n  return contents;\n}, \"de_DecodeAuthorizationMessageResponse\");\nvar de_ExpiredTokenException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_ExpiredTokenException\");\nvar de_FederatedUser = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_FUI] != null) {\n    contents[_FUI] = (0, import_smithy_client.expectString)(output[_FUI]);\n  }\n  if (output[_Ar] != null) {\n    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n  }\n  return contents;\n}, \"de_FederatedUser\");\nvar de_GetAccessKeyInfoResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_Ac] != null) {\n    contents[_Ac] = (0, import_smithy_client.expectString)(output[_Ac]);\n  }\n  return contents;\n}, \"de_GetAccessKeyInfoResponse\");\nvar de_GetCallerIdentityResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_UI] != null) {\n    contents[_UI] = (0, import_smithy_client.expectString)(output[_UI]);\n  }\n  if (output[_Ac] != null) {\n    contents[_Ac] = (0, import_smithy_client.expectString)(output[_Ac]);\n  }\n  if (output[_Ar] != null) {\n    contents[_Ar] = (0, import_smithy_client.expectString)(output[_Ar]);\n  }\n  return contents;\n}, \"de_GetCallerIdentityResponse\");\nvar de_GetFederationTokenResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_C] != null) {\n    contents[_C] = de_Credentials(output[_C], context);\n  }\n  if (output[_FU] != null) {\n    contents[_FU] = de_FederatedUser(output[_FU], context);\n  }\n  if (output[_PPS] != null) {\n    contents[_PPS] = (0, import_smithy_client.strictParseInt32)(output[_PPS]);\n  }\n  return contents;\n}, \"de_GetFederationTokenResponse\");\nvar de_GetSessionTokenResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_C] != null) {\n    contents[_C] = de_Credentials(output[_C], context);\n  }\n  return contents;\n}, \"de_GetSessionTokenResponse\");\nvar de_IDPCommunicationErrorException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_IDPCommunicationErrorException\");\nvar de_IDPRejectedClaimException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_IDPRejectedClaimException\");\nvar de_InvalidAuthorizationMessageException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_InvalidAuthorizationMessageException\");\nvar de_InvalidIdentityTokenException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_InvalidIdentityTokenException\");\nvar de_MalformedPolicyDocumentException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_MalformedPolicyDocumentException\");\nvar de_PackedPolicyTooLargeException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_PackedPolicyTooLargeException\");\nvar de_RegionDisabledException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_RegionDisabledException\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output) => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n}), \"deserializeMetadata\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(STSServiceException);\nvar buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const contents = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n    headers\n  };\n  if (resolvedHostname !== void 0) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== void 0) {\n    contents.body = body;\n  }\n  return new import_protocol_http.HttpRequest(contents);\n}, \"buildHttpRpcRequest\");\nvar SHARED_HEADERS = {\n  \"content-type\": \"application/x-www-form-urlencoded\"\n};\nvar _ = \"2011-06-15\";\nvar _A = \"Action\";\nvar _AKI = \"AccessKeyId\";\nvar _AR = \"AssumeRole\";\nvar _ARI = \"AssumedRoleId\";\nvar _ARU = \"AssumedRoleUser\";\nvar _ARWSAML = \"AssumeRoleWithSAML\";\nvar _ARWWI = \"AssumeRoleWithWebIdentity\";\nvar _Ac = \"Account\";\nvar _Ar = \"Arn\";\nvar _Au = \"Audience\";\nvar _C = \"Credentials\";\nvar _CA = \"ContextAssertion\";\nvar _DAM = \"DecodeAuthorizationMessage\";\nvar _DM = \"DecodedMessage\";\nvar _DS = \"DurationSeconds\";\nvar _E = \"Expiration\";\nvar _EI = \"ExternalId\";\nvar _EM = \"EncodedMessage\";\nvar _FU = \"FederatedUser\";\nvar _FUI = \"FederatedUserId\";\nvar _GAKI = \"GetAccessKeyInfo\";\nvar _GCI = \"GetCallerIdentity\";\nvar _GFT = \"GetFederationToken\";\nvar _GST = \"GetSessionToken\";\nvar _I = \"Issuer\";\nvar _K = \"Key\";\nvar _N = \"Name\";\nvar _NQ = \"NameQualifier\";\nvar _P = \"Policy\";\nvar _PA = \"PolicyArns\";\nvar _PAr = \"PrincipalArn\";\nvar _PAro = \"ProviderArn\";\nvar _PC = \"ProvidedContexts\";\nvar _PI = \"ProviderId\";\nvar _PPS = \"PackedPolicySize\";\nvar _Pr = \"Provider\";\nvar _RA = \"RoleArn\";\nvar _RSN = \"RoleSessionName\";\nvar _S = \"Subject\";\nvar _SAK = \"SecretAccessKey\";\nvar _SAMLA = \"SAMLAssertion\";\nvar _SFWIT = \"SubjectFromWebIdentityToken\";\nvar _SI = \"SourceIdentity\";\nvar _SN = \"SerialNumber\";\nvar _ST = \"SubjectType\";\nvar _STe = \"SessionToken\";\nvar _T = \"Tags\";\nvar _TC = \"TokenCode\";\nvar _TTK = \"TransitiveTagKeys\";\nvar _UI = \"UserId\";\nvar _V = \"Version\";\nvar _Va = \"Value\";\nvar _WIT = \"WebIdentityToken\";\nvar _a = \"arn\";\nvar _m = \"message\";\nvar buildFormUrlencodedString = /* @__PURE__ */ __name((formEntries) => Object.entries(formEntries).map(([key, value]) => (0, import_smithy_client.extendedEncodeURIComponent)(key) + \"=\" + (0, import_smithy_client.extendedEncodeURIComponent)(value)).join(\"&\"), \"buildFormUrlencodedString\");\nvar loadQueryErrorCode = /* @__PURE__ */ __name((output, data) => {\n  var _a2;\n  if (((_a2 = data.Error) == null ? void 0 : _a2.Code) !== void 0) {\n    return data.Error.Code;\n  }\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n}, \"loadQueryErrorCode\");\n\n// src/commands/AssumeRoleCommand.ts\nvar _AssumeRoleCommand = class _AssumeRoleCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...import_EndpointParameters.commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {}).n(\"STSClient\", \"AssumeRoleCommand\").f(void 0, AssumeRoleResponseFilterSensitiveLog).ser(se_AssumeRoleCommand).de(de_AssumeRoleCommand).build() {\n};\n__name(_AssumeRoleCommand, \"AssumeRoleCommand\");\nvar AssumeRoleCommand = _AssumeRoleCommand;\n\n// src/commands/AssumeRoleWithSAMLCommand.ts\n\n\n\nvar import_EndpointParameters2 = require(\"./endpoint/EndpointParameters\");\nvar _AssumeRoleWithSAMLCommand = class _AssumeRoleWithSAMLCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...import_EndpointParameters2.commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithSAML\", {}).n(\"STSClient\", \"AssumeRoleWithSAMLCommand\").f(AssumeRoleWithSAMLRequestFilterSensitiveLog, AssumeRoleWithSAMLResponseFilterSensitiveLog).ser(se_AssumeRoleWithSAMLCommand).de(de_AssumeRoleWithSAMLCommand).build() {\n};\n__name(_AssumeRoleWithSAMLCommand, \"AssumeRoleWithSAMLCommand\");\nvar AssumeRoleWithSAMLCommand = _AssumeRoleWithSAMLCommand;\n\n// src/commands/AssumeRoleWithWebIdentityCommand.ts\n\n\n\nvar import_EndpointParameters3 = require(\"./endpoint/EndpointParameters\");\nvar _AssumeRoleWithWebIdentityCommand = class _AssumeRoleWithWebIdentityCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...import_EndpointParameters3.commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {}).n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\").f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog).ser(se_AssumeRoleWithWebIdentityCommand).de(de_AssumeRoleWithWebIdentityCommand).build() {\n};\n__name(_AssumeRoleWithWebIdentityCommand, \"AssumeRoleWithWebIdentityCommand\");\nvar AssumeRoleWithWebIdentityCommand = _AssumeRoleWithWebIdentityCommand;\n\n// src/commands/DecodeAuthorizationMessageCommand.ts\n\n\n\nvar import_EndpointParameters4 = require(\"./endpoint/EndpointParameters\");\nvar _DecodeAuthorizationMessageCommand = class _DecodeAuthorizationMessageCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...import_EndpointParameters4.commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"DecodeAuthorizationMessage\", {}).n(\"STSClient\", \"DecodeAuthorizationMessageCommand\").f(void 0, void 0).ser(se_DecodeAuthorizationMessageCommand).de(de_DecodeAuthorizationMessageCommand).build() {\n};\n__name(_DecodeAuthorizationMessageCommand, \"DecodeAuthorizationMessageCommand\");\nvar DecodeAuthorizationMessageCommand = _DecodeAuthorizationMessageCommand;\n\n// src/commands/GetAccessKeyInfoCommand.ts\n\n\n\nvar import_EndpointParameters5 = require(\"./endpoint/EndpointParameters\");\nvar _GetAccessKeyInfoCommand = class _GetAccessKeyInfoCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...import_EndpointParameters5.commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"GetAccessKeyInfo\", {}).n(\"STSClient\", \"GetAccessKeyInfoCommand\").f(void 0, void 0).ser(se_GetAccessKeyInfoCommand).de(de_GetAccessKeyInfoCommand).build() {\n};\n__name(_GetAccessKeyInfoCommand, \"GetAccessKeyInfoCommand\");\nvar GetAccessKeyInfoCommand = _GetAccessKeyInfoCommand;\n\n// src/commands/GetCallerIdentityCommand.ts\n\n\n\nvar import_EndpointParameters6 = require(\"./endpoint/EndpointParameters\");\nvar _GetCallerIdentityCommand = class _GetCallerIdentityCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...import_EndpointParameters6.commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"GetCallerIdentity\", {}).n(\"STSClient\", \"GetCallerIdentityCommand\").f(void 0, void 0).ser(se_GetCallerIdentityCommand).de(de_GetCallerIdentityCommand).build() {\n};\n__name(_GetCallerIdentityCommand, \"GetCallerIdentityCommand\");\nvar GetCallerIdentityCommand = _GetCallerIdentityCommand;\n\n// src/commands/GetFederationTokenCommand.ts\n\n\n\nvar import_EndpointParameters7 = require(\"./endpoint/EndpointParameters\");\nvar _GetFederationTokenCommand = class _GetFederationTokenCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...import_EndpointParameters7.commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"GetFederationToken\", {}).n(\"STSClient\", \"GetFederationTokenCommand\").f(void 0, GetFederationTokenResponseFilterSensitiveLog).ser(se_GetFederationTokenCommand).de(de_GetFederationTokenCommand).build() {\n};\n__name(_GetFederationTokenCommand, \"GetFederationTokenCommand\");\nvar GetFederationTokenCommand = _GetFederationTokenCommand;\n\n// src/commands/GetSessionTokenCommand.ts\n\n\n\nvar import_EndpointParameters8 = require(\"./endpoint/EndpointParameters\");\nvar _GetSessionTokenCommand = class _GetSessionTokenCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...import_EndpointParameters8.commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AWSSecurityTokenServiceV20110615\", \"GetSessionToken\", {}).n(\"STSClient\", \"GetSessionTokenCommand\").f(void 0, GetSessionTokenResponseFilterSensitiveLog).ser(se_GetSessionTokenCommand).de(de_GetSessionTokenCommand).build() {\n};\n__name(_GetSessionTokenCommand, \"GetSessionTokenCommand\");\nvar GetSessionTokenCommand = _GetSessionTokenCommand;\n\n// src/STS.ts\nvar import_STSClient = require(\"././STSClient\");\nvar commands = {\n  AssumeRoleCommand,\n  AssumeRoleWithSAMLCommand,\n  AssumeRoleWithWebIdentityCommand,\n  DecodeAuthorizationMessageCommand,\n  GetAccessKeyInfoCommand,\n  GetCallerIdentityCommand,\n  GetFederationTokenCommand,\n  GetSessionTokenCommand\n};\nvar _STS = class _STS extends import_STSClient.STSClient {\n};\n__name(_STS, \"STS\");\nvar STS = _STS;\n(0, import_smithy_client.createAggregatedClient)(commands, STS);\n\n// src/index.ts\nvar import_EndpointParameters9 = require(\"./endpoint/EndpointParameters\");\n\n// src/defaultStsRoleAssumers.ts\nvar ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nvar resolveRegion = /* @__PURE__ */ __name(async (_region, _parentRegion, credentialProviderLogger) => {\n  var _a2;\n  const region = typeof _region === \"function\" ? await _region() : _region;\n  const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n  (_a2 = credentialProviderLogger == null ? void 0 : credentialProviderLogger.debug) == null ? void 0 : _a2.call(\n    credentialProviderLogger,\n    \"@aws-sdk/client-sts::resolveRegion\",\n    \"accepting first of:\",\n    `${region} (provider)`,\n    `${parentRegion} (parent client)`,\n    `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`\n  );\n  return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n}, \"resolveRegion\");\nvar getDefaultRoleAssumer = /* @__PURE__ */ __name((stsOptions, stsClientCtor) => {\n  let stsClient;\n  let closureSourceCreds;\n  return async (sourceCreds, params) => {\n    var _a2, _b, _c;\n    closureSourceCreds = sourceCreds;\n    if (!stsClient) {\n      const {\n        logger = (_a2 = stsOptions == null ? void 0 : stsOptions.parentClientConfig) == null ? void 0 : _a2.logger,\n        region,\n        requestHandler = (_b = stsOptions == null ? void 0 : stsOptions.parentClientConfig) == null ? void 0 : _b.requestHandler,\n        credentialProviderLogger\n      } = stsOptions;\n      const resolvedRegion = await resolveRegion(\n        region,\n        (_c = stsOptions == null ? void 0 : stsOptions.parentClientConfig) == null ? void 0 : _c.region,\n        credentialProviderLogger\n      );\n      stsClient = new stsClientCtor({\n        // A hack to make sts client uses the credential in current closure.\n        credentialDefaultProvider: () => async () => closureSourceCreds,\n        region: resolvedRegion,\n        requestHandler,\n        logger\n      });\n    }\n    const { Credentials: Credentials2 } = await stsClient.send(new AssumeRoleCommand(params));\n    if (!Credentials2 || !Credentials2.AccessKeyId || !Credentials2.SecretAccessKey) {\n      throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n    }\n    return {\n      accessKeyId: Credentials2.AccessKeyId,\n      secretAccessKey: Credentials2.SecretAccessKey,\n      sessionToken: Credentials2.SessionToken,\n      expiration: Credentials2.Expiration,\n      // TODO(credentialScope): access normally when shape is updated.\n      credentialScope: Credentials2.CredentialScope\n    };\n  };\n}, \"getDefaultRoleAssumer\");\nvar getDefaultRoleAssumerWithWebIdentity = /* @__PURE__ */ __name((stsOptions, stsClientCtor) => {\n  let stsClient;\n  return async (params) => {\n    var _a2, _b, _c;\n    if (!stsClient) {\n      const {\n        logger = (_a2 = stsOptions == null ? void 0 : stsOptions.parentClientConfig) == null ? void 0 : _a2.logger,\n        region,\n        requestHandler = (_b = stsOptions == null ? void 0 : stsOptions.parentClientConfig) == null ? void 0 : _b.requestHandler,\n        credentialProviderLogger\n      } = stsOptions;\n      const resolvedRegion = await resolveRegion(\n        region,\n        (_c = stsOptions == null ? void 0 : stsOptions.parentClientConfig) == null ? void 0 : _c.region,\n        credentialProviderLogger\n      );\n      stsClient = new stsClientCtor({\n        region: resolvedRegion,\n        requestHandler,\n        logger\n      });\n    }\n    const { Credentials: Credentials2 } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n    if (!Credentials2 || !Credentials2.AccessKeyId || !Credentials2.SecretAccessKey) {\n      throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n    }\n    return {\n      accessKeyId: Credentials2.AccessKeyId,\n      secretAccessKey: Credentials2.SecretAccessKey,\n      sessionToken: Credentials2.SessionToken,\n      expiration: Credentials2.Expiration,\n      // TODO(credentialScope): access normally when shape is updated.\n      credentialScope: Credentials2.CredentialScope\n    };\n  };\n}, \"getDefaultRoleAssumerWithWebIdentity\");\n\n// src/defaultRoleAssumers.ts\nvar import_STSClient2 = require(\"././STSClient\");\nvar getCustomizableStsClientCtor = /* @__PURE__ */ __name((baseCtor, customizations) => {\n  var _a2;\n  if (!customizations)\n    return baseCtor;\n  else\n    return _a2 = class extends baseCtor {\n      constructor(config) {\n        super(config);\n        for (const customization of customizations) {\n          this.middlewareStack.use(customization);\n        }\n      }\n    }, __name(_a2, \"CustomizableSTSClient\"), _a2;\n}, \"getCustomizableStsClientCtor\");\nvar getDefaultRoleAssumer2 = /* @__PURE__ */ __name((stsOptions = {}, stsPlugins) => getDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(import_STSClient2.STSClient, stsPlugins)), \"getDefaultRoleAssumer\");\nvar getDefaultRoleAssumerWithWebIdentity2 = /* @__PURE__ */ __name((stsOptions = {}, stsPlugins) => getDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(import_STSClient2.STSClient, stsPlugins)), \"getDefaultRoleAssumerWithWebIdentity\");\nvar decorateDefaultCredentialProvider = /* @__PURE__ */ __name((provider) => (input) => provider({\n  roleAssumer: getDefaultRoleAssumer2(input),\n  roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity2(input),\n  ...input\n}), \"decorateDefaultCredentialProvider\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  STSServiceException,\n  __Client,\n  STSClient,\n  STS,\n  $Command,\n  AssumeRoleCommand,\n  AssumeRoleWithSAMLCommand,\n  AssumeRoleWithWebIdentityCommand,\n  DecodeAuthorizationMessageCommand,\n  GetAccessKeyInfoCommand,\n  GetCallerIdentityCommand,\n  GetFederationTokenCommand,\n  GetSessionTokenCommand,\n  ExpiredTokenException,\n  MalformedPolicyDocumentException,\n  PackedPolicyTooLargeException,\n  RegionDisabledException,\n  IDPRejectedClaimException,\n  InvalidIdentityTokenException,\n  IDPCommunicationErrorException,\n  InvalidAuthorizationMessageException,\n  CredentialsFilterSensitiveLog,\n  AssumeRoleResponseFilterSensitiveLog,\n  AssumeRoleWithSAMLRequestFilterSensitiveLog,\n  AssumeRoleWithSAMLResponseFilterSensitiveLog,\n  AssumeRoleWithWebIdentityRequestFilterSensitiveLog,\n  AssumeRoleWithWebIdentityResponseFilterSensitiveLog,\n  GetFederationTokenResponseFilterSensitiveLog,\n  GetSessionTokenResponseFilterSensitiveLog,\n  getDefaultRoleAssumer,\n  getDefaultRoleAssumerWithWebIdentity,\n  decorateDefaultCredentialProvider\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromProcess: () => fromProcess\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fromProcess.ts\nvar import_shared_ini_file_loader = require(\"@smithy/shared-ini-file-loader\");\n\n// src/resolveProcessCredentials.ts\nvar import_property_provider = require(\"@smithy/property-provider\");\nvar import_child_process = require(\"child_process\");\nvar import_util = require(\"util\");\n\n// src/getValidatedProcessCredentials.ts\nvar getValidatedProcessCredentials = /* @__PURE__ */ __name((profileName, data) => {\n  if (data.Version !== 1) {\n    throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n  }\n  if (data.AccessKeyId === void 0 || data.SecretAccessKey === void 0) {\n    throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n  }\n  if (data.Expiration) {\n    const currentTime = /* @__PURE__ */ new Date();\n    const expireTime = new Date(data.Expiration);\n    if (expireTime < currentTime) {\n      throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n    }\n  }\n  return {\n    accessKeyId: data.AccessKeyId,\n    secretAccessKey: data.SecretAccessKey,\n    ...data.SessionToken && { sessionToken: data.SessionToken },\n    ...data.Expiration && { expiration: new Date(data.Expiration) },\n    ...data.CredentialScope && { credentialScope: data.CredentialScope }\n  };\n}, \"getValidatedProcessCredentials\");\n\n// src/resolveProcessCredentials.ts\nvar resolveProcessCredentials = /* @__PURE__ */ __name(async (profileName, profiles, logger) => {\n  const profile = profiles[profileName];\n  if (profiles[profileName]) {\n    const credentialProcess = profile[\"credential_process\"];\n    if (credentialProcess !== void 0) {\n      const execPromise = (0, import_util.promisify)(import_child_process.exec);\n      try {\n        const { stdout } = await execPromise(credentialProcess);\n        let data;\n        try {\n          data = JSON.parse(stdout.trim());\n        } catch {\n          throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n        }\n        return getValidatedProcessCredentials(profileName, data);\n      } catch (error) {\n        throw new import_property_provider.CredentialsProviderError(error.message, { logger });\n      }\n    } else {\n      throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`, { logger });\n    }\n  } else {\n    throw new import_property_provider.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`, {\n      logger\n    });\n  }\n}, \"resolveProcessCredentials\");\n\n// src/fromProcess.ts\nvar fromProcess = /* @__PURE__ */ __name((init = {}) => async () => {\n  var _a;\n  (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-process - fromProcess\");\n  const profiles = await (0, import_shared_ini_file_loader.parseKnownFiles)(init);\n  return resolveProcessCredentials((0, import_shared_ini_file_loader.getProfileName)(init), profiles, init.logger);\n}, \"fromProcess\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromProcess\n});\n\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromWebToken = void 0;\nconst fromWebToken = (init) => async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromWebToken\");\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds } = init;\n    let { roleAssumerWithWebIdentity } = init;\n    if (!roleAssumerWithWebIdentity) {\n        const { getDefaultRoleAssumerWithWebIdentity } = await Promise.resolve().then(() => __importStar(require(\"@aws-sdk/client-sts\")));\n        roleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity({\n            ...init.clientConfig,\n            credentialProviderLogger: init.logger,\n            parentClientConfig: init.parentClientConfig,\n        }, init.clientPlugins);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\nexports.fromWebToken = fromWebToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromTokenFile = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nconst fromTokenFile = (init = {}) => async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromTokenFile\");\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\", {\n            logger: init.logger,\n        });\n    }\n    return (0, fromWebToken_1.fromWebToken)({\n        ...init,\n        webIdentityToken: (0, fs_1.readFileSync)(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\nexports.fromTokenFile = fromTokenFile;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\nmodule.exports = __toCommonJS(src_exports);\n__reExport(src_exports, require(\"././fromTokenFile\"), module.exports);\n__reExport(src_exports, require(\"././fromWebToken\"), module.exports);\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromTokenFile,\n  fromWebToken\n});\n\n", "\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  fromIni: () => fromIni\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/fromIni.ts\n\n\n// src/resolveProfileData.ts\n\n\n// src/resolveAssumeRoleCredentials.ts\n\nvar import_shared_ini_file_loader = require(\"@smithy/shared-ini-file-loader\");\n\n// src/resolveCredentialSource.ts\nvar import_property_provider = require(\"@smithy/property-provider\");\nvar resolveCredentialSource = /* @__PURE__ */ __name((credentialSource, profileName, logger) => {\n  const sourceProvidersMap = {\n    EcsContainer: async (options) => {\n      const { fromHttp } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-http\")));\n      const { fromContainerMetadata } = await Promise.resolve().then(() => __toESM(require(\"@smithy/credential-provider-imds\")));\n      logger == null ? void 0 : logger.debug(\"@aws-sdk/credential-provider-ini - credential_source is EcsContainer\");\n      return (0, import_property_provider.chain)(fromHttp(options ?? {}), fromContainerMetadata(options));\n    },\n    Ec2InstanceMetadata: async (options) => {\n      logger == null ? void 0 : logger.debug(\"@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata\");\n      const { fromInstanceMetadata } = await Promise.resolve().then(() => __toESM(require(\"@smithy/credential-provider-imds\")));\n      return fromInstanceMetadata(options);\n    },\n    Environment: async (options) => {\n      logger == null ? void 0 : logger.debug(\"@aws-sdk/credential-provider-ini - credential_source is Environment\");\n      const { fromEnv } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-env\")));\n      return fromEnv(options);\n    }\n  };\n  if (credentialSource in sourceProvidersMap) {\n    return sourceProvidersMap[credentialSource];\n  } else {\n    throw new import_property_provider.CredentialsProviderError(\n      `Unsupported credential source in profile ${profileName}. Got ${credentialSource}, expected EcsContainer or Ec2InstanceMetadata or Environment.`,\n      { logger }\n    );\n  }\n}, \"resolveCredentialSource\");\n\n// src/resolveAssumeRoleCredentials.ts\nvar isAssumeRoleProfile = /* @__PURE__ */ __name((arg, { profile = \"default\", logger } = {}) => {\n  return Boolean(arg) && typeof arg === \"object\" && typeof arg.role_arn === \"string\" && [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 && [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 && [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 && (isAssumeRoleWithSourceProfile(arg, { profile, logger }) || isCredentialSourceProfile(arg, { profile, logger }));\n}, \"isAssumeRoleProfile\");\nvar isAssumeRoleWithSourceProfile = /* @__PURE__ */ __name((arg, { profile, logger }) => {\n  var _a;\n  const withSourceProfile = typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\n  if (withSourceProfile) {\n    (_a = logger == null ? void 0 : logger.debug) == null ? void 0 : _a.call(logger, `    ${profile} isAssumeRoleWithSourceProfile source_profile=${arg.source_profile}`);\n  }\n  return withSourceProfile;\n}, \"isAssumeRoleWithSourceProfile\");\nvar isCredentialSourceProfile = /* @__PURE__ */ __name((arg, { profile, logger }) => {\n  var _a;\n  const withProviderProfile = typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\n  if (withProviderProfile) {\n    (_a = logger == null ? void 0 : logger.debug) == null ? void 0 : _a.call(logger, `    ${profile} isCredentialSourceProfile credential_source=${arg.credential_source}`);\n  }\n  return withProviderProfile;\n}, \"isCredentialSourceProfile\");\nvar resolveAssumeRoleCredentials = /* @__PURE__ */ __name(async (profileName, profiles, options, visitedProfiles = {}) => {\n  var _a, _b;\n  (_a = options.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-ini - resolveAssumeRoleCredentials (STS)\");\n  const data = profiles[profileName];\n  if (!options.roleAssumer) {\n    const { getDefaultRoleAssumer } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/client-sts\")));\n    options.roleAssumer = getDefaultRoleAssumer(\n      {\n        ...options.clientConfig,\n        credentialProviderLogger: options.logger,\n        parentClientConfig: options == null ? void 0 : options.parentClientConfig\n      },\n      options.clientPlugins\n    );\n  }\n  const { source_profile } = data;\n  if (source_profile && source_profile in visitedProfiles) {\n    throw new import_property_provider.CredentialsProviderError(\n      `Detected a cycle attempting to resolve credentials for profile ${(0, import_shared_ini_file_loader.getProfileName)(options)}. Profiles visited: ` + Object.keys(visitedProfiles).join(\", \"),\n      { logger: options.logger }\n    );\n  }\n  (_b = options.logger) == null ? void 0 : _b.debug(\n    `@aws-sdk/credential-provider-ini - finding credential resolver using ${source_profile ? `source_profile=[${source_profile}]` : `profile=[${profileName}]`}`\n  );\n  const sourceCredsProvider = source_profile ? resolveProfileData(\n    source_profile,\n    {\n      ...profiles,\n      [source_profile]: {\n        ...profiles[source_profile],\n        // This assigns the role_arn of the \"root\" profile\n        // to the credential_source profile so this recursive call knows\n        // what role to assume.\n        role_arn: data.role_arn ?? profiles[source_profile].role_arn\n      }\n    },\n    options,\n    {\n      ...visitedProfiles,\n      [source_profile]: true\n    }\n  ) : (await resolveCredentialSource(data.credential_source, profileName, options.logger)(options))();\n  const params = {\n    RoleArn: data.role_arn,\n    RoleSessionName: data.role_session_name || `aws-sdk-js-${Date.now()}`,\n    ExternalId: data.external_id,\n    DurationSeconds: parseInt(data.duration_seconds || \"3600\", 10)\n  };\n  const { mfa_serial } = data;\n  if (mfa_serial) {\n    if (!options.mfaCodeProvider) {\n      throw new import_property_provider.CredentialsProviderError(\n        `Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`,\n        { logger: options.logger, tryNextLink: false }\n      );\n    }\n    params.SerialNumber = mfa_serial;\n    params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n  }\n  const sourceCreds = await sourceCredsProvider;\n  return options.roleAssumer(sourceCreds, params);\n}, \"resolveAssumeRoleCredentials\");\n\n// src/resolveProcessCredentials.ts\nvar isProcessProfile = /* @__PURE__ */ __name((arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.credential_process === \"string\", \"isProcessProfile\");\nvar resolveProcessCredentials = /* @__PURE__ */ __name(async (options, profile) => Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-process\"))).then(\n  ({ fromProcess }) => fromProcess({\n    ...options,\n    profile\n  })()\n), \"resolveProcessCredentials\");\n\n// src/resolveSsoCredentials.ts\nvar resolveSsoCredentials = /* @__PURE__ */ __name(async (profile, options = {}) => {\n  const { fromSSO } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-sso\")));\n  return fromSSO({\n    profile,\n    logger: options.logger\n  })();\n}, \"resolveSsoCredentials\");\nvar isSsoProfile = /* @__PURE__ */ __name((arg) => arg && (typeof arg.sso_start_url === \"string\" || typeof arg.sso_account_id === \"string\" || typeof arg.sso_session === \"string\" || typeof arg.sso_region === \"string\" || typeof arg.sso_role_name === \"string\"), \"isSsoProfile\");\n\n// src/resolveStaticCredentials.ts\nvar isStaticCredsProfile = /* @__PURE__ */ __name((arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.aws_access_key_id === \"string\" && typeof arg.aws_secret_access_key === \"string\" && [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1, \"isStaticCredsProfile\");\nvar resolveStaticCredentials = /* @__PURE__ */ __name((profile, options) => {\n  var _a;\n  (_a = options == null ? void 0 : options.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-ini - resolveStaticCredentials\");\n  return Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n    credentialScope: profile.aws_credential_scope\n  });\n}, \"resolveStaticCredentials\");\n\n// src/resolveWebIdentityCredentials.ts\nvar isWebIdentityProfile = /* @__PURE__ */ __name((arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.web_identity_token_file === \"string\" && typeof arg.role_arn === \"string\" && [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1, \"isWebIdentityProfile\");\nvar resolveWebIdentityCredentials = /* @__PURE__ */ __name(async (profile, options) => Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-web-identity\"))).then(\n  ({ fromTokenFile }) => fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n    logger: options.logger,\n    parentClientConfig: options.parentClientConfig\n  })()\n), \"resolveWebIdentityCredentials\");\n\n// src/resolveProfileData.ts\nvar resolveProfileData = /* @__PURE__ */ __name(async (profileName, profiles, options, visitedProfiles = {}) => {\n  const data = profiles[profileName];\n  if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n    return resolveStaticCredentials(data, options);\n  }\n  if (isAssumeRoleProfile(data, { profile: profileName, logger: options.logger })) {\n    return resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles);\n  }\n  if (isStaticCredsProfile(data)) {\n    return resolveStaticCredentials(data, options);\n  }\n  if (isWebIdentityProfile(data)) {\n    return resolveWebIdentityCredentials(data, options);\n  }\n  if (isProcessProfile(data)) {\n    return resolveProcessCredentials(options, profileName);\n  }\n  if (isSsoProfile(data)) {\n    return await resolveSsoCredentials(profileName, options);\n  }\n  throw new import_property_provider.CredentialsProviderError(\n    `Could not resolve credentials using profile: [${profileName}] in configuration/credentials file(s).`,\n    { logger: options.logger }\n  );\n}, \"resolveProfileData\");\n\n// src/fromIni.ts\nvar fromIni = /* @__PURE__ */ __name((init = {}) => async () => {\n  var _a;\n  (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-ini - fromIni\");\n  const profiles = await (0, import_shared_ini_file_loader.parseKnownFiles)(init);\n  return resolveProfileData((0, import_shared_ini_file_loader.getProfileName)(init), profiles, init);\n}, \"fromIni\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  fromIni\n});\n\n", "\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  credentialsTreatedAsExpired: () => credentialsTreatedAsExpired,\n  credentialsWillNeedRefresh: () => credentialsWillNeedRefresh,\n  defaultProvider: () => defaultProvider\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/defaultProvider.ts\nvar import_credential_provider_env = require(\"@aws-sdk/credential-provider-env\");\n\nvar import_shared_ini_file_loader = require(\"@smithy/shared-ini-file-loader\");\n\n// src/remoteProvider.ts\nvar import_property_provider = require(\"@smithy/property-provider\");\nvar ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nvar remoteProvider = /* @__PURE__ */ __name(async (init) => {\n  var _a, _b;\n  const { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata } = await Promise.resolve().then(() => __toESM(require(\"@smithy/credential-provider-imds\")));\n  if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n    (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromHttp/fromContainerMetadata\");\n    const { fromHttp } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-http\")));\n    return (0, import_property_provider.chain)(fromHttp(init), fromContainerMetadata(init));\n  }\n  if (process.env[ENV_IMDS_DISABLED]) {\n    return async () => {\n      throw new import_property_provider.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\", { logger: init.logger });\n    };\n  }\n  (_b = init.logger) == null ? void 0 : _b.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromInstanceMetadata\");\n  return fromInstanceMetadata(init);\n}, \"remoteProvider\");\n\n// src/defaultProvider.ts\nvar defaultProvider = /* @__PURE__ */ __name((init = {}) => (0, import_property_provider.memoize)(\n  (0, import_property_provider.chain)(\n    ...init.profile || process.env[import_shared_ini_file_loader.ENV_PROFILE] ? [] : [\n      async () => {\n        var _a;\n        (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromEnv\");\n        return (0, import_credential_provider_env.fromEnv)(init)();\n      }\n    ],\n    async () => {\n      var _a;\n      (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromSSO\");\n      const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n      if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        throw new import_property_provider.CredentialsProviderError(\n          \"Skipping SSO provider in default chain (inputs do not include SSO fields).\",\n          { logger: init.logger }\n        );\n      }\n      const { fromSSO } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-sso\")));\n      return fromSSO(init)();\n    },\n    async () => {\n      var _a;\n      (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromIni\");\n      const { fromIni } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-ini\")));\n      return fromIni(init)();\n    },\n    async () => {\n      var _a;\n      (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromProcess\");\n      const { fromProcess } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-process\")));\n      return fromProcess(init)();\n    },\n    async () => {\n      var _a;\n      (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromTokenFile\");\n      const { fromTokenFile } = await Promise.resolve().then(() => __toESM(require(\"@aws-sdk/credential-provider-web-identity\")));\n      return fromTokenFile(init)();\n    },\n    async () => {\n      var _a;\n      (_a = init.logger) == null ? void 0 : _a.debug(\"@aws-sdk/credential-provider-node - defaultProvider::remoteProvider\");\n      return (await remoteProvider(init))();\n    },\n    async () => {\n      throw new import_property_provider.CredentialsProviderError(\"Could not load credentials from any providers\", {\n        tryNextLink: false,\n        logger: init.logger\n      });\n    }\n  ),\n  credentialsTreatedAsExpired,\n  credentialsWillNeedRefresh\n), \"defaultProvider\");\nvar credentialsWillNeedRefresh = /* @__PURE__ */ __name((credentials) => (credentials == null ? void 0 : credentials.expiration) !== void 0, \"credentialsWillNeedRefresh\");\nvar credentialsTreatedAsExpired = /* @__PURE__ */ __name((credentials) => (credentials == null ? void 0 : credentials.expiration) !== void 0 && credentials.expiration.getTime() - Date.now() < 3e5, \"credentialsTreatedAsExpired\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  defaultProvider,\n  credentialsWillNeedRefresh,\n  credentialsTreatedAsExpired\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, \"supportsFIPS\"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [{ [x]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: \"https://ssm-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: \"stringEquals\", [w]: [{ [v]: h, [w]: [p, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://ssm.{Region}.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://ssm-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://ssm.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://ssm.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2014-11-06\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSSMHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSM\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  WaiterState: () => WaiterState,\n  checkExceptions: () => checkExceptions,\n  createWaiter: () => createWaiter,\n  waiterServiceDefaults: () => waiterServiceDefaults\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/utils/sleep.ts\nvar sleep = /* @__PURE__ */ __name((seconds) => {\n  return new Promise((resolve) => setTimeout(resolve, seconds * 1e3));\n}, \"sleep\");\n\n// src/waiter.ts\nvar waiterServiceDefaults = {\n  minDelay: 2,\n  maxDelay: 120\n};\nvar WaiterState = /* @__PURE__ */ ((WaiterState2) => {\n  WaiterState2[\"ABORTED\"] = \"ABORTED\";\n  WaiterState2[\"FAILURE\"] = \"FAILURE\";\n  WaiterState2[\"SUCCESS\"] = \"SUCCESS\";\n  WaiterState2[\"RETRY\"] = \"RETRY\";\n  WaiterState2[\"TIMEOUT\"] = \"TIMEOUT\";\n  return WaiterState2;\n})(WaiterState || {});\nvar checkExceptions = /* @__PURE__ */ __name((result) => {\n  if (result.state === \"ABORTED\" /* ABORTED */) {\n    const abortError = new Error(\n      `${JSON.stringify({\n        ...result,\n        reason: \"Request was aborted\"\n      })}`\n    );\n    abortError.name = \"AbortError\";\n    throw abortError;\n  } else if (result.state === \"TIMEOUT\" /* TIMEOUT */) {\n    const timeoutError = new Error(\n      `${JSON.stringify({\n        ...result,\n        reason: \"Waiter has timed out\"\n      })}`\n    );\n    timeoutError.name = \"TimeoutError\";\n    throw timeoutError;\n  } else if (result.state !== \"SUCCESS\" /* SUCCESS */) {\n    throw new Error(`${JSON.stringify(result)}`);\n  }\n  return result;\n}, \"checkExceptions\");\n\n// src/poller.ts\nvar exponentialBackoffWithJitter = /* @__PURE__ */ __name((minDelay, maxDelay, attemptCeiling, attempt) => {\n  if (attempt > attemptCeiling)\n    return maxDelay;\n  const delay = minDelay * 2 ** (attempt - 1);\n  return randomInRange(minDelay, delay);\n}, \"exponentialBackoffWithJitter\");\nvar randomInRange = /* @__PURE__ */ __name((min, max) => min + Math.random() * (max - min), \"randomInRange\");\nvar runPolling = /* @__PURE__ */ __name(async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n  var _a;\n  const { state, reason } = await acceptorChecks(client, input);\n  if (state !== \"RETRY\" /* RETRY */) {\n    return { state, reason };\n  }\n  let currentAttempt = 1;\n  const waitUntil = Date.now() + maxWaitTime * 1e3;\n  const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n  while (true) {\n    if (((_a = abortController == null ? void 0 : abortController.signal) == null ? void 0 : _a.aborted) || (abortSignal == null ? void 0 : abortSignal.aborted)) {\n      return { state: \"ABORTED\" /* ABORTED */ };\n    }\n    const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n    if (Date.now() + delay * 1e3 > waitUntil) {\n      return { state: \"TIMEOUT\" /* TIMEOUT */ };\n    }\n    await sleep(delay);\n    const { state: state2, reason: reason2 } = await acceptorChecks(client, input);\n    if (state2 !== \"RETRY\" /* RETRY */) {\n      return { state: state2, reason: reason2 };\n    }\n    currentAttempt += 1;\n  }\n}, \"runPolling\");\n\n// src/utils/validate.ts\nvar validateWaiterOptions = /* @__PURE__ */ __name((options) => {\n  if (options.maxWaitTime < 1) {\n    throw new Error(`WaiterConfiguration.maxWaitTime must be greater than 0`);\n  } else if (options.minDelay < 1) {\n    throw new Error(`WaiterConfiguration.minDelay must be greater than 0`);\n  } else if (options.maxDelay < 1) {\n    throw new Error(`WaiterConfiguration.maxDelay must be greater than 0`);\n  } else if (options.maxWaitTime <= options.minDelay) {\n    throw new Error(\n      `WaiterConfiguration.maxWaitTime [${options.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`\n    );\n  } else if (options.maxDelay < options.minDelay) {\n    throw new Error(\n      `WaiterConfiguration.maxDelay [${options.maxDelay}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`\n    );\n  }\n}, \"validateWaiterOptions\");\n\n// src/createWaiter.ts\nvar abortTimeout = /* @__PURE__ */ __name(async (abortSignal) => {\n  return new Promise((resolve) => {\n    const onAbort = /* @__PURE__ */ __name(() => resolve({ state: \"ABORTED\" /* ABORTED */ }), \"onAbort\");\n    if (typeof abortSignal.addEventListener === \"function\") {\n      abortSignal.addEventListener(\"abort\", onAbort);\n    } else {\n      abortSignal.onabort = onAbort;\n    }\n  });\n}, \"abortTimeout\");\nvar createWaiter = /* @__PURE__ */ __name(async (options, input, acceptorChecks) => {\n  const params = {\n    ...waiterServiceDefaults,\n    ...options\n  };\n  validateWaiterOptions(params);\n  const exitConditions = [runPolling(params, input, acceptorChecks)];\n  if (options.abortController) {\n    exitConditions.push(abortTimeout(options.abortController.signal));\n  }\n  if (options.abortSignal) {\n    exitConditions.push(abortTimeout(options.abortSignal));\n  }\n  return Promise.race(exitConditions);\n}, \"createWaiter\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  createWaiter,\n  waiterServiceDefaults,\n  WaiterState,\n  checkExceptions\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AddTagsToResourceCommand: () => AddTagsToResourceCommand,\n  AlreadyExistsException: () => AlreadyExistsException,\n  AssociateOpsItemRelatedItemCommand: () => AssociateOpsItemRelatedItemCommand,\n  AssociatedInstances: () => AssociatedInstances,\n  AssociationAlreadyExists: () => AssociationAlreadyExists,\n  AssociationComplianceSeverity: () => AssociationComplianceSeverity,\n  AssociationDescriptionFilterSensitiveLog: () => AssociationDescriptionFilterSensitiveLog,\n  AssociationDoesNotExist: () => AssociationDoesNotExist,\n  AssociationExecutionDoesNotExist: () => AssociationExecutionDoesNotExist,\n  AssociationExecutionFilterKey: () => AssociationExecutionFilterKey,\n  AssociationExecutionTargetsFilterKey: () => AssociationExecutionTargetsFilterKey,\n  AssociationFilterKey: () => AssociationFilterKey,\n  AssociationFilterOperatorType: () => AssociationFilterOperatorType,\n  AssociationLimitExceeded: () => AssociationLimitExceeded,\n  AssociationStatusName: () => AssociationStatusName,\n  AssociationSyncCompliance: () => AssociationSyncCompliance,\n  AssociationVersionInfoFilterSensitiveLog: () => AssociationVersionInfoFilterSensitiveLog,\n  AssociationVersionLimitExceeded: () => AssociationVersionLimitExceeded,\n  AttachmentHashType: () => AttachmentHashType,\n  AttachmentsSourceKey: () => AttachmentsSourceKey,\n  AutomationDefinitionNotApprovedException: () => AutomationDefinitionNotApprovedException,\n  AutomationDefinitionNotFoundException: () => AutomationDefinitionNotFoundException,\n  AutomationDefinitionVersionNotFoundException: () => AutomationDefinitionVersionNotFoundException,\n  AutomationExecutionFilterKey: () => AutomationExecutionFilterKey,\n  AutomationExecutionLimitExceededException: () => AutomationExecutionLimitExceededException,\n  AutomationExecutionNotFoundException: () => AutomationExecutionNotFoundException,\n  AutomationExecutionStatus: () => AutomationExecutionStatus,\n  AutomationStepNotFoundException: () => AutomationStepNotFoundException,\n  AutomationSubtype: () => AutomationSubtype,\n  AutomationType: () => AutomationType,\n  BaselineOverrideFilterSensitiveLog: () => BaselineOverrideFilterSensitiveLog,\n  CalendarState: () => CalendarState,\n  CancelCommandCommand: () => CancelCommandCommand,\n  CancelMaintenanceWindowExecutionCommand: () => CancelMaintenanceWindowExecutionCommand,\n  CommandFilterKey: () => CommandFilterKey,\n  CommandFilterSensitiveLog: () => CommandFilterSensitiveLog,\n  CommandInvocationStatus: () => CommandInvocationStatus,\n  CommandPluginStatus: () => CommandPluginStatus,\n  CommandStatus: () => CommandStatus,\n  ComplianceQueryOperatorType: () => ComplianceQueryOperatorType,\n  ComplianceSeverity: () => ComplianceSeverity,\n  ComplianceStatus: () => ComplianceStatus,\n  ComplianceTypeCountLimitExceededException: () => ComplianceTypeCountLimitExceededException,\n  ComplianceUploadType: () => ComplianceUploadType,\n  ConnectionStatus: () => ConnectionStatus,\n  CreateActivationCommand: () => CreateActivationCommand,\n  CreateAssociationBatchCommand: () => CreateAssociationBatchCommand,\n  CreateAssociationBatchRequestEntryFilterSensitiveLog: () => CreateAssociationBatchRequestEntryFilterSensitiveLog,\n  CreateAssociationBatchRequestFilterSensitiveLog: () => CreateAssociationBatchRequestFilterSensitiveLog,\n  CreateAssociationBatchResultFilterSensitiveLog: () => CreateAssociationBatchResultFilterSensitiveLog,\n  CreateAssociationCommand: () => CreateAssociationCommand,\n  CreateAssociationRequestFilterSensitiveLog: () => CreateAssociationRequestFilterSensitiveLog,\n  CreateAssociationResultFilterSensitiveLog: () => CreateAssociationResultFilterSensitiveLog,\n  CreateDocumentCommand: () => CreateDocumentCommand,\n  CreateMaintenanceWindowCommand: () => CreateMaintenanceWindowCommand,\n  CreateMaintenanceWindowRequestFilterSensitiveLog: () => CreateMaintenanceWindowRequestFilterSensitiveLog,\n  CreateOpsItemCommand: () => CreateOpsItemCommand,\n  CreateOpsMetadataCommand: () => CreateOpsMetadataCommand,\n  CreatePatchBaselineCommand: () => CreatePatchBaselineCommand,\n  CreatePatchBaselineRequestFilterSensitiveLog: () => CreatePatchBaselineRequestFilterSensitiveLog,\n  CreateResourceDataSyncCommand: () => CreateResourceDataSyncCommand,\n  CustomSchemaCountLimitExceededException: () => CustomSchemaCountLimitExceededException,\n  DeleteActivationCommand: () => DeleteActivationCommand,\n  DeleteAssociationCommand: () => DeleteAssociationCommand,\n  DeleteDocumentCommand: () => DeleteDocumentCommand,\n  DeleteInventoryCommand: () => DeleteInventoryCommand,\n  DeleteMaintenanceWindowCommand: () => DeleteMaintenanceWindowCommand,\n  DeleteOpsItemCommand: () => DeleteOpsItemCommand,\n  DeleteOpsMetadataCommand: () => DeleteOpsMetadataCommand,\n  DeleteParameterCommand: () => DeleteParameterCommand,\n  DeleteParametersCommand: () => DeleteParametersCommand,\n  DeletePatchBaselineCommand: () => DeletePatchBaselineCommand,\n  DeleteResourceDataSyncCommand: () => DeleteResourceDataSyncCommand,\n  DeleteResourcePolicyCommand: () => DeleteResourcePolicyCommand,\n  DeregisterManagedInstanceCommand: () => DeregisterManagedInstanceCommand,\n  DeregisterPatchBaselineForPatchGroupCommand: () => DeregisterPatchBaselineForPatchGroupCommand,\n  DeregisterTargetFromMaintenanceWindowCommand: () => DeregisterTargetFromMaintenanceWindowCommand,\n  DeregisterTaskFromMaintenanceWindowCommand: () => DeregisterTaskFromMaintenanceWindowCommand,\n  DescribeActivationsCommand: () => DescribeActivationsCommand,\n  DescribeActivationsFilterKeys: () => DescribeActivationsFilterKeys,\n  DescribeAssociationCommand: () => DescribeAssociationCommand,\n  DescribeAssociationExecutionTargetsCommand: () => DescribeAssociationExecutionTargetsCommand,\n  DescribeAssociationExecutionsCommand: () => DescribeAssociationExecutionsCommand,\n  DescribeAssociationResultFilterSensitiveLog: () => DescribeAssociationResultFilterSensitiveLog,\n  DescribeAutomationExecutionsCommand: () => DescribeAutomationExecutionsCommand,\n  DescribeAutomationStepExecutionsCommand: () => DescribeAutomationStepExecutionsCommand,\n  DescribeAvailablePatchesCommand: () => DescribeAvailablePatchesCommand,\n  DescribeDocumentCommand: () => DescribeDocumentCommand,\n  DescribeDocumentPermissionCommand: () => DescribeDocumentPermissionCommand,\n  DescribeEffectiveInstanceAssociationsCommand: () => DescribeEffectiveInstanceAssociationsCommand,\n  DescribeEffectivePatchesForPatchBaselineCommand: () => DescribeEffectivePatchesForPatchBaselineCommand,\n  DescribeInstanceAssociationsStatusCommand: () => DescribeInstanceAssociationsStatusCommand,\n  DescribeInstanceInformationCommand: () => DescribeInstanceInformationCommand,\n  DescribeInstanceInformationResultFilterSensitiveLog: () => DescribeInstanceInformationResultFilterSensitiveLog,\n  DescribeInstancePatchStatesCommand: () => DescribeInstancePatchStatesCommand,\n  DescribeInstancePatchStatesForPatchGroupCommand: () => DescribeInstancePatchStatesForPatchGroupCommand,\n  DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog: () => DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog,\n  DescribeInstancePatchStatesResultFilterSensitiveLog: () => DescribeInstancePatchStatesResultFilterSensitiveLog,\n  DescribeInstancePatchesCommand: () => DescribeInstancePatchesCommand,\n  DescribeInstancePropertiesCommand: () => DescribeInstancePropertiesCommand,\n  DescribeInstancePropertiesResultFilterSensitiveLog: () => DescribeInstancePropertiesResultFilterSensitiveLog,\n  DescribeInventoryDeletionsCommand: () => DescribeInventoryDeletionsCommand,\n  DescribeMaintenanceWindowExecutionTaskInvocationsCommand: () => DescribeMaintenanceWindowExecutionTaskInvocationsCommand,\n  DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog: () => DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog,\n  DescribeMaintenanceWindowExecutionTasksCommand: () => DescribeMaintenanceWindowExecutionTasksCommand,\n  DescribeMaintenanceWindowExecutionsCommand: () => DescribeMaintenanceWindowExecutionsCommand,\n  DescribeMaintenanceWindowScheduleCommand: () => DescribeMaintenanceWindowScheduleCommand,\n  DescribeMaintenanceWindowTargetsCommand: () => DescribeMaintenanceWindowTargetsCommand,\n  DescribeMaintenanceWindowTargetsResultFilterSensitiveLog: () => DescribeMaintenanceWindowTargetsResultFilterSensitiveLog,\n  DescribeMaintenanceWindowTasksCommand: () => DescribeMaintenanceWindowTasksCommand,\n  DescribeMaintenanceWindowTasksResultFilterSensitiveLog: () => DescribeMaintenanceWindowTasksResultFilterSensitiveLog,\n  DescribeMaintenanceWindowsCommand: () => DescribeMaintenanceWindowsCommand,\n  DescribeMaintenanceWindowsForTargetCommand: () => DescribeMaintenanceWindowsForTargetCommand,\n  DescribeMaintenanceWindowsResultFilterSensitiveLog: () => DescribeMaintenanceWindowsResultFilterSensitiveLog,\n  DescribeOpsItemsCommand: () => DescribeOpsItemsCommand,\n  DescribeParametersCommand: () => DescribeParametersCommand,\n  DescribePatchBaselinesCommand: () => DescribePatchBaselinesCommand,\n  DescribePatchGroupStateCommand: () => DescribePatchGroupStateCommand,\n  DescribePatchGroupsCommand: () => DescribePatchGroupsCommand,\n  DescribePatchPropertiesCommand: () => DescribePatchPropertiesCommand,\n  DescribeSessionsCommand: () => DescribeSessionsCommand,\n  DisassociateOpsItemRelatedItemCommand: () => DisassociateOpsItemRelatedItemCommand,\n  DocumentAlreadyExists: () => DocumentAlreadyExists,\n  DocumentFilterKey: () => DocumentFilterKey,\n  DocumentFormat: () => DocumentFormat,\n  DocumentHashType: () => DocumentHashType,\n  DocumentLimitExceeded: () => DocumentLimitExceeded,\n  DocumentMetadataEnum: () => DocumentMetadataEnum,\n  DocumentParameterType: () => DocumentParameterType,\n  DocumentPermissionLimit: () => DocumentPermissionLimit,\n  DocumentPermissionType: () => DocumentPermissionType,\n  DocumentReviewAction: () => DocumentReviewAction,\n  DocumentReviewCommentType: () => DocumentReviewCommentType,\n  DocumentStatus: () => DocumentStatus,\n  DocumentType: () => DocumentType,\n  DocumentVersionLimitExceeded: () => DocumentVersionLimitExceeded,\n  DoesNotExistException: () => DoesNotExistException,\n  DuplicateDocumentContent: () => DuplicateDocumentContent,\n  DuplicateDocumentVersionName: () => DuplicateDocumentVersionName,\n  DuplicateInstanceId: () => DuplicateInstanceId,\n  ExecutionMode: () => ExecutionMode,\n  ExternalAlarmState: () => ExternalAlarmState,\n  FailedCreateAssociationFilterSensitiveLog: () => FailedCreateAssociationFilterSensitiveLog,\n  Fault: () => Fault,\n  FeatureNotAvailableException: () => FeatureNotAvailableException,\n  GetAutomationExecutionCommand: () => GetAutomationExecutionCommand,\n  GetCalendarStateCommand: () => GetCalendarStateCommand,\n  GetCommandInvocationCommand: () => GetCommandInvocationCommand,\n  GetConnectionStatusCommand: () => GetConnectionStatusCommand,\n  GetDefaultPatchBaselineCommand: () => GetDefaultPatchBaselineCommand,\n  GetDeployablePatchSnapshotForInstanceCommand: () => GetDeployablePatchSnapshotForInstanceCommand,\n  GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog: () => GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog,\n  GetDocumentCommand: () => GetDocumentCommand,\n  GetInventoryCommand: () => GetInventoryCommand,\n  GetInventorySchemaCommand: () => GetInventorySchemaCommand,\n  GetMaintenanceWindowCommand: () => GetMaintenanceWindowCommand,\n  GetMaintenanceWindowExecutionCommand: () => GetMaintenanceWindowExecutionCommand,\n  GetMaintenanceWindowExecutionTaskCommand: () => GetMaintenanceWindowExecutionTaskCommand,\n  GetMaintenanceWindowExecutionTaskInvocationCommand: () => GetMaintenanceWindowExecutionTaskInvocationCommand,\n  GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog: () => GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog,\n  GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog: () => GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog,\n  GetMaintenanceWindowResultFilterSensitiveLog: () => GetMaintenanceWindowResultFilterSensitiveLog,\n  GetMaintenanceWindowTaskCommand: () => GetMaintenanceWindowTaskCommand,\n  GetMaintenanceWindowTaskResultFilterSensitiveLog: () => GetMaintenanceWindowTaskResultFilterSensitiveLog,\n  GetOpsItemCommand: () => GetOpsItemCommand,\n  GetOpsMetadataCommand: () => GetOpsMetadataCommand,\n  GetOpsSummaryCommand: () => GetOpsSummaryCommand,\n  GetParameterCommand: () => GetParameterCommand,\n  GetParameterHistoryCommand: () => GetParameterHistoryCommand,\n  GetParameterHistoryResultFilterSensitiveLog: () => GetParameterHistoryResultFilterSensitiveLog,\n  GetParameterResultFilterSensitiveLog: () => GetParameterResultFilterSensitiveLog,\n  GetParametersByPathCommand: () => GetParametersByPathCommand,\n  GetParametersByPathResultFilterSensitiveLog: () => GetParametersByPathResultFilterSensitiveLog,\n  GetParametersCommand: () => GetParametersCommand,\n  GetParametersResultFilterSensitiveLog: () => GetParametersResultFilterSensitiveLog,\n  GetPatchBaselineCommand: () => GetPatchBaselineCommand,\n  GetPatchBaselineForPatchGroupCommand: () => GetPatchBaselineForPatchGroupCommand,\n  GetPatchBaselineResultFilterSensitiveLog: () => GetPatchBaselineResultFilterSensitiveLog,\n  GetResourcePoliciesCommand: () => GetResourcePoliciesCommand,\n  GetServiceSettingCommand: () => GetServiceSettingCommand,\n  HierarchyLevelLimitExceededException: () => HierarchyLevelLimitExceededException,\n  HierarchyTypeMismatchException: () => HierarchyTypeMismatchException,\n  IdempotentParameterMismatch: () => IdempotentParameterMismatch,\n  IncompatiblePolicyException: () => IncompatiblePolicyException,\n  InstanceInformationFilterKey: () => InstanceInformationFilterKey,\n  InstanceInformationFilterSensitiveLog: () => InstanceInformationFilterSensitiveLog,\n  InstancePatchStateFilterSensitiveLog: () => InstancePatchStateFilterSensitiveLog,\n  InstancePatchStateOperatorType: () => InstancePatchStateOperatorType,\n  InstancePropertyFilterKey: () => InstancePropertyFilterKey,\n  InstancePropertyFilterOperator: () => InstancePropertyFilterOperator,\n  InstancePropertyFilterSensitiveLog: () => InstancePropertyFilterSensitiveLog,\n  InternalServerError: () => InternalServerError,\n  InvalidActivation: () => InvalidActivation,\n  InvalidActivationId: () => InvalidActivationId,\n  InvalidAggregatorException: () => InvalidAggregatorException,\n  InvalidAllowedPatternException: () => InvalidAllowedPatternException,\n  InvalidAssociation: () => InvalidAssociation,\n  InvalidAssociationVersion: () => InvalidAssociationVersion,\n  InvalidAutomationExecutionParametersException: () => InvalidAutomationExecutionParametersException,\n  InvalidAutomationSignalException: () => InvalidAutomationSignalException,\n  InvalidAutomationStatusUpdateException: () => InvalidAutomationStatusUpdateException,\n  InvalidCommandId: () => InvalidCommandId,\n  InvalidDeleteInventoryParametersException: () => InvalidDeleteInventoryParametersException,\n  InvalidDeletionIdException: () => InvalidDeletionIdException,\n  InvalidDocument: () => InvalidDocument,\n  InvalidDocumentContent: () => InvalidDocumentContent,\n  InvalidDocumentOperation: () => InvalidDocumentOperation,\n  InvalidDocumentSchemaVersion: () => InvalidDocumentSchemaVersion,\n  InvalidDocumentType: () => InvalidDocumentType,\n  InvalidDocumentVersion: () => InvalidDocumentVersion,\n  InvalidFilter: () => InvalidFilter,\n  InvalidFilterKey: () => InvalidFilterKey,\n  InvalidFilterOption: () => InvalidFilterOption,\n  InvalidFilterValue: () => InvalidFilterValue,\n  InvalidInstanceId: () => InvalidInstanceId,\n  InvalidInstanceInformationFilterValue: () => InvalidInstanceInformationFilterValue,\n  InvalidInstancePropertyFilterValue: () => InvalidInstancePropertyFilterValue,\n  InvalidInventoryGroupException: () => InvalidInventoryGroupException,\n  InvalidInventoryItemContextException: () => InvalidInventoryItemContextException,\n  InvalidInventoryRequestException: () => InvalidInventoryRequestException,\n  InvalidItemContentException: () => InvalidItemContentException,\n  InvalidKeyId: () => InvalidKeyId,\n  InvalidNextToken: () => InvalidNextToken,\n  InvalidNotificationConfig: () => InvalidNotificationConfig,\n  InvalidOptionException: () => InvalidOptionException,\n  InvalidOutputFolder: () => InvalidOutputFolder,\n  InvalidOutputLocation: () => InvalidOutputLocation,\n  InvalidParameters: () => InvalidParameters,\n  InvalidPermissionType: () => InvalidPermissionType,\n  InvalidPluginName: () => InvalidPluginName,\n  InvalidPolicyAttributeException: () => InvalidPolicyAttributeException,\n  InvalidPolicyTypeException: () => InvalidPolicyTypeException,\n  InvalidResourceId: () => InvalidResourceId,\n  InvalidResourceType: () => InvalidResourceType,\n  InvalidResultAttributeException: () => InvalidResultAttributeException,\n  InvalidRole: () => InvalidRole,\n  InvalidSchedule: () => InvalidSchedule,\n  InvalidTag: () => InvalidTag,\n  InvalidTarget: () => InvalidTarget,\n  InvalidTargetMaps: () => InvalidTargetMaps,\n  InvalidTypeNameException: () => InvalidTypeNameException,\n  InvalidUpdate: () => InvalidUpdate,\n  InventoryAttributeDataType: () => InventoryAttributeDataType,\n  InventoryDeletionStatus: () => InventoryDeletionStatus,\n  InventoryQueryOperatorType: () => InventoryQueryOperatorType,\n  InventorySchemaDeleteOption: () => InventorySchemaDeleteOption,\n  InvocationDoesNotExist: () => InvocationDoesNotExist,\n  ItemContentMismatchException: () => ItemContentMismatchException,\n  ItemSizeLimitExceededException: () => ItemSizeLimitExceededException,\n  LabelParameterVersionCommand: () => LabelParameterVersionCommand,\n  LastResourceDataSyncStatus: () => LastResourceDataSyncStatus,\n  ListAssociationVersionsCommand: () => ListAssociationVersionsCommand,\n  ListAssociationVersionsResultFilterSensitiveLog: () => ListAssociationVersionsResultFilterSensitiveLog,\n  ListAssociationsCommand: () => ListAssociationsCommand,\n  ListCommandInvocationsCommand: () => ListCommandInvocationsCommand,\n  ListCommandsCommand: () => ListCommandsCommand,\n  ListCommandsResultFilterSensitiveLog: () => ListCommandsResultFilterSensitiveLog,\n  ListComplianceItemsCommand: () => ListComplianceItemsCommand,\n  ListComplianceSummariesCommand: () => ListComplianceSummariesCommand,\n  ListDocumentMetadataHistoryCommand: () => ListDocumentMetadataHistoryCommand,\n  ListDocumentVersionsCommand: () => ListDocumentVersionsCommand,\n  ListDocumentsCommand: () => ListDocumentsCommand,\n  ListInventoryEntriesCommand: () => ListInventoryEntriesCommand,\n  ListOpsItemEventsCommand: () => ListOpsItemEventsCommand,\n  ListOpsItemRelatedItemsCommand: () => ListOpsItemRelatedItemsCommand,\n  ListOpsMetadataCommand: () => ListOpsMetadataCommand,\n  ListResourceComplianceSummariesCommand: () => ListResourceComplianceSummariesCommand,\n  ListResourceDataSyncCommand: () => ListResourceDataSyncCommand,\n  ListTagsForResourceCommand: () => ListTagsForResourceCommand,\n  MaintenanceWindowExecutionStatus: () => MaintenanceWindowExecutionStatus,\n  MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog: () => MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog,\n  MaintenanceWindowIdentityFilterSensitiveLog: () => MaintenanceWindowIdentityFilterSensitiveLog,\n  MaintenanceWindowLambdaParametersFilterSensitiveLog: () => MaintenanceWindowLambdaParametersFilterSensitiveLog,\n  MaintenanceWindowResourceType: () => MaintenanceWindowResourceType,\n  MaintenanceWindowRunCommandParametersFilterSensitiveLog: () => MaintenanceWindowRunCommandParametersFilterSensitiveLog,\n  MaintenanceWindowStepFunctionsParametersFilterSensitiveLog: () => MaintenanceWindowStepFunctionsParametersFilterSensitiveLog,\n  MaintenanceWindowTargetFilterSensitiveLog: () => MaintenanceWindowTargetFilterSensitiveLog,\n  MaintenanceWindowTaskCutoffBehavior: () => MaintenanceWindowTaskCutoffBehavior,\n  MaintenanceWindowTaskFilterSensitiveLog: () => MaintenanceWindowTaskFilterSensitiveLog,\n  MaintenanceWindowTaskInvocationParametersFilterSensitiveLog: () => MaintenanceWindowTaskInvocationParametersFilterSensitiveLog,\n  MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog: () => MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog,\n  MaintenanceWindowTaskType: () => MaintenanceWindowTaskType,\n  MalformedResourcePolicyDocumentException: () => MalformedResourcePolicyDocumentException,\n  MaxDocumentSizeExceeded: () => MaxDocumentSizeExceeded,\n  ModifyDocumentPermissionCommand: () => ModifyDocumentPermissionCommand,\n  NotificationEvent: () => NotificationEvent,\n  NotificationType: () => NotificationType,\n  OperatingSystem: () => OperatingSystem,\n  OpsFilterOperatorType: () => OpsFilterOperatorType,\n  OpsItemAccessDeniedException: () => OpsItemAccessDeniedException,\n  OpsItemAlreadyExistsException: () => OpsItemAlreadyExistsException,\n  OpsItemConflictException: () => OpsItemConflictException,\n  OpsItemDataType: () => OpsItemDataType,\n  OpsItemEventFilterKey: () => OpsItemEventFilterKey,\n  OpsItemEventFilterOperator: () => OpsItemEventFilterOperator,\n  OpsItemFilterKey: () => OpsItemFilterKey,\n  OpsItemFilterOperator: () => OpsItemFilterOperator,\n  OpsItemInvalidParameterException: () => OpsItemInvalidParameterException,\n  OpsItemLimitExceededException: () => OpsItemLimitExceededException,\n  OpsItemNotFoundException: () => OpsItemNotFoundException,\n  OpsItemRelatedItemAlreadyExistsException: () => OpsItemRelatedItemAlreadyExistsException,\n  OpsItemRelatedItemAssociationNotFoundException: () => OpsItemRelatedItemAssociationNotFoundException,\n  OpsItemRelatedItemsFilterKey: () => OpsItemRelatedItemsFilterKey,\n  OpsItemRelatedItemsFilterOperator: () => OpsItemRelatedItemsFilterOperator,\n  OpsItemStatus: () => OpsItemStatus,\n  OpsMetadataAlreadyExistsException: () => OpsMetadataAlreadyExistsException,\n  OpsMetadataInvalidArgumentException: () => OpsMetadataInvalidArgumentException,\n  OpsMetadataKeyLimitExceededException: () => OpsMetadataKeyLimitExceededException,\n  OpsMetadataLimitExceededException: () => OpsMetadataLimitExceededException,\n  OpsMetadataNotFoundException: () => OpsMetadataNotFoundException,\n  OpsMetadataTooManyUpdatesException: () => OpsMetadataTooManyUpdatesException,\n  ParameterAlreadyExists: () => ParameterAlreadyExists,\n  ParameterFilterSensitiveLog: () => ParameterFilterSensitiveLog,\n  ParameterHistoryFilterSensitiveLog: () => ParameterHistoryFilterSensitiveLog,\n  ParameterLimitExceeded: () => ParameterLimitExceeded,\n  ParameterMaxVersionLimitExceeded: () => ParameterMaxVersionLimitExceeded,\n  ParameterNotFound: () => ParameterNotFound,\n  ParameterPatternMismatchException: () => ParameterPatternMismatchException,\n  ParameterTier: () => ParameterTier,\n  ParameterType: () => ParameterType,\n  ParameterVersionLabelLimitExceeded: () => ParameterVersionLabelLimitExceeded,\n  ParameterVersionNotFound: () => ParameterVersionNotFound,\n  ParametersFilterKey: () => ParametersFilterKey,\n  PatchAction: () => PatchAction,\n  PatchComplianceDataState: () => PatchComplianceDataState,\n  PatchComplianceLevel: () => PatchComplianceLevel,\n  PatchDeploymentStatus: () => PatchDeploymentStatus,\n  PatchFilterKey: () => PatchFilterKey,\n  PatchOperationType: () => PatchOperationType,\n  PatchProperty: () => PatchProperty,\n  PatchSet: () => PatchSet,\n  PatchSourceFilterSensitiveLog: () => PatchSourceFilterSensitiveLog,\n  PingStatus: () => PingStatus,\n  PlatformType: () => PlatformType,\n  PoliciesLimitExceededException: () => PoliciesLimitExceededException,\n  PutComplianceItemsCommand: () => PutComplianceItemsCommand,\n  PutInventoryCommand: () => PutInventoryCommand,\n  PutParameterCommand: () => PutParameterCommand,\n  PutParameterRequestFilterSensitiveLog: () => PutParameterRequestFilterSensitiveLog,\n  PutResourcePolicyCommand: () => PutResourcePolicyCommand,\n  RebootOption: () => RebootOption,\n  RegisterDefaultPatchBaselineCommand: () => RegisterDefaultPatchBaselineCommand,\n  RegisterPatchBaselineForPatchGroupCommand: () => RegisterPatchBaselineForPatchGroupCommand,\n  RegisterTargetWithMaintenanceWindowCommand: () => RegisterTargetWithMaintenanceWindowCommand,\n  RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog: () => RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog,\n  RegisterTaskWithMaintenanceWindowCommand: () => RegisterTaskWithMaintenanceWindowCommand,\n  RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog: () => RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog,\n  RemoveTagsFromResourceCommand: () => RemoveTagsFromResourceCommand,\n  ResetServiceSettingCommand: () => ResetServiceSettingCommand,\n  ResourceDataSyncAlreadyExistsException: () => ResourceDataSyncAlreadyExistsException,\n  ResourceDataSyncConflictException: () => ResourceDataSyncConflictException,\n  ResourceDataSyncCountExceededException: () => ResourceDataSyncCountExceededException,\n  ResourceDataSyncInvalidConfigurationException: () => ResourceDataSyncInvalidConfigurationException,\n  ResourceDataSyncNotFoundException: () => ResourceDataSyncNotFoundException,\n  ResourceDataSyncS3Format: () => ResourceDataSyncS3Format,\n  ResourceInUseException: () => ResourceInUseException,\n  ResourceLimitExceededException: () => ResourceLimitExceededException,\n  ResourceNotFoundException: () => ResourceNotFoundException,\n  ResourcePolicyConflictException: () => ResourcePolicyConflictException,\n  ResourcePolicyInvalidParameterException: () => ResourcePolicyInvalidParameterException,\n  ResourcePolicyLimitExceededException: () => ResourcePolicyLimitExceededException,\n  ResourcePolicyNotFoundException: () => ResourcePolicyNotFoundException,\n  ResourceType: () => ResourceType,\n  ResourceTypeForTagging: () => ResourceTypeForTagging,\n  ResumeSessionCommand: () => ResumeSessionCommand,\n  ReviewStatus: () => ReviewStatus,\n  SSM: () => SSM,\n  SSMClient: () => SSMClient,\n  SSMServiceException: () => SSMServiceException,\n  SendAutomationSignalCommand: () => SendAutomationSignalCommand,\n  SendCommandCommand: () => SendCommandCommand,\n  SendCommandRequestFilterSensitiveLog: () => SendCommandRequestFilterSensitiveLog,\n  SendCommandResultFilterSensitiveLog: () => SendCommandResultFilterSensitiveLog,\n  ServiceSettingNotFound: () => ServiceSettingNotFound,\n  SessionFilterKey: () => SessionFilterKey,\n  SessionState: () => SessionState,\n  SessionStatus: () => SessionStatus,\n  SignalType: () => SignalType,\n  SourceType: () => SourceType,\n  StartAssociationsOnceCommand: () => StartAssociationsOnceCommand,\n  StartAutomationExecutionCommand: () => StartAutomationExecutionCommand,\n  StartChangeRequestExecutionCommand: () => StartChangeRequestExecutionCommand,\n  StartSessionCommand: () => StartSessionCommand,\n  StatusUnchanged: () => StatusUnchanged,\n  StepExecutionFilterKey: () => StepExecutionFilterKey,\n  StopAutomationExecutionCommand: () => StopAutomationExecutionCommand,\n  StopType: () => StopType,\n  SubTypeCountLimitExceededException: () => SubTypeCountLimitExceededException,\n  TargetInUseException: () => TargetInUseException,\n  TargetNotConnected: () => TargetNotConnected,\n  TerminateSessionCommand: () => TerminateSessionCommand,\n  TooManyTagsError: () => TooManyTagsError,\n  TooManyUpdates: () => TooManyUpdates,\n  TotalSizeLimitExceededException: () => TotalSizeLimitExceededException,\n  UnlabelParameterVersionCommand: () => UnlabelParameterVersionCommand,\n  UnsupportedCalendarException: () => UnsupportedCalendarException,\n  UnsupportedFeatureRequiredException: () => UnsupportedFeatureRequiredException,\n  UnsupportedInventoryItemContextException: () => UnsupportedInventoryItemContextException,\n  UnsupportedInventorySchemaVersionException: () => UnsupportedInventorySchemaVersionException,\n  UnsupportedOperatingSystem: () => UnsupportedOperatingSystem,\n  UnsupportedParameterType: () => UnsupportedParameterType,\n  UnsupportedPlatformType: () => UnsupportedPlatformType,\n  UpdateAssociationCommand: () => UpdateAssociationCommand,\n  UpdateAssociationRequestFilterSensitiveLog: () => UpdateAssociationRequestFilterSensitiveLog,\n  UpdateAssociationResultFilterSensitiveLog: () => UpdateAssociationResultFilterSensitiveLog,\n  UpdateAssociationStatusCommand: () => UpdateAssociationStatusCommand,\n  UpdateAssociationStatusResultFilterSensitiveLog: () => UpdateAssociationStatusResultFilterSensitiveLog,\n  UpdateDocumentCommand: () => UpdateDocumentCommand,\n  UpdateDocumentDefaultVersionCommand: () => UpdateDocumentDefaultVersionCommand,\n  UpdateDocumentMetadataCommand: () => UpdateDocumentMetadataCommand,\n  UpdateMaintenanceWindowCommand: () => UpdateMaintenanceWindowCommand,\n  UpdateMaintenanceWindowRequestFilterSensitiveLog: () => UpdateMaintenanceWindowRequestFilterSensitiveLog,\n  UpdateMaintenanceWindowResultFilterSensitiveLog: () => UpdateMaintenanceWindowResultFilterSensitiveLog,\n  UpdateMaintenanceWindowTargetCommand: () => UpdateMaintenanceWindowTargetCommand,\n  UpdateMaintenanceWindowTargetRequestFilterSensitiveLog: () => UpdateMaintenanceWindowTargetRequestFilterSensitiveLog,\n  UpdateMaintenanceWindowTargetResultFilterSensitiveLog: () => UpdateMaintenanceWindowTargetResultFilterSensitiveLog,\n  UpdateMaintenanceWindowTaskCommand: () => UpdateMaintenanceWindowTaskCommand,\n  UpdateMaintenanceWindowTaskRequestFilterSensitiveLog: () => UpdateMaintenanceWindowTaskRequestFilterSensitiveLog,\n  UpdateMaintenanceWindowTaskResultFilterSensitiveLog: () => UpdateMaintenanceWindowTaskResultFilterSensitiveLog,\n  UpdateManagedInstanceRoleCommand: () => UpdateManagedInstanceRoleCommand,\n  UpdateOpsItemCommand: () => UpdateOpsItemCommand,\n  UpdateOpsMetadataCommand: () => UpdateOpsMetadataCommand,\n  UpdatePatchBaselineCommand: () => UpdatePatchBaselineCommand,\n  UpdatePatchBaselineRequestFilterSensitiveLog: () => UpdatePatchBaselineRequestFilterSensitiveLog,\n  UpdatePatchBaselineResultFilterSensitiveLog: () => UpdatePatchBaselineResultFilterSensitiveLog,\n  UpdateResourceDataSyncCommand: () => UpdateResourceDataSyncCommand,\n  UpdateServiceSettingCommand: () => UpdateServiceSettingCommand,\n  __Client: () => import_smithy_client.Client,\n  paginateDescribeActivations: () => paginateDescribeActivations,\n  paginateDescribeAssociationExecutionTargets: () => paginateDescribeAssociationExecutionTargets,\n  paginateDescribeAssociationExecutions: () => paginateDescribeAssociationExecutions,\n  paginateDescribeAutomationExecutions: () => paginateDescribeAutomationExecutions,\n  paginateDescribeAutomationStepExecutions: () => paginateDescribeAutomationStepExecutions,\n  paginateDescribeAvailablePatches: () => paginateDescribeAvailablePatches,\n  paginateDescribeEffectiveInstanceAssociations: () => paginateDescribeEffectiveInstanceAssociations,\n  paginateDescribeEffectivePatchesForPatchBaseline: () => paginateDescribeEffectivePatchesForPatchBaseline,\n  paginateDescribeInstanceAssociationsStatus: () => paginateDescribeInstanceAssociationsStatus,\n  paginateDescribeInstanceInformation: () => paginateDescribeInstanceInformation,\n  paginateDescribeInstancePatchStates: () => paginateDescribeInstancePatchStates,\n  paginateDescribeInstancePatchStatesForPatchGroup: () => paginateDescribeInstancePatchStatesForPatchGroup,\n  paginateDescribeInstancePatches: () => paginateDescribeInstancePatches,\n  paginateDescribeInstanceProperties: () => paginateDescribeInstanceProperties,\n  paginateDescribeInventoryDeletions: () => paginateDescribeInventoryDeletions,\n  paginateDescribeMaintenanceWindowExecutionTaskInvocations: () => paginateDescribeMaintenanceWindowExecutionTaskInvocations,\n  paginateDescribeMaintenanceWindowExecutionTasks: () => paginateDescribeMaintenanceWindowExecutionTasks,\n  paginateDescribeMaintenanceWindowExecutions: () => paginateDescribeMaintenanceWindowExecutions,\n  paginateDescribeMaintenanceWindowSchedule: () => paginateDescribeMaintenanceWindowSchedule,\n  paginateDescribeMaintenanceWindowTargets: () => paginateDescribeMaintenanceWindowTargets,\n  paginateDescribeMaintenanceWindowTasks: () => paginateDescribeMaintenanceWindowTasks,\n  paginateDescribeMaintenanceWindows: () => paginateDescribeMaintenanceWindows,\n  paginateDescribeMaintenanceWindowsForTarget: () => paginateDescribeMaintenanceWindowsForTarget,\n  paginateDescribeOpsItems: () => paginateDescribeOpsItems,\n  paginateDescribeParameters: () => paginateDescribeParameters,\n  paginateDescribePatchBaselines: () => paginateDescribePatchBaselines,\n  paginateDescribePatchGroups: () => paginateDescribePatchGroups,\n  paginateDescribePatchProperties: () => paginateDescribePatchProperties,\n  paginateDescribeSessions: () => paginateDescribeSessions,\n  paginateGetInventory: () => paginateGetInventory,\n  paginateGetInventorySchema: () => paginateGetInventorySchema,\n  paginateGetOpsSummary: () => paginateGetOpsSummary,\n  paginateGetParameterHistory: () => paginateGetParameterHistory,\n  paginateGetParametersByPath: () => paginateGetParametersByPath,\n  paginateGetResourcePolicies: () => paginateGetResourcePolicies,\n  paginateListAssociationVersions: () => paginateListAssociationVersions,\n  paginateListAssociations: () => paginateListAssociations,\n  paginateListCommandInvocations: () => paginateListCommandInvocations,\n  paginateListCommands: () => paginateListCommands,\n  paginateListComplianceItems: () => paginateListComplianceItems,\n  paginateListComplianceSummaries: () => paginateListComplianceSummaries,\n  paginateListDocumentVersions: () => paginateListDocumentVersions,\n  paginateListDocuments: () => paginateListDocuments,\n  paginateListOpsItemEvents: () => paginateListOpsItemEvents,\n  paginateListOpsItemRelatedItems: () => paginateListOpsItemRelatedItems,\n  paginateListOpsMetadata: () => paginateListOpsMetadata,\n  paginateListResourceComplianceSummaries: () => paginateListResourceComplianceSummaries,\n  paginateListResourceDataSync: () => paginateListResourceDataSync,\n  waitForCommandExecuted: () => waitForCommandExecuted,\n  waitUntilCommandExecuted: () => waitUntilCommandExecuted\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/SSMClient.ts\nvar import_middleware_host_header = require(\"@aws-sdk/middleware-host-header\");\nvar import_middleware_logger = require(\"@aws-sdk/middleware-logger\");\nvar import_middleware_recursion_detection = require(\"@aws-sdk/middleware-recursion-detection\");\nvar import_middleware_user_agent = require(\"@aws-sdk/middleware-user-agent\");\nvar import_config_resolver = require(\"@smithy/config-resolver\");\nvar import_core = require(\"@smithy/core\");\nvar import_middleware_content_length = require(\"@smithy/middleware-content-length\");\nvar import_middleware_endpoint = require(\"@smithy/middleware-endpoint\");\nvar import_middleware_retry = require(\"@smithy/middleware-retry\");\n\nvar import_httpAuthSchemeProvider = require(\"./auth/httpAuthSchemeProvider\");\n\n// src/endpoint/EndpointParameters.ts\nvar resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {\n  return {\n    ...options,\n    useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n    useFipsEndpoint: options.useFipsEndpoint ?? false,\n    defaultSigningName: \"ssm\"\n  };\n}, \"resolveClientEndpointParameters\");\nvar commonParams = {\n  UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n  Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n  Region: { type: \"builtInParams\", name: \"region\" },\n  UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" }\n};\n\n// src/SSMClient.ts\nvar import_runtimeConfig = require(\"././runtimeConfig\");\n\n// src/runtimeExtensions.ts\nvar import_region_config_resolver = require(\"@aws-sdk/region-config-resolver\");\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar import_smithy_client = require(\"@smithy/smithy-client\");\n\n// src/auth/httpAuthExtensionConfiguration.ts\nvar getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n  let _credentials = runtimeConfig.credentials;\n  return {\n    setHttpAuthScheme(httpAuthScheme) {\n      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n      if (index === -1) {\n        _httpAuthSchemes.push(httpAuthScheme);\n      } else {\n        _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n      }\n    },\n    httpAuthSchemes() {\n      return _httpAuthSchemes;\n    },\n    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n      _httpAuthSchemeProvider = httpAuthSchemeProvider;\n    },\n    httpAuthSchemeProvider() {\n      return _httpAuthSchemeProvider;\n    },\n    setCredentials(credentials) {\n      _credentials = credentials;\n    },\n    credentials() {\n      return _credentials;\n    }\n  };\n}, \"getHttpAuthExtensionConfiguration\");\nvar resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {\n  return {\n    httpAuthSchemes: config.httpAuthSchemes(),\n    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n    credentials: config.credentials()\n  };\n}, \"resolveHttpAuthRuntimeConfig\");\n\n// src/runtimeExtensions.ts\nvar asPartial = /* @__PURE__ */ __name((t) => t, \"asPartial\");\nvar resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {\n  const extensionConfiguration = {\n    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),\n    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))\n  };\n  extensions.forEach((extension) => extension.configure(extensionConfiguration));\n  return {\n    ...runtimeConfig,\n    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),\n    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),\n    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)\n  };\n}, \"resolveRuntimeExtensions\");\n\n// src/SSMClient.ts\nvar _SSMClient = class _SSMClient extends import_smithy_client.Client {\n  constructor(...[configuration]) {\n    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});\n    const _config_1 = resolveClientEndpointParameters(_config_0);\n    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);\n    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);\n    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);\n    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);\n    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);\n    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);\n    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);\n    super(_config_8);\n    this.config = _config_8;\n    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));\n    this.middlewareStack.use(\n      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()\n      })\n    );\n    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));\n  }\n  /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */\n  destroy() {\n    super.destroy();\n  }\n  getDefaultHttpAuthSchemeParametersProvider() {\n    return import_httpAuthSchemeProvider.defaultSSMHttpAuthSchemeParametersProvider;\n  }\n  getIdentityProviderConfigProvider() {\n    return async (config) => new import_core.DefaultIdentityProviderConfig({\n      \"aws.auth#sigv4\": config.credentials\n    });\n  }\n};\n__name(_SSMClient, \"SSMClient\");\nvar SSMClient = _SSMClient;\n\n// src/SSM.ts\n\n\n// src/commands/AddTagsToResourceCommand.ts\n\nvar import_middleware_serde = require(\"@smithy/middleware-serde\");\n\n\n// src/protocols/Aws_json1_1.ts\nvar import_core2 = require(\"@aws-sdk/core\");\n\n\nvar import_uuid = require(\"uuid\");\n\n// src/models/models_0.ts\n\n\n// src/models/SSMServiceException.ts\n\nvar _SSMServiceException = class _SSMServiceException extends import_smithy_client.ServiceException {\n  /**\n   * @internal\n   */\n  constructor(options) {\n    super(options);\n    Object.setPrototypeOf(this, _SSMServiceException.prototype);\n  }\n};\n__name(_SSMServiceException, \"SSMServiceException\");\nvar SSMServiceException = _SSMServiceException;\n\n// src/models/models_0.ts\nvar ResourceTypeForTagging = {\n  ASSOCIATION: \"Association\",\n  AUTOMATION: \"Automation\",\n  DOCUMENT: \"Document\",\n  MAINTENANCE_WINDOW: \"MaintenanceWindow\",\n  MANAGED_INSTANCE: \"ManagedInstance\",\n  OPSMETADATA: \"OpsMetadata\",\n  OPS_ITEM: \"OpsItem\",\n  PARAMETER: \"Parameter\",\n  PATCH_BASELINE: \"PatchBaseline\"\n};\nvar _InternalServerError = class _InternalServerError extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InternalServerError\",\n      $fault: \"server\",\n      ...opts\n    });\n    this.name = \"InternalServerError\";\n    this.$fault = \"server\";\n    Object.setPrototypeOf(this, _InternalServerError.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InternalServerError, \"InternalServerError\");\nvar InternalServerError = _InternalServerError;\nvar _InvalidResourceId = class _InvalidResourceId extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidResourceId\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidResourceId\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidResourceId.prototype);\n  }\n};\n__name(_InvalidResourceId, \"InvalidResourceId\");\nvar InvalidResourceId = _InvalidResourceId;\nvar _InvalidResourceType = class _InvalidResourceType extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidResourceType\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidResourceType\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidResourceType.prototype);\n  }\n};\n__name(_InvalidResourceType, \"InvalidResourceType\");\nvar InvalidResourceType = _InvalidResourceType;\nvar _TooManyTagsError = class _TooManyTagsError extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TooManyTagsError\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TooManyTagsError\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TooManyTagsError.prototype);\n  }\n};\n__name(_TooManyTagsError, \"TooManyTagsError\");\nvar TooManyTagsError = _TooManyTagsError;\nvar _TooManyUpdates = class _TooManyUpdates extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TooManyUpdates\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TooManyUpdates\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TooManyUpdates.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_TooManyUpdates, \"TooManyUpdates\");\nvar TooManyUpdates = _TooManyUpdates;\nvar ExternalAlarmState = {\n  ALARM: \"ALARM\",\n  UNKNOWN: \"UNKNOWN\"\n};\nvar _AlreadyExistsException = class _AlreadyExistsException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AlreadyExistsException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AlreadyExistsException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AlreadyExistsException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AlreadyExistsException, \"AlreadyExistsException\");\nvar AlreadyExistsException = _AlreadyExistsException;\nvar _OpsItemConflictException = class _OpsItemConflictException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsItemConflictException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsItemConflictException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsItemConflictException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_OpsItemConflictException, \"OpsItemConflictException\");\nvar OpsItemConflictException = _OpsItemConflictException;\nvar _OpsItemInvalidParameterException = class _OpsItemInvalidParameterException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsItemInvalidParameterException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsItemInvalidParameterException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsItemInvalidParameterException.prototype);\n    this.ParameterNames = opts.ParameterNames;\n    this.Message = opts.Message;\n  }\n};\n__name(_OpsItemInvalidParameterException, \"OpsItemInvalidParameterException\");\nvar OpsItemInvalidParameterException = _OpsItemInvalidParameterException;\nvar _OpsItemLimitExceededException = class _OpsItemLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsItemLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsItemLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsItemLimitExceededException.prototype);\n    this.ResourceTypes = opts.ResourceTypes;\n    this.Limit = opts.Limit;\n    this.LimitType = opts.LimitType;\n    this.Message = opts.Message;\n  }\n};\n__name(_OpsItemLimitExceededException, \"OpsItemLimitExceededException\");\nvar OpsItemLimitExceededException = _OpsItemLimitExceededException;\nvar _OpsItemNotFoundException = class _OpsItemNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsItemNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsItemNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsItemNotFoundException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_OpsItemNotFoundException, \"OpsItemNotFoundException\");\nvar OpsItemNotFoundException = _OpsItemNotFoundException;\nvar _OpsItemRelatedItemAlreadyExistsException = class _OpsItemRelatedItemAlreadyExistsException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsItemRelatedItemAlreadyExistsException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsItemRelatedItemAlreadyExistsException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsItemRelatedItemAlreadyExistsException.prototype);\n    this.Message = opts.Message;\n    this.ResourceUri = opts.ResourceUri;\n    this.OpsItemId = opts.OpsItemId;\n  }\n};\n__name(_OpsItemRelatedItemAlreadyExistsException, \"OpsItemRelatedItemAlreadyExistsException\");\nvar OpsItemRelatedItemAlreadyExistsException = _OpsItemRelatedItemAlreadyExistsException;\nvar _DuplicateInstanceId = class _DuplicateInstanceId extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DuplicateInstanceId\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DuplicateInstanceId\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DuplicateInstanceId.prototype);\n  }\n};\n__name(_DuplicateInstanceId, \"DuplicateInstanceId\");\nvar DuplicateInstanceId = _DuplicateInstanceId;\nvar _InvalidCommandId = class _InvalidCommandId extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidCommandId\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidCommandId\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidCommandId.prototype);\n  }\n};\n__name(_InvalidCommandId, \"InvalidCommandId\");\nvar InvalidCommandId = _InvalidCommandId;\nvar _InvalidInstanceId = class _InvalidInstanceId extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidInstanceId\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidInstanceId\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidInstanceId.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidInstanceId, \"InvalidInstanceId\");\nvar InvalidInstanceId = _InvalidInstanceId;\nvar _DoesNotExistException = class _DoesNotExistException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DoesNotExistException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DoesNotExistException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DoesNotExistException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_DoesNotExistException, \"DoesNotExistException\");\nvar DoesNotExistException = _DoesNotExistException;\nvar _InvalidParameters = class _InvalidParameters extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidParameters\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidParameters\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidParameters.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidParameters, \"InvalidParameters\");\nvar InvalidParameters = _InvalidParameters;\nvar _AssociationAlreadyExists = class _AssociationAlreadyExists extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AssociationAlreadyExists\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AssociationAlreadyExists\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AssociationAlreadyExists.prototype);\n  }\n};\n__name(_AssociationAlreadyExists, \"AssociationAlreadyExists\");\nvar AssociationAlreadyExists = _AssociationAlreadyExists;\nvar _AssociationLimitExceeded = class _AssociationLimitExceeded extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AssociationLimitExceeded\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AssociationLimitExceeded\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AssociationLimitExceeded.prototype);\n  }\n};\n__name(_AssociationLimitExceeded, \"AssociationLimitExceeded\");\nvar AssociationLimitExceeded = _AssociationLimitExceeded;\nvar AssociationComplianceSeverity = {\n  Critical: \"CRITICAL\",\n  High: \"HIGH\",\n  Low: \"LOW\",\n  Medium: \"MEDIUM\",\n  Unspecified: \"UNSPECIFIED\"\n};\nvar AssociationSyncCompliance = {\n  Auto: \"AUTO\",\n  Manual: \"MANUAL\"\n};\nvar AssociationStatusName = {\n  Failed: \"Failed\",\n  Pending: \"Pending\",\n  Success: \"Success\"\n};\nvar _InvalidDocument = class _InvalidDocument extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidDocument\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidDocument\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidDocument.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidDocument, \"InvalidDocument\");\nvar InvalidDocument = _InvalidDocument;\nvar _InvalidDocumentVersion = class _InvalidDocumentVersion extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidDocumentVersion\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidDocumentVersion\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidDocumentVersion.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidDocumentVersion, \"InvalidDocumentVersion\");\nvar InvalidDocumentVersion = _InvalidDocumentVersion;\nvar _InvalidOutputLocation = class _InvalidOutputLocation extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidOutputLocation\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidOutputLocation\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidOutputLocation.prototype);\n  }\n};\n__name(_InvalidOutputLocation, \"InvalidOutputLocation\");\nvar InvalidOutputLocation = _InvalidOutputLocation;\nvar _InvalidSchedule = class _InvalidSchedule extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidSchedule\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidSchedule\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidSchedule.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidSchedule, \"InvalidSchedule\");\nvar InvalidSchedule = _InvalidSchedule;\nvar _InvalidTag = class _InvalidTag extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidTag\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidTag\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidTag.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidTag, \"InvalidTag\");\nvar InvalidTag = _InvalidTag;\nvar _InvalidTarget = class _InvalidTarget extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidTarget\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidTarget\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidTarget.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidTarget, \"InvalidTarget\");\nvar InvalidTarget = _InvalidTarget;\nvar _InvalidTargetMaps = class _InvalidTargetMaps extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidTargetMaps\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidTargetMaps\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidTargetMaps.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidTargetMaps, \"InvalidTargetMaps\");\nvar InvalidTargetMaps = _InvalidTargetMaps;\nvar _UnsupportedPlatformType = class _UnsupportedPlatformType extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedPlatformType\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedPlatformType\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedPlatformType.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_UnsupportedPlatformType, \"UnsupportedPlatformType\");\nvar UnsupportedPlatformType = _UnsupportedPlatformType;\nvar Fault = {\n  Client: \"Client\",\n  Server: \"Server\",\n  Unknown: \"Unknown\"\n};\nvar AttachmentsSourceKey = {\n  AttachmentReference: \"AttachmentReference\",\n  S3FileUrl: \"S3FileUrl\",\n  SourceUrl: \"SourceUrl\"\n};\nvar DocumentFormat = {\n  JSON: \"JSON\",\n  TEXT: \"TEXT\",\n  YAML: \"YAML\"\n};\nvar DocumentType = {\n  ApplicationConfiguration: \"ApplicationConfiguration\",\n  ApplicationConfigurationSchema: \"ApplicationConfigurationSchema\",\n  Automation: \"Automation\",\n  ChangeCalendar: \"ChangeCalendar\",\n  ChangeTemplate: \"Automation.ChangeTemplate\",\n  CloudFormation: \"CloudFormation\",\n  Command: \"Command\",\n  ConformancePackTemplate: \"ConformancePackTemplate\",\n  DeploymentStrategy: \"DeploymentStrategy\",\n  Package: \"Package\",\n  Policy: \"Policy\",\n  ProblemAnalysis: \"ProblemAnalysis\",\n  ProblemAnalysisTemplate: \"ProblemAnalysisTemplate\",\n  QuickSetup: \"QuickSetup\",\n  Session: \"Session\"\n};\nvar DocumentHashType = {\n  SHA1: \"Sha1\",\n  SHA256: \"Sha256\"\n};\nvar DocumentParameterType = {\n  String: \"String\",\n  StringList: \"StringList\"\n};\nvar PlatformType = {\n  LINUX: \"Linux\",\n  MACOS: \"MacOS\",\n  WINDOWS: \"Windows\"\n};\nvar ReviewStatus = {\n  APPROVED: \"APPROVED\",\n  NOT_REVIEWED: \"NOT_REVIEWED\",\n  PENDING: \"PENDING\",\n  REJECTED: \"REJECTED\"\n};\nvar DocumentStatus = {\n  Active: \"Active\",\n  Creating: \"Creating\",\n  Deleting: \"Deleting\",\n  Failed: \"Failed\",\n  Updating: \"Updating\"\n};\nvar _DocumentAlreadyExists = class _DocumentAlreadyExists extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DocumentAlreadyExists\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DocumentAlreadyExists\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DocumentAlreadyExists.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_DocumentAlreadyExists, \"DocumentAlreadyExists\");\nvar DocumentAlreadyExists = _DocumentAlreadyExists;\nvar _DocumentLimitExceeded = class _DocumentLimitExceeded extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DocumentLimitExceeded\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DocumentLimitExceeded\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DocumentLimitExceeded.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_DocumentLimitExceeded, \"DocumentLimitExceeded\");\nvar DocumentLimitExceeded = _DocumentLimitExceeded;\nvar _InvalidDocumentContent = class _InvalidDocumentContent extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidDocumentContent\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidDocumentContent\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidDocumentContent.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidDocumentContent, \"InvalidDocumentContent\");\nvar InvalidDocumentContent = _InvalidDocumentContent;\nvar _InvalidDocumentSchemaVersion = class _InvalidDocumentSchemaVersion extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidDocumentSchemaVersion\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidDocumentSchemaVersion\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidDocumentSchemaVersion.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidDocumentSchemaVersion, \"InvalidDocumentSchemaVersion\");\nvar InvalidDocumentSchemaVersion = _InvalidDocumentSchemaVersion;\nvar _MaxDocumentSizeExceeded = class _MaxDocumentSizeExceeded extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"MaxDocumentSizeExceeded\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"MaxDocumentSizeExceeded\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _MaxDocumentSizeExceeded.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_MaxDocumentSizeExceeded, \"MaxDocumentSizeExceeded\");\nvar MaxDocumentSizeExceeded = _MaxDocumentSizeExceeded;\nvar _IdempotentParameterMismatch = class _IdempotentParameterMismatch extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"IdempotentParameterMismatch\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"IdempotentParameterMismatch\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _IdempotentParameterMismatch.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_IdempotentParameterMismatch, \"IdempotentParameterMismatch\");\nvar IdempotentParameterMismatch = _IdempotentParameterMismatch;\nvar _ResourceLimitExceededException = class _ResourceLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceLimitExceededException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourceLimitExceededException, \"ResourceLimitExceededException\");\nvar ResourceLimitExceededException = _ResourceLimitExceededException;\nvar OpsItemDataType = {\n  SEARCHABLE_STRING: \"SearchableString\",\n  STRING: \"String\"\n};\nvar _OpsItemAccessDeniedException = class _OpsItemAccessDeniedException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsItemAccessDeniedException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsItemAccessDeniedException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsItemAccessDeniedException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_OpsItemAccessDeniedException, \"OpsItemAccessDeniedException\");\nvar OpsItemAccessDeniedException = _OpsItemAccessDeniedException;\nvar _OpsItemAlreadyExistsException = class _OpsItemAlreadyExistsException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsItemAlreadyExistsException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsItemAlreadyExistsException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsItemAlreadyExistsException.prototype);\n    this.Message = opts.Message;\n    this.OpsItemId = opts.OpsItemId;\n  }\n};\n__name(_OpsItemAlreadyExistsException, \"OpsItemAlreadyExistsException\");\nvar OpsItemAlreadyExistsException = _OpsItemAlreadyExistsException;\nvar _OpsMetadataAlreadyExistsException = class _OpsMetadataAlreadyExistsException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsMetadataAlreadyExistsException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsMetadataAlreadyExistsException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsMetadataAlreadyExistsException.prototype);\n  }\n};\n__name(_OpsMetadataAlreadyExistsException, \"OpsMetadataAlreadyExistsException\");\nvar OpsMetadataAlreadyExistsException = _OpsMetadataAlreadyExistsException;\nvar _OpsMetadataInvalidArgumentException = class _OpsMetadataInvalidArgumentException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsMetadataInvalidArgumentException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsMetadataInvalidArgumentException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsMetadataInvalidArgumentException.prototype);\n  }\n};\n__name(_OpsMetadataInvalidArgumentException, \"OpsMetadataInvalidArgumentException\");\nvar OpsMetadataInvalidArgumentException = _OpsMetadataInvalidArgumentException;\nvar _OpsMetadataLimitExceededException = class _OpsMetadataLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsMetadataLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsMetadataLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsMetadataLimitExceededException.prototype);\n  }\n};\n__name(_OpsMetadataLimitExceededException, \"OpsMetadataLimitExceededException\");\nvar OpsMetadataLimitExceededException = _OpsMetadataLimitExceededException;\nvar _OpsMetadataTooManyUpdatesException = class _OpsMetadataTooManyUpdatesException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsMetadataTooManyUpdatesException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsMetadataTooManyUpdatesException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsMetadataTooManyUpdatesException.prototype);\n  }\n};\n__name(_OpsMetadataTooManyUpdatesException, \"OpsMetadataTooManyUpdatesException\");\nvar OpsMetadataTooManyUpdatesException = _OpsMetadataTooManyUpdatesException;\nvar PatchComplianceLevel = {\n  Critical: \"CRITICAL\",\n  High: \"HIGH\",\n  Informational: \"INFORMATIONAL\",\n  Low: \"LOW\",\n  Medium: \"MEDIUM\",\n  Unspecified: \"UNSPECIFIED\"\n};\nvar PatchFilterKey = {\n  AdvisoryId: \"ADVISORY_ID\",\n  Arch: \"ARCH\",\n  BugzillaId: \"BUGZILLA_ID\",\n  CVEId: \"CVE_ID\",\n  Classification: \"CLASSIFICATION\",\n  Epoch: \"EPOCH\",\n  MsrcSeverity: \"MSRC_SEVERITY\",\n  Name: \"NAME\",\n  PatchId: \"PATCH_ID\",\n  PatchSet: \"PATCH_SET\",\n  Priority: \"PRIORITY\",\n  Product: \"PRODUCT\",\n  ProductFamily: \"PRODUCT_FAMILY\",\n  Release: \"RELEASE\",\n  Repository: \"REPOSITORY\",\n  Section: \"SECTION\",\n  Security: \"SECURITY\",\n  Severity: \"SEVERITY\",\n  Version: \"VERSION\"\n};\nvar OperatingSystem = {\n  AlmaLinux: \"ALMA_LINUX\",\n  AmazonLinux: \"AMAZON_LINUX\",\n  AmazonLinux2: \"AMAZON_LINUX_2\",\n  AmazonLinux2022: \"AMAZON_LINUX_2022\",\n  AmazonLinux2023: \"AMAZON_LINUX_2023\",\n  CentOS: \"CENTOS\",\n  Debian: \"DEBIAN\",\n  MacOS: \"MACOS\",\n  OracleLinux: \"ORACLE_LINUX\",\n  Raspbian: \"RASPBIAN\",\n  RedhatEnterpriseLinux: \"REDHAT_ENTERPRISE_LINUX\",\n  Rocky_Linux: \"ROCKY_LINUX\",\n  Suse: \"SUSE\",\n  Ubuntu: \"UBUNTU\",\n  Windows: \"WINDOWS\"\n};\nvar PatchAction = {\n  AllowAsDependency: \"ALLOW_AS_DEPENDENCY\",\n  Block: \"BLOCK\"\n};\nvar ResourceDataSyncS3Format = {\n  JSON_SERDE: \"JsonSerDe\"\n};\nvar _ResourceDataSyncAlreadyExistsException = class _ResourceDataSyncAlreadyExistsException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceDataSyncAlreadyExistsException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceDataSyncAlreadyExistsException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceDataSyncAlreadyExistsException.prototype);\n    this.SyncName = opts.SyncName;\n  }\n};\n__name(_ResourceDataSyncAlreadyExistsException, \"ResourceDataSyncAlreadyExistsException\");\nvar ResourceDataSyncAlreadyExistsException = _ResourceDataSyncAlreadyExistsException;\nvar _ResourceDataSyncCountExceededException = class _ResourceDataSyncCountExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceDataSyncCountExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceDataSyncCountExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceDataSyncCountExceededException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourceDataSyncCountExceededException, \"ResourceDataSyncCountExceededException\");\nvar ResourceDataSyncCountExceededException = _ResourceDataSyncCountExceededException;\nvar _ResourceDataSyncInvalidConfigurationException = class _ResourceDataSyncInvalidConfigurationException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceDataSyncInvalidConfigurationException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceDataSyncInvalidConfigurationException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceDataSyncInvalidConfigurationException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourceDataSyncInvalidConfigurationException, \"ResourceDataSyncInvalidConfigurationException\");\nvar ResourceDataSyncInvalidConfigurationException = _ResourceDataSyncInvalidConfigurationException;\nvar _InvalidActivation = class _InvalidActivation extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidActivation\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidActivation\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidActivation.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidActivation, \"InvalidActivation\");\nvar InvalidActivation = _InvalidActivation;\nvar _InvalidActivationId = class _InvalidActivationId extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidActivationId\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidActivationId\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidActivationId.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidActivationId, \"InvalidActivationId\");\nvar InvalidActivationId = _InvalidActivationId;\nvar _AssociationDoesNotExist = class _AssociationDoesNotExist extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AssociationDoesNotExist\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AssociationDoesNotExist\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AssociationDoesNotExist.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AssociationDoesNotExist, \"AssociationDoesNotExist\");\nvar AssociationDoesNotExist = _AssociationDoesNotExist;\nvar _AssociatedInstances = class _AssociatedInstances extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AssociatedInstances\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AssociatedInstances\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AssociatedInstances.prototype);\n  }\n};\n__name(_AssociatedInstances, \"AssociatedInstances\");\nvar AssociatedInstances = _AssociatedInstances;\nvar _InvalidDocumentOperation = class _InvalidDocumentOperation extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidDocumentOperation\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidDocumentOperation\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidDocumentOperation.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidDocumentOperation, \"InvalidDocumentOperation\");\nvar InvalidDocumentOperation = _InvalidDocumentOperation;\nvar InventorySchemaDeleteOption = {\n  DELETE_SCHEMA: \"DeleteSchema\",\n  DISABLE_SCHEMA: \"DisableSchema\"\n};\nvar _InvalidDeleteInventoryParametersException = class _InvalidDeleteInventoryParametersException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidDeleteInventoryParametersException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidDeleteInventoryParametersException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidDeleteInventoryParametersException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidDeleteInventoryParametersException, \"InvalidDeleteInventoryParametersException\");\nvar InvalidDeleteInventoryParametersException = _InvalidDeleteInventoryParametersException;\nvar _InvalidInventoryRequestException = class _InvalidInventoryRequestException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidInventoryRequestException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidInventoryRequestException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidInventoryRequestException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidInventoryRequestException, \"InvalidInventoryRequestException\");\nvar InvalidInventoryRequestException = _InvalidInventoryRequestException;\nvar _InvalidOptionException = class _InvalidOptionException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidOptionException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidOptionException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidOptionException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidOptionException, \"InvalidOptionException\");\nvar InvalidOptionException = _InvalidOptionException;\nvar _InvalidTypeNameException = class _InvalidTypeNameException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidTypeNameException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidTypeNameException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidTypeNameException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidTypeNameException, \"InvalidTypeNameException\");\nvar InvalidTypeNameException = _InvalidTypeNameException;\nvar _OpsMetadataNotFoundException = class _OpsMetadataNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsMetadataNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsMetadataNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsMetadataNotFoundException.prototype);\n  }\n};\n__name(_OpsMetadataNotFoundException, \"OpsMetadataNotFoundException\");\nvar OpsMetadataNotFoundException = _OpsMetadataNotFoundException;\nvar _ParameterNotFound = class _ParameterNotFound extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ParameterNotFound\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ParameterNotFound\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ParameterNotFound.prototype);\n  }\n};\n__name(_ParameterNotFound, \"ParameterNotFound\");\nvar ParameterNotFound = _ParameterNotFound;\nvar _ResourceInUseException = class _ResourceInUseException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceInUseException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceInUseException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceInUseException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourceInUseException, \"ResourceInUseException\");\nvar ResourceInUseException = _ResourceInUseException;\nvar _ResourceDataSyncNotFoundException = class _ResourceDataSyncNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceDataSyncNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceDataSyncNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceDataSyncNotFoundException.prototype);\n    this.SyncName = opts.SyncName;\n    this.SyncType = opts.SyncType;\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourceDataSyncNotFoundException, \"ResourceDataSyncNotFoundException\");\nvar ResourceDataSyncNotFoundException = _ResourceDataSyncNotFoundException;\nvar _MalformedResourcePolicyDocumentException = class _MalformedResourcePolicyDocumentException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"MalformedResourcePolicyDocumentException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"MalformedResourcePolicyDocumentException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _MalformedResourcePolicyDocumentException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_MalformedResourcePolicyDocumentException, \"MalformedResourcePolicyDocumentException\");\nvar MalformedResourcePolicyDocumentException = _MalformedResourcePolicyDocumentException;\nvar _ResourceNotFoundException = class _ResourceNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourceNotFoundException, \"ResourceNotFoundException\");\nvar ResourceNotFoundException = _ResourceNotFoundException;\nvar _ResourcePolicyConflictException = class _ResourcePolicyConflictException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourcePolicyConflictException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourcePolicyConflictException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourcePolicyConflictException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourcePolicyConflictException, \"ResourcePolicyConflictException\");\nvar ResourcePolicyConflictException = _ResourcePolicyConflictException;\nvar _ResourcePolicyInvalidParameterException = class _ResourcePolicyInvalidParameterException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourcePolicyInvalidParameterException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourcePolicyInvalidParameterException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourcePolicyInvalidParameterException.prototype);\n    this.ParameterNames = opts.ParameterNames;\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourcePolicyInvalidParameterException, \"ResourcePolicyInvalidParameterException\");\nvar ResourcePolicyInvalidParameterException = _ResourcePolicyInvalidParameterException;\nvar _ResourcePolicyNotFoundException = class _ResourcePolicyNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourcePolicyNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourcePolicyNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourcePolicyNotFoundException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourcePolicyNotFoundException, \"ResourcePolicyNotFoundException\");\nvar ResourcePolicyNotFoundException = _ResourcePolicyNotFoundException;\nvar _TargetInUseException = class _TargetInUseException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TargetInUseException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TargetInUseException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TargetInUseException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_TargetInUseException, \"TargetInUseException\");\nvar TargetInUseException = _TargetInUseException;\nvar DescribeActivationsFilterKeys = {\n  ACTIVATION_IDS: \"ActivationIds\",\n  DEFAULT_INSTANCE_NAME: \"DefaultInstanceName\",\n  IAM_ROLE: \"IamRole\"\n};\nvar _InvalidFilter = class _InvalidFilter extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidFilter\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidFilter\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidFilter.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidFilter, \"InvalidFilter\");\nvar InvalidFilter = _InvalidFilter;\nvar _InvalidNextToken = class _InvalidNextToken extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidNextToken\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidNextToken\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidNextToken.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidNextToken, \"InvalidNextToken\");\nvar InvalidNextToken = _InvalidNextToken;\nvar _InvalidAssociationVersion = class _InvalidAssociationVersion extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidAssociationVersion\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAssociationVersion\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidAssociationVersion.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidAssociationVersion, \"InvalidAssociationVersion\");\nvar InvalidAssociationVersion = _InvalidAssociationVersion;\nvar AssociationExecutionFilterKey = {\n  CreatedTime: \"CreatedTime\",\n  ExecutionId: \"ExecutionId\",\n  Status: \"Status\"\n};\nvar AssociationFilterOperatorType = {\n  Equal: \"EQUAL\",\n  GreaterThan: \"GREATER_THAN\",\n  LessThan: \"LESS_THAN\"\n};\nvar _AssociationExecutionDoesNotExist = class _AssociationExecutionDoesNotExist extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AssociationExecutionDoesNotExist\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AssociationExecutionDoesNotExist\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AssociationExecutionDoesNotExist.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AssociationExecutionDoesNotExist, \"AssociationExecutionDoesNotExist\");\nvar AssociationExecutionDoesNotExist = _AssociationExecutionDoesNotExist;\nvar AssociationExecutionTargetsFilterKey = {\n  ResourceId: \"ResourceId\",\n  ResourceType: \"ResourceType\",\n  Status: \"Status\"\n};\nvar AutomationExecutionFilterKey = {\n  AUTOMATION_SUBTYPE: \"AutomationSubtype\",\n  AUTOMATION_TYPE: \"AutomationType\",\n  CURRENT_ACTION: \"CurrentAction\",\n  DOCUMENT_NAME_PREFIX: \"DocumentNamePrefix\",\n  EXECUTION_ID: \"ExecutionId\",\n  EXECUTION_STATUS: \"ExecutionStatus\",\n  OPS_ITEM_ID: \"OpsItemId\",\n  PARENT_EXECUTION_ID: \"ParentExecutionId\",\n  START_TIME_AFTER: \"StartTimeAfter\",\n  START_TIME_BEFORE: \"StartTimeBefore\",\n  TAG_KEY: \"TagKey\",\n  TARGET_RESOURCE_GROUP: \"TargetResourceGroup\"\n};\nvar AutomationExecutionStatus = {\n  APPROVED: \"Approved\",\n  CANCELLED: \"Cancelled\",\n  CANCELLING: \"Cancelling\",\n  CHANGE_CALENDAR_OVERRIDE_APPROVED: \"ChangeCalendarOverrideApproved\",\n  CHANGE_CALENDAR_OVERRIDE_REJECTED: \"ChangeCalendarOverrideRejected\",\n  COMPLETED_WITH_FAILURE: \"CompletedWithFailure\",\n  COMPLETED_WITH_SUCCESS: \"CompletedWithSuccess\",\n  EXITED: \"Exited\",\n  FAILED: \"Failed\",\n  INPROGRESS: \"InProgress\",\n  PENDING: \"Pending\",\n  PENDING_APPROVAL: \"PendingApproval\",\n  PENDING_CHANGE_CALENDAR_OVERRIDE: \"PendingChangeCalendarOverride\",\n  REJECTED: \"Rejected\",\n  RUNBOOK_INPROGRESS: \"RunbookInProgress\",\n  SCHEDULED: \"Scheduled\",\n  SUCCESS: \"Success\",\n  TIMEDOUT: \"TimedOut\",\n  WAITING: \"Waiting\"\n};\nvar AutomationSubtype = {\n  ChangeRequest: \"ChangeRequest\"\n};\nvar AutomationType = {\n  CrossAccount: \"CrossAccount\",\n  Local: \"Local\"\n};\nvar ExecutionMode = {\n  Auto: \"Auto\",\n  Interactive: \"Interactive\"\n};\nvar _InvalidFilterKey = class _InvalidFilterKey extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidFilterKey\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidFilterKey\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidFilterKey.prototype);\n  }\n};\n__name(_InvalidFilterKey, \"InvalidFilterKey\");\nvar InvalidFilterKey = _InvalidFilterKey;\nvar _InvalidFilterValue = class _InvalidFilterValue extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidFilterValue\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidFilterValue\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidFilterValue.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidFilterValue, \"InvalidFilterValue\");\nvar InvalidFilterValue = _InvalidFilterValue;\nvar _AutomationExecutionNotFoundException = class _AutomationExecutionNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AutomationExecutionNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AutomationExecutionNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AutomationExecutionNotFoundException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AutomationExecutionNotFoundException, \"AutomationExecutionNotFoundException\");\nvar AutomationExecutionNotFoundException = _AutomationExecutionNotFoundException;\nvar StepExecutionFilterKey = {\n  ACTION: \"Action\",\n  PARENT_STEP_EXECUTION_ID: \"ParentStepExecutionId\",\n  PARENT_STEP_ITERATION: \"ParentStepIteration\",\n  PARENT_STEP_ITERATOR_VALUE: \"ParentStepIteratorValue\",\n  START_TIME_AFTER: \"StartTimeAfter\",\n  START_TIME_BEFORE: \"StartTimeBefore\",\n  STEP_EXECUTION_ID: \"StepExecutionId\",\n  STEP_EXECUTION_STATUS: \"StepExecutionStatus\",\n  STEP_NAME: \"StepName\"\n};\nvar DocumentPermissionType = {\n  SHARE: \"Share\"\n};\nvar _InvalidPermissionType = class _InvalidPermissionType extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidPermissionType\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidPermissionType\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidPermissionType.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidPermissionType, \"InvalidPermissionType\");\nvar InvalidPermissionType = _InvalidPermissionType;\nvar PatchDeploymentStatus = {\n  Approved: \"APPROVED\",\n  ExplicitApproved: \"EXPLICIT_APPROVED\",\n  ExplicitRejected: \"EXPLICIT_REJECTED\",\n  PendingApproval: \"PENDING_APPROVAL\"\n};\nvar _UnsupportedOperatingSystem = class _UnsupportedOperatingSystem extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedOperatingSystem\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedOperatingSystem\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedOperatingSystem.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_UnsupportedOperatingSystem, \"UnsupportedOperatingSystem\");\nvar UnsupportedOperatingSystem = _UnsupportedOperatingSystem;\nvar InstanceInformationFilterKey = {\n  ACTIVATION_IDS: \"ActivationIds\",\n  AGENT_VERSION: \"AgentVersion\",\n  ASSOCIATION_STATUS: \"AssociationStatus\",\n  IAM_ROLE: \"IamRole\",\n  INSTANCE_IDS: \"InstanceIds\",\n  PING_STATUS: \"PingStatus\",\n  PLATFORM_TYPES: \"PlatformTypes\",\n  RESOURCE_TYPE: \"ResourceType\"\n};\nvar PingStatus = {\n  CONNECTION_LOST: \"ConnectionLost\",\n  INACTIVE: \"Inactive\",\n  ONLINE: \"Online\"\n};\nvar ResourceType = {\n  EC2_INSTANCE: \"EC2Instance\",\n  MANAGED_INSTANCE: \"ManagedInstance\"\n};\nvar SourceType = {\n  AWS_EC2_INSTANCE: \"AWS::EC2::Instance\",\n  AWS_IOT_THING: \"AWS::IoT::Thing\",\n  AWS_SSM_MANAGEDINSTANCE: \"AWS::SSM::ManagedInstance\"\n};\nvar _InvalidInstanceInformationFilterValue = class _InvalidInstanceInformationFilterValue extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidInstanceInformationFilterValue\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidInstanceInformationFilterValue\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidInstanceInformationFilterValue.prototype);\n  }\n};\n__name(_InvalidInstanceInformationFilterValue, \"InvalidInstanceInformationFilterValue\");\nvar InvalidInstanceInformationFilterValue = _InvalidInstanceInformationFilterValue;\nvar PatchComplianceDataState = {\n  Failed: \"FAILED\",\n  Installed: \"INSTALLED\",\n  InstalledOther: \"INSTALLED_OTHER\",\n  InstalledPendingReboot: \"INSTALLED_PENDING_REBOOT\",\n  InstalledRejected: \"INSTALLED_REJECTED\",\n  Missing: \"MISSING\",\n  NotApplicable: \"NOT_APPLICABLE\"\n};\nvar PatchOperationType = {\n  INSTALL: \"Install\",\n  SCAN: \"Scan\"\n};\nvar RebootOption = {\n  NO_REBOOT: \"NoReboot\",\n  REBOOT_IF_NEEDED: \"RebootIfNeeded\"\n};\nvar InstancePatchStateOperatorType = {\n  EQUAL: \"Equal\",\n  GREATER_THAN: \"GreaterThan\",\n  LESS_THAN: \"LessThan\",\n  NOT_EQUAL: \"NotEqual\"\n};\nvar InstancePropertyFilterOperator = {\n  BEGIN_WITH: \"BeginWith\",\n  EQUAL: \"Equal\",\n  GREATER_THAN: \"GreaterThan\",\n  LESS_THAN: \"LessThan\",\n  NOT_EQUAL: \"NotEqual\"\n};\nvar InstancePropertyFilterKey = {\n  ACTIVATION_IDS: \"ActivationIds\",\n  AGENT_VERSION: \"AgentVersion\",\n  ASSOCIATION_STATUS: \"AssociationStatus\",\n  DOCUMENT_NAME: \"DocumentName\",\n  IAM_ROLE: \"IamRole\",\n  INSTANCE_IDS: \"InstanceIds\",\n  PING_STATUS: \"PingStatus\",\n  PLATFORM_TYPES: \"PlatformTypes\",\n  RESOURCE_TYPE: \"ResourceType\"\n};\nvar _InvalidInstancePropertyFilterValue = class _InvalidInstancePropertyFilterValue extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidInstancePropertyFilterValue\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidInstancePropertyFilterValue\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidInstancePropertyFilterValue.prototype);\n  }\n};\n__name(_InvalidInstancePropertyFilterValue, \"InvalidInstancePropertyFilterValue\");\nvar InvalidInstancePropertyFilterValue = _InvalidInstancePropertyFilterValue;\nvar InventoryDeletionStatus = {\n  COMPLETE: \"Complete\",\n  IN_PROGRESS: \"InProgress\"\n};\nvar _InvalidDeletionIdException = class _InvalidDeletionIdException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidDeletionIdException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidDeletionIdException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidDeletionIdException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidDeletionIdException, \"InvalidDeletionIdException\");\nvar InvalidDeletionIdException = _InvalidDeletionIdException;\nvar MaintenanceWindowExecutionStatus = {\n  Cancelled: \"CANCELLED\",\n  Cancelling: \"CANCELLING\",\n  Failed: \"FAILED\",\n  InProgress: \"IN_PROGRESS\",\n  Pending: \"PENDING\",\n  SkippedOverlapping: \"SKIPPED_OVERLAPPING\",\n  Success: \"SUCCESS\",\n  TimedOut: \"TIMED_OUT\"\n};\nvar MaintenanceWindowTaskType = {\n  Automation: \"AUTOMATION\",\n  Lambda: \"LAMBDA\",\n  RunCommand: \"RUN_COMMAND\",\n  StepFunctions: \"STEP_FUNCTIONS\"\n};\nvar MaintenanceWindowResourceType = {\n  Instance: \"INSTANCE\",\n  ResourceGroup: \"RESOURCE_GROUP\"\n};\nvar CreateAssociationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING }\n}), \"CreateAssociationRequestFilterSensitiveLog\");\nvar AssociationDescriptionFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING }\n}), \"AssociationDescriptionFilterSensitiveLog\");\nvar CreateAssociationResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.AssociationDescription && {\n    AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)\n  }\n}), \"CreateAssociationResultFilterSensitiveLog\");\nvar CreateAssociationBatchRequestEntryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING }\n}), \"CreateAssociationBatchRequestEntryFilterSensitiveLog\");\nvar CreateAssociationBatchRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Entries && {\n    Entries: obj.Entries.map((item) => CreateAssociationBatchRequestEntryFilterSensitiveLog(item))\n  }\n}), \"CreateAssociationBatchRequestFilterSensitiveLog\");\nvar FailedCreateAssociationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Entry && { Entry: CreateAssociationBatchRequestEntryFilterSensitiveLog(obj.Entry) }\n}), \"FailedCreateAssociationFilterSensitiveLog\");\nvar CreateAssociationBatchResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Successful && { Successful: obj.Successful.map((item) => AssociationDescriptionFilterSensitiveLog(item)) },\n  ...obj.Failed && { Failed: obj.Failed.map((item) => FailedCreateAssociationFilterSensitiveLog(item)) }\n}), \"CreateAssociationBatchResultFilterSensitiveLog\");\nvar CreateMaintenanceWindowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"CreateMaintenanceWindowRequestFilterSensitiveLog\");\nvar PatchSourceFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Configuration && { Configuration: import_smithy_client.SENSITIVE_STRING }\n}), \"PatchSourceFilterSensitiveLog\");\nvar CreatePatchBaselineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }\n}), \"CreatePatchBaselineRequestFilterSensitiveLog\");\nvar DescribeAssociationResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.AssociationDescription && {\n    AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)\n  }\n}), \"DescribeAssociationResultFilterSensitiveLog\");\nvar InstanceInformationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.IPAddress && { IPAddress: import_smithy_client.SENSITIVE_STRING }\n}), \"InstanceInformationFilterSensitiveLog\");\nvar DescribeInstanceInformationResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.InstanceInformationList && {\n    InstanceInformationList: obj.InstanceInformationList.map((item) => InstanceInformationFilterSensitiveLog(item))\n  }\n}), \"DescribeInstanceInformationResultFilterSensitiveLog\");\nvar InstancePatchStateFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.OwnerInformation && { OwnerInformation: import_smithy_client.SENSITIVE_STRING }\n}), \"InstancePatchStateFilterSensitiveLog\");\nvar DescribeInstancePatchStatesResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.InstancePatchStates && {\n    InstancePatchStates: obj.InstancePatchStates.map((item) => InstancePatchStateFilterSensitiveLog(item))\n  }\n}), \"DescribeInstancePatchStatesResultFilterSensitiveLog\");\nvar DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.InstancePatchStates && {\n    InstancePatchStates: obj.InstancePatchStates.map((item) => InstancePatchStateFilterSensitiveLog(item))\n  }\n}), \"DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog\");\nvar InstancePropertyFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.IPAddress && { IPAddress: import_smithy_client.SENSITIVE_STRING }\n}), \"InstancePropertyFilterSensitiveLog\");\nvar DescribeInstancePropertiesResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.InstanceProperties && {\n    InstanceProperties: obj.InstanceProperties.map((item) => InstancePropertyFilterSensitiveLog(item))\n  }\n}), \"DescribeInstancePropertiesResultFilterSensitiveLog\");\nvar MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING },\n  ...obj.OwnerInformation && { OwnerInformation: import_smithy_client.SENSITIVE_STRING }\n}), \"MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog\");\nvar DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.WindowExecutionTaskInvocationIdentities && {\n    WindowExecutionTaskInvocationIdentities: obj.WindowExecutionTaskInvocationIdentities.map(\n      (item) => MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog(item)\n    )\n  }\n}), \"DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog\");\nvar MaintenanceWindowIdentityFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"MaintenanceWindowIdentityFilterSensitiveLog\");\nvar DescribeMaintenanceWindowsResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.WindowIdentities && {\n    WindowIdentities: obj.WindowIdentities.map((item) => MaintenanceWindowIdentityFilterSensitiveLog(item))\n  }\n}), \"DescribeMaintenanceWindowsResultFilterSensitiveLog\");\n\n// src/models/models_1.ts\n\nvar MaintenanceWindowTaskCutoffBehavior = {\n  CancelTask: \"CANCEL_TASK\",\n  ContinueTask: \"CONTINUE_TASK\"\n};\nvar OpsItemFilterKey = {\n  ACCOUNT_ID: \"AccountId\",\n  ACTUAL_END_TIME: \"ActualEndTime\",\n  ACTUAL_START_TIME: \"ActualStartTime\",\n  AUTOMATION_ID: \"AutomationId\",\n  CATEGORY: \"Category\",\n  CHANGE_REQUEST_APPROVER_ARN: \"ChangeRequestByApproverArn\",\n  CHANGE_REQUEST_APPROVER_NAME: \"ChangeRequestByApproverName\",\n  CHANGE_REQUEST_REQUESTER_ARN: \"ChangeRequestByRequesterArn\",\n  CHANGE_REQUEST_REQUESTER_NAME: \"ChangeRequestByRequesterName\",\n  CHANGE_REQUEST_TARGETS_RESOURCE_GROUP: \"ChangeRequestByTargetsResourceGroup\",\n  CHANGE_REQUEST_TEMPLATE: \"ChangeRequestByTemplate\",\n  CREATED_BY: \"CreatedBy\",\n  CREATED_TIME: \"CreatedTime\",\n  INSIGHT_TYPE: \"InsightByType\",\n  LAST_MODIFIED_TIME: \"LastModifiedTime\",\n  OPERATIONAL_DATA: \"OperationalData\",\n  OPERATIONAL_DATA_KEY: \"OperationalDataKey\",\n  OPERATIONAL_DATA_VALUE: \"OperationalDataValue\",\n  OPSITEM_ID: \"OpsItemId\",\n  OPSITEM_TYPE: \"OpsItemType\",\n  PLANNED_END_TIME: \"PlannedEndTime\",\n  PLANNED_START_TIME: \"PlannedStartTime\",\n  PRIORITY: \"Priority\",\n  RESOURCE_ID: \"ResourceId\",\n  SEVERITY: \"Severity\",\n  SOURCE: \"Source\",\n  STATUS: \"Status\",\n  TITLE: \"Title\"\n};\nvar OpsItemFilterOperator = {\n  CONTAINS: \"Contains\",\n  EQUAL: \"Equal\",\n  GREATER_THAN: \"GreaterThan\",\n  LESS_THAN: \"LessThan\"\n};\nvar OpsItemStatus = {\n  APPROVED: \"Approved\",\n  CANCELLED: \"Cancelled\",\n  CANCELLING: \"Cancelling\",\n  CHANGE_CALENDAR_OVERRIDE_APPROVED: \"ChangeCalendarOverrideApproved\",\n  CHANGE_CALENDAR_OVERRIDE_REJECTED: \"ChangeCalendarOverrideRejected\",\n  CLOSED: \"Closed\",\n  COMPLETED_WITH_FAILURE: \"CompletedWithFailure\",\n  COMPLETED_WITH_SUCCESS: \"CompletedWithSuccess\",\n  FAILED: \"Failed\",\n  IN_PROGRESS: \"InProgress\",\n  OPEN: \"Open\",\n  PENDING: \"Pending\",\n  PENDING_APPROVAL: \"PendingApproval\",\n  PENDING_CHANGE_CALENDAR_OVERRIDE: \"PendingChangeCalendarOverride\",\n  REJECTED: \"Rejected\",\n  RESOLVED: \"Resolved\",\n  RUNBOOK_IN_PROGRESS: \"RunbookInProgress\",\n  SCHEDULED: \"Scheduled\",\n  TIMED_OUT: \"TimedOut\"\n};\nvar ParametersFilterKey = {\n  KEY_ID: \"KeyId\",\n  NAME: \"Name\",\n  TYPE: \"Type\"\n};\nvar ParameterTier = {\n  ADVANCED: \"Advanced\",\n  INTELLIGENT_TIERING: \"Intelligent-Tiering\",\n  STANDARD: \"Standard\"\n};\nvar ParameterType = {\n  SECURE_STRING: \"SecureString\",\n  STRING: \"String\",\n  STRING_LIST: \"StringList\"\n};\nvar _InvalidFilterOption = class _InvalidFilterOption extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidFilterOption\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidFilterOption\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidFilterOption.prototype);\n  }\n};\n__name(_InvalidFilterOption, \"InvalidFilterOption\");\nvar InvalidFilterOption = _InvalidFilterOption;\nvar PatchSet = {\n  Application: \"APPLICATION\",\n  Os: \"OS\"\n};\nvar PatchProperty = {\n  PatchClassification: \"CLASSIFICATION\",\n  PatchMsrcSeverity: \"MSRC_SEVERITY\",\n  PatchPriority: \"PRIORITY\",\n  PatchProductFamily: \"PRODUCT_FAMILY\",\n  PatchSeverity: \"SEVERITY\",\n  Product: \"PRODUCT\"\n};\nvar SessionFilterKey = {\n  INVOKED_AFTER: \"InvokedAfter\",\n  INVOKED_BEFORE: \"InvokedBefore\",\n  OWNER: \"Owner\",\n  SESSION_ID: \"SessionId\",\n  STATUS: \"Status\",\n  TARGET_ID: \"Target\"\n};\nvar SessionState = {\n  ACTIVE: \"Active\",\n  HISTORY: \"History\"\n};\nvar SessionStatus = {\n  CONNECTED: \"Connected\",\n  CONNECTING: \"Connecting\",\n  DISCONNECTED: \"Disconnected\",\n  FAILED: \"Failed\",\n  TERMINATED: \"Terminated\",\n  TERMINATING: \"Terminating\"\n};\nvar _OpsItemRelatedItemAssociationNotFoundException = class _OpsItemRelatedItemAssociationNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsItemRelatedItemAssociationNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsItemRelatedItemAssociationNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsItemRelatedItemAssociationNotFoundException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_OpsItemRelatedItemAssociationNotFoundException, \"OpsItemRelatedItemAssociationNotFoundException\");\nvar OpsItemRelatedItemAssociationNotFoundException = _OpsItemRelatedItemAssociationNotFoundException;\nvar CalendarState = {\n  CLOSED: \"CLOSED\",\n  OPEN: \"OPEN\"\n};\nvar _InvalidDocumentType = class _InvalidDocumentType extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidDocumentType\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidDocumentType\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidDocumentType.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidDocumentType, \"InvalidDocumentType\");\nvar InvalidDocumentType = _InvalidDocumentType;\nvar _UnsupportedCalendarException = class _UnsupportedCalendarException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedCalendarException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedCalendarException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedCalendarException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_UnsupportedCalendarException, \"UnsupportedCalendarException\");\nvar UnsupportedCalendarException = _UnsupportedCalendarException;\nvar CommandInvocationStatus = {\n  CANCELLED: \"Cancelled\",\n  CANCELLING: \"Cancelling\",\n  DELAYED: \"Delayed\",\n  FAILED: \"Failed\",\n  IN_PROGRESS: \"InProgress\",\n  PENDING: \"Pending\",\n  SUCCESS: \"Success\",\n  TIMED_OUT: \"TimedOut\"\n};\nvar _InvalidPluginName = class _InvalidPluginName extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidPluginName\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidPluginName\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidPluginName.prototype);\n  }\n};\n__name(_InvalidPluginName, \"InvalidPluginName\");\nvar InvalidPluginName = _InvalidPluginName;\nvar _InvocationDoesNotExist = class _InvocationDoesNotExist extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvocationDoesNotExist\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvocationDoesNotExist\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvocationDoesNotExist.prototype);\n  }\n};\n__name(_InvocationDoesNotExist, \"InvocationDoesNotExist\");\nvar InvocationDoesNotExist = _InvocationDoesNotExist;\nvar ConnectionStatus = {\n  CONNECTED: \"connected\",\n  NOT_CONNECTED: \"notconnected\"\n};\nvar _UnsupportedFeatureRequiredException = class _UnsupportedFeatureRequiredException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedFeatureRequiredException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedFeatureRequiredException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedFeatureRequiredException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_UnsupportedFeatureRequiredException, \"UnsupportedFeatureRequiredException\");\nvar UnsupportedFeatureRequiredException = _UnsupportedFeatureRequiredException;\nvar AttachmentHashType = {\n  SHA256: \"Sha256\"\n};\nvar InventoryQueryOperatorType = {\n  BEGIN_WITH: \"BeginWith\",\n  EQUAL: \"Equal\",\n  EXISTS: \"Exists\",\n  GREATER_THAN: \"GreaterThan\",\n  LESS_THAN: \"LessThan\",\n  NOT_EQUAL: \"NotEqual\"\n};\nvar _InvalidAggregatorException = class _InvalidAggregatorException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidAggregatorException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAggregatorException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidAggregatorException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidAggregatorException, \"InvalidAggregatorException\");\nvar InvalidAggregatorException = _InvalidAggregatorException;\nvar _InvalidInventoryGroupException = class _InvalidInventoryGroupException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidInventoryGroupException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidInventoryGroupException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidInventoryGroupException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidInventoryGroupException, \"InvalidInventoryGroupException\");\nvar InvalidInventoryGroupException = _InvalidInventoryGroupException;\nvar _InvalidResultAttributeException = class _InvalidResultAttributeException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidResultAttributeException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidResultAttributeException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidResultAttributeException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidResultAttributeException, \"InvalidResultAttributeException\");\nvar InvalidResultAttributeException = _InvalidResultAttributeException;\nvar InventoryAttributeDataType = {\n  NUMBER: \"number\",\n  STRING: \"string\"\n};\nvar NotificationEvent = {\n  ALL: \"All\",\n  CANCELLED: \"Cancelled\",\n  FAILED: \"Failed\",\n  IN_PROGRESS: \"InProgress\",\n  SUCCESS: \"Success\",\n  TIMED_OUT: \"TimedOut\"\n};\nvar NotificationType = {\n  Command: \"Command\",\n  Invocation: \"Invocation\"\n};\nvar OpsFilterOperatorType = {\n  BEGIN_WITH: \"BeginWith\",\n  EQUAL: \"Equal\",\n  EXISTS: \"Exists\",\n  GREATER_THAN: \"GreaterThan\",\n  LESS_THAN: \"LessThan\",\n  NOT_EQUAL: \"NotEqual\"\n};\nvar _InvalidKeyId = class _InvalidKeyId extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidKeyId\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidKeyId\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidKeyId.prototype);\n  }\n};\n__name(_InvalidKeyId, \"InvalidKeyId\");\nvar InvalidKeyId = _InvalidKeyId;\nvar _ParameterVersionNotFound = class _ParameterVersionNotFound extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ParameterVersionNotFound\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ParameterVersionNotFound\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ParameterVersionNotFound.prototype);\n  }\n};\n__name(_ParameterVersionNotFound, \"ParameterVersionNotFound\");\nvar ParameterVersionNotFound = _ParameterVersionNotFound;\nvar _ServiceSettingNotFound = class _ServiceSettingNotFound extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ServiceSettingNotFound\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ServiceSettingNotFound\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ServiceSettingNotFound.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ServiceSettingNotFound, \"ServiceSettingNotFound\");\nvar ServiceSettingNotFound = _ServiceSettingNotFound;\nvar _ParameterVersionLabelLimitExceeded = class _ParameterVersionLabelLimitExceeded extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ParameterVersionLabelLimitExceeded\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ParameterVersionLabelLimitExceeded\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ParameterVersionLabelLimitExceeded.prototype);\n  }\n};\n__name(_ParameterVersionLabelLimitExceeded, \"ParameterVersionLabelLimitExceeded\");\nvar ParameterVersionLabelLimitExceeded = _ParameterVersionLabelLimitExceeded;\nvar AssociationFilterKey = {\n  AssociationId: \"AssociationId\",\n  AssociationName: \"AssociationName\",\n  InstanceId: \"InstanceId\",\n  LastExecutedAfter: \"LastExecutedAfter\",\n  LastExecutedBefore: \"LastExecutedBefore\",\n  Name: \"Name\",\n  ResourceGroupName: \"ResourceGroupName\",\n  Status: \"AssociationStatusName\"\n};\nvar CommandFilterKey = {\n  DOCUMENT_NAME: \"DocumentName\",\n  EXECUTION_STAGE: \"ExecutionStage\",\n  INVOKED_AFTER: \"InvokedAfter\",\n  INVOKED_BEFORE: \"InvokedBefore\",\n  STATUS: \"Status\"\n};\nvar CommandPluginStatus = {\n  CANCELLED: \"Cancelled\",\n  FAILED: \"Failed\",\n  IN_PROGRESS: \"InProgress\",\n  PENDING: \"Pending\",\n  SUCCESS: \"Success\",\n  TIMED_OUT: \"TimedOut\"\n};\nvar CommandStatus = {\n  CANCELLED: \"Cancelled\",\n  CANCELLING: \"Cancelling\",\n  FAILED: \"Failed\",\n  IN_PROGRESS: \"InProgress\",\n  PENDING: \"Pending\",\n  SUCCESS: \"Success\",\n  TIMED_OUT: \"TimedOut\"\n};\nvar ComplianceQueryOperatorType = {\n  BeginWith: \"BEGIN_WITH\",\n  Equal: \"EQUAL\",\n  GreaterThan: \"GREATER_THAN\",\n  LessThan: \"LESS_THAN\",\n  NotEqual: \"NOT_EQUAL\"\n};\nvar ComplianceSeverity = {\n  Critical: \"CRITICAL\",\n  High: \"HIGH\",\n  Informational: \"INFORMATIONAL\",\n  Low: \"LOW\",\n  Medium: \"MEDIUM\",\n  Unspecified: \"UNSPECIFIED\"\n};\nvar ComplianceStatus = {\n  Compliant: \"COMPLIANT\",\n  NonCompliant: \"NON_COMPLIANT\"\n};\nvar DocumentMetadataEnum = {\n  DocumentReviews: \"DocumentReviews\"\n};\nvar DocumentReviewCommentType = {\n  Comment: \"Comment\"\n};\nvar DocumentFilterKey = {\n  DocumentType: \"DocumentType\",\n  Name: \"Name\",\n  Owner: \"Owner\",\n  PlatformTypes: \"PlatformTypes\"\n};\nvar OpsItemEventFilterKey = {\n  OPSITEM_ID: \"OpsItemId\"\n};\nvar OpsItemEventFilterOperator = {\n  EQUAL: \"Equal\"\n};\nvar OpsItemRelatedItemsFilterKey = {\n  ASSOCIATION_ID: \"AssociationId\",\n  RESOURCE_TYPE: \"ResourceType\",\n  RESOURCE_URI: \"ResourceUri\"\n};\nvar OpsItemRelatedItemsFilterOperator = {\n  EQUAL: \"Equal\"\n};\nvar LastResourceDataSyncStatus = {\n  FAILED: \"Failed\",\n  INPROGRESS: \"InProgress\",\n  SUCCESSFUL: \"Successful\"\n};\nvar _DocumentPermissionLimit = class _DocumentPermissionLimit extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DocumentPermissionLimit\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DocumentPermissionLimit\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DocumentPermissionLimit.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_DocumentPermissionLimit, \"DocumentPermissionLimit\");\nvar DocumentPermissionLimit = _DocumentPermissionLimit;\nvar _ComplianceTypeCountLimitExceededException = class _ComplianceTypeCountLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ComplianceTypeCountLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ComplianceTypeCountLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ComplianceTypeCountLimitExceededException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ComplianceTypeCountLimitExceededException, \"ComplianceTypeCountLimitExceededException\");\nvar ComplianceTypeCountLimitExceededException = _ComplianceTypeCountLimitExceededException;\nvar _InvalidItemContentException = class _InvalidItemContentException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidItemContentException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidItemContentException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidItemContentException.prototype);\n    this.TypeName = opts.TypeName;\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidItemContentException, \"InvalidItemContentException\");\nvar InvalidItemContentException = _InvalidItemContentException;\nvar _ItemSizeLimitExceededException = class _ItemSizeLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ItemSizeLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ItemSizeLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ItemSizeLimitExceededException.prototype);\n    this.TypeName = opts.TypeName;\n    this.Message = opts.Message;\n  }\n};\n__name(_ItemSizeLimitExceededException, \"ItemSizeLimitExceededException\");\nvar ItemSizeLimitExceededException = _ItemSizeLimitExceededException;\nvar ComplianceUploadType = {\n  Complete: \"COMPLETE\",\n  Partial: \"PARTIAL\"\n};\nvar _TotalSizeLimitExceededException = class _TotalSizeLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TotalSizeLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TotalSizeLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TotalSizeLimitExceededException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_TotalSizeLimitExceededException, \"TotalSizeLimitExceededException\");\nvar TotalSizeLimitExceededException = _TotalSizeLimitExceededException;\nvar _CustomSchemaCountLimitExceededException = class _CustomSchemaCountLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"CustomSchemaCountLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"CustomSchemaCountLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _CustomSchemaCountLimitExceededException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_CustomSchemaCountLimitExceededException, \"CustomSchemaCountLimitExceededException\");\nvar CustomSchemaCountLimitExceededException = _CustomSchemaCountLimitExceededException;\nvar _InvalidInventoryItemContextException = class _InvalidInventoryItemContextException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidInventoryItemContextException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidInventoryItemContextException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidInventoryItemContextException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidInventoryItemContextException, \"InvalidInventoryItemContextException\");\nvar InvalidInventoryItemContextException = _InvalidInventoryItemContextException;\nvar _ItemContentMismatchException = class _ItemContentMismatchException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ItemContentMismatchException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ItemContentMismatchException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ItemContentMismatchException.prototype);\n    this.TypeName = opts.TypeName;\n    this.Message = opts.Message;\n  }\n};\n__name(_ItemContentMismatchException, \"ItemContentMismatchException\");\nvar ItemContentMismatchException = _ItemContentMismatchException;\nvar _SubTypeCountLimitExceededException = class _SubTypeCountLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"SubTypeCountLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"SubTypeCountLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _SubTypeCountLimitExceededException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_SubTypeCountLimitExceededException, \"SubTypeCountLimitExceededException\");\nvar SubTypeCountLimitExceededException = _SubTypeCountLimitExceededException;\nvar _UnsupportedInventoryItemContextException = class _UnsupportedInventoryItemContextException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedInventoryItemContextException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedInventoryItemContextException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedInventoryItemContextException.prototype);\n    this.TypeName = opts.TypeName;\n    this.Message = opts.Message;\n  }\n};\n__name(_UnsupportedInventoryItemContextException, \"UnsupportedInventoryItemContextException\");\nvar UnsupportedInventoryItemContextException = _UnsupportedInventoryItemContextException;\nvar _UnsupportedInventorySchemaVersionException = class _UnsupportedInventorySchemaVersionException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedInventorySchemaVersionException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedInventorySchemaVersionException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedInventorySchemaVersionException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_UnsupportedInventorySchemaVersionException, \"UnsupportedInventorySchemaVersionException\");\nvar UnsupportedInventorySchemaVersionException = _UnsupportedInventorySchemaVersionException;\nvar _HierarchyLevelLimitExceededException = class _HierarchyLevelLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"HierarchyLevelLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"HierarchyLevelLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _HierarchyLevelLimitExceededException.prototype);\n  }\n};\n__name(_HierarchyLevelLimitExceededException, \"HierarchyLevelLimitExceededException\");\nvar HierarchyLevelLimitExceededException = _HierarchyLevelLimitExceededException;\nvar _HierarchyTypeMismatchException = class _HierarchyTypeMismatchException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"HierarchyTypeMismatchException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"HierarchyTypeMismatchException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _HierarchyTypeMismatchException.prototype);\n  }\n};\n__name(_HierarchyTypeMismatchException, \"HierarchyTypeMismatchException\");\nvar HierarchyTypeMismatchException = _HierarchyTypeMismatchException;\nvar _IncompatiblePolicyException = class _IncompatiblePolicyException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"IncompatiblePolicyException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"IncompatiblePolicyException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _IncompatiblePolicyException.prototype);\n  }\n};\n__name(_IncompatiblePolicyException, \"IncompatiblePolicyException\");\nvar IncompatiblePolicyException = _IncompatiblePolicyException;\nvar _InvalidAllowedPatternException = class _InvalidAllowedPatternException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidAllowedPatternException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAllowedPatternException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidAllowedPatternException.prototype);\n  }\n};\n__name(_InvalidAllowedPatternException, \"InvalidAllowedPatternException\");\nvar InvalidAllowedPatternException = _InvalidAllowedPatternException;\nvar _InvalidPolicyAttributeException = class _InvalidPolicyAttributeException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidPolicyAttributeException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidPolicyAttributeException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidPolicyAttributeException.prototype);\n  }\n};\n__name(_InvalidPolicyAttributeException, \"InvalidPolicyAttributeException\");\nvar InvalidPolicyAttributeException = _InvalidPolicyAttributeException;\nvar _InvalidPolicyTypeException = class _InvalidPolicyTypeException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidPolicyTypeException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidPolicyTypeException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidPolicyTypeException.prototype);\n  }\n};\n__name(_InvalidPolicyTypeException, \"InvalidPolicyTypeException\");\nvar InvalidPolicyTypeException = _InvalidPolicyTypeException;\nvar _ParameterAlreadyExists = class _ParameterAlreadyExists extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ParameterAlreadyExists\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ParameterAlreadyExists\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ParameterAlreadyExists.prototype);\n  }\n};\n__name(_ParameterAlreadyExists, \"ParameterAlreadyExists\");\nvar ParameterAlreadyExists = _ParameterAlreadyExists;\nvar _ParameterLimitExceeded = class _ParameterLimitExceeded extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ParameterLimitExceeded\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ParameterLimitExceeded\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ParameterLimitExceeded.prototype);\n  }\n};\n__name(_ParameterLimitExceeded, \"ParameterLimitExceeded\");\nvar ParameterLimitExceeded = _ParameterLimitExceeded;\nvar _ParameterMaxVersionLimitExceeded = class _ParameterMaxVersionLimitExceeded extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ParameterMaxVersionLimitExceeded\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ParameterMaxVersionLimitExceeded\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ParameterMaxVersionLimitExceeded.prototype);\n  }\n};\n__name(_ParameterMaxVersionLimitExceeded, \"ParameterMaxVersionLimitExceeded\");\nvar ParameterMaxVersionLimitExceeded = _ParameterMaxVersionLimitExceeded;\nvar _ParameterPatternMismatchException = class _ParameterPatternMismatchException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ParameterPatternMismatchException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ParameterPatternMismatchException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ParameterPatternMismatchException.prototype);\n  }\n};\n__name(_ParameterPatternMismatchException, \"ParameterPatternMismatchException\");\nvar ParameterPatternMismatchException = _ParameterPatternMismatchException;\nvar _PoliciesLimitExceededException = class _PoliciesLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"PoliciesLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"PoliciesLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _PoliciesLimitExceededException.prototype);\n  }\n};\n__name(_PoliciesLimitExceededException, \"PoliciesLimitExceededException\");\nvar PoliciesLimitExceededException = _PoliciesLimitExceededException;\nvar _UnsupportedParameterType = class _UnsupportedParameterType extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedParameterType\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedParameterType\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedParameterType.prototype);\n  }\n};\n__name(_UnsupportedParameterType, \"UnsupportedParameterType\");\nvar UnsupportedParameterType = _UnsupportedParameterType;\nvar _ResourcePolicyLimitExceededException = class _ResourcePolicyLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourcePolicyLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourcePolicyLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourcePolicyLimitExceededException.prototype);\n    this.Limit = opts.Limit;\n    this.LimitType = opts.LimitType;\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourcePolicyLimitExceededException, \"ResourcePolicyLimitExceededException\");\nvar ResourcePolicyLimitExceededException = _ResourcePolicyLimitExceededException;\nvar _FeatureNotAvailableException = class _FeatureNotAvailableException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"FeatureNotAvailableException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"FeatureNotAvailableException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _FeatureNotAvailableException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_FeatureNotAvailableException, \"FeatureNotAvailableException\");\nvar FeatureNotAvailableException = _FeatureNotAvailableException;\nvar _AutomationStepNotFoundException = class _AutomationStepNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AutomationStepNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AutomationStepNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AutomationStepNotFoundException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AutomationStepNotFoundException, \"AutomationStepNotFoundException\");\nvar AutomationStepNotFoundException = _AutomationStepNotFoundException;\nvar _InvalidAutomationSignalException = class _InvalidAutomationSignalException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidAutomationSignalException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAutomationSignalException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidAutomationSignalException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidAutomationSignalException, \"InvalidAutomationSignalException\");\nvar InvalidAutomationSignalException = _InvalidAutomationSignalException;\nvar SignalType = {\n  APPROVE: \"Approve\",\n  REJECT: \"Reject\",\n  RESUME: \"Resume\",\n  START_STEP: \"StartStep\",\n  STOP_STEP: \"StopStep\"\n};\nvar _InvalidNotificationConfig = class _InvalidNotificationConfig extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidNotificationConfig\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidNotificationConfig\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidNotificationConfig.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidNotificationConfig, \"InvalidNotificationConfig\");\nvar InvalidNotificationConfig = _InvalidNotificationConfig;\nvar _InvalidOutputFolder = class _InvalidOutputFolder extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidOutputFolder\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidOutputFolder\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidOutputFolder.prototype);\n  }\n};\n__name(_InvalidOutputFolder, \"InvalidOutputFolder\");\nvar InvalidOutputFolder = _InvalidOutputFolder;\nvar _InvalidRole = class _InvalidRole extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidRole\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidRole\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidRole.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidRole, \"InvalidRole\");\nvar InvalidRole = _InvalidRole;\nvar _InvalidAssociation = class _InvalidAssociation extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidAssociation\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAssociation\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidAssociation.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidAssociation, \"InvalidAssociation\");\nvar InvalidAssociation = _InvalidAssociation;\nvar _AutomationDefinitionNotFoundException = class _AutomationDefinitionNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AutomationDefinitionNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AutomationDefinitionNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AutomationDefinitionNotFoundException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AutomationDefinitionNotFoundException, \"AutomationDefinitionNotFoundException\");\nvar AutomationDefinitionNotFoundException = _AutomationDefinitionNotFoundException;\nvar _AutomationDefinitionVersionNotFoundException = class _AutomationDefinitionVersionNotFoundException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AutomationDefinitionVersionNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AutomationDefinitionVersionNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AutomationDefinitionVersionNotFoundException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AutomationDefinitionVersionNotFoundException, \"AutomationDefinitionVersionNotFoundException\");\nvar AutomationDefinitionVersionNotFoundException = _AutomationDefinitionVersionNotFoundException;\nvar _AutomationExecutionLimitExceededException = class _AutomationExecutionLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AutomationExecutionLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AutomationExecutionLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AutomationExecutionLimitExceededException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AutomationExecutionLimitExceededException, \"AutomationExecutionLimitExceededException\");\nvar AutomationExecutionLimitExceededException = _AutomationExecutionLimitExceededException;\nvar _InvalidAutomationExecutionParametersException = class _InvalidAutomationExecutionParametersException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidAutomationExecutionParametersException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAutomationExecutionParametersException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidAutomationExecutionParametersException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidAutomationExecutionParametersException, \"InvalidAutomationExecutionParametersException\");\nvar InvalidAutomationExecutionParametersException = _InvalidAutomationExecutionParametersException;\nvar MaintenanceWindowTargetFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.OwnerInformation && { OwnerInformation: import_smithy_client.SENSITIVE_STRING },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"MaintenanceWindowTargetFilterSensitiveLog\");\nvar DescribeMaintenanceWindowTargetsResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Targets && { Targets: obj.Targets.map((item) => MaintenanceWindowTargetFilterSensitiveLog(item)) }\n}), \"DescribeMaintenanceWindowTargetsResultFilterSensitiveLog\");\nvar MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Values && { Values: import_smithy_client.SENSITIVE_STRING }\n}), \"MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog\");\nvar MaintenanceWindowTaskFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.TaskParameters && { TaskParameters: import_smithy_client.SENSITIVE_STRING },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"MaintenanceWindowTaskFilterSensitiveLog\");\nvar DescribeMaintenanceWindowTasksResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Tasks && { Tasks: obj.Tasks.map((item) => MaintenanceWindowTaskFilterSensitiveLog(item)) }\n}), \"DescribeMaintenanceWindowTasksResultFilterSensitiveLog\");\nvar BaselineOverrideFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }\n}), \"BaselineOverrideFilterSensitiveLog\");\nvar GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj\n}), \"GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog\");\nvar GetMaintenanceWindowResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"GetMaintenanceWindowResultFilterSensitiveLog\");\nvar GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.TaskParameters && { TaskParameters: import_smithy_client.SENSITIVE_STRING }\n}), \"GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog\");\nvar GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING },\n  ...obj.OwnerInformation && { OwnerInformation: import_smithy_client.SENSITIVE_STRING }\n}), \"GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog\");\nvar MaintenanceWindowLambdaParametersFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Payload && { Payload: import_smithy_client.SENSITIVE_STRING }\n}), \"MaintenanceWindowLambdaParametersFilterSensitiveLog\");\nvar MaintenanceWindowRunCommandParametersFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING }\n}), \"MaintenanceWindowRunCommandParametersFilterSensitiveLog\");\nvar MaintenanceWindowStepFunctionsParametersFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Input && { Input: import_smithy_client.SENSITIVE_STRING }\n}), \"MaintenanceWindowStepFunctionsParametersFilterSensitiveLog\");\nvar MaintenanceWindowTaskInvocationParametersFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.RunCommand && { RunCommand: MaintenanceWindowRunCommandParametersFilterSensitiveLog(obj.RunCommand) },\n  ...obj.StepFunctions && {\n    StepFunctions: MaintenanceWindowStepFunctionsParametersFilterSensitiveLog(obj.StepFunctions)\n  },\n  ...obj.Lambda && { Lambda: MaintenanceWindowLambdaParametersFilterSensitiveLog(obj.Lambda) }\n}), \"MaintenanceWindowTaskInvocationParametersFilterSensitiveLog\");\nvar GetMaintenanceWindowTaskResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.TaskParameters && { TaskParameters: import_smithy_client.SENSITIVE_STRING },\n  ...obj.TaskInvocationParameters && {\n    TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)\n  },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"GetMaintenanceWindowTaskResultFilterSensitiveLog\");\nvar ParameterFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Value && { Value: import_smithy_client.SENSITIVE_STRING }\n}), \"ParameterFilterSensitiveLog\");\nvar GetParameterResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameter && { Parameter: ParameterFilterSensitiveLog(obj.Parameter) }\n}), \"GetParameterResultFilterSensitiveLog\");\nvar ParameterHistoryFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Value && { Value: import_smithy_client.SENSITIVE_STRING }\n}), \"ParameterHistoryFilterSensitiveLog\");\nvar GetParameterHistoryResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterHistoryFilterSensitiveLog(item)) }\n}), \"GetParameterHistoryResultFilterSensitiveLog\");\nvar GetParametersResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterFilterSensitiveLog(item)) }\n}), \"GetParametersResultFilterSensitiveLog\");\nvar GetParametersByPathResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: obj.Parameters.map((item) => ParameterFilterSensitiveLog(item)) }\n}), \"GetParametersByPathResultFilterSensitiveLog\");\nvar GetPatchBaselineResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }\n}), \"GetPatchBaselineResultFilterSensitiveLog\");\nvar AssociationVersionInfoFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING }\n}), \"AssociationVersionInfoFilterSensitiveLog\");\nvar ListAssociationVersionsResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.AssociationVersions && {\n    AssociationVersions: obj.AssociationVersions.map((item) => AssociationVersionInfoFilterSensitiveLog(item))\n  }\n}), \"ListAssociationVersionsResultFilterSensitiveLog\");\nvar CommandFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING }\n}), \"CommandFilterSensitiveLog\");\nvar ListCommandsResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Commands && { Commands: obj.Commands.map((item) => CommandFilterSensitiveLog(item)) }\n}), \"ListCommandsResultFilterSensitiveLog\");\nvar PutParameterRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Value && { Value: import_smithy_client.SENSITIVE_STRING }\n}), \"PutParameterRequestFilterSensitiveLog\");\nvar RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.OwnerInformation && { OwnerInformation: import_smithy_client.SENSITIVE_STRING },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog\");\nvar RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.TaskParameters && { TaskParameters: import_smithy_client.SENSITIVE_STRING },\n  ...obj.TaskInvocationParameters && {\n    TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)\n  },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog\");\nvar SendCommandRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING }\n}), \"SendCommandRequestFilterSensitiveLog\");\nvar SendCommandResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Command && { Command: CommandFilterSensitiveLog(obj.Command) }\n}), \"SendCommandResultFilterSensitiveLog\");\n\n// src/models/models_2.ts\n\nvar _AutomationDefinitionNotApprovedException = class _AutomationDefinitionNotApprovedException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AutomationDefinitionNotApprovedException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AutomationDefinitionNotApprovedException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AutomationDefinitionNotApprovedException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AutomationDefinitionNotApprovedException, \"AutomationDefinitionNotApprovedException\");\nvar AutomationDefinitionNotApprovedException = _AutomationDefinitionNotApprovedException;\nvar _TargetNotConnected = class _TargetNotConnected extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TargetNotConnected\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TargetNotConnected\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TargetNotConnected.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_TargetNotConnected, \"TargetNotConnected\");\nvar TargetNotConnected = _TargetNotConnected;\nvar _InvalidAutomationStatusUpdateException = class _InvalidAutomationStatusUpdateException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidAutomationStatusUpdateException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidAutomationStatusUpdateException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidAutomationStatusUpdateException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidAutomationStatusUpdateException, \"InvalidAutomationStatusUpdateException\");\nvar InvalidAutomationStatusUpdateException = _InvalidAutomationStatusUpdateException;\nvar StopType = {\n  CANCEL: \"Cancel\",\n  COMPLETE: \"Complete\"\n};\nvar _AssociationVersionLimitExceeded = class _AssociationVersionLimitExceeded extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AssociationVersionLimitExceeded\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AssociationVersionLimitExceeded\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AssociationVersionLimitExceeded.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_AssociationVersionLimitExceeded, \"AssociationVersionLimitExceeded\");\nvar AssociationVersionLimitExceeded = _AssociationVersionLimitExceeded;\nvar _InvalidUpdate = class _InvalidUpdate extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidUpdate\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidUpdate\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidUpdate.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_InvalidUpdate, \"InvalidUpdate\");\nvar InvalidUpdate = _InvalidUpdate;\nvar _StatusUnchanged = class _StatusUnchanged extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"StatusUnchanged\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"StatusUnchanged\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _StatusUnchanged.prototype);\n  }\n};\n__name(_StatusUnchanged, \"StatusUnchanged\");\nvar StatusUnchanged = _StatusUnchanged;\nvar _DocumentVersionLimitExceeded = class _DocumentVersionLimitExceeded extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DocumentVersionLimitExceeded\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DocumentVersionLimitExceeded\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DocumentVersionLimitExceeded.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_DocumentVersionLimitExceeded, \"DocumentVersionLimitExceeded\");\nvar DocumentVersionLimitExceeded = _DocumentVersionLimitExceeded;\nvar _DuplicateDocumentContent = class _DuplicateDocumentContent extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DuplicateDocumentContent\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DuplicateDocumentContent\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DuplicateDocumentContent.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_DuplicateDocumentContent, \"DuplicateDocumentContent\");\nvar DuplicateDocumentContent = _DuplicateDocumentContent;\nvar _DuplicateDocumentVersionName = class _DuplicateDocumentVersionName extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DuplicateDocumentVersionName\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DuplicateDocumentVersionName\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DuplicateDocumentVersionName.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_DuplicateDocumentVersionName, \"DuplicateDocumentVersionName\");\nvar DuplicateDocumentVersionName = _DuplicateDocumentVersionName;\nvar DocumentReviewAction = {\n  Approve: \"Approve\",\n  Reject: \"Reject\",\n  SendForReview: \"SendForReview\",\n  UpdateReview: \"UpdateReview\"\n};\nvar _OpsMetadataKeyLimitExceededException = class _OpsMetadataKeyLimitExceededException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OpsMetadataKeyLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OpsMetadataKeyLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OpsMetadataKeyLimitExceededException.prototype);\n  }\n};\n__name(_OpsMetadataKeyLimitExceededException, \"OpsMetadataKeyLimitExceededException\");\nvar OpsMetadataKeyLimitExceededException = _OpsMetadataKeyLimitExceededException;\nvar _ResourceDataSyncConflictException = class _ResourceDataSyncConflictException extends SSMServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceDataSyncConflictException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceDataSyncConflictException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceDataSyncConflictException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ResourceDataSyncConflictException, \"ResourceDataSyncConflictException\");\nvar ResourceDataSyncConflictException = _ResourceDataSyncConflictException;\nvar UpdateAssociationRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Parameters && { Parameters: import_smithy_client.SENSITIVE_STRING }\n}), \"UpdateAssociationRequestFilterSensitiveLog\");\nvar UpdateAssociationResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.AssociationDescription && {\n    AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)\n  }\n}), \"UpdateAssociationResultFilterSensitiveLog\");\nvar UpdateAssociationStatusResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.AssociationDescription && {\n    AssociationDescription: AssociationDescriptionFilterSensitiveLog(obj.AssociationDescription)\n  }\n}), \"UpdateAssociationStatusResultFilterSensitiveLog\");\nvar UpdateMaintenanceWindowRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"UpdateMaintenanceWindowRequestFilterSensitiveLog\");\nvar UpdateMaintenanceWindowResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"UpdateMaintenanceWindowResultFilterSensitiveLog\");\nvar UpdateMaintenanceWindowTargetRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.OwnerInformation && { OwnerInformation: import_smithy_client.SENSITIVE_STRING },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"UpdateMaintenanceWindowTargetRequestFilterSensitiveLog\");\nvar UpdateMaintenanceWindowTargetResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.OwnerInformation && { OwnerInformation: import_smithy_client.SENSITIVE_STRING },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"UpdateMaintenanceWindowTargetResultFilterSensitiveLog\");\nvar UpdateMaintenanceWindowTaskRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.TaskParameters && { TaskParameters: import_smithy_client.SENSITIVE_STRING },\n  ...obj.TaskInvocationParameters && {\n    TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)\n  },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"UpdateMaintenanceWindowTaskRequestFilterSensitiveLog\");\nvar UpdateMaintenanceWindowTaskResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.TaskParameters && { TaskParameters: import_smithy_client.SENSITIVE_STRING },\n  ...obj.TaskInvocationParameters && {\n    TaskInvocationParameters: MaintenanceWindowTaskInvocationParametersFilterSensitiveLog(obj.TaskInvocationParameters)\n  },\n  ...obj.Description && { Description: import_smithy_client.SENSITIVE_STRING }\n}), \"UpdateMaintenanceWindowTaskResultFilterSensitiveLog\");\nvar UpdatePatchBaselineRequestFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }\n}), \"UpdatePatchBaselineRequestFilterSensitiveLog\");\nvar UpdatePatchBaselineResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.Sources && { Sources: obj.Sources.map((item) => PatchSourceFilterSensitiveLog(item)) }\n}), \"UpdatePatchBaselineResultFilterSensitiveLog\");\n\n// src/protocols/Aws_json1_1.ts\nvar se_AddTagsToResourceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"AddTagsToResource\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AddTagsToResourceCommand\");\nvar se_AssociateOpsItemRelatedItemCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"AssociateOpsItemRelatedItem\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AssociateOpsItemRelatedItemCommand\");\nvar se_CancelCommandCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CancelCommand\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CancelCommandCommand\");\nvar se_CancelMaintenanceWindowExecutionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CancelMaintenanceWindowExecution\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CancelMaintenanceWindowExecutionCommand\");\nvar se_CreateActivationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreateActivation\");\n  let body;\n  body = JSON.stringify(se_CreateActivationRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateActivationCommand\");\nvar se_CreateAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreateAssociation\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateAssociationCommand\");\nvar se_CreateAssociationBatchCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreateAssociationBatch\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateAssociationBatchCommand\");\nvar se_CreateDocumentCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreateDocument\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateDocumentCommand\");\nvar se_CreateMaintenanceWindowCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreateMaintenanceWindow\");\n  let body;\n  body = JSON.stringify(se_CreateMaintenanceWindowRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateMaintenanceWindowCommand\");\nvar se_CreateOpsItemCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreateOpsItem\");\n  let body;\n  body = JSON.stringify(se_CreateOpsItemRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateOpsItemCommand\");\nvar se_CreateOpsMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreateOpsMetadata\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateOpsMetadataCommand\");\nvar se_CreatePatchBaselineCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreatePatchBaseline\");\n  let body;\n  body = JSON.stringify(se_CreatePatchBaselineRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreatePatchBaselineCommand\");\nvar se_CreateResourceDataSyncCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"CreateResourceDataSync\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateResourceDataSyncCommand\");\nvar se_DeleteActivationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteActivation\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteActivationCommand\");\nvar se_DeleteAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteAssociation\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteAssociationCommand\");\nvar se_DeleteDocumentCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteDocument\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteDocumentCommand\");\nvar se_DeleteInventoryCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteInventory\");\n  let body;\n  body = JSON.stringify(se_DeleteInventoryRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteInventoryCommand\");\nvar se_DeleteMaintenanceWindowCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteMaintenanceWindow\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteMaintenanceWindowCommand\");\nvar se_DeleteOpsItemCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteOpsItem\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteOpsItemCommand\");\nvar se_DeleteOpsMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteOpsMetadata\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteOpsMetadataCommand\");\nvar se_DeleteParameterCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteParameter\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteParameterCommand\");\nvar se_DeleteParametersCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteParameters\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteParametersCommand\");\nvar se_DeletePatchBaselineCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeletePatchBaseline\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeletePatchBaselineCommand\");\nvar se_DeleteResourceDataSyncCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteResourceDataSync\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteResourceDataSyncCommand\");\nvar se_DeleteResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeleteResourcePolicy\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteResourcePolicyCommand\");\nvar se_DeregisterManagedInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeregisterManagedInstance\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeregisterManagedInstanceCommand\");\nvar se_DeregisterPatchBaselineForPatchGroupCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeregisterPatchBaselineForPatchGroup\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeregisterPatchBaselineForPatchGroupCommand\");\nvar se_DeregisterTargetFromMaintenanceWindowCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeregisterTargetFromMaintenanceWindow\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeregisterTargetFromMaintenanceWindowCommand\");\nvar se_DeregisterTaskFromMaintenanceWindowCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DeregisterTaskFromMaintenanceWindow\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeregisterTaskFromMaintenanceWindowCommand\");\nvar se_DescribeActivationsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeActivations\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeActivationsCommand\");\nvar se_DescribeAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeAssociation\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeAssociationCommand\");\nvar se_DescribeAssociationExecutionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeAssociationExecutions\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeAssociationExecutionsCommand\");\nvar se_DescribeAssociationExecutionTargetsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeAssociationExecutionTargets\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeAssociationExecutionTargetsCommand\");\nvar se_DescribeAutomationExecutionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeAutomationExecutions\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeAutomationExecutionsCommand\");\nvar se_DescribeAutomationStepExecutionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeAutomationStepExecutions\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeAutomationStepExecutionsCommand\");\nvar se_DescribeAvailablePatchesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeAvailablePatches\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeAvailablePatchesCommand\");\nvar se_DescribeDocumentCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeDocument\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeDocumentCommand\");\nvar se_DescribeDocumentPermissionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeDocumentPermission\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeDocumentPermissionCommand\");\nvar se_DescribeEffectiveInstanceAssociationsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeEffectiveInstanceAssociations\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeEffectiveInstanceAssociationsCommand\");\nvar se_DescribeEffectivePatchesForPatchBaselineCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeEffectivePatchesForPatchBaseline\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeEffectivePatchesForPatchBaselineCommand\");\nvar se_DescribeInstanceAssociationsStatusCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeInstanceAssociationsStatus\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeInstanceAssociationsStatusCommand\");\nvar se_DescribeInstanceInformationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeInstanceInformation\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeInstanceInformationCommand\");\nvar se_DescribeInstancePatchesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeInstancePatches\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeInstancePatchesCommand\");\nvar se_DescribeInstancePatchStatesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeInstancePatchStates\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeInstancePatchStatesCommand\");\nvar se_DescribeInstancePatchStatesForPatchGroupCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeInstancePatchStatesForPatchGroup\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeInstancePatchStatesForPatchGroupCommand\");\nvar se_DescribeInstancePropertiesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeInstanceProperties\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeInstancePropertiesCommand\");\nvar se_DescribeInventoryDeletionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeInventoryDeletions\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeInventoryDeletionsCommand\");\nvar se_DescribeMaintenanceWindowExecutionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutions\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeMaintenanceWindowExecutionsCommand\");\nvar se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutionTaskInvocations\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand\");\nvar se_DescribeMaintenanceWindowExecutionTasksCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeMaintenanceWindowExecutionTasks\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeMaintenanceWindowExecutionTasksCommand\");\nvar se_DescribeMaintenanceWindowsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeMaintenanceWindows\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeMaintenanceWindowsCommand\");\nvar se_DescribeMaintenanceWindowScheduleCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeMaintenanceWindowSchedule\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeMaintenanceWindowScheduleCommand\");\nvar se_DescribeMaintenanceWindowsForTargetCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeMaintenanceWindowsForTarget\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeMaintenanceWindowsForTargetCommand\");\nvar se_DescribeMaintenanceWindowTargetsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeMaintenanceWindowTargets\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeMaintenanceWindowTargetsCommand\");\nvar se_DescribeMaintenanceWindowTasksCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeMaintenanceWindowTasks\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeMaintenanceWindowTasksCommand\");\nvar se_DescribeOpsItemsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeOpsItems\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeOpsItemsCommand\");\nvar se_DescribeParametersCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeParameters\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeParametersCommand\");\nvar se_DescribePatchBaselinesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribePatchBaselines\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribePatchBaselinesCommand\");\nvar se_DescribePatchGroupsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribePatchGroups\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribePatchGroupsCommand\");\nvar se_DescribePatchGroupStateCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribePatchGroupState\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribePatchGroupStateCommand\");\nvar se_DescribePatchPropertiesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribePatchProperties\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribePatchPropertiesCommand\");\nvar se_DescribeSessionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DescribeSessions\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DescribeSessionsCommand\");\nvar se_DisassociateOpsItemRelatedItemCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"DisassociateOpsItemRelatedItem\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DisassociateOpsItemRelatedItemCommand\");\nvar se_GetAutomationExecutionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetAutomationExecution\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetAutomationExecutionCommand\");\nvar se_GetCalendarStateCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetCalendarState\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetCalendarStateCommand\");\nvar se_GetCommandInvocationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetCommandInvocation\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetCommandInvocationCommand\");\nvar se_GetConnectionStatusCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetConnectionStatus\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetConnectionStatusCommand\");\nvar se_GetDefaultPatchBaselineCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetDefaultPatchBaseline\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetDefaultPatchBaselineCommand\");\nvar se_GetDeployablePatchSnapshotForInstanceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetDeployablePatchSnapshotForInstance\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetDeployablePatchSnapshotForInstanceCommand\");\nvar se_GetDocumentCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetDocument\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetDocumentCommand\");\nvar se_GetInventoryCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetInventory\");\n  let body;\n  body = JSON.stringify(se_GetInventoryRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetInventoryCommand\");\nvar se_GetInventorySchemaCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetInventorySchema\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetInventorySchemaCommand\");\nvar se_GetMaintenanceWindowCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetMaintenanceWindow\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetMaintenanceWindowCommand\");\nvar se_GetMaintenanceWindowExecutionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetMaintenanceWindowExecution\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetMaintenanceWindowExecutionCommand\");\nvar se_GetMaintenanceWindowExecutionTaskCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetMaintenanceWindowExecutionTask\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetMaintenanceWindowExecutionTaskCommand\");\nvar se_GetMaintenanceWindowExecutionTaskInvocationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetMaintenanceWindowExecutionTaskInvocation\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetMaintenanceWindowExecutionTaskInvocationCommand\");\nvar se_GetMaintenanceWindowTaskCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetMaintenanceWindowTask\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetMaintenanceWindowTaskCommand\");\nvar se_GetOpsItemCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetOpsItem\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetOpsItemCommand\");\nvar se_GetOpsMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetOpsMetadata\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetOpsMetadataCommand\");\nvar se_GetOpsSummaryCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetOpsSummary\");\n  let body;\n  body = JSON.stringify(se_GetOpsSummaryRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetOpsSummaryCommand\");\nvar se_GetParameterCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetParameter\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetParameterCommand\");\nvar se_GetParameterHistoryCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetParameterHistory\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetParameterHistoryCommand\");\nvar se_GetParametersCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetParameters\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetParametersCommand\");\nvar se_GetParametersByPathCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetParametersByPath\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetParametersByPathCommand\");\nvar se_GetPatchBaselineCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetPatchBaseline\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetPatchBaselineCommand\");\nvar se_GetPatchBaselineForPatchGroupCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetPatchBaselineForPatchGroup\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetPatchBaselineForPatchGroupCommand\");\nvar se_GetResourcePoliciesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetResourcePolicies\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetResourcePoliciesCommand\");\nvar se_GetServiceSettingCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"GetServiceSetting\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetServiceSettingCommand\");\nvar se_LabelParameterVersionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"LabelParameterVersion\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_LabelParameterVersionCommand\");\nvar se_ListAssociationsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListAssociations\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListAssociationsCommand\");\nvar se_ListAssociationVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListAssociationVersions\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListAssociationVersionsCommand\");\nvar se_ListCommandInvocationsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListCommandInvocations\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListCommandInvocationsCommand\");\nvar se_ListCommandsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListCommands\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListCommandsCommand\");\nvar se_ListComplianceItemsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListComplianceItems\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListComplianceItemsCommand\");\nvar se_ListComplianceSummariesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListComplianceSummaries\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListComplianceSummariesCommand\");\nvar se_ListDocumentMetadataHistoryCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListDocumentMetadataHistory\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListDocumentMetadataHistoryCommand\");\nvar se_ListDocumentsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListDocuments\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListDocumentsCommand\");\nvar se_ListDocumentVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListDocumentVersions\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListDocumentVersionsCommand\");\nvar se_ListInventoryEntriesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListInventoryEntries\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListInventoryEntriesCommand\");\nvar se_ListOpsItemEventsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListOpsItemEvents\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListOpsItemEventsCommand\");\nvar se_ListOpsItemRelatedItemsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListOpsItemRelatedItems\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListOpsItemRelatedItemsCommand\");\nvar se_ListOpsMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListOpsMetadata\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListOpsMetadataCommand\");\nvar se_ListResourceComplianceSummariesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListResourceComplianceSummaries\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListResourceComplianceSummariesCommand\");\nvar se_ListResourceDataSyncCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListResourceDataSync\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListResourceDataSyncCommand\");\nvar se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ListTagsForResource\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListTagsForResourceCommand\");\nvar se_ModifyDocumentPermissionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ModifyDocumentPermission\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ModifyDocumentPermissionCommand\");\nvar se_PutComplianceItemsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"PutComplianceItems\");\n  let body;\n  body = JSON.stringify(se_PutComplianceItemsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutComplianceItemsCommand\");\nvar se_PutInventoryCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"PutInventory\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutInventoryCommand\");\nvar se_PutParameterCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"PutParameter\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutParameterCommand\");\nvar se_PutResourcePolicyCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"PutResourcePolicy\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutResourcePolicyCommand\");\nvar se_RegisterDefaultPatchBaselineCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"RegisterDefaultPatchBaseline\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RegisterDefaultPatchBaselineCommand\");\nvar se_RegisterPatchBaselineForPatchGroupCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"RegisterPatchBaselineForPatchGroup\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RegisterPatchBaselineForPatchGroupCommand\");\nvar se_RegisterTargetWithMaintenanceWindowCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"RegisterTargetWithMaintenanceWindow\");\n  let body;\n  body = JSON.stringify(se_RegisterTargetWithMaintenanceWindowRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RegisterTargetWithMaintenanceWindowCommand\");\nvar se_RegisterTaskWithMaintenanceWindowCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"RegisterTaskWithMaintenanceWindow\");\n  let body;\n  body = JSON.stringify(se_RegisterTaskWithMaintenanceWindowRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RegisterTaskWithMaintenanceWindowCommand\");\nvar se_RemoveTagsFromResourceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"RemoveTagsFromResource\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RemoveTagsFromResourceCommand\");\nvar se_ResetServiceSettingCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ResetServiceSetting\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ResetServiceSettingCommand\");\nvar se_ResumeSessionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"ResumeSession\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ResumeSessionCommand\");\nvar se_SendAutomationSignalCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"SendAutomationSignal\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SendAutomationSignalCommand\");\nvar se_SendCommandCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"SendCommand\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SendCommandCommand\");\nvar se_StartAssociationsOnceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"StartAssociationsOnce\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_StartAssociationsOnceCommand\");\nvar se_StartAutomationExecutionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"StartAutomationExecution\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_StartAutomationExecutionCommand\");\nvar se_StartChangeRequestExecutionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"StartChangeRequestExecution\");\n  let body;\n  body = JSON.stringify(se_StartChangeRequestExecutionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_StartChangeRequestExecutionCommand\");\nvar se_StartSessionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"StartSession\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_StartSessionCommand\");\nvar se_StopAutomationExecutionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"StopAutomationExecution\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_StopAutomationExecutionCommand\");\nvar se_TerminateSessionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"TerminateSession\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TerminateSessionCommand\");\nvar se_UnlabelParameterVersionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UnlabelParameterVersion\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UnlabelParameterVersionCommand\");\nvar se_UpdateAssociationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateAssociation\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateAssociationCommand\");\nvar se_UpdateAssociationStatusCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateAssociationStatus\");\n  let body;\n  body = JSON.stringify(se_UpdateAssociationStatusRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateAssociationStatusCommand\");\nvar se_UpdateDocumentCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateDocument\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateDocumentCommand\");\nvar se_UpdateDocumentDefaultVersionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateDocumentDefaultVersion\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateDocumentDefaultVersionCommand\");\nvar se_UpdateDocumentMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateDocumentMetadata\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateDocumentMetadataCommand\");\nvar se_UpdateMaintenanceWindowCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateMaintenanceWindow\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateMaintenanceWindowCommand\");\nvar se_UpdateMaintenanceWindowTargetCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateMaintenanceWindowTarget\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateMaintenanceWindowTargetCommand\");\nvar se_UpdateMaintenanceWindowTaskCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateMaintenanceWindowTask\");\n  let body;\n  body = JSON.stringify(se_UpdateMaintenanceWindowTaskRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateMaintenanceWindowTaskCommand\");\nvar se_UpdateManagedInstanceRoleCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateManagedInstanceRole\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateManagedInstanceRoleCommand\");\nvar se_UpdateOpsItemCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateOpsItem\");\n  let body;\n  body = JSON.stringify(se_UpdateOpsItemRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateOpsItemCommand\");\nvar se_UpdateOpsMetadataCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateOpsMetadata\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateOpsMetadataCommand\");\nvar se_UpdatePatchBaselineCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdatePatchBaseline\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdatePatchBaselineCommand\");\nvar se_UpdateResourceDataSyncCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateResourceDataSync\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateResourceDataSyncCommand\");\nvar se_UpdateServiceSettingCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = sharedHeaders(\"UpdateServiceSetting\");\n  let body;\n  body = JSON.stringify((0, import_smithy_client._json)(input));\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UpdateServiceSettingCommand\");\nvar de_AddTagsToResourceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_AddTagsToResourceCommand\");\nvar de_AssociateOpsItemRelatedItemCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_AssociateOpsItemRelatedItemCommand\");\nvar de_CancelCommandCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CancelCommandCommand\");\nvar de_CancelMaintenanceWindowExecutionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CancelMaintenanceWindowExecutionCommand\");\nvar de_CreateActivationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateActivationCommand\");\nvar de_CreateAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_CreateAssociationResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateAssociationCommand\");\nvar de_CreateAssociationBatchCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_CreateAssociationBatchResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateAssociationBatchCommand\");\nvar de_CreateDocumentCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_CreateDocumentResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateDocumentCommand\");\nvar de_CreateMaintenanceWindowCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateMaintenanceWindowCommand\");\nvar de_CreateOpsItemCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateOpsItemCommand\");\nvar de_CreateOpsMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateOpsMetadataCommand\");\nvar de_CreatePatchBaselineCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreatePatchBaselineCommand\");\nvar de_CreateResourceDataSyncCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateResourceDataSyncCommand\");\nvar de_DeleteActivationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteActivationCommand\");\nvar de_DeleteAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteAssociationCommand\");\nvar de_DeleteDocumentCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteDocumentCommand\");\nvar de_DeleteInventoryCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteInventoryCommand\");\nvar de_DeleteMaintenanceWindowCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteMaintenanceWindowCommand\");\nvar de_DeleteOpsItemCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteOpsItemCommand\");\nvar de_DeleteOpsMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteOpsMetadataCommand\");\nvar de_DeleteParameterCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteParameterCommand\");\nvar de_DeleteParametersCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteParametersCommand\");\nvar de_DeletePatchBaselineCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeletePatchBaselineCommand\");\nvar de_DeleteResourceDataSyncCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteResourceDataSyncCommand\");\nvar de_DeleteResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteResourcePolicyCommand\");\nvar de_DeregisterManagedInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeregisterManagedInstanceCommand\");\nvar de_DeregisterPatchBaselineForPatchGroupCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeregisterPatchBaselineForPatchGroupCommand\");\nvar de_DeregisterTargetFromMaintenanceWindowCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeregisterTargetFromMaintenanceWindowCommand\");\nvar de_DeregisterTaskFromMaintenanceWindowCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeregisterTaskFromMaintenanceWindowCommand\");\nvar de_DescribeActivationsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeActivationsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeActivationsCommand\");\nvar de_DescribeAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeAssociationResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeAssociationCommand\");\nvar de_DescribeAssociationExecutionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeAssociationExecutionsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeAssociationExecutionsCommand\");\nvar de_DescribeAssociationExecutionTargetsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeAssociationExecutionTargetsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeAssociationExecutionTargetsCommand\");\nvar de_DescribeAutomationExecutionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeAutomationExecutionsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeAutomationExecutionsCommand\");\nvar de_DescribeAutomationStepExecutionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeAutomationStepExecutionsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeAutomationStepExecutionsCommand\");\nvar de_DescribeAvailablePatchesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeAvailablePatchesResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeAvailablePatchesCommand\");\nvar de_DescribeDocumentCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeDocumentResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeDocumentCommand\");\nvar de_DescribeDocumentPermissionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeDocumentPermissionCommand\");\nvar de_DescribeEffectiveInstanceAssociationsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeEffectiveInstanceAssociationsCommand\");\nvar de_DescribeEffectivePatchesForPatchBaselineCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeEffectivePatchesForPatchBaselineResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeEffectivePatchesForPatchBaselineCommand\");\nvar de_DescribeInstanceAssociationsStatusCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeInstanceAssociationsStatusResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeInstanceAssociationsStatusCommand\");\nvar de_DescribeInstanceInformationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeInstanceInformationResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeInstanceInformationCommand\");\nvar de_DescribeInstancePatchesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeInstancePatchesResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeInstancePatchesCommand\");\nvar de_DescribeInstancePatchStatesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeInstancePatchStatesResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeInstancePatchStatesCommand\");\nvar de_DescribeInstancePatchStatesForPatchGroupCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeInstancePatchStatesForPatchGroupResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeInstancePatchStatesForPatchGroupCommand\");\nvar de_DescribeInstancePropertiesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeInstancePropertiesResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeInstancePropertiesCommand\");\nvar de_DescribeInventoryDeletionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeInventoryDeletionsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeInventoryDeletionsCommand\");\nvar de_DescribeMaintenanceWindowExecutionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeMaintenanceWindowExecutionsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeMaintenanceWindowExecutionsCommand\");\nvar de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeMaintenanceWindowExecutionTaskInvocationsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand\");\nvar de_DescribeMaintenanceWindowExecutionTasksCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeMaintenanceWindowExecutionTasksResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeMaintenanceWindowExecutionTasksCommand\");\nvar de_DescribeMaintenanceWindowsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeMaintenanceWindowsCommand\");\nvar de_DescribeMaintenanceWindowScheduleCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeMaintenanceWindowScheduleCommand\");\nvar de_DescribeMaintenanceWindowsForTargetCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeMaintenanceWindowsForTargetCommand\");\nvar de_DescribeMaintenanceWindowTargetsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeMaintenanceWindowTargetsCommand\");\nvar de_DescribeMaintenanceWindowTasksCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeMaintenanceWindowTasksCommand\");\nvar de_DescribeOpsItemsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeOpsItemsResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeOpsItemsCommand\");\nvar de_DescribeParametersCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeParametersResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeParametersCommand\");\nvar de_DescribePatchBaselinesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribePatchBaselinesCommand\");\nvar de_DescribePatchGroupsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribePatchGroupsCommand\");\nvar de_DescribePatchGroupStateCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribePatchGroupStateCommand\");\nvar de_DescribePatchPropertiesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribePatchPropertiesCommand\");\nvar de_DescribeSessionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_DescribeSessionsResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DescribeSessionsCommand\");\nvar de_DisassociateOpsItemRelatedItemCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DisassociateOpsItemRelatedItemCommand\");\nvar de_GetAutomationExecutionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetAutomationExecutionResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetAutomationExecutionCommand\");\nvar de_GetCalendarStateCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetCalendarStateCommand\");\nvar de_GetCommandInvocationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetCommandInvocationCommand\");\nvar de_GetConnectionStatusCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetConnectionStatusCommand\");\nvar de_GetDefaultPatchBaselineCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetDefaultPatchBaselineCommand\");\nvar de_GetDeployablePatchSnapshotForInstanceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetDeployablePatchSnapshotForInstanceCommand\");\nvar de_GetDocumentCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetDocumentResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetDocumentCommand\");\nvar de_GetInventoryCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetInventoryCommand\");\nvar de_GetInventorySchemaCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetInventorySchemaCommand\");\nvar de_GetMaintenanceWindowCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetMaintenanceWindowResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetMaintenanceWindowCommand\");\nvar de_GetMaintenanceWindowExecutionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetMaintenanceWindowExecutionResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetMaintenanceWindowExecutionCommand\");\nvar de_GetMaintenanceWindowExecutionTaskCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetMaintenanceWindowExecutionTaskResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetMaintenanceWindowExecutionTaskCommand\");\nvar de_GetMaintenanceWindowExecutionTaskInvocationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetMaintenanceWindowExecutionTaskInvocationResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetMaintenanceWindowExecutionTaskInvocationCommand\");\nvar de_GetMaintenanceWindowTaskCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetMaintenanceWindowTaskResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetMaintenanceWindowTaskCommand\");\nvar de_GetOpsItemCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetOpsItemResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetOpsItemCommand\");\nvar de_GetOpsMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetOpsMetadataCommand\");\nvar de_GetOpsSummaryCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetOpsSummaryCommand\");\nvar de_GetParameterCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetParameterResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetParameterCommand\");\nvar de_GetParameterHistoryCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetParameterHistoryResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetParameterHistoryCommand\");\nvar de_GetParametersCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetParametersResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetParametersCommand\");\nvar de_GetParametersByPathCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetParametersByPathResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetParametersByPathCommand\");\nvar de_GetPatchBaselineCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetPatchBaselineResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetPatchBaselineCommand\");\nvar de_GetPatchBaselineForPatchGroupCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetPatchBaselineForPatchGroupCommand\");\nvar de_GetResourcePoliciesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetResourcePoliciesCommand\");\nvar de_GetServiceSettingCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_GetServiceSettingResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetServiceSettingCommand\");\nvar de_LabelParameterVersionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_LabelParameterVersionCommand\");\nvar de_ListAssociationsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListAssociationsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListAssociationsCommand\");\nvar de_ListAssociationVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListAssociationVersionsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListAssociationVersionsCommand\");\nvar de_ListCommandInvocationsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListCommandInvocationsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListCommandInvocationsCommand\");\nvar de_ListCommandsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListCommandsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListCommandsCommand\");\nvar de_ListComplianceItemsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListComplianceItemsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListComplianceItemsCommand\");\nvar de_ListComplianceSummariesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListComplianceSummariesCommand\");\nvar de_ListDocumentMetadataHistoryCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListDocumentMetadataHistoryResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListDocumentMetadataHistoryCommand\");\nvar de_ListDocumentsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListDocumentsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListDocumentsCommand\");\nvar de_ListDocumentVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListDocumentVersionsResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListDocumentVersionsCommand\");\nvar de_ListInventoryEntriesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListInventoryEntriesCommand\");\nvar de_ListOpsItemEventsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListOpsItemEventsResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListOpsItemEventsCommand\");\nvar de_ListOpsItemRelatedItemsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListOpsItemRelatedItemsResponse(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListOpsItemRelatedItemsCommand\");\nvar de_ListOpsMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListOpsMetadataResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListOpsMetadataCommand\");\nvar de_ListResourceComplianceSummariesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListResourceComplianceSummariesResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListResourceComplianceSummariesCommand\");\nvar de_ListResourceDataSyncCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ListResourceDataSyncResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListResourceDataSyncCommand\");\nvar de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListTagsForResourceCommand\");\nvar de_ModifyDocumentPermissionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ModifyDocumentPermissionCommand\");\nvar de_PutComplianceItemsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_PutComplianceItemsCommand\");\nvar de_PutInventoryCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_PutInventoryCommand\");\nvar de_PutParameterCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_PutParameterCommand\");\nvar de_PutResourcePolicyCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_PutResourcePolicyCommand\");\nvar de_RegisterDefaultPatchBaselineCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_RegisterDefaultPatchBaselineCommand\");\nvar de_RegisterPatchBaselineForPatchGroupCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_RegisterPatchBaselineForPatchGroupCommand\");\nvar de_RegisterTargetWithMaintenanceWindowCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_RegisterTargetWithMaintenanceWindowCommand\");\nvar de_RegisterTaskWithMaintenanceWindowCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_RegisterTaskWithMaintenanceWindowCommand\");\nvar de_RemoveTagsFromResourceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_RemoveTagsFromResourceCommand\");\nvar de_ResetServiceSettingCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_ResetServiceSettingResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ResetServiceSettingCommand\");\nvar de_ResumeSessionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ResumeSessionCommand\");\nvar de_SendAutomationSignalCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_SendAutomationSignalCommand\");\nvar de_SendCommandCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_SendCommandResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_SendCommandCommand\");\nvar de_StartAssociationsOnceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_StartAssociationsOnceCommand\");\nvar de_StartAutomationExecutionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_StartAutomationExecutionCommand\");\nvar de_StartChangeRequestExecutionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_StartChangeRequestExecutionCommand\");\nvar de_StartSessionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_StartSessionCommand\");\nvar de_StopAutomationExecutionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_StopAutomationExecutionCommand\");\nvar de_TerminateSessionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_TerminateSessionCommand\");\nvar de_UnlabelParameterVersionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UnlabelParameterVersionCommand\");\nvar de_UpdateAssociationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_UpdateAssociationResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateAssociationCommand\");\nvar de_UpdateAssociationStatusCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_UpdateAssociationStatusResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateAssociationStatusCommand\");\nvar de_UpdateDocumentCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_UpdateDocumentResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateDocumentCommand\");\nvar de_UpdateDocumentDefaultVersionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateDocumentDefaultVersionCommand\");\nvar de_UpdateDocumentMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateDocumentMetadataCommand\");\nvar de_UpdateMaintenanceWindowCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateMaintenanceWindowCommand\");\nvar de_UpdateMaintenanceWindowTargetCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateMaintenanceWindowTargetCommand\");\nvar de_UpdateMaintenanceWindowTaskCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_UpdateMaintenanceWindowTaskResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateMaintenanceWindowTaskCommand\");\nvar de_UpdateManagedInstanceRoleCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateManagedInstanceRoleCommand\");\nvar de_UpdateOpsItemCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateOpsItemCommand\");\nvar de_UpdateOpsMetadataCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateOpsMetadataCommand\");\nvar de_UpdatePatchBaselineCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = de_UpdatePatchBaselineResult(data, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdatePatchBaselineCommand\");\nvar de_UpdateResourceDataSyncCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateResourceDataSyncCommand\");\nvar de_UpdateServiceSettingCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseJsonBody)(output.body, context);\n  let contents = {};\n  contents = (0, import_smithy_client._json)(data);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UpdateServiceSettingCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)\n  };\n  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerError\":\n    case \"com.amazonaws.ssm#InternalServerError\":\n      throw await de_InternalServerErrorRes(parsedOutput, context);\n    case \"InvalidResourceId\":\n    case \"com.amazonaws.ssm#InvalidResourceId\":\n      throw await de_InvalidResourceIdRes(parsedOutput, context);\n    case \"InvalidResourceType\":\n    case \"com.amazonaws.ssm#InvalidResourceType\":\n      throw await de_InvalidResourceTypeRes(parsedOutput, context);\n    case \"TooManyTagsError\":\n    case \"com.amazonaws.ssm#TooManyTagsError\":\n      throw await de_TooManyTagsErrorRes(parsedOutput, context);\n    case \"TooManyUpdates\":\n    case \"com.amazonaws.ssm#TooManyUpdates\":\n      throw await de_TooManyUpdatesRes(parsedOutput, context);\n    case \"OpsItemConflictException\":\n    case \"com.amazonaws.ssm#OpsItemConflictException\":\n      throw await de_OpsItemConflictExceptionRes(parsedOutput, context);\n    case \"OpsItemInvalidParameterException\":\n    case \"com.amazonaws.ssm#OpsItemInvalidParameterException\":\n      throw await de_OpsItemInvalidParameterExceptionRes(parsedOutput, context);\n    case \"OpsItemLimitExceededException\":\n    case \"com.amazonaws.ssm#OpsItemLimitExceededException\":\n      throw await de_OpsItemLimitExceededExceptionRes(parsedOutput, context);\n    case \"OpsItemNotFoundException\":\n    case \"com.amazonaws.ssm#OpsItemNotFoundException\":\n      throw await de_OpsItemNotFoundExceptionRes(parsedOutput, context);\n    case \"OpsItemRelatedItemAlreadyExistsException\":\n    case \"com.amazonaws.ssm#OpsItemRelatedItemAlreadyExistsException\":\n      throw await de_OpsItemRelatedItemAlreadyExistsExceptionRes(parsedOutput, context);\n    case \"DuplicateInstanceId\":\n    case \"com.amazonaws.ssm#DuplicateInstanceId\":\n      throw await de_DuplicateInstanceIdRes(parsedOutput, context);\n    case \"InvalidCommandId\":\n    case \"com.amazonaws.ssm#InvalidCommandId\":\n      throw await de_InvalidCommandIdRes(parsedOutput, context);\n    case \"InvalidInstanceId\":\n    case \"com.amazonaws.ssm#InvalidInstanceId\":\n      throw await de_InvalidInstanceIdRes(parsedOutput, context);\n    case \"DoesNotExistException\":\n    case \"com.amazonaws.ssm#DoesNotExistException\":\n      throw await de_DoesNotExistExceptionRes(parsedOutput, context);\n    case \"InvalidParameters\":\n    case \"com.amazonaws.ssm#InvalidParameters\":\n      throw await de_InvalidParametersRes(parsedOutput, context);\n    case \"AssociationAlreadyExists\":\n    case \"com.amazonaws.ssm#AssociationAlreadyExists\":\n      throw await de_AssociationAlreadyExistsRes(parsedOutput, context);\n    case \"AssociationLimitExceeded\":\n    case \"com.amazonaws.ssm#AssociationLimitExceeded\":\n      throw await de_AssociationLimitExceededRes(parsedOutput, context);\n    case \"InvalidDocument\":\n    case \"com.amazonaws.ssm#InvalidDocument\":\n      throw await de_InvalidDocumentRes(parsedOutput, context);\n    case \"InvalidDocumentVersion\":\n    case \"com.amazonaws.ssm#InvalidDocumentVersion\":\n      throw await de_InvalidDocumentVersionRes(parsedOutput, context);\n    case \"InvalidOutputLocation\":\n    case \"com.amazonaws.ssm#InvalidOutputLocation\":\n      throw await de_InvalidOutputLocationRes(parsedOutput, context);\n    case \"InvalidSchedule\":\n    case \"com.amazonaws.ssm#InvalidSchedule\":\n      throw await de_InvalidScheduleRes(parsedOutput, context);\n    case \"InvalidTag\":\n    case \"com.amazonaws.ssm#InvalidTag\":\n      throw await de_InvalidTagRes(parsedOutput, context);\n    case \"InvalidTarget\":\n    case \"com.amazonaws.ssm#InvalidTarget\":\n      throw await de_InvalidTargetRes(parsedOutput, context);\n    case \"InvalidTargetMaps\":\n    case \"com.amazonaws.ssm#InvalidTargetMaps\":\n      throw await de_InvalidTargetMapsRes(parsedOutput, context);\n    case \"UnsupportedPlatformType\":\n    case \"com.amazonaws.ssm#UnsupportedPlatformType\":\n      throw await de_UnsupportedPlatformTypeRes(parsedOutput, context);\n    case \"DocumentAlreadyExists\":\n    case \"com.amazonaws.ssm#DocumentAlreadyExists\":\n      throw await de_DocumentAlreadyExistsRes(parsedOutput, context);\n    case \"DocumentLimitExceeded\":\n    case \"com.amazonaws.ssm#DocumentLimitExceeded\":\n      throw await de_DocumentLimitExceededRes(parsedOutput, context);\n    case \"InvalidDocumentContent\":\n    case \"com.amazonaws.ssm#InvalidDocumentContent\":\n      throw await de_InvalidDocumentContentRes(parsedOutput, context);\n    case \"InvalidDocumentSchemaVersion\":\n    case \"com.amazonaws.ssm#InvalidDocumentSchemaVersion\":\n      throw await de_InvalidDocumentSchemaVersionRes(parsedOutput, context);\n    case \"MaxDocumentSizeExceeded\":\n    case \"com.amazonaws.ssm#MaxDocumentSizeExceeded\":\n      throw await de_MaxDocumentSizeExceededRes(parsedOutput, context);\n    case \"IdempotentParameterMismatch\":\n    case \"com.amazonaws.ssm#IdempotentParameterMismatch\":\n      throw await de_IdempotentParameterMismatchRes(parsedOutput, context);\n    case \"ResourceLimitExceededException\":\n    case \"com.amazonaws.ssm#ResourceLimitExceededException\":\n      throw await de_ResourceLimitExceededExceptionRes(parsedOutput, context);\n    case \"OpsItemAccessDeniedException\":\n    case \"com.amazonaws.ssm#OpsItemAccessDeniedException\":\n      throw await de_OpsItemAccessDeniedExceptionRes(parsedOutput, context);\n    case \"OpsItemAlreadyExistsException\":\n    case \"com.amazonaws.ssm#OpsItemAlreadyExistsException\":\n      throw await de_OpsItemAlreadyExistsExceptionRes(parsedOutput, context);\n    case \"OpsMetadataAlreadyExistsException\":\n    case \"com.amazonaws.ssm#OpsMetadataAlreadyExistsException\":\n      throw await de_OpsMetadataAlreadyExistsExceptionRes(parsedOutput, context);\n    case \"OpsMetadataInvalidArgumentException\":\n    case \"com.amazonaws.ssm#OpsMetadataInvalidArgumentException\":\n      throw await de_OpsMetadataInvalidArgumentExceptionRes(parsedOutput, context);\n    case \"OpsMetadataLimitExceededException\":\n    case \"com.amazonaws.ssm#OpsMetadataLimitExceededException\":\n      throw await de_OpsMetadataLimitExceededExceptionRes(parsedOutput, context);\n    case \"OpsMetadataTooManyUpdatesException\":\n    case \"com.amazonaws.ssm#OpsMetadataTooManyUpdatesException\":\n      throw await de_OpsMetadataTooManyUpdatesExceptionRes(parsedOutput, context);\n    case \"ResourceDataSyncAlreadyExistsException\":\n    case \"com.amazonaws.ssm#ResourceDataSyncAlreadyExistsException\":\n      throw await de_ResourceDataSyncAlreadyExistsExceptionRes(parsedOutput, context);\n    case \"ResourceDataSyncCountExceededException\":\n    case \"com.amazonaws.ssm#ResourceDataSyncCountExceededException\":\n      throw await de_ResourceDataSyncCountExceededExceptionRes(parsedOutput, context);\n    case \"ResourceDataSyncInvalidConfigurationException\":\n    case \"com.amazonaws.ssm#ResourceDataSyncInvalidConfigurationException\":\n      throw await de_ResourceDataSyncInvalidConfigurationExceptionRes(parsedOutput, context);\n    case \"InvalidActivation\":\n    case \"com.amazonaws.ssm#InvalidActivation\":\n      throw await de_InvalidActivationRes(parsedOutput, context);\n    case \"InvalidActivationId\":\n    case \"com.amazonaws.ssm#InvalidActivationId\":\n      throw await de_InvalidActivationIdRes(parsedOutput, context);\n    case \"AssociationDoesNotExist\":\n    case \"com.amazonaws.ssm#AssociationDoesNotExist\":\n      throw await de_AssociationDoesNotExistRes(parsedOutput, context);\n    case \"AssociatedInstances\":\n    case \"com.amazonaws.ssm#AssociatedInstances\":\n      throw await de_AssociatedInstancesRes(parsedOutput, context);\n    case \"InvalidDocumentOperation\":\n    case \"com.amazonaws.ssm#InvalidDocumentOperation\":\n      throw await de_InvalidDocumentOperationRes(parsedOutput, context);\n    case \"InvalidDeleteInventoryParametersException\":\n    case \"com.amazonaws.ssm#InvalidDeleteInventoryParametersException\":\n      throw await de_InvalidDeleteInventoryParametersExceptionRes(parsedOutput, context);\n    case \"InvalidInventoryRequestException\":\n    case \"com.amazonaws.ssm#InvalidInventoryRequestException\":\n      throw await de_InvalidInventoryRequestExceptionRes(parsedOutput, context);\n    case \"InvalidOptionException\":\n    case \"com.amazonaws.ssm#InvalidOptionException\":\n      throw await de_InvalidOptionExceptionRes(parsedOutput, context);\n    case \"InvalidTypeNameException\":\n    case \"com.amazonaws.ssm#InvalidTypeNameException\":\n      throw await de_InvalidTypeNameExceptionRes(parsedOutput, context);\n    case \"OpsMetadataNotFoundException\":\n    case \"com.amazonaws.ssm#OpsMetadataNotFoundException\":\n      throw await de_OpsMetadataNotFoundExceptionRes(parsedOutput, context);\n    case \"ParameterNotFound\":\n    case \"com.amazonaws.ssm#ParameterNotFound\":\n      throw await de_ParameterNotFoundRes(parsedOutput, context);\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.ssm#ResourceInUseException\":\n      throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n    case \"ResourceDataSyncNotFoundException\":\n    case \"com.amazonaws.ssm#ResourceDataSyncNotFoundException\":\n      throw await de_ResourceDataSyncNotFoundExceptionRes(parsedOutput, context);\n    case \"MalformedResourcePolicyDocumentException\":\n    case \"com.amazonaws.ssm#MalformedResourcePolicyDocumentException\":\n      throw await de_MalformedResourcePolicyDocumentExceptionRes(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.ssm#ResourceNotFoundException\":\n      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n    case \"ResourcePolicyConflictException\":\n    case \"com.amazonaws.ssm#ResourcePolicyConflictException\":\n      throw await de_ResourcePolicyConflictExceptionRes(parsedOutput, context);\n    case \"ResourcePolicyInvalidParameterException\":\n    case \"com.amazonaws.ssm#ResourcePolicyInvalidParameterException\":\n      throw await de_ResourcePolicyInvalidParameterExceptionRes(parsedOutput, context);\n    case \"ResourcePolicyNotFoundException\":\n    case \"com.amazonaws.ssm#ResourcePolicyNotFoundException\":\n      throw await de_ResourcePolicyNotFoundExceptionRes(parsedOutput, context);\n    case \"TargetInUseException\":\n    case \"com.amazonaws.ssm#TargetInUseException\":\n      throw await de_TargetInUseExceptionRes(parsedOutput, context);\n    case \"InvalidFilter\":\n    case \"com.amazonaws.ssm#InvalidFilter\":\n      throw await de_InvalidFilterRes(parsedOutput, context);\n    case \"InvalidNextToken\":\n    case \"com.amazonaws.ssm#InvalidNextToken\":\n      throw await de_InvalidNextTokenRes(parsedOutput, context);\n    case \"InvalidAssociationVersion\":\n    case \"com.amazonaws.ssm#InvalidAssociationVersion\":\n      throw await de_InvalidAssociationVersionRes(parsedOutput, context);\n    case \"AssociationExecutionDoesNotExist\":\n    case \"com.amazonaws.ssm#AssociationExecutionDoesNotExist\":\n      throw await de_AssociationExecutionDoesNotExistRes(parsedOutput, context);\n    case \"InvalidFilterKey\":\n    case \"com.amazonaws.ssm#InvalidFilterKey\":\n      throw await de_InvalidFilterKeyRes(parsedOutput, context);\n    case \"InvalidFilterValue\":\n    case \"com.amazonaws.ssm#InvalidFilterValue\":\n      throw await de_InvalidFilterValueRes(parsedOutput, context);\n    case \"AutomationExecutionNotFoundException\":\n    case \"com.amazonaws.ssm#AutomationExecutionNotFoundException\":\n      throw await de_AutomationExecutionNotFoundExceptionRes(parsedOutput, context);\n    case \"InvalidPermissionType\":\n    case \"com.amazonaws.ssm#InvalidPermissionType\":\n      throw await de_InvalidPermissionTypeRes(parsedOutput, context);\n    case \"UnsupportedOperatingSystem\":\n    case \"com.amazonaws.ssm#UnsupportedOperatingSystem\":\n      throw await de_UnsupportedOperatingSystemRes(parsedOutput, context);\n    case \"InvalidInstanceInformationFilterValue\":\n    case \"com.amazonaws.ssm#InvalidInstanceInformationFilterValue\":\n      throw await de_InvalidInstanceInformationFilterValueRes(parsedOutput, context);\n    case \"InvalidInstancePropertyFilterValue\":\n    case \"com.amazonaws.ssm#InvalidInstancePropertyFilterValue\":\n      throw await de_InvalidInstancePropertyFilterValueRes(parsedOutput, context);\n    case \"InvalidDeletionIdException\":\n    case \"com.amazonaws.ssm#InvalidDeletionIdException\":\n      throw await de_InvalidDeletionIdExceptionRes(parsedOutput, context);\n    case \"InvalidFilterOption\":\n    case \"com.amazonaws.ssm#InvalidFilterOption\":\n      throw await de_InvalidFilterOptionRes(parsedOutput, context);\n    case \"OpsItemRelatedItemAssociationNotFoundException\":\n    case \"com.amazonaws.ssm#OpsItemRelatedItemAssociationNotFoundException\":\n      throw await de_OpsItemRelatedItemAssociationNotFoundExceptionRes(parsedOutput, context);\n    case \"InvalidDocumentType\":\n    case \"com.amazonaws.ssm#InvalidDocumentType\":\n      throw await de_InvalidDocumentTypeRes(parsedOutput, context);\n    case \"UnsupportedCalendarException\":\n    case \"com.amazonaws.ssm#UnsupportedCalendarException\":\n      throw await de_UnsupportedCalendarExceptionRes(parsedOutput, context);\n    case \"InvalidPluginName\":\n    case \"com.amazonaws.ssm#InvalidPluginName\":\n      throw await de_InvalidPluginNameRes(parsedOutput, context);\n    case \"InvocationDoesNotExist\":\n    case \"com.amazonaws.ssm#InvocationDoesNotExist\":\n      throw await de_InvocationDoesNotExistRes(parsedOutput, context);\n    case \"UnsupportedFeatureRequiredException\":\n    case \"com.amazonaws.ssm#UnsupportedFeatureRequiredException\":\n      throw await de_UnsupportedFeatureRequiredExceptionRes(parsedOutput, context);\n    case \"InvalidAggregatorException\":\n    case \"com.amazonaws.ssm#InvalidAggregatorException\":\n      throw await de_InvalidAggregatorExceptionRes(parsedOutput, context);\n    case \"InvalidInventoryGroupException\":\n    case \"com.amazonaws.ssm#InvalidInventoryGroupException\":\n      throw await de_InvalidInventoryGroupExceptionRes(parsedOutput, context);\n    case \"InvalidResultAttributeException\":\n    case \"com.amazonaws.ssm#InvalidResultAttributeException\":\n      throw await de_InvalidResultAttributeExceptionRes(parsedOutput, context);\n    case \"InvalidKeyId\":\n    case \"com.amazonaws.ssm#InvalidKeyId\":\n      throw await de_InvalidKeyIdRes(parsedOutput, context);\n    case \"ParameterVersionNotFound\":\n    case \"com.amazonaws.ssm#ParameterVersionNotFound\":\n      throw await de_ParameterVersionNotFoundRes(parsedOutput, context);\n    case \"ServiceSettingNotFound\":\n    case \"com.amazonaws.ssm#ServiceSettingNotFound\":\n      throw await de_ServiceSettingNotFoundRes(parsedOutput, context);\n    case \"ParameterVersionLabelLimitExceeded\":\n    case \"com.amazonaws.ssm#ParameterVersionLabelLimitExceeded\":\n      throw await de_ParameterVersionLabelLimitExceededRes(parsedOutput, context);\n    case \"DocumentPermissionLimit\":\n    case \"com.amazonaws.ssm#DocumentPermissionLimit\":\n      throw await de_DocumentPermissionLimitRes(parsedOutput, context);\n    case \"ComplianceTypeCountLimitExceededException\":\n    case \"com.amazonaws.ssm#ComplianceTypeCountLimitExceededException\":\n      throw await de_ComplianceTypeCountLimitExceededExceptionRes(parsedOutput, context);\n    case \"InvalidItemContentException\":\n    case \"com.amazonaws.ssm#InvalidItemContentException\":\n      throw await de_InvalidItemContentExceptionRes(parsedOutput, context);\n    case \"ItemSizeLimitExceededException\":\n    case \"com.amazonaws.ssm#ItemSizeLimitExceededException\":\n      throw await de_ItemSizeLimitExceededExceptionRes(parsedOutput, context);\n    case \"TotalSizeLimitExceededException\":\n    case \"com.amazonaws.ssm#TotalSizeLimitExceededException\":\n      throw await de_TotalSizeLimitExceededExceptionRes(parsedOutput, context);\n    case \"CustomSchemaCountLimitExceededException\":\n    case \"com.amazonaws.ssm#CustomSchemaCountLimitExceededException\":\n      throw await de_CustomSchemaCountLimitExceededExceptionRes(parsedOutput, context);\n    case \"InvalidInventoryItemContextException\":\n    case \"com.amazonaws.ssm#InvalidInventoryItemContextException\":\n      throw await de_InvalidInventoryItemContextExceptionRes(parsedOutput, context);\n    case \"ItemContentMismatchException\":\n    case \"com.amazonaws.ssm#ItemContentMismatchException\":\n      throw await de_ItemContentMismatchExceptionRes(parsedOutput, context);\n    case \"SubTypeCountLimitExceededException\":\n    case \"com.amazonaws.ssm#SubTypeCountLimitExceededException\":\n      throw await de_SubTypeCountLimitExceededExceptionRes(parsedOutput, context);\n    case \"UnsupportedInventoryItemContextException\":\n    case \"com.amazonaws.ssm#UnsupportedInventoryItemContextException\":\n      throw await de_UnsupportedInventoryItemContextExceptionRes(parsedOutput, context);\n    case \"UnsupportedInventorySchemaVersionException\":\n    case \"com.amazonaws.ssm#UnsupportedInventorySchemaVersionException\":\n      throw await de_UnsupportedInventorySchemaVersionExceptionRes(parsedOutput, context);\n    case \"HierarchyLevelLimitExceededException\":\n    case \"com.amazonaws.ssm#HierarchyLevelLimitExceededException\":\n      throw await de_HierarchyLevelLimitExceededExceptionRes(parsedOutput, context);\n    case \"HierarchyTypeMismatchException\":\n    case \"com.amazonaws.ssm#HierarchyTypeMismatchException\":\n      throw await de_HierarchyTypeMismatchExceptionRes(parsedOutput, context);\n    case \"IncompatiblePolicyException\":\n    case \"com.amazonaws.ssm#IncompatiblePolicyException\":\n      throw await de_IncompatiblePolicyExceptionRes(parsedOutput, context);\n    case \"InvalidAllowedPatternException\":\n    case \"com.amazonaws.ssm#InvalidAllowedPatternException\":\n      throw await de_InvalidAllowedPatternExceptionRes(parsedOutput, context);\n    case \"InvalidPolicyAttributeException\":\n    case \"com.amazonaws.ssm#InvalidPolicyAttributeException\":\n      throw await de_InvalidPolicyAttributeExceptionRes(parsedOutput, context);\n    case \"InvalidPolicyTypeException\":\n    case \"com.amazonaws.ssm#InvalidPolicyTypeException\":\n      throw await de_InvalidPolicyTypeExceptionRes(parsedOutput, context);\n    case \"ParameterAlreadyExists\":\n    case \"com.amazonaws.ssm#ParameterAlreadyExists\":\n      throw await de_ParameterAlreadyExistsRes(parsedOutput, context);\n    case \"ParameterLimitExceeded\":\n    case \"com.amazonaws.ssm#ParameterLimitExceeded\":\n      throw await de_ParameterLimitExceededRes(parsedOutput, context);\n    case \"ParameterMaxVersionLimitExceeded\":\n    case \"com.amazonaws.ssm#ParameterMaxVersionLimitExceeded\":\n      throw await de_ParameterMaxVersionLimitExceededRes(parsedOutput, context);\n    case \"ParameterPatternMismatchException\":\n    case \"com.amazonaws.ssm#ParameterPatternMismatchException\":\n      throw await de_ParameterPatternMismatchExceptionRes(parsedOutput, context);\n    case \"PoliciesLimitExceededException\":\n    case \"com.amazonaws.ssm#PoliciesLimitExceededException\":\n      throw await de_PoliciesLimitExceededExceptionRes(parsedOutput, context);\n    case \"UnsupportedParameterType\":\n    case \"com.amazonaws.ssm#UnsupportedParameterType\":\n      throw await de_UnsupportedParameterTypeRes(parsedOutput, context);\n    case \"ResourcePolicyLimitExceededException\":\n    case \"com.amazonaws.ssm#ResourcePolicyLimitExceededException\":\n      throw await de_ResourcePolicyLimitExceededExceptionRes(parsedOutput, context);\n    case \"AlreadyExistsException\":\n    case \"com.amazonaws.ssm#AlreadyExistsException\":\n      throw await de_AlreadyExistsExceptionRes(parsedOutput, context);\n    case \"FeatureNotAvailableException\":\n    case \"com.amazonaws.ssm#FeatureNotAvailableException\":\n      throw await de_FeatureNotAvailableExceptionRes(parsedOutput, context);\n    case \"AutomationStepNotFoundException\":\n    case \"com.amazonaws.ssm#AutomationStepNotFoundException\":\n      throw await de_AutomationStepNotFoundExceptionRes(parsedOutput, context);\n    case \"InvalidAutomationSignalException\":\n    case \"com.amazonaws.ssm#InvalidAutomationSignalException\":\n      throw await de_InvalidAutomationSignalExceptionRes(parsedOutput, context);\n    case \"InvalidNotificationConfig\":\n    case \"com.amazonaws.ssm#InvalidNotificationConfig\":\n      throw await de_InvalidNotificationConfigRes(parsedOutput, context);\n    case \"InvalidOutputFolder\":\n    case \"com.amazonaws.ssm#InvalidOutputFolder\":\n      throw await de_InvalidOutputFolderRes(parsedOutput, context);\n    case \"InvalidRole\":\n    case \"com.amazonaws.ssm#InvalidRole\":\n      throw await de_InvalidRoleRes(parsedOutput, context);\n    case \"InvalidAssociation\":\n    case \"com.amazonaws.ssm#InvalidAssociation\":\n      throw await de_InvalidAssociationRes(parsedOutput, context);\n    case \"AutomationDefinitionNotFoundException\":\n    case \"com.amazonaws.ssm#AutomationDefinitionNotFoundException\":\n      throw await de_AutomationDefinitionNotFoundExceptionRes(parsedOutput, context);\n    case \"AutomationDefinitionVersionNotFoundException\":\n    case \"com.amazonaws.ssm#AutomationDefinitionVersionNotFoundException\":\n      throw await de_AutomationDefinitionVersionNotFoundExceptionRes(parsedOutput, context);\n    case \"AutomationExecutionLimitExceededException\":\n    case \"com.amazonaws.ssm#AutomationExecutionLimitExceededException\":\n      throw await de_AutomationExecutionLimitExceededExceptionRes(parsedOutput, context);\n    case \"InvalidAutomationExecutionParametersException\":\n    case \"com.amazonaws.ssm#InvalidAutomationExecutionParametersException\":\n      throw await de_InvalidAutomationExecutionParametersExceptionRes(parsedOutput, context);\n    case \"AutomationDefinitionNotApprovedException\":\n    case \"com.amazonaws.ssm#AutomationDefinitionNotApprovedException\":\n      throw await de_AutomationDefinitionNotApprovedExceptionRes(parsedOutput, context);\n    case \"TargetNotConnected\":\n    case \"com.amazonaws.ssm#TargetNotConnected\":\n      throw await de_TargetNotConnectedRes(parsedOutput, context);\n    case \"InvalidAutomationStatusUpdateException\":\n    case \"com.amazonaws.ssm#InvalidAutomationStatusUpdateException\":\n      throw await de_InvalidAutomationStatusUpdateExceptionRes(parsedOutput, context);\n    case \"AssociationVersionLimitExceeded\":\n    case \"com.amazonaws.ssm#AssociationVersionLimitExceeded\":\n      throw await de_AssociationVersionLimitExceededRes(parsedOutput, context);\n    case \"InvalidUpdate\":\n    case \"com.amazonaws.ssm#InvalidUpdate\":\n      throw await de_InvalidUpdateRes(parsedOutput, context);\n    case \"StatusUnchanged\":\n    case \"com.amazonaws.ssm#StatusUnchanged\":\n      throw await de_StatusUnchangedRes(parsedOutput, context);\n    case \"DocumentVersionLimitExceeded\":\n    case \"com.amazonaws.ssm#DocumentVersionLimitExceeded\":\n      throw await de_DocumentVersionLimitExceededRes(parsedOutput, context);\n    case \"DuplicateDocumentContent\":\n    case \"com.amazonaws.ssm#DuplicateDocumentContent\":\n      throw await de_DuplicateDocumentContentRes(parsedOutput, context);\n    case \"DuplicateDocumentVersionName\":\n    case \"com.amazonaws.ssm#DuplicateDocumentVersionName\":\n      throw await de_DuplicateDocumentVersionNameRes(parsedOutput, context);\n    case \"OpsMetadataKeyLimitExceededException\":\n    case \"com.amazonaws.ssm#OpsMetadataKeyLimitExceededException\":\n      throw await de_OpsMetadataKeyLimitExceededExceptionRes(parsedOutput, context);\n    case \"ResourceDataSyncConflictException\":\n    case \"com.amazonaws.ssm#ResourceDataSyncConflictException\":\n      throw await de_ResourceDataSyncConflictExceptionRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode\n      });\n  }\n}, \"de_CommandError\");\nvar de_AlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AlreadyExistsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AlreadyExistsExceptionRes\");\nvar de_AssociatedInstancesRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AssociatedInstances({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AssociatedInstancesRes\");\nvar de_AssociationAlreadyExistsRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AssociationAlreadyExists({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AssociationAlreadyExistsRes\");\nvar de_AssociationDoesNotExistRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AssociationDoesNotExist({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AssociationDoesNotExistRes\");\nvar de_AssociationExecutionDoesNotExistRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AssociationExecutionDoesNotExist({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AssociationExecutionDoesNotExistRes\");\nvar de_AssociationLimitExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AssociationLimitExceeded({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AssociationLimitExceededRes\");\nvar de_AssociationVersionLimitExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AssociationVersionLimitExceeded({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AssociationVersionLimitExceededRes\");\nvar de_AutomationDefinitionNotApprovedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AutomationDefinitionNotApprovedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AutomationDefinitionNotApprovedExceptionRes\");\nvar de_AutomationDefinitionNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AutomationDefinitionNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AutomationDefinitionNotFoundExceptionRes\");\nvar de_AutomationDefinitionVersionNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AutomationDefinitionVersionNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AutomationDefinitionVersionNotFoundExceptionRes\");\nvar de_AutomationExecutionLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AutomationExecutionLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AutomationExecutionLimitExceededExceptionRes\");\nvar de_AutomationExecutionNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AutomationExecutionNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AutomationExecutionNotFoundExceptionRes\");\nvar de_AutomationStepNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new AutomationStepNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AutomationStepNotFoundExceptionRes\");\nvar de_ComplianceTypeCountLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ComplianceTypeCountLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ComplianceTypeCountLimitExceededExceptionRes\");\nvar de_CustomSchemaCountLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new CustomSchemaCountLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_CustomSchemaCountLimitExceededExceptionRes\");\nvar de_DocumentAlreadyExistsRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new DocumentAlreadyExists({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DocumentAlreadyExistsRes\");\nvar de_DocumentLimitExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new DocumentLimitExceeded({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DocumentLimitExceededRes\");\nvar de_DocumentPermissionLimitRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new DocumentPermissionLimit({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DocumentPermissionLimitRes\");\nvar de_DocumentVersionLimitExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new DocumentVersionLimitExceeded({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DocumentVersionLimitExceededRes\");\nvar de_DoesNotExistExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new DoesNotExistException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DoesNotExistExceptionRes\");\nvar de_DuplicateDocumentContentRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new DuplicateDocumentContent({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DuplicateDocumentContentRes\");\nvar de_DuplicateDocumentVersionNameRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new DuplicateDocumentVersionName({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DuplicateDocumentVersionNameRes\");\nvar de_DuplicateInstanceIdRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new DuplicateInstanceId({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_DuplicateInstanceIdRes\");\nvar de_FeatureNotAvailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new FeatureNotAvailableException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_FeatureNotAvailableExceptionRes\");\nvar de_HierarchyLevelLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new HierarchyLevelLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_HierarchyLevelLimitExceededExceptionRes\");\nvar de_HierarchyTypeMismatchExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new HierarchyTypeMismatchException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_HierarchyTypeMismatchExceptionRes\");\nvar de_IdempotentParameterMismatchRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new IdempotentParameterMismatch({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_IdempotentParameterMismatchRes\");\nvar de_IncompatiblePolicyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new IncompatiblePolicyException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_IncompatiblePolicyExceptionRes\");\nvar de_InternalServerErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InternalServerError({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InternalServerErrorRes\");\nvar de_InvalidActivationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidActivation({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidActivationRes\");\nvar de_InvalidActivationIdRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidActivationId({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidActivationIdRes\");\nvar de_InvalidAggregatorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidAggregatorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAggregatorExceptionRes\");\nvar de_InvalidAllowedPatternExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidAllowedPatternException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAllowedPatternExceptionRes\");\nvar de_InvalidAssociationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidAssociation({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAssociationRes\");\nvar de_InvalidAssociationVersionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidAssociationVersion({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAssociationVersionRes\");\nvar de_InvalidAutomationExecutionParametersExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidAutomationExecutionParametersException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAutomationExecutionParametersExceptionRes\");\nvar de_InvalidAutomationSignalExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidAutomationSignalException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAutomationSignalExceptionRes\");\nvar de_InvalidAutomationStatusUpdateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidAutomationStatusUpdateException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidAutomationStatusUpdateExceptionRes\");\nvar de_InvalidCommandIdRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidCommandId({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidCommandIdRes\");\nvar de_InvalidDeleteInventoryParametersExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidDeleteInventoryParametersException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidDeleteInventoryParametersExceptionRes\");\nvar de_InvalidDeletionIdExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidDeletionIdException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidDeletionIdExceptionRes\");\nvar de_InvalidDocumentRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidDocument({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidDocumentRes\");\nvar de_InvalidDocumentContentRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidDocumentContent({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidDocumentContentRes\");\nvar de_InvalidDocumentOperationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidDocumentOperation({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidDocumentOperationRes\");\nvar de_InvalidDocumentSchemaVersionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidDocumentSchemaVersion({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidDocumentSchemaVersionRes\");\nvar de_InvalidDocumentTypeRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidDocumentType({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidDocumentTypeRes\");\nvar de_InvalidDocumentVersionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidDocumentVersion({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidDocumentVersionRes\");\nvar de_InvalidFilterRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidFilter({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidFilterRes\");\nvar de_InvalidFilterKeyRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidFilterKey({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidFilterKeyRes\");\nvar de_InvalidFilterOptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidFilterOption({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidFilterOptionRes\");\nvar de_InvalidFilterValueRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidFilterValue({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidFilterValueRes\");\nvar de_InvalidInstanceIdRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidInstanceId({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidInstanceIdRes\");\nvar de_InvalidInstanceInformationFilterValueRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidInstanceInformationFilterValue({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidInstanceInformationFilterValueRes\");\nvar de_InvalidInstancePropertyFilterValueRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidInstancePropertyFilterValue({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidInstancePropertyFilterValueRes\");\nvar de_InvalidInventoryGroupExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidInventoryGroupException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidInventoryGroupExceptionRes\");\nvar de_InvalidInventoryItemContextExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidInventoryItemContextException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidInventoryItemContextExceptionRes\");\nvar de_InvalidInventoryRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidInventoryRequestException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidInventoryRequestExceptionRes\");\nvar de_InvalidItemContentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidItemContentException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidItemContentExceptionRes\");\nvar de_InvalidKeyIdRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidKeyId({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidKeyIdRes\");\nvar de_InvalidNextTokenRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidNextToken({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidNextTokenRes\");\nvar de_InvalidNotificationConfigRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidNotificationConfig({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidNotificationConfigRes\");\nvar de_InvalidOptionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidOptionException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidOptionExceptionRes\");\nvar de_InvalidOutputFolderRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidOutputFolder({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidOutputFolderRes\");\nvar de_InvalidOutputLocationRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidOutputLocation({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidOutputLocationRes\");\nvar de_InvalidParametersRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidParameters({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidParametersRes\");\nvar de_InvalidPermissionTypeRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidPermissionType({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidPermissionTypeRes\");\nvar de_InvalidPluginNameRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidPluginName({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidPluginNameRes\");\nvar de_InvalidPolicyAttributeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidPolicyAttributeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidPolicyAttributeExceptionRes\");\nvar de_InvalidPolicyTypeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidPolicyTypeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidPolicyTypeExceptionRes\");\nvar de_InvalidResourceIdRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidResourceId({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidResourceIdRes\");\nvar de_InvalidResourceTypeRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidResourceType({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidResourceTypeRes\");\nvar de_InvalidResultAttributeExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidResultAttributeException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidResultAttributeExceptionRes\");\nvar de_InvalidRoleRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidRole({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidRoleRes\");\nvar de_InvalidScheduleRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidSchedule({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidScheduleRes\");\nvar de_InvalidTagRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidTag({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidTagRes\");\nvar de_InvalidTargetRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidTarget({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidTargetRes\");\nvar de_InvalidTargetMapsRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidTargetMaps({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidTargetMapsRes\");\nvar de_InvalidTypeNameExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidTypeNameException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidTypeNameExceptionRes\");\nvar de_InvalidUpdateRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvalidUpdate({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidUpdateRes\");\nvar de_InvocationDoesNotExistRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new InvocationDoesNotExist({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvocationDoesNotExistRes\");\nvar de_ItemContentMismatchExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ItemContentMismatchException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ItemContentMismatchExceptionRes\");\nvar de_ItemSizeLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ItemSizeLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ItemSizeLimitExceededExceptionRes\");\nvar de_MalformedResourcePolicyDocumentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new MalformedResourcePolicyDocumentException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_MalformedResourcePolicyDocumentExceptionRes\");\nvar de_MaxDocumentSizeExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new MaxDocumentSizeExceeded({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_MaxDocumentSizeExceededRes\");\nvar de_OpsItemAccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsItemAccessDeniedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsItemAccessDeniedExceptionRes\");\nvar de_OpsItemAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsItemAlreadyExistsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsItemAlreadyExistsExceptionRes\");\nvar de_OpsItemConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsItemConflictException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsItemConflictExceptionRes\");\nvar de_OpsItemInvalidParameterExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsItemInvalidParameterException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsItemInvalidParameterExceptionRes\");\nvar de_OpsItemLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsItemLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsItemLimitExceededExceptionRes\");\nvar de_OpsItemNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsItemNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsItemNotFoundExceptionRes\");\nvar de_OpsItemRelatedItemAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsItemRelatedItemAlreadyExistsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsItemRelatedItemAlreadyExistsExceptionRes\");\nvar de_OpsItemRelatedItemAssociationNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsItemRelatedItemAssociationNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsItemRelatedItemAssociationNotFoundExceptionRes\");\nvar de_OpsMetadataAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsMetadataAlreadyExistsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsMetadataAlreadyExistsExceptionRes\");\nvar de_OpsMetadataInvalidArgumentExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsMetadataInvalidArgumentException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsMetadataInvalidArgumentExceptionRes\");\nvar de_OpsMetadataKeyLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsMetadataKeyLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsMetadataKeyLimitExceededExceptionRes\");\nvar de_OpsMetadataLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsMetadataLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsMetadataLimitExceededExceptionRes\");\nvar de_OpsMetadataNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsMetadataNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsMetadataNotFoundExceptionRes\");\nvar de_OpsMetadataTooManyUpdatesExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new OpsMetadataTooManyUpdatesException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OpsMetadataTooManyUpdatesExceptionRes\");\nvar de_ParameterAlreadyExistsRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ParameterAlreadyExists({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ParameterAlreadyExistsRes\");\nvar de_ParameterLimitExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ParameterLimitExceeded({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ParameterLimitExceededRes\");\nvar de_ParameterMaxVersionLimitExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ParameterMaxVersionLimitExceeded({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ParameterMaxVersionLimitExceededRes\");\nvar de_ParameterNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ParameterNotFound({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ParameterNotFoundRes\");\nvar de_ParameterPatternMismatchExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ParameterPatternMismatchException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ParameterPatternMismatchExceptionRes\");\nvar de_ParameterVersionLabelLimitExceededRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ParameterVersionLabelLimitExceeded({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ParameterVersionLabelLimitExceededRes\");\nvar de_ParameterVersionNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ParameterVersionNotFound({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ParameterVersionNotFoundRes\");\nvar de_PoliciesLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new PoliciesLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_PoliciesLimitExceededExceptionRes\");\nvar de_ResourceDataSyncAlreadyExistsExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourceDataSyncAlreadyExistsException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceDataSyncAlreadyExistsExceptionRes\");\nvar de_ResourceDataSyncConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourceDataSyncConflictException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceDataSyncConflictExceptionRes\");\nvar de_ResourceDataSyncCountExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourceDataSyncCountExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceDataSyncCountExceededExceptionRes\");\nvar de_ResourceDataSyncInvalidConfigurationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourceDataSyncInvalidConfigurationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceDataSyncInvalidConfigurationExceptionRes\");\nvar de_ResourceDataSyncNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourceDataSyncNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceDataSyncNotFoundExceptionRes\");\nvar de_ResourceInUseExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourceInUseException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceInUseExceptionRes\");\nvar de_ResourceLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourceLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceLimitExceededExceptionRes\");\nvar de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourceNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceNotFoundExceptionRes\");\nvar de_ResourcePolicyConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourcePolicyConflictException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourcePolicyConflictExceptionRes\");\nvar de_ResourcePolicyInvalidParameterExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourcePolicyInvalidParameterException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourcePolicyInvalidParameterExceptionRes\");\nvar de_ResourcePolicyLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourcePolicyLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourcePolicyLimitExceededExceptionRes\");\nvar de_ResourcePolicyNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ResourcePolicyNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourcePolicyNotFoundExceptionRes\");\nvar de_ServiceSettingNotFoundRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new ServiceSettingNotFound({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ServiceSettingNotFoundRes\");\nvar de_StatusUnchangedRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new StatusUnchanged({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_StatusUnchangedRes\");\nvar de_SubTypeCountLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new SubTypeCountLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_SubTypeCountLimitExceededExceptionRes\");\nvar de_TargetInUseExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new TargetInUseException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TargetInUseExceptionRes\");\nvar de_TargetNotConnectedRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new TargetNotConnected({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TargetNotConnectedRes\");\nvar de_TooManyTagsErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new TooManyTagsError({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TooManyTagsErrorRes\");\nvar de_TooManyUpdatesRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new TooManyUpdates({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TooManyUpdatesRes\");\nvar de_TotalSizeLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new TotalSizeLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TotalSizeLimitExceededExceptionRes\");\nvar de_UnsupportedCalendarExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new UnsupportedCalendarException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnsupportedCalendarExceptionRes\");\nvar de_UnsupportedFeatureRequiredExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new UnsupportedFeatureRequiredException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnsupportedFeatureRequiredExceptionRes\");\nvar de_UnsupportedInventoryItemContextExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new UnsupportedInventoryItemContextException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnsupportedInventoryItemContextExceptionRes\");\nvar de_UnsupportedInventorySchemaVersionExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new UnsupportedInventorySchemaVersionException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnsupportedInventorySchemaVersionExceptionRes\");\nvar de_UnsupportedOperatingSystemRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new UnsupportedOperatingSystem({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnsupportedOperatingSystemRes\");\nvar de_UnsupportedParameterTypeRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new UnsupportedParameterType({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnsupportedParameterTypeRes\");\nvar de_UnsupportedPlatformTypeRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = (0, import_smithy_client._json)(body);\n  const exception = new UnsupportedPlatformType({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UnsupportedPlatformTypeRes\");\nvar se_AssociationStatus = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    AdditionalInfo: [],\n    Date: (_) => _.getTime() / 1e3,\n    Message: [],\n    Name: []\n  });\n}, \"se_AssociationStatus\");\nvar se_ComplianceExecutionSummary = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    ExecutionId: [],\n    ExecutionTime: (_) => _.getTime() / 1e3,\n    ExecutionType: []\n  });\n}, \"se_ComplianceExecutionSummary\");\nvar se_CreateActivationRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    DefaultInstanceName: [],\n    Description: [],\n    ExpirationDate: (_) => _.getTime() / 1e3,\n    IamRole: [],\n    RegistrationLimit: [],\n    RegistrationMetadata: import_smithy_client._json,\n    Tags: import_smithy_client._json\n  });\n}, \"se_CreateActivationRequest\");\nvar se_CreateMaintenanceWindowRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    AllowUnassociatedTargets: [],\n    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],\n    Cutoff: [],\n    Description: [],\n    Duration: [],\n    EndDate: [],\n    Name: [],\n    Schedule: [],\n    ScheduleOffset: [],\n    ScheduleTimezone: [],\n    StartDate: [],\n    Tags: import_smithy_client._json\n  });\n}, \"se_CreateMaintenanceWindowRequest\");\nvar se_CreateOpsItemRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    AccountId: [],\n    ActualEndTime: (_) => _.getTime() / 1e3,\n    ActualStartTime: (_) => _.getTime() / 1e3,\n    Category: [],\n    Description: [],\n    Notifications: import_smithy_client._json,\n    OperationalData: import_smithy_client._json,\n    OpsItemType: [],\n    PlannedEndTime: (_) => _.getTime() / 1e3,\n    PlannedStartTime: (_) => _.getTime() / 1e3,\n    Priority: [],\n    RelatedOpsItems: import_smithy_client._json,\n    Severity: [],\n    Source: [],\n    Tags: import_smithy_client._json,\n    Title: []\n  });\n}, \"se_CreateOpsItemRequest\");\nvar se_CreatePatchBaselineRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    ApprovalRules: import_smithy_client._json,\n    ApprovedPatches: import_smithy_client._json,\n    ApprovedPatchesComplianceLevel: [],\n    ApprovedPatchesEnableNonSecurity: [],\n    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],\n    Description: [],\n    GlobalFilters: import_smithy_client._json,\n    Name: [],\n    OperatingSystem: [],\n    RejectedPatches: import_smithy_client._json,\n    RejectedPatchesAction: [],\n    Sources: import_smithy_client._json,\n    Tags: import_smithy_client._json\n  });\n}, \"se_CreatePatchBaselineRequest\");\nvar se_DeleteInventoryRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],\n    DryRun: [],\n    SchemaDeleteOption: [],\n    TypeName: []\n  });\n}, \"se_DeleteInventoryRequest\");\nvar se_GetInventoryRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    Aggregators: (_) => se_InventoryAggregatorList(_, context),\n    Filters: import_smithy_client._json,\n    MaxResults: [],\n    NextToken: [],\n    ResultAttributes: import_smithy_client._json\n  });\n}, \"se_GetInventoryRequest\");\nvar se_GetOpsSummaryRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    Aggregators: (_) => se_OpsAggregatorList(_, context),\n    Filters: import_smithy_client._json,\n    MaxResults: [],\n    NextToken: [],\n    ResultAttributes: import_smithy_client._json,\n    SyncName: []\n  });\n}, \"se_GetOpsSummaryRequest\");\nvar se_InventoryAggregator = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    Aggregators: (_) => se_InventoryAggregatorList(_, context),\n    Expression: [],\n    Groups: import_smithy_client._json\n  });\n}, \"se_InventoryAggregator\");\nvar se_InventoryAggregatorList = /* @__PURE__ */ __name((input, context) => {\n  return input.filter((e) => e != null).map((entry) => {\n    return se_InventoryAggregator(entry, context);\n  });\n}, \"se_InventoryAggregatorList\");\nvar se_MaintenanceWindowLambdaParameters = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    ClientContext: [],\n    Payload: context.base64Encoder,\n    Qualifier: []\n  });\n}, \"se_MaintenanceWindowLambdaParameters\");\nvar se_MaintenanceWindowTaskInvocationParameters = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    Automation: import_smithy_client._json,\n    Lambda: (_) => se_MaintenanceWindowLambdaParameters(_, context),\n    RunCommand: import_smithy_client._json,\n    StepFunctions: import_smithy_client._json\n  });\n}, \"se_MaintenanceWindowTaskInvocationParameters\");\nvar se_OpsAggregator = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    AggregatorType: [],\n    Aggregators: (_) => se_OpsAggregatorList(_, context),\n    AttributeName: [],\n    Filters: import_smithy_client._json,\n    TypeName: [],\n    Values: import_smithy_client._json\n  });\n}, \"se_OpsAggregator\");\nvar se_OpsAggregatorList = /* @__PURE__ */ __name((input, context) => {\n  return input.filter((e) => e != null).map((entry) => {\n    return se_OpsAggregator(entry, context);\n  });\n}, \"se_OpsAggregatorList\");\nvar se_PutComplianceItemsRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    ComplianceType: [],\n    ExecutionSummary: (_) => se_ComplianceExecutionSummary(_, context),\n    ItemContentHash: [],\n    Items: import_smithy_client._json,\n    ResourceId: [],\n    ResourceType: [],\n    UploadType: []\n  });\n}, \"se_PutComplianceItemsRequest\");\nvar se_RegisterTargetWithMaintenanceWindowRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],\n    Description: [],\n    Name: [],\n    OwnerInformation: [],\n    ResourceType: [],\n    Targets: import_smithy_client._json,\n    WindowId: []\n  });\n}, \"se_RegisterTargetWithMaintenanceWindowRequest\");\nvar se_RegisterTaskWithMaintenanceWindowRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    AlarmConfiguration: import_smithy_client._json,\n    ClientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],\n    CutoffBehavior: [],\n    Description: [],\n    LoggingInfo: import_smithy_client._json,\n    MaxConcurrency: [],\n    MaxErrors: [],\n    Name: [],\n    Priority: [],\n    ServiceRoleArn: [],\n    Targets: import_smithy_client._json,\n    TaskArn: [],\n    TaskInvocationParameters: (_) => se_MaintenanceWindowTaskInvocationParameters(_, context),\n    TaskParameters: import_smithy_client._json,\n    TaskType: [],\n    WindowId: []\n  });\n}, \"se_RegisterTaskWithMaintenanceWindowRequest\");\nvar se_StartChangeRequestExecutionRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    AutoApprove: [],\n    ChangeDetails: [],\n    ChangeRequestName: [],\n    ClientToken: [],\n    DocumentName: [],\n    DocumentVersion: [],\n    Parameters: import_smithy_client._json,\n    Runbooks: import_smithy_client._json,\n    ScheduledEndTime: (_) => _.getTime() / 1e3,\n    ScheduledTime: (_) => _.getTime() / 1e3,\n    Tags: import_smithy_client._json\n  });\n}, \"se_StartChangeRequestExecutionRequest\");\nvar se_UpdateAssociationStatusRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    AssociationStatus: (_) => se_AssociationStatus(_, context),\n    InstanceId: [],\n    Name: []\n  });\n}, \"se_UpdateAssociationStatusRequest\");\nvar se_UpdateMaintenanceWindowTaskRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    AlarmConfiguration: import_smithy_client._json,\n    CutoffBehavior: [],\n    Description: [],\n    LoggingInfo: import_smithy_client._json,\n    MaxConcurrency: [],\n    MaxErrors: [],\n    Name: [],\n    Priority: [],\n    Replace: [],\n    ServiceRoleArn: [],\n    Targets: import_smithy_client._json,\n    TaskArn: [],\n    TaskInvocationParameters: (_) => se_MaintenanceWindowTaskInvocationParameters(_, context),\n    TaskParameters: import_smithy_client._json,\n    WindowId: [],\n    WindowTaskId: []\n  });\n}, \"se_UpdateMaintenanceWindowTaskRequest\");\nvar se_UpdateOpsItemRequest = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    ActualEndTime: (_) => _.getTime() / 1e3,\n    ActualStartTime: (_) => _.getTime() / 1e3,\n    Category: [],\n    Description: [],\n    Notifications: import_smithy_client._json,\n    OperationalData: import_smithy_client._json,\n    OperationalDataToDelete: import_smithy_client._json,\n    OpsItemArn: [],\n    OpsItemId: [],\n    PlannedEndTime: (_) => _.getTime() / 1e3,\n    PlannedStartTime: (_) => _.getTime() / 1e3,\n    Priority: [],\n    RelatedOpsItems: import_smithy_client._json,\n    Severity: [],\n    Status: [],\n    Title: []\n  });\n}, \"se_UpdateOpsItemRequest\");\nvar de_Activation = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ActivationId: import_smithy_client.expectString,\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DefaultInstanceName: import_smithy_client.expectString,\n    Description: import_smithy_client.expectString,\n    ExpirationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Expired: import_smithy_client.expectBoolean,\n    IamRole: import_smithy_client.expectString,\n    RegistrationLimit: import_smithy_client.expectInt32,\n    RegistrationsCount: import_smithy_client.expectInt32,\n    Tags: import_smithy_client._json\n  });\n}, \"de_Activation\");\nvar de_ActivationList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Activation(entry, context);\n  });\n  return retVal;\n}, \"de_ActivationList\");\nvar de_Association = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationId: import_smithy_client.expectString,\n    AssociationName: import_smithy_client.expectString,\n    AssociationVersion: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    Duration: import_smithy_client.expectInt32,\n    InstanceId: import_smithy_client.expectString,\n    LastExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Name: import_smithy_client.expectString,\n    Overview: import_smithy_client._json,\n    ScheduleExpression: import_smithy_client.expectString,\n    ScheduleOffset: import_smithy_client.expectInt32,\n    TargetMaps: import_smithy_client._json,\n    Targets: import_smithy_client._json\n  });\n}, \"de_Association\");\nvar de_AssociationDescription = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    ApplyOnlyAtCronInterval: import_smithy_client.expectBoolean,\n    AssociationId: import_smithy_client.expectString,\n    AssociationName: import_smithy_client.expectString,\n    AssociationVersion: import_smithy_client.expectString,\n    AutomationTargetParameterName: import_smithy_client.expectString,\n    CalendarNames: import_smithy_client._json,\n    ComplianceSeverity: import_smithy_client.expectString,\n    Date: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DocumentVersion: import_smithy_client.expectString,\n    Duration: import_smithy_client.expectInt32,\n    InstanceId: import_smithy_client.expectString,\n    LastExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastSuccessfulExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastUpdateAssociationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    MaxConcurrency: import_smithy_client.expectString,\n    MaxErrors: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    OutputLocation: import_smithy_client._json,\n    Overview: import_smithy_client._json,\n    Parameters: import_smithy_client._json,\n    ScheduleExpression: import_smithy_client.expectString,\n    ScheduleOffset: import_smithy_client.expectInt32,\n    Status: (_) => de_AssociationStatus(_, context),\n    SyncCompliance: import_smithy_client.expectString,\n    TargetLocations: import_smithy_client._json,\n    TargetMaps: import_smithy_client._json,\n    Targets: import_smithy_client._json,\n    TriggeredAlarms: import_smithy_client._json\n  });\n}, \"de_AssociationDescription\");\nvar de_AssociationDescriptionList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_AssociationDescription(entry, context);\n  });\n  return retVal;\n}, \"de_AssociationDescriptionList\");\nvar de_AssociationExecution = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    AssociationId: import_smithy_client.expectString,\n    AssociationVersion: import_smithy_client.expectString,\n    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DetailedStatus: import_smithy_client.expectString,\n    ExecutionId: import_smithy_client.expectString,\n    LastExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ResourceCountByStatus: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    TriggeredAlarms: import_smithy_client._json\n  });\n}, \"de_AssociationExecution\");\nvar de_AssociationExecutionsList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_AssociationExecution(entry, context);\n  });\n  return retVal;\n}, \"de_AssociationExecutionsList\");\nvar de_AssociationExecutionTarget = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationId: import_smithy_client.expectString,\n    AssociationVersion: import_smithy_client.expectString,\n    DetailedStatus: import_smithy_client.expectString,\n    ExecutionId: import_smithy_client.expectString,\n    LastExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    OutputSource: import_smithy_client._json,\n    ResourceId: import_smithy_client.expectString,\n    ResourceType: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString\n  });\n}, \"de_AssociationExecutionTarget\");\nvar de_AssociationExecutionTargetsList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_AssociationExecutionTarget(entry, context);\n  });\n  return retVal;\n}, \"de_AssociationExecutionTargetsList\");\nvar de_AssociationList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Association(entry, context);\n  });\n  return retVal;\n}, \"de_AssociationList\");\nvar de_AssociationStatus = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AdditionalInfo: import_smithy_client.expectString,\n    Date: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Message: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString\n  });\n}, \"de_AssociationStatus\");\nvar de_AssociationVersionInfo = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ApplyOnlyAtCronInterval: import_smithy_client.expectBoolean,\n    AssociationId: import_smithy_client.expectString,\n    AssociationName: import_smithy_client.expectString,\n    AssociationVersion: import_smithy_client.expectString,\n    CalendarNames: import_smithy_client._json,\n    ComplianceSeverity: import_smithy_client.expectString,\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DocumentVersion: import_smithy_client.expectString,\n    Duration: import_smithy_client.expectInt32,\n    MaxConcurrency: import_smithy_client.expectString,\n    MaxErrors: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    OutputLocation: import_smithy_client._json,\n    Parameters: import_smithy_client._json,\n    ScheduleExpression: import_smithy_client.expectString,\n    ScheduleOffset: import_smithy_client.expectInt32,\n    SyncCompliance: import_smithy_client.expectString,\n    TargetLocations: import_smithy_client._json,\n    TargetMaps: import_smithy_client._json,\n    Targets: import_smithy_client._json\n  });\n}, \"de_AssociationVersionInfo\");\nvar de_AssociationVersionList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_AssociationVersionInfo(entry, context);\n  });\n  return retVal;\n}, \"de_AssociationVersionList\");\nvar de_AutomationExecution = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    AssociationId: import_smithy_client.expectString,\n    AutomationExecutionId: import_smithy_client.expectString,\n    AutomationExecutionStatus: import_smithy_client.expectString,\n    AutomationSubtype: import_smithy_client.expectString,\n    ChangeRequestName: import_smithy_client.expectString,\n    CurrentAction: import_smithy_client.expectString,\n    CurrentStepName: import_smithy_client.expectString,\n    DocumentName: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    ExecutedBy: import_smithy_client.expectString,\n    ExecutionEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ExecutionStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    FailureMessage: import_smithy_client.expectString,\n    MaxConcurrency: import_smithy_client.expectString,\n    MaxErrors: import_smithy_client.expectString,\n    Mode: import_smithy_client.expectString,\n    OpsItemId: import_smithy_client.expectString,\n    Outputs: import_smithy_client._json,\n    Parameters: import_smithy_client._json,\n    ParentAutomationExecutionId: import_smithy_client.expectString,\n    ProgressCounters: import_smithy_client._json,\n    ResolvedTargets: import_smithy_client._json,\n    Runbooks: import_smithy_client._json,\n    ScheduledTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    StepExecutions: (_) => de_StepExecutionList(_, context),\n    StepExecutionsTruncated: import_smithy_client.expectBoolean,\n    Target: import_smithy_client.expectString,\n    TargetLocations: import_smithy_client._json,\n    TargetMaps: import_smithy_client._json,\n    TargetParameterName: import_smithy_client.expectString,\n    Targets: import_smithy_client._json,\n    TriggeredAlarms: import_smithy_client._json,\n    Variables: import_smithy_client._json\n  });\n}, \"de_AutomationExecution\");\nvar de_AutomationExecutionMetadata = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    AssociationId: import_smithy_client.expectString,\n    AutomationExecutionId: import_smithy_client.expectString,\n    AutomationExecutionStatus: import_smithy_client.expectString,\n    AutomationSubtype: import_smithy_client.expectString,\n    AutomationType: import_smithy_client.expectString,\n    ChangeRequestName: import_smithy_client.expectString,\n    CurrentAction: import_smithy_client.expectString,\n    CurrentStepName: import_smithy_client.expectString,\n    DocumentName: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    ExecutedBy: import_smithy_client.expectString,\n    ExecutionEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ExecutionStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    FailureMessage: import_smithy_client.expectString,\n    LogFile: import_smithy_client.expectString,\n    MaxConcurrency: import_smithy_client.expectString,\n    MaxErrors: import_smithy_client.expectString,\n    Mode: import_smithy_client.expectString,\n    OpsItemId: import_smithy_client.expectString,\n    Outputs: import_smithy_client._json,\n    ParentAutomationExecutionId: import_smithy_client.expectString,\n    ResolvedTargets: import_smithy_client._json,\n    Runbooks: import_smithy_client._json,\n    ScheduledTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Target: import_smithy_client.expectString,\n    TargetMaps: import_smithy_client._json,\n    TargetParameterName: import_smithy_client.expectString,\n    Targets: import_smithy_client._json,\n    TriggeredAlarms: import_smithy_client._json\n  });\n}, \"de_AutomationExecutionMetadata\");\nvar de_AutomationExecutionMetadataList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_AutomationExecutionMetadata(entry, context);\n  });\n  return retVal;\n}, \"de_AutomationExecutionMetadataList\");\nvar de_Command = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    CloudWatchOutputConfig: import_smithy_client._json,\n    CommandId: import_smithy_client.expectString,\n    Comment: import_smithy_client.expectString,\n    CompletedCount: import_smithy_client.expectInt32,\n    DeliveryTimedOutCount: import_smithy_client.expectInt32,\n    DocumentName: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    ErrorCount: import_smithy_client.expectInt32,\n    ExpiresAfter: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    InstanceIds: import_smithy_client._json,\n    MaxConcurrency: import_smithy_client.expectString,\n    MaxErrors: import_smithy_client.expectString,\n    NotificationConfig: import_smithy_client._json,\n    OutputS3BucketName: import_smithy_client.expectString,\n    OutputS3KeyPrefix: import_smithy_client.expectString,\n    OutputS3Region: import_smithy_client.expectString,\n    Parameters: import_smithy_client._json,\n    RequestedDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ServiceRole: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString,\n    TargetCount: import_smithy_client.expectInt32,\n    Targets: import_smithy_client._json,\n    TimeoutSeconds: import_smithy_client.expectInt32,\n    TriggeredAlarms: import_smithy_client._json\n  });\n}, \"de_Command\");\nvar de_CommandInvocation = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    CloudWatchOutputConfig: import_smithy_client._json,\n    CommandId: import_smithy_client.expectString,\n    CommandPlugins: (_) => de_CommandPluginList(_, context),\n    Comment: import_smithy_client.expectString,\n    DocumentName: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    InstanceId: import_smithy_client.expectString,\n    InstanceName: import_smithy_client.expectString,\n    NotificationConfig: import_smithy_client._json,\n    RequestedDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ServiceRole: import_smithy_client.expectString,\n    StandardErrorUrl: import_smithy_client.expectString,\n    StandardOutputUrl: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString,\n    TraceOutput: import_smithy_client.expectString\n  });\n}, \"de_CommandInvocation\");\nvar de_CommandInvocationList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_CommandInvocation(entry, context);\n  });\n  return retVal;\n}, \"de_CommandInvocationList\");\nvar de_CommandList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Command(entry, context);\n  });\n  return retVal;\n}, \"de_CommandList\");\nvar de_CommandPlugin = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Name: import_smithy_client.expectString,\n    Output: import_smithy_client.expectString,\n    OutputS3BucketName: import_smithy_client.expectString,\n    OutputS3KeyPrefix: import_smithy_client.expectString,\n    OutputS3Region: import_smithy_client.expectString,\n    ResponseCode: import_smithy_client.expectInt32,\n    ResponseFinishDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ResponseStartDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    StandardErrorUrl: import_smithy_client.expectString,\n    StandardOutputUrl: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString\n  });\n}, \"de_CommandPlugin\");\nvar de_CommandPluginList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_CommandPlugin(entry, context);\n  });\n  return retVal;\n}, \"de_CommandPluginList\");\nvar de_ComplianceExecutionSummary = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ExecutionId: import_smithy_client.expectString,\n    ExecutionTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ExecutionType: import_smithy_client.expectString\n  });\n}, \"de_ComplianceExecutionSummary\");\nvar de_ComplianceItem = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ComplianceType: import_smithy_client.expectString,\n    Details: import_smithy_client._json,\n    ExecutionSummary: (_) => de_ComplianceExecutionSummary(_, context),\n    Id: import_smithy_client.expectString,\n    ResourceId: import_smithy_client.expectString,\n    ResourceType: import_smithy_client.expectString,\n    Severity: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    Title: import_smithy_client.expectString\n  });\n}, \"de_ComplianceItem\");\nvar de_ComplianceItemList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_ComplianceItem(entry, context);\n  });\n  return retVal;\n}, \"de_ComplianceItemList\");\nvar de_CreateAssociationBatchResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Failed: import_smithy_client._json,\n    Successful: (_) => de_AssociationDescriptionList(_, context)\n  });\n}, \"de_CreateAssociationBatchResult\");\nvar de_CreateAssociationResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationDescription: (_) => de_AssociationDescription(_, context)\n  });\n}, \"de_CreateAssociationResult\");\nvar de_CreateDocumentResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    DocumentDescription: (_) => de_DocumentDescription(_, context)\n  });\n}, \"de_CreateDocumentResult\");\nvar de_DescribeActivationsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ActivationList: (_) => de_ActivationList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeActivationsResult\");\nvar de_DescribeAssociationExecutionsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationExecutions: (_) => de_AssociationExecutionsList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeAssociationExecutionsResult\");\nvar de_DescribeAssociationExecutionTargetsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationExecutionTargets: (_) => de_AssociationExecutionTargetsList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeAssociationExecutionTargetsResult\");\nvar de_DescribeAssociationResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationDescription: (_) => de_AssociationDescription(_, context)\n  });\n}, \"de_DescribeAssociationResult\");\nvar de_DescribeAutomationExecutionsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AutomationExecutionMetadataList: (_) => de_AutomationExecutionMetadataList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeAutomationExecutionsResult\");\nvar de_DescribeAutomationStepExecutionsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    StepExecutions: (_) => de_StepExecutionList(_, context)\n  });\n}, \"de_DescribeAutomationStepExecutionsResult\");\nvar de_DescribeAvailablePatchesResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    Patches: (_) => de_PatchList(_, context)\n  });\n}, \"de_DescribeAvailablePatchesResult\");\nvar de_DescribeDocumentResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Document: (_) => de_DocumentDescription(_, context)\n  });\n}, \"de_DescribeDocumentResult\");\nvar de_DescribeEffectivePatchesForPatchBaselineResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    EffectivePatches: (_) => de_EffectivePatchList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeEffectivePatchesForPatchBaselineResult\");\nvar de_DescribeInstanceAssociationsStatusResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    InstanceAssociationStatusInfos: (_) => de_InstanceAssociationStatusInfos(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeInstanceAssociationsStatusResult\");\nvar de_DescribeInstanceInformationResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    InstanceInformationList: (_) => de_InstanceInformationList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeInstanceInformationResult\");\nvar de_DescribeInstancePatchesResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    Patches: (_) => de_PatchComplianceDataList(_, context)\n  });\n}, \"de_DescribeInstancePatchesResult\");\nvar de_DescribeInstancePatchStatesForPatchGroupResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    InstancePatchStates: (_) => de_InstancePatchStatesList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeInstancePatchStatesForPatchGroupResult\");\nvar de_DescribeInstancePatchStatesResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    InstancePatchStates: (_) => de_InstancePatchStateList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeInstancePatchStatesResult\");\nvar de_DescribeInstancePropertiesResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    InstanceProperties: (_) => de_InstanceProperties(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeInstancePropertiesResult\");\nvar de_DescribeInventoryDeletionsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    InventoryDeletions: (_) => de_InventoryDeletionsList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_DescribeInventoryDeletionsResult\");\nvar de_DescribeMaintenanceWindowExecutionsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    WindowExecutions: (_) => de_MaintenanceWindowExecutionList(_, context)\n  });\n}, \"de_DescribeMaintenanceWindowExecutionsResult\");\nvar de_DescribeMaintenanceWindowExecutionTaskInvocationsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    WindowExecutionTaskInvocationIdentities: (_) => de_MaintenanceWindowExecutionTaskInvocationIdentityList(_, context)\n  });\n}, \"de_DescribeMaintenanceWindowExecutionTaskInvocationsResult\");\nvar de_DescribeMaintenanceWindowExecutionTasksResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    WindowExecutionTaskIdentities: (_) => de_MaintenanceWindowExecutionTaskIdentityList(_, context)\n  });\n}, \"de_DescribeMaintenanceWindowExecutionTasksResult\");\nvar de_DescribeOpsItemsResponse = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    OpsItemSummaries: (_) => de_OpsItemSummaries(_, context)\n  });\n}, \"de_DescribeOpsItemsResponse\");\nvar de_DescribeParametersResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    Parameters: (_) => de_ParameterMetadataList(_, context)\n  });\n}, \"de_DescribeParametersResult\");\nvar de_DescribeSessionsResponse = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    Sessions: (_) => de_SessionList(_, context)\n  });\n}, \"de_DescribeSessionsResponse\");\nvar de_DocumentDescription = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ApprovedVersion: import_smithy_client.expectString,\n    AttachmentsInformation: import_smithy_client._json,\n    Author: import_smithy_client.expectString,\n    Category: import_smithy_client._json,\n    CategoryEnum: import_smithy_client._json,\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DefaultVersion: import_smithy_client.expectString,\n    Description: import_smithy_client.expectString,\n    DisplayName: import_smithy_client.expectString,\n    DocumentFormat: import_smithy_client.expectString,\n    DocumentType: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    Hash: import_smithy_client.expectString,\n    HashType: import_smithy_client.expectString,\n    LatestVersion: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    Owner: import_smithy_client.expectString,\n    Parameters: import_smithy_client._json,\n    PendingReviewVersion: import_smithy_client.expectString,\n    PlatformTypes: import_smithy_client._json,\n    Requires: import_smithy_client._json,\n    ReviewInformation: (_) => de_ReviewInformationList(_, context),\n    ReviewStatus: import_smithy_client.expectString,\n    SchemaVersion: import_smithy_client.expectString,\n    Sha1: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    StatusInformation: import_smithy_client.expectString,\n    Tags: import_smithy_client._json,\n    TargetType: import_smithy_client.expectString,\n    VersionName: import_smithy_client.expectString\n  });\n}, \"de_DocumentDescription\");\nvar de_DocumentIdentifier = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Author: import_smithy_client.expectString,\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DisplayName: import_smithy_client.expectString,\n    DocumentFormat: import_smithy_client.expectString,\n    DocumentType: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    Owner: import_smithy_client.expectString,\n    PlatformTypes: import_smithy_client._json,\n    Requires: import_smithy_client._json,\n    ReviewStatus: import_smithy_client.expectString,\n    SchemaVersion: import_smithy_client.expectString,\n    Tags: import_smithy_client._json,\n    TargetType: import_smithy_client.expectString,\n    VersionName: import_smithy_client.expectString\n  });\n}, \"de_DocumentIdentifier\");\nvar de_DocumentIdentifierList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_DocumentIdentifier(entry, context);\n  });\n  return retVal;\n}, \"de_DocumentIdentifierList\");\nvar de_DocumentMetadataResponseInfo = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ReviewerResponse: (_) => de_DocumentReviewerResponseList(_, context)\n  });\n}, \"de_DocumentMetadataResponseInfo\");\nvar de_DocumentReviewerResponseList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_DocumentReviewerResponseSource(entry, context);\n  });\n  return retVal;\n}, \"de_DocumentReviewerResponseList\");\nvar de_DocumentReviewerResponseSource = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Comment: import_smithy_client._json,\n    CreateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ReviewStatus: import_smithy_client.expectString,\n    Reviewer: import_smithy_client.expectString,\n    UpdatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_)))\n  });\n}, \"de_DocumentReviewerResponseSource\");\nvar de_DocumentVersionInfo = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DisplayName: import_smithy_client.expectString,\n    DocumentFormat: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    IsDefaultVersion: import_smithy_client.expectBoolean,\n    Name: import_smithy_client.expectString,\n    ReviewStatus: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    StatusInformation: import_smithy_client.expectString,\n    VersionName: import_smithy_client.expectString\n  });\n}, \"de_DocumentVersionInfo\");\nvar de_DocumentVersionList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_DocumentVersionInfo(entry, context);\n  });\n  return retVal;\n}, \"de_DocumentVersionList\");\nvar de_EffectivePatch = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Patch: (_) => de_Patch(_, context),\n    PatchStatus: (_) => de_PatchStatus(_, context)\n  });\n}, \"de_EffectivePatch\");\nvar de_EffectivePatchList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_EffectivePatch(entry, context);\n  });\n  return retVal;\n}, \"de_EffectivePatchList\");\nvar de_GetAutomationExecutionResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AutomationExecution: (_) => de_AutomationExecution(_, context)\n  });\n}, \"de_GetAutomationExecutionResult\");\nvar de_GetDocumentResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AttachmentsContent: import_smithy_client._json,\n    Content: import_smithy_client.expectString,\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DisplayName: import_smithy_client.expectString,\n    DocumentFormat: import_smithy_client.expectString,\n    DocumentType: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    Requires: import_smithy_client._json,\n    ReviewStatus: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    StatusInformation: import_smithy_client.expectString,\n    VersionName: import_smithy_client.expectString\n  });\n}, \"de_GetDocumentResult\");\nvar de_GetMaintenanceWindowExecutionResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString,\n    TaskIds: import_smithy_client._json,\n    WindowExecutionId: import_smithy_client.expectString\n  });\n}, \"de_GetMaintenanceWindowExecutionResult\");\nvar de_GetMaintenanceWindowExecutionTaskInvocationResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ExecutionId: import_smithy_client.expectString,\n    InvocationId: import_smithy_client.expectString,\n    OwnerInformation: import_smithy_client.expectString,\n    Parameters: import_smithy_client.expectString,\n    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString,\n    TaskExecutionId: import_smithy_client.expectString,\n    TaskType: import_smithy_client.expectString,\n    WindowExecutionId: import_smithy_client.expectString,\n    WindowTargetId: import_smithy_client.expectString\n  });\n}, \"de_GetMaintenanceWindowExecutionTaskInvocationResult\");\nvar de_GetMaintenanceWindowExecutionTaskResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    MaxConcurrency: import_smithy_client.expectString,\n    MaxErrors: import_smithy_client.expectString,\n    Priority: import_smithy_client.expectInt32,\n    ServiceRole: import_smithy_client.expectString,\n    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString,\n    TaskArn: import_smithy_client.expectString,\n    TaskExecutionId: import_smithy_client.expectString,\n    TaskParameters: import_smithy_client._json,\n    TriggeredAlarms: import_smithy_client._json,\n    Type: import_smithy_client.expectString,\n    WindowExecutionId: import_smithy_client.expectString\n  });\n}, \"de_GetMaintenanceWindowExecutionTaskResult\");\nvar de_GetMaintenanceWindowResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AllowUnassociatedTargets: import_smithy_client.expectBoolean,\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Cutoff: import_smithy_client.expectInt32,\n    Description: import_smithy_client.expectString,\n    Duration: import_smithy_client.expectInt32,\n    Enabled: import_smithy_client.expectBoolean,\n    EndDate: import_smithy_client.expectString,\n    ModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Name: import_smithy_client.expectString,\n    NextExecutionTime: import_smithy_client.expectString,\n    Schedule: import_smithy_client.expectString,\n    ScheduleOffset: import_smithy_client.expectInt32,\n    ScheduleTimezone: import_smithy_client.expectString,\n    StartDate: import_smithy_client.expectString,\n    WindowId: import_smithy_client.expectString\n  });\n}, \"de_GetMaintenanceWindowResult\");\nvar de_GetMaintenanceWindowTaskResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    CutoffBehavior: import_smithy_client.expectString,\n    Description: import_smithy_client.expectString,\n    LoggingInfo: import_smithy_client._json,\n    MaxConcurrency: import_smithy_client.expectString,\n    MaxErrors: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    Priority: import_smithy_client.expectInt32,\n    ServiceRoleArn: import_smithy_client.expectString,\n    Targets: import_smithy_client._json,\n    TaskArn: import_smithy_client.expectString,\n    TaskInvocationParameters: (_) => de_MaintenanceWindowTaskInvocationParameters(_, context),\n    TaskParameters: import_smithy_client._json,\n    TaskType: import_smithy_client.expectString,\n    WindowId: import_smithy_client.expectString,\n    WindowTaskId: import_smithy_client.expectString\n  });\n}, \"de_GetMaintenanceWindowTaskResult\");\nvar de_GetOpsItemResponse = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    OpsItem: (_) => de_OpsItem(_, context)\n  });\n}, \"de_GetOpsItemResponse\");\nvar de_GetParameterHistoryResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    Parameters: (_) => de_ParameterHistoryList(_, context)\n  });\n}, \"de_GetParameterHistoryResult\");\nvar de_GetParameterResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Parameter: (_) => de_Parameter(_, context)\n  });\n}, \"de_GetParameterResult\");\nvar de_GetParametersByPathResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    Parameters: (_) => de_ParameterList(_, context)\n  });\n}, \"de_GetParametersByPathResult\");\nvar de_GetParametersResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    InvalidParameters: import_smithy_client._json,\n    Parameters: (_) => de_ParameterList(_, context)\n  });\n}, \"de_GetParametersResult\");\nvar de_GetPatchBaselineResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ApprovalRules: import_smithy_client._json,\n    ApprovedPatches: import_smithy_client._json,\n    ApprovedPatchesComplianceLevel: import_smithy_client.expectString,\n    ApprovedPatchesEnableNonSecurity: import_smithy_client.expectBoolean,\n    BaselineId: import_smithy_client.expectString,\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Description: import_smithy_client.expectString,\n    GlobalFilters: import_smithy_client._json,\n    ModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Name: import_smithy_client.expectString,\n    OperatingSystem: import_smithy_client.expectString,\n    PatchGroups: import_smithy_client._json,\n    RejectedPatches: import_smithy_client._json,\n    RejectedPatchesAction: import_smithy_client.expectString,\n    Sources: import_smithy_client._json\n  });\n}, \"de_GetPatchBaselineResult\");\nvar de_GetServiceSettingResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ServiceSetting: (_) => de_ServiceSetting(_, context)\n  });\n}, \"de_GetServiceSettingResult\");\nvar de_InstanceAssociationStatusInfo = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationId: import_smithy_client.expectString,\n    AssociationName: import_smithy_client.expectString,\n    AssociationVersion: import_smithy_client.expectString,\n    DetailedStatus: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    ErrorCode: import_smithy_client.expectString,\n    ExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ExecutionSummary: import_smithy_client.expectString,\n    InstanceId: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    OutputUrl: import_smithy_client._json,\n    Status: import_smithy_client.expectString\n  });\n}, \"de_InstanceAssociationStatusInfo\");\nvar de_InstanceAssociationStatusInfos = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_InstanceAssociationStatusInfo(entry, context);\n  });\n  return retVal;\n}, \"de_InstanceAssociationStatusInfos\");\nvar de_InstanceInformation = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ActivationId: import_smithy_client.expectString,\n    AgentVersion: import_smithy_client.expectString,\n    AssociationOverview: import_smithy_client._json,\n    AssociationStatus: import_smithy_client.expectString,\n    ComputerName: import_smithy_client.expectString,\n    IPAddress: import_smithy_client.expectString,\n    IamRole: import_smithy_client.expectString,\n    InstanceId: import_smithy_client.expectString,\n    IsLatestVersion: import_smithy_client.expectBoolean,\n    LastAssociationExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastPingDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastSuccessfulAssociationExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Name: import_smithy_client.expectString,\n    PingStatus: import_smithy_client.expectString,\n    PlatformName: import_smithy_client.expectString,\n    PlatformType: import_smithy_client.expectString,\n    PlatformVersion: import_smithy_client.expectString,\n    RegistrationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ResourceType: import_smithy_client.expectString,\n    SourceId: import_smithy_client.expectString,\n    SourceType: import_smithy_client.expectString\n  });\n}, \"de_InstanceInformation\");\nvar de_InstanceInformationList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_InstanceInformation(entry, context);\n  });\n  return retVal;\n}, \"de_InstanceInformationList\");\nvar de_InstancePatchState = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    BaselineId: import_smithy_client.expectString,\n    CriticalNonCompliantCount: import_smithy_client.expectInt32,\n    FailedCount: import_smithy_client.expectInt32,\n    InstallOverrideList: import_smithy_client.expectString,\n    InstalledCount: import_smithy_client.expectInt32,\n    InstalledOtherCount: import_smithy_client.expectInt32,\n    InstalledPendingRebootCount: import_smithy_client.expectInt32,\n    InstalledRejectedCount: import_smithy_client.expectInt32,\n    InstanceId: import_smithy_client.expectString,\n    LastNoRebootInstallOperationTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    MissingCount: import_smithy_client.expectInt32,\n    NotApplicableCount: import_smithy_client.expectInt32,\n    Operation: import_smithy_client.expectString,\n    OperationEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    OperationStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    OtherNonCompliantCount: import_smithy_client.expectInt32,\n    OwnerInformation: import_smithy_client.expectString,\n    PatchGroup: import_smithy_client.expectString,\n    RebootOption: import_smithy_client.expectString,\n    SecurityNonCompliantCount: import_smithy_client.expectInt32,\n    SnapshotId: import_smithy_client.expectString,\n    UnreportedNotApplicableCount: import_smithy_client.expectInt32\n  });\n}, \"de_InstancePatchState\");\nvar de_InstancePatchStateList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_InstancePatchState(entry, context);\n  });\n  return retVal;\n}, \"de_InstancePatchStateList\");\nvar de_InstancePatchStatesList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_InstancePatchState(entry, context);\n  });\n  return retVal;\n}, \"de_InstancePatchStatesList\");\nvar de_InstanceProperties = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_InstanceProperty(entry, context);\n  });\n  return retVal;\n}, \"de_InstanceProperties\");\nvar de_InstanceProperty = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ActivationId: import_smithy_client.expectString,\n    AgentVersion: import_smithy_client.expectString,\n    Architecture: import_smithy_client.expectString,\n    AssociationOverview: import_smithy_client._json,\n    AssociationStatus: import_smithy_client.expectString,\n    ComputerName: import_smithy_client.expectString,\n    IPAddress: import_smithy_client.expectString,\n    IamRole: import_smithy_client.expectString,\n    InstanceId: import_smithy_client.expectString,\n    InstanceRole: import_smithy_client.expectString,\n    InstanceState: import_smithy_client.expectString,\n    InstanceType: import_smithy_client.expectString,\n    KeyName: import_smithy_client.expectString,\n    LastAssociationExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastPingDateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastSuccessfulAssociationExecutionDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LaunchTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Name: import_smithy_client.expectString,\n    PingStatus: import_smithy_client.expectString,\n    PlatformName: import_smithy_client.expectString,\n    PlatformType: import_smithy_client.expectString,\n    PlatformVersion: import_smithy_client.expectString,\n    RegistrationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ResourceType: import_smithy_client.expectString,\n    SourceId: import_smithy_client.expectString,\n    SourceType: import_smithy_client.expectString\n  });\n}, \"de_InstanceProperty\");\nvar de_InventoryDeletionsList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_InventoryDeletionStatusItem(entry, context);\n  });\n  return retVal;\n}, \"de_InventoryDeletionsList\");\nvar de_InventoryDeletionStatusItem = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    DeletionId: import_smithy_client.expectString,\n    DeletionStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    DeletionSummary: import_smithy_client._json,\n    LastStatus: import_smithy_client.expectString,\n    LastStatusMessage: import_smithy_client.expectString,\n    LastStatusUpdateTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    TypeName: import_smithy_client.expectString\n  });\n}, \"de_InventoryDeletionStatusItem\");\nvar de_ListAssociationsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Associations: (_) => de_AssociationList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_ListAssociationsResult\");\nvar de_ListAssociationVersionsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationVersions: (_) => de_AssociationVersionList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_ListAssociationVersionsResult\");\nvar de_ListCommandInvocationsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    CommandInvocations: (_) => de_CommandInvocationList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_ListCommandInvocationsResult\");\nvar de_ListCommandsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Commands: (_) => de_CommandList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_ListCommandsResult\");\nvar de_ListComplianceItemsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ComplianceItems: (_) => de_ComplianceItemList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_ListComplianceItemsResult\");\nvar de_ListDocumentMetadataHistoryResponse = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Author: import_smithy_client.expectString,\n    DocumentVersion: import_smithy_client.expectString,\n    Metadata: (_) => de_DocumentMetadataResponseInfo(_, context),\n    Name: import_smithy_client.expectString,\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_ListDocumentMetadataHistoryResponse\");\nvar de_ListDocumentsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    DocumentIdentifiers: (_) => de_DocumentIdentifierList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_ListDocumentsResult\");\nvar de_ListDocumentVersionsResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    DocumentVersions: (_) => de_DocumentVersionList(_, context),\n    NextToken: import_smithy_client.expectString\n  });\n}, \"de_ListDocumentVersionsResult\");\nvar de_ListOpsItemEventsResponse = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    Summaries: (_) => de_OpsItemEventSummaries(_, context)\n  });\n}, \"de_ListOpsItemEventsResponse\");\nvar de_ListOpsItemRelatedItemsResponse = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    Summaries: (_) => de_OpsItemRelatedItemSummaries(_, context)\n  });\n}, \"de_ListOpsItemRelatedItemsResponse\");\nvar de_ListOpsMetadataResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    OpsMetadataList: (_) => de_OpsMetadataList(_, context)\n  });\n}, \"de_ListOpsMetadataResult\");\nvar de_ListResourceComplianceSummariesResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    ResourceComplianceSummaryItems: (_) => de_ResourceComplianceSummaryItemList(_, context)\n  });\n}, \"de_ListResourceComplianceSummariesResult\");\nvar de_ListResourceDataSyncResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    NextToken: import_smithy_client.expectString,\n    ResourceDataSyncItems: (_) => de_ResourceDataSyncItemList(_, context)\n  });\n}, \"de_ListResourceDataSyncResult\");\nvar de_MaintenanceWindowExecution = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString,\n    WindowExecutionId: import_smithy_client.expectString,\n    WindowId: import_smithy_client.expectString\n  });\n}, \"de_MaintenanceWindowExecution\");\nvar de_MaintenanceWindowExecutionList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_MaintenanceWindowExecution(entry, context);\n  });\n  return retVal;\n}, \"de_MaintenanceWindowExecutionList\");\nvar de_MaintenanceWindowExecutionTaskIdentity = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString,\n    TaskArn: import_smithy_client.expectString,\n    TaskExecutionId: import_smithy_client.expectString,\n    TaskType: import_smithy_client.expectString,\n    TriggeredAlarms: import_smithy_client._json,\n    WindowExecutionId: import_smithy_client.expectString\n  });\n}, \"de_MaintenanceWindowExecutionTaskIdentity\");\nvar de_MaintenanceWindowExecutionTaskIdentityList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_MaintenanceWindowExecutionTaskIdentity(entry, context);\n  });\n  return retVal;\n}, \"de_MaintenanceWindowExecutionTaskIdentityList\");\nvar de_MaintenanceWindowExecutionTaskInvocationIdentity = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    EndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ExecutionId: import_smithy_client.expectString,\n    InvocationId: import_smithy_client.expectString,\n    OwnerInformation: import_smithy_client.expectString,\n    Parameters: import_smithy_client.expectString,\n    StartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Status: import_smithy_client.expectString,\n    StatusDetails: import_smithy_client.expectString,\n    TaskExecutionId: import_smithy_client.expectString,\n    TaskType: import_smithy_client.expectString,\n    WindowExecutionId: import_smithy_client.expectString,\n    WindowTargetId: import_smithy_client.expectString\n  });\n}, \"de_MaintenanceWindowExecutionTaskInvocationIdentity\");\nvar de_MaintenanceWindowExecutionTaskInvocationIdentityList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_MaintenanceWindowExecutionTaskInvocationIdentity(entry, context);\n  });\n  return retVal;\n}, \"de_MaintenanceWindowExecutionTaskInvocationIdentityList\");\nvar de_MaintenanceWindowLambdaParameters = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ClientContext: import_smithy_client.expectString,\n    Payload: context.base64Decoder,\n    Qualifier: import_smithy_client.expectString\n  });\n}, \"de_MaintenanceWindowLambdaParameters\");\nvar de_MaintenanceWindowTaskInvocationParameters = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Automation: import_smithy_client._json,\n    Lambda: (_) => de_MaintenanceWindowLambdaParameters(_, context),\n    RunCommand: import_smithy_client._json,\n    StepFunctions: import_smithy_client._json\n  });\n}, \"de_MaintenanceWindowTaskInvocationParameters\");\nvar de_OpsItem = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ActualEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ActualStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Category: import_smithy_client.expectString,\n    CreatedBy: import_smithy_client.expectString,\n    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Description: import_smithy_client.expectString,\n    LastModifiedBy: import_smithy_client.expectString,\n    LastModifiedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Notifications: import_smithy_client._json,\n    OperationalData: import_smithy_client._json,\n    OpsItemArn: import_smithy_client.expectString,\n    OpsItemId: import_smithy_client.expectString,\n    OpsItemType: import_smithy_client.expectString,\n    PlannedEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    PlannedStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Priority: import_smithy_client.expectInt32,\n    RelatedOpsItems: import_smithy_client._json,\n    Severity: import_smithy_client.expectString,\n    Source: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    Title: import_smithy_client.expectString,\n    Version: import_smithy_client.expectString\n  });\n}, \"de_OpsItem\");\nvar de_OpsItemEventSummaries = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_OpsItemEventSummary(entry, context);\n  });\n  return retVal;\n}, \"de_OpsItemEventSummaries\");\nvar de_OpsItemEventSummary = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    CreatedBy: import_smithy_client._json,\n    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Detail: import_smithy_client.expectString,\n    DetailType: import_smithy_client.expectString,\n    EventId: import_smithy_client.expectString,\n    OpsItemId: import_smithy_client.expectString,\n    Source: import_smithy_client.expectString\n  });\n}, \"de_OpsItemEventSummary\");\nvar de_OpsItemRelatedItemSummaries = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_OpsItemRelatedItemSummary(entry, context);\n  });\n  return retVal;\n}, \"de_OpsItemRelatedItemSummaries\");\nvar de_OpsItemRelatedItemSummary = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationId: import_smithy_client.expectString,\n    AssociationType: import_smithy_client.expectString,\n    CreatedBy: import_smithy_client._json,\n    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastModifiedBy: import_smithy_client._json,\n    LastModifiedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    OpsItemId: import_smithy_client.expectString,\n    ResourceType: import_smithy_client.expectString,\n    ResourceUri: import_smithy_client.expectString\n  });\n}, \"de_OpsItemRelatedItemSummary\");\nvar de_OpsItemSummaries = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_OpsItemSummary(entry, context);\n  });\n  return retVal;\n}, \"de_OpsItemSummaries\");\nvar de_OpsItemSummary = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ActualEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ActualStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Category: import_smithy_client.expectString,\n    CreatedBy: import_smithy_client.expectString,\n    CreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastModifiedBy: import_smithy_client.expectString,\n    LastModifiedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    OperationalData: import_smithy_client._json,\n    OpsItemId: import_smithy_client.expectString,\n    OpsItemType: import_smithy_client.expectString,\n    PlannedEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    PlannedStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Priority: import_smithy_client.expectInt32,\n    Severity: import_smithy_client.expectString,\n    Source: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString,\n    Title: import_smithy_client.expectString\n  });\n}, \"de_OpsItemSummary\");\nvar de_OpsMetadata = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    CreationDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastModifiedUser: import_smithy_client.expectString,\n    OpsMetadataArn: import_smithy_client.expectString,\n    ResourceId: import_smithy_client.expectString\n  });\n}, \"de_OpsMetadata\");\nvar de_OpsMetadataList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_OpsMetadata(entry, context);\n  });\n  return retVal;\n}, \"de_OpsMetadataList\");\nvar de_Parameter = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ARN: import_smithy_client.expectString,\n    DataType: import_smithy_client.expectString,\n    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Name: import_smithy_client.expectString,\n    Selector: import_smithy_client.expectString,\n    SourceResult: import_smithy_client.expectString,\n    Type: import_smithy_client.expectString,\n    Value: import_smithy_client.expectString,\n    Version: import_smithy_client.expectLong\n  });\n}, \"de_Parameter\");\nvar de_ParameterHistory = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AllowedPattern: import_smithy_client.expectString,\n    DataType: import_smithy_client.expectString,\n    Description: import_smithy_client.expectString,\n    KeyId: import_smithy_client.expectString,\n    Labels: import_smithy_client._json,\n    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastModifiedUser: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    Policies: import_smithy_client._json,\n    Tier: import_smithy_client.expectString,\n    Type: import_smithy_client.expectString,\n    Value: import_smithy_client.expectString,\n    Version: import_smithy_client.expectLong\n  });\n}, \"de_ParameterHistory\");\nvar de_ParameterHistoryList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_ParameterHistory(entry, context);\n  });\n  return retVal;\n}, \"de_ParameterHistoryList\");\nvar de_ParameterList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Parameter(entry, context);\n  });\n  return retVal;\n}, \"de_ParameterList\");\nvar de_ParameterMetadata = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ARN: import_smithy_client.expectString,\n    AllowedPattern: import_smithy_client.expectString,\n    DataType: import_smithy_client.expectString,\n    Description: import_smithy_client.expectString,\n    KeyId: import_smithy_client.expectString,\n    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastModifiedUser: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    Policies: import_smithy_client._json,\n    Tier: import_smithy_client.expectString,\n    Type: import_smithy_client.expectString,\n    Version: import_smithy_client.expectLong\n  });\n}, \"de_ParameterMetadata\");\nvar de_ParameterMetadataList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_ParameterMetadata(entry, context);\n  });\n  return retVal;\n}, \"de_ParameterMetadataList\");\nvar de_Patch = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AdvisoryIds: import_smithy_client._json,\n    Arch: import_smithy_client.expectString,\n    BugzillaIds: import_smithy_client._json,\n    CVEIds: import_smithy_client._json,\n    Classification: import_smithy_client.expectString,\n    ContentUrl: import_smithy_client.expectString,\n    Description: import_smithy_client.expectString,\n    Epoch: import_smithy_client.expectInt32,\n    Id: import_smithy_client.expectString,\n    KbNumber: import_smithy_client.expectString,\n    Language: import_smithy_client.expectString,\n    MsrcNumber: import_smithy_client.expectString,\n    MsrcSeverity: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    Product: import_smithy_client.expectString,\n    ProductFamily: import_smithy_client.expectString,\n    Release: import_smithy_client.expectString,\n    ReleaseDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Repository: import_smithy_client.expectString,\n    Severity: import_smithy_client.expectString,\n    Title: import_smithy_client.expectString,\n    Vendor: import_smithy_client.expectString,\n    Version: import_smithy_client.expectString\n  });\n}, \"de_Patch\");\nvar de_PatchComplianceData = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    CVEIds: import_smithy_client.expectString,\n    Classification: import_smithy_client.expectString,\n    InstalledTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    KBId: import_smithy_client.expectString,\n    Severity: import_smithy_client.expectString,\n    State: import_smithy_client.expectString,\n    Title: import_smithy_client.expectString\n  });\n}, \"de_PatchComplianceData\");\nvar de_PatchComplianceDataList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_PatchComplianceData(entry, context);\n  });\n  return retVal;\n}, \"de_PatchComplianceDataList\");\nvar de_PatchList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Patch(entry, context);\n  });\n  return retVal;\n}, \"de_PatchList\");\nvar de_PatchStatus = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ApprovalDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ComplianceLevel: import_smithy_client.expectString,\n    DeploymentStatus: import_smithy_client.expectString\n  });\n}, \"de_PatchStatus\");\nvar de_ResetServiceSettingResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ServiceSetting: (_) => de_ServiceSetting(_, context)\n  });\n}, \"de_ResetServiceSettingResult\");\nvar de_ResourceComplianceSummaryItem = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ComplianceType: import_smithy_client.expectString,\n    CompliantSummary: import_smithy_client._json,\n    ExecutionSummary: (_) => de_ComplianceExecutionSummary(_, context),\n    NonCompliantSummary: import_smithy_client._json,\n    OverallSeverity: import_smithy_client.expectString,\n    ResourceId: import_smithy_client.expectString,\n    ResourceType: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString\n  });\n}, \"de_ResourceComplianceSummaryItem\");\nvar de_ResourceComplianceSummaryItemList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_ResourceComplianceSummaryItem(entry, context);\n  });\n  return retVal;\n}, \"de_ResourceComplianceSummaryItemList\");\nvar de_ResourceDataSyncItem = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    LastStatus: import_smithy_client.expectString,\n    LastSuccessfulSyncTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastSyncStatusMessage: import_smithy_client.expectString,\n    LastSyncTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    S3Destination: import_smithy_client._json,\n    SyncCreatedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    SyncLastModifiedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    SyncName: import_smithy_client.expectString,\n    SyncSource: import_smithy_client._json,\n    SyncType: import_smithy_client.expectString\n  });\n}, \"de_ResourceDataSyncItem\");\nvar de_ResourceDataSyncItemList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_ResourceDataSyncItem(entry, context);\n  });\n  return retVal;\n}, \"de_ResourceDataSyncItemList\");\nvar de_ReviewInformation = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ReviewedTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Reviewer: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString\n  });\n}, \"de_ReviewInformation\");\nvar de_ReviewInformationList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_ReviewInformation(entry, context);\n  });\n  return retVal;\n}, \"de_ReviewInformationList\");\nvar de_SendCommandResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Command: (_) => de_Command(_, context)\n  });\n}, \"de_SendCommandResult\");\nvar de_ServiceSetting = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ARN: import_smithy_client.expectString,\n    LastModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    LastModifiedUser: import_smithy_client.expectString,\n    SettingId: import_smithy_client.expectString,\n    SettingValue: import_smithy_client.expectString,\n    Status: import_smithy_client.expectString\n  });\n}, \"de_ServiceSetting\");\nvar de_Session = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Details: import_smithy_client.expectString,\n    DocumentName: import_smithy_client.expectString,\n    EndDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    MaxSessionDuration: import_smithy_client.expectString,\n    OutputUrl: import_smithy_client._json,\n    Owner: import_smithy_client.expectString,\n    Reason: import_smithy_client.expectString,\n    SessionId: import_smithy_client.expectString,\n    StartDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Status: import_smithy_client.expectString,\n    Target: import_smithy_client.expectString\n  });\n}, \"de_Session\");\nvar de_SessionList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Session(entry, context);\n  });\n  return retVal;\n}, \"de_SessionList\");\nvar de_StepExecution = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    Action: import_smithy_client.expectString,\n    ExecutionEndTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    ExecutionStartTime: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    FailureDetails: import_smithy_client._json,\n    FailureMessage: import_smithy_client.expectString,\n    Inputs: import_smithy_client._json,\n    IsCritical: import_smithy_client.expectBoolean,\n    IsEnd: import_smithy_client.expectBoolean,\n    MaxAttempts: import_smithy_client.expectInt32,\n    NextStep: import_smithy_client.expectString,\n    OnFailure: import_smithy_client.expectString,\n    Outputs: import_smithy_client._json,\n    OverriddenParameters: import_smithy_client._json,\n    ParentStepDetails: import_smithy_client._json,\n    Response: import_smithy_client.expectString,\n    ResponseCode: import_smithy_client.expectString,\n    StepExecutionId: import_smithy_client.expectString,\n    StepName: import_smithy_client.expectString,\n    StepStatus: import_smithy_client.expectString,\n    TargetLocation: import_smithy_client._json,\n    Targets: import_smithy_client._json,\n    TimeoutSeconds: import_smithy_client.expectLong,\n    TriggeredAlarms: import_smithy_client._json,\n    ValidNextSteps: import_smithy_client._json\n  });\n}, \"de_StepExecution\");\nvar de_StepExecutionList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_StepExecution(entry, context);\n  });\n  return retVal;\n}, \"de_StepExecutionList\");\nvar de_UpdateAssociationResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationDescription: (_) => de_AssociationDescription(_, context)\n  });\n}, \"de_UpdateAssociationResult\");\nvar de_UpdateAssociationStatusResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AssociationDescription: (_) => de_AssociationDescription(_, context)\n  });\n}, \"de_UpdateAssociationStatusResult\");\nvar de_UpdateDocumentResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    DocumentDescription: (_) => de_DocumentDescription(_, context)\n  });\n}, \"de_UpdateDocumentResult\");\nvar de_UpdateMaintenanceWindowTaskResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    AlarmConfiguration: import_smithy_client._json,\n    CutoffBehavior: import_smithy_client.expectString,\n    Description: import_smithy_client.expectString,\n    LoggingInfo: import_smithy_client._json,\n    MaxConcurrency: import_smithy_client.expectString,\n    MaxErrors: import_smithy_client.expectString,\n    Name: import_smithy_client.expectString,\n    Priority: import_smithy_client.expectInt32,\n    ServiceRoleArn: import_smithy_client.expectString,\n    Targets: import_smithy_client._json,\n    TaskArn: import_smithy_client.expectString,\n    TaskInvocationParameters: (_) => de_MaintenanceWindowTaskInvocationParameters(_, context),\n    TaskParameters: import_smithy_client._json,\n    WindowId: import_smithy_client.expectString,\n    WindowTaskId: import_smithy_client.expectString\n  });\n}, \"de_UpdateMaintenanceWindowTaskResult\");\nvar de_UpdatePatchBaselineResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    ApprovalRules: import_smithy_client._json,\n    ApprovedPatches: import_smithy_client._json,\n    ApprovedPatchesComplianceLevel: import_smithy_client.expectString,\n    ApprovedPatchesEnableNonSecurity: import_smithy_client.expectBoolean,\n    BaselineId: import_smithy_client.expectString,\n    CreatedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Description: import_smithy_client.expectString,\n    GlobalFilters: import_smithy_client._json,\n    ModifiedDate: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),\n    Name: import_smithy_client.expectString,\n    OperatingSystem: import_smithy_client.expectString,\n    RejectedPatches: import_smithy_client._json,\n    RejectedPatchesAction: import_smithy_client.expectString,\n    Sources: import_smithy_client._json\n  });\n}, \"de_UpdatePatchBaselineResult\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output) => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n}), \"deserializeMetadata\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(SSMServiceException);\nvar buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const contents = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n    headers\n  };\n  if (resolvedHostname !== void 0) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== void 0) {\n    contents.body = body;\n  }\n  return new import_protocol_http.HttpRequest(contents);\n}, \"buildHttpRpcRequest\");\nfunction sharedHeaders(operation) {\n  return {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": `AmazonSSM.${operation}`\n  };\n}\n__name(sharedHeaders, \"sharedHeaders\");\n\n// src/commands/AddTagsToResourceCommand.ts\nvar _AddTagsToResourceCommand = class _AddTagsToResourceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"AddTagsToResource\", {}).n(\"SSMClient\", \"AddTagsToResourceCommand\").f(void 0, void 0).ser(se_AddTagsToResourceCommand).de(de_AddTagsToResourceCommand).build() {\n};\n__name(_AddTagsToResourceCommand, \"AddTagsToResourceCommand\");\nvar AddTagsToResourceCommand = _AddTagsToResourceCommand;\n\n// src/commands/AssociateOpsItemRelatedItemCommand.ts\n\n\n\nvar _AssociateOpsItemRelatedItemCommand = class _AssociateOpsItemRelatedItemCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"AssociateOpsItemRelatedItem\", {}).n(\"SSMClient\", \"AssociateOpsItemRelatedItemCommand\").f(void 0, void 0).ser(se_AssociateOpsItemRelatedItemCommand).de(de_AssociateOpsItemRelatedItemCommand).build() {\n};\n__name(_AssociateOpsItemRelatedItemCommand, \"AssociateOpsItemRelatedItemCommand\");\nvar AssociateOpsItemRelatedItemCommand = _AssociateOpsItemRelatedItemCommand;\n\n// src/commands/CancelCommandCommand.ts\n\n\n\nvar _CancelCommandCommand = class _CancelCommandCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CancelCommand\", {}).n(\"SSMClient\", \"CancelCommandCommand\").f(void 0, void 0).ser(se_CancelCommandCommand).de(de_CancelCommandCommand).build() {\n};\n__name(_CancelCommandCommand, \"CancelCommandCommand\");\nvar CancelCommandCommand = _CancelCommandCommand;\n\n// src/commands/CancelMaintenanceWindowExecutionCommand.ts\n\n\n\nvar _CancelMaintenanceWindowExecutionCommand = class _CancelMaintenanceWindowExecutionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CancelMaintenanceWindowExecution\", {}).n(\"SSMClient\", \"CancelMaintenanceWindowExecutionCommand\").f(void 0, void 0).ser(se_CancelMaintenanceWindowExecutionCommand).de(de_CancelMaintenanceWindowExecutionCommand).build() {\n};\n__name(_CancelMaintenanceWindowExecutionCommand, \"CancelMaintenanceWindowExecutionCommand\");\nvar CancelMaintenanceWindowExecutionCommand = _CancelMaintenanceWindowExecutionCommand;\n\n// src/commands/CreateActivationCommand.ts\n\n\n\nvar _CreateActivationCommand = class _CreateActivationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreateActivation\", {}).n(\"SSMClient\", \"CreateActivationCommand\").f(void 0, void 0).ser(se_CreateActivationCommand).de(de_CreateActivationCommand).build() {\n};\n__name(_CreateActivationCommand, \"CreateActivationCommand\");\nvar CreateActivationCommand = _CreateActivationCommand;\n\n// src/commands/CreateAssociationBatchCommand.ts\n\n\n\nvar _CreateAssociationBatchCommand = class _CreateAssociationBatchCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreateAssociationBatch\", {}).n(\"SSMClient\", \"CreateAssociationBatchCommand\").f(CreateAssociationBatchRequestFilterSensitiveLog, CreateAssociationBatchResultFilterSensitiveLog).ser(se_CreateAssociationBatchCommand).de(de_CreateAssociationBatchCommand).build() {\n};\n__name(_CreateAssociationBatchCommand, \"CreateAssociationBatchCommand\");\nvar CreateAssociationBatchCommand = _CreateAssociationBatchCommand;\n\n// src/commands/CreateAssociationCommand.ts\n\n\n\nvar _CreateAssociationCommand = class _CreateAssociationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreateAssociation\", {}).n(\"SSMClient\", \"CreateAssociationCommand\").f(CreateAssociationRequestFilterSensitiveLog, CreateAssociationResultFilterSensitiveLog).ser(se_CreateAssociationCommand).de(de_CreateAssociationCommand).build() {\n};\n__name(_CreateAssociationCommand, \"CreateAssociationCommand\");\nvar CreateAssociationCommand = _CreateAssociationCommand;\n\n// src/commands/CreateDocumentCommand.ts\n\n\n\nvar _CreateDocumentCommand = class _CreateDocumentCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreateDocument\", {}).n(\"SSMClient\", \"CreateDocumentCommand\").f(void 0, void 0).ser(se_CreateDocumentCommand).de(de_CreateDocumentCommand).build() {\n};\n__name(_CreateDocumentCommand, \"CreateDocumentCommand\");\nvar CreateDocumentCommand = _CreateDocumentCommand;\n\n// src/commands/CreateMaintenanceWindowCommand.ts\n\n\n\nvar _CreateMaintenanceWindowCommand = class _CreateMaintenanceWindowCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreateMaintenanceWindow\", {}).n(\"SSMClient\", \"CreateMaintenanceWindowCommand\").f(CreateMaintenanceWindowRequestFilterSensitiveLog, void 0).ser(se_CreateMaintenanceWindowCommand).de(de_CreateMaintenanceWindowCommand).build() {\n};\n__name(_CreateMaintenanceWindowCommand, \"CreateMaintenanceWindowCommand\");\nvar CreateMaintenanceWindowCommand = _CreateMaintenanceWindowCommand;\n\n// src/commands/CreateOpsItemCommand.ts\n\n\n\nvar _CreateOpsItemCommand = class _CreateOpsItemCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreateOpsItem\", {}).n(\"SSMClient\", \"CreateOpsItemCommand\").f(void 0, void 0).ser(se_CreateOpsItemCommand).de(de_CreateOpsItemCommand).build() {\n};\n__name(_CreateOpsItemCommand, \"CreateOpsItemCommand\");\nvar CreateOpsItemCommand = _CreateOpsItemCommand;\n\n// src/commands/CreateOpsMetadataCommand.ts\n\n\n\nvar _CreateOpsMetadataCommand = class _CreateOpsMetadataCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreateOpsMetadata\", {}).n(\"SSMClient\", \"CreateOpsMetadataCommand\").f(void 0, void 0).ser(se_CreateOpsMetadataCommand).de(de_CreateOpsMetadataCommand).build() {\n};\n__name(_CreateOpsMetadataCommand, \"CreateOpsMetadataCommand\");\nvar CreateOpsMetadataCommand = _CreateOpsMetadataCommand;\n\n// src/commands/CreatePatchBaselineCommand.ts\n\n\n\nvar _CreatePatchBaselineCommand = class _CreatePatchBaselineCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreatePatchBaseline\", {}).n(\"SSMClient\", \"CreatePatchBaselineCommand\").f(CreatePatchBaselineRequestFilterSensitiveLog, void 0).ser(se_CreatePatchBaselineCommand).de(de_CreatePatchBaselineCommand).build() {\n};\n__name(_CreatePatchBaselineCommand, \"CreatePatchBaselineCommand\");\nvar CreatePatchBaselineCommand = _CreatePatchBaselineCommand;\n\n// src/commands/CreateResourceDataSyncCommand.ts\n\n\n\nvar _CreateResourceDataSyncCommand = class _CreateResourceDataSyncCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"CreateResourceDataSync\", {}).n(\"SSMClient\", \"CreateResourceDataSyncCommand\").f(void 0, void 0).ser(se_CreateResourceDataSyncCommand).de(de_CreateResourceDataSyncCommand).build() {\n};\n__name(_CreateResourceDataSyncCommand, \"CreateResourceDataSyncCommand\");\nvar CreateResourceDataSyncCommand = _CreateResourceDataSyncCommand;\n\n// src/commands/DeleteActivationCommand.ts\n\n\n\nvar _DeleteActivationCommand = class _DeleteActivationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteActivation\", {}).n(\"SSMClient\", \"DeleteActivationCommand\").f(void 0, void 0).ser(se_DeleteActivationCommand).de(de_DeleteActivationCommand).build() {\n};\n__name(_DeleteActivationCommand, \"DeleteActivationCommand\");\nvar DeleteActivationCommand = _DeleteActivationCommand;\n\n// src/commands/DeleteAssociationCommand.ts\n\n\n\nvar _DeleteAssociationCommand = class _DeleteAssociationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteAssociation\", {}).n(\"SSMClient\", \"DeleteAssociationCommand\").f(void 0, void 0).ser(se_DeleteAssociationCommand).de(de_DeleteAssociationCommand).build() {\n};\n__name(_DeleteAssociationCommand, \"DeleteAssociationCommand\");\nvar DeleteAssociationCommand = _DeleteAssociationCommand;\n\n// src/commands/DeleteDocumentCommand.ts\n\n\n\nvar _DeleteDocumentCommand = class _DeleteDocumentCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteDocument\", {}).n(\"SSMClient\", \"DeleteDocumentCommand\").f(void 0, void 0).ser(se_DeleteDocumentCommand).de(de_DeleteDocumentCommand).build() {\n};\n__name(_DeleteDocumentCommand, \"DeleteDocumentCommand\");\nvar DeleteDocumentCommand = _DeleteDocumentCommand;\n\n// src/commands/DeleteInventoryCommand.ts\n\n\n\nvar _DeleteInventoryCommand = class _DeleteInventoryCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteInventory\", {}).n(\"SSMClient\", \"DeleteInventoryCommand\").f(void 0, void 0).ser(se_DeleteInventoryCommand).de(de_DeleteInventoryCommand).build() {\n};\n__name(_DeleteInventoryCommand, \"DeleteInventoryCommand\");\nvar DeleteInventoryCommand = _DeleteInventoryCommand;\n\n// src/commands/DeleteMaintenanceWindowCommand.ts\n\n\n\nvar _DeleteMaintenanceWindowCommand = class _DeleteMaintenanceWindowCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteMaintenanceWindow\", {}).n(\"SSMClient\", \"DeleteMaintenanceWindowCommand\").f(void 0, void 0).ser(se_DeleteMaintenanceWindowCommand).de(de_DeleteMaintenanceWindowCommand).build() {\n};\n__name(_DeleteMaintenanceWindowCommand, \"DeleteMaintenanceWindowCommand\");\nvar DeleteMaintenanceWindowCommand = _DeleteMaintenanceWindowCommand;\n\n// src/commands/DeleteOpsItemCommand.ts\n\n\n\nvar _DeleteOpsItemCommand = class _DeleteOpsItemCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteOpsItem\", {}).n(\"SSMClient\", \"DeleteOpsItemCommand\").f(void 0, void 0).ser(se_DeleteOpsItemCommand).de(de_DeleteOpsItemCommand).build() {\n};\n__name(_DeleteOpsItemCommand, \"DeleteOpsItemCommand\");\nvar DeleteOpsItemCommand = _DeleteOpsItemCommand;\n\n// src/commands/DeleteOpsMetadataCommand.ts\n\n\n\nvar _DeleteOpsMetadataCommand = class _DeleteOpsMetadataCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteOpsMetadata\", {}).n(\"SSMClient\", \"DeleteOpsMetadataCommand\").f(void 0, void 0).ser(se_DeleteOpsMetadataCommand).de(de_DeleteOpsMetadataCommand).build() {\n};\n__name(_DeleteOpsMetadataCommand, \"DeleteOpsMetadataCommand\");\nvar DeleteOpsMetadataCommand = _DeleteOpsMetadataCommand;\n\n// src/commands/DeleteParameterCommand.ts\n\n\n\nvar _DeleteParameterCommand = class _DeleteParameterCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteParameter\", {}).n(\"SSMClient\", \"DeleteParameterCommand\").f(void 0, void 0).ser(se_DeleteParameterCommand).de(de_DeleteParameterCommand).build() {\n};\n__name(_DeleteParameterCommand, \"DeleteParameterCommand\");\nvar DeleteParameterCommand = _DeleteParameterCommand;\n\n// src/commands/DeleteParametersCommand.ts\n\n\n\nvar _DeleteParametersCommand = class _DeleteParametersCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteParameters\", {}).n(\"SSMClient\", \"DeleteParametersCommand\").f(void 0, void 0).ser(se_DeleteParametersCommand).de(de_DeleteParametersCommand).build() {\n};\n__name(_DeleteParametersCommand, \"DeleteParametersCommand\");\nvar DeleteParametersCommand = _DeleteParametersCommand;\n\n// src/commands/DeletePatchBaselineCommand.ts\n\n\n\nvar _DeletePatchBaselineCommand = class _DeletePatchBaselineCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeletePatchBaseline\", {}).n(\"SSMClient\", \"DeletePatchBaselineCommand\").f(void 0, void 0).ser(se_DeletePatchBaselineCommand).de(de_DeletePatchBaselineCommand).build() {\n};\n__name(_DeletePatchBaselineCommand, \"DeletePatchBaselineCommand\");\nvar DeletePatchBaselineCommand = _DeletePatchBaselineCommand;\n\n// src/commands/DeleteResourceDataSyncCommand.ts\n\n\n\nvar _DeleteResourceDataSyncCommand = class _DeleteResourceDataSyncCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteResourceDataSync\", {}).n(\"SSMClient\", \"DeleteResourceDataSyncCommand\").f(void 0, void 0).ser(se_DeleteResourceDataSyncCommand).de(de_DeleteResourceDataSyncCommand).build() {\n};\n__name(_DeleteResourceDataSyncCommand, \"DeleteResourceDataSyncCommand\");\nvar DeleteResourceDataSyncCommand = _DeleteResourceDataSyncCommand;\n\n// src/commands/DeleteResourcePolicyCommand.ts\n\n\n\nvar _DeleteResourcePolicyCommand = class _DeleteResourcePolicyCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeleteResourcePolicy\", {}).n(\"SSMClient\", \"DeleteResourcePolicyCommand\").f(void 0, void 0).ser(se_DeleteResourcePolicyCommand).de(de_DeleteResourcePolicyCommand).build() {\n};\n__name(_DeleteResourcePolicyCommand, \"DeleteResourcePolicyCommand\");\nvar DeleteResourcePolicyCommand = _DeleteResourcePolicyCommand;\n\n// src/commands/DeregisterManagedInstanceCommand.ts\n\n\n\nvar _DeregisterManagedInstanceCommand = class _DeregisterManagedInstanceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeregisterManagedInstance\", {}).n(\"SSMClient\", \"DeregisterManagedInstanceCommand\").f(void 0, void 0).ser(se_DeregisterManagedInstanceCommand).de(de_DeregisterManagedInstanceCommand).build() {\n};\n__name(_DeregisterManagedInstanceCommand, \"DeregisterManagedInstanceCommand\");\nvar DeregisterManagedInstanceCommand = _DeregisterManagedInstanceCommand;\n\n// src/commands/DeregisterPatchBaselineForPatchGroupCommand.ts\n\n\n\nvar _DeregisterPatchBaselineForPatchGroupCommand = class _DeregisterPatchBaselineForPatchGroupCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeregisterPatchBaselineForPatchGroup\", {}).n(\"SSMClient\", \"DeregisterPatchBaselineForPatchGroupCommand\").f(void 0, void 0).ser(se_DeregisterPatchBaselineForPatchGroupCommand).de(de_DeregisterPatchBaselineForPatchGroupCommand).build() {\n};\n__name(_DeregisterPatchBaselineForPatchGroupCommand, \"DeregisterPatchBaselineForPatchGroupCommand\");\nvar DeregisterPatchBaselineForPatchGroupCommand = _DeregisterPatchBaselineForPatchGroupCommand;\n\n// src/commands/DeregisterTargetFromMaintenanceWindowCommand.ts\n\n\n\nvar _DeregisterTargetFromMaintenanceWindowCommand = class _DeregisterTargetFromMaintenanceWindowCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeregisterTargetFromMaintenanceWindow\", {}).n(\"SSMClient\", \"DeregisterTargetFromMaintenanceWindowCommand\").f(void 0, void 0).ser(se_DeregisterTargetFromMaintenanceWindowCommand).de(de_DeregisterTargetFromMaintenanceWindowCommand).build() {\n};\n__name(_DeregisterTargetFromMaintenanceWindowCommand, \"DeregisterTargetFromMaintenanceWindowCommand\");\nvar DeregisterTargetFromMaintenanceWindowCommand = _DeregisterTargetFromMaintenanceWindowCommand;\n\n// src/commands/DeregisterTaskFromMaintenanceWindowCommand.ts\n\n\n\nvar _DeregisterTaskFromMaintenanceWindowCommand = class _DeregisterTaskFromMaintenanceWindowCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DeregisterTaskFromMaintenanceWindow\", {}).n(\"SSMClient\", \"DeregisterTaskFromMaintenanceWindowCommand\").f(void 0, void 0).ser(se_DeregisterTaskFromMaintenanceWindowCommand).de(de_DeregisterTaskFromMaintenanceWindowCommand).build() {\n};\n__name(_DeregisterTaskFromMaintenanceWindowCommand, \"DeregisterTaskFromMaintenanceWindowCommand\");\nvar DeregisterTaskFromMaintenanceWindowCommand = _DeregisterTaskFromMaintenanceWindowCommand;\n\n// src/commands/DescribeActivationsCommand.ts\n\n\n\nvar _DescribeActivationsCommand = class _DescribeActivationsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeActivations\", {}).n(\"SSMClient\", \"DescribeActivationsCommand\").f(void 0, void 0).ser(se_DescribeActivationsCommand).de(de_DescribeActivationsCommand).build() {\n};\n__name(_DescribeActivationsCommand, \"DescribeActivationsCommand\");\nvar DescribeActivationsCommand = _DescribeActivationsCommand;\n\n// src/commands/DescribeAssociationCommand.ts\n\n\n\nvar _DescribeAssociationCommand = class _DescribeAssociationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeAssociation\", {}).n(\"SSMClient\", \"DescribeAssociationCommand\").f(void 0, DescribeAssociationResultFilterSensitiveLog).ser(se_DescribeAssociationCommand).de(de_DescribeAssociationCommand).build() {\n};\n__name(_DescribeAssociationCommand, \"DescribeAssociationCommand\");\nvar DescribeAssociationCommand = _DescribeAssociationCommand;\n\n// src/commands/DescribeAssociationExecutionsCommand.ts\n\n\n\nvar _DescribeAssociationExecutionsCommand = class _DescribeAssociationExecutionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeAssociationExecutions\", {}).n(\"SSMClient\", \"DescribeAssociationExecutionsCommand\").f(void 0, void 0).ser(se_DescribeAssociationExecutionsCommand).de(de_DescribeAssociationExecutionsCommand).build() {\n};\n__name(_DescribeAssociationExecutionsCommand, \"DescribeAssociationExecutionsCommand\");\nvar DescribeAssociationExecutionsCommand = _DescribeAssociationExecutionsCommand;\n\n// src/commands/DescribeAssociationExecutionTargetsCommand.ts\n\n\n\nvar _DescribeAssociationExecutionTargetsCommand = class _DescribeAssociationExecutionTargetsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeAssociationExecutionTargets\", {}).n(\"SSMClient\", \"DescribeAssociationExecutionTargetsCommand\").f(void 0, void 0).ser(se_DescribeAssociationExecutionTargetsCommand).de(de_DescribeAssociationExecutionTargetsCommand).build() {\n};\n__name(_DescribeAssociationExecutionTargetsCommand, \"DescribeAssociationExecutionTargetsCommand\");\nvar DescribeAssociationExecutionTargetsCommand = _DescribeAssociationExecutionTargetsCommand;\n\n// src/commands/DescribeAutomationExecutionsCommand.ts\n\n\n\nvar _DescribeAutomationExecutionsCommand = class _DescribeAutomationExecutionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeAutomationExecutions\", {}).n(\"SSMClient\", \"DescribeAutomationExecutionsCommand\").f(void 0, void 0).ser(se_DescribeAutomationExecutionsCommand).de(de_DescribeAutomationExecutionsCommand).build() {\n};\n__name(_DescribeAutomationExecutionsCommand, \"DescribeAutomationExecutionsCommand\");\nvar DescribeAutomationExecutionsCommand = _DescribeAutomationExecutionsCommand;\n\n// src/commands/DescribeAutomationStepExecutionsCommand.ts\n\n\n\nvar _DescribeAutomationStepExecutionsCommand = class _DescribeAutomationStepExecutionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeAutomationStepExecutions\", {}).n(\"SSMClient\", \"DescribeAutomationStepExecutionsCommand\").f(void 0, void 0).ser(se_DescribeAutomationStepExecutionsCommand).de(de_DescribeAutomationStepExecutionsCommand).build() {\n};\n__name(_DescribeAutomationStepExecutionsCommand, \"DescribeAutomationStepExecutionsCommand\");\nvar DescribeAutomationStepExecutionsCommand = _DescribeAutomationStepExecutionsCommand;\n\n// src/commands/DescribeAvailablePatchesCommand.ts\n\n\n\nvar _DescribeAvailablePatchesCommand = class _DescribeAvailablePatchesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeAvailablePatches\", {}).n(\"SSMClient\", \"DescribeAvailablePatchesCommand\").f(void 0, void 0).ser(se_DescribeAvailablePatchesCommand).de(de_DescribeAvailablePatchesCommand).build() {\n};\n__name(_DescribeAvailablePatchesCommand, \"DescribeAvailablePatchesCommand\");\nvar DescribeAvailablePatchesCommand = _DescribeAvailablePatchesCommand;\n\n// src/commands/DescribeDocumentCommand.ts\n\n\n\nvar _DescribeDocumentCommand = class _DescribeDocumentCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeDocument\", {}).n(\"SSMClient\", \"DescribeDocumentCommand\").f(void 0, void 0).ser(se_DescribeDocumentCommand).de(de_DescribeDocumentCommand).build() {\n};\n__name(_DescribeDocumentCommand, \"DescribeDocumentCommand\");\nvar DescribeDocumentCommand = _DescribeDocumentCommand;\n\n// src/commands/DescribeDocumentPermissionCommand.ts\n\n\n\nvar _DescribeDocumentPermissionCommand = class _DescribeDocumentPermissionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeDocumentPermission\", {}).n(\"SSMClient\", \"DescribeDocumentPermissionCommand\").f(void 0, void 0).ser(se_DescribeDocumentPermissionCommand).de(de_DescribeDocumentPermissionCommand).build() {\n};\n__name(_DescribeDocumentPermissionCommand, \"DescribeDocumentPermissionCommand\");\nvar DescribeDocumentPermissionCommand = _DescribeDocumentPermissionCommand;\n\n// src/commands/DescribeEffectiveInstanceAssociationsCommand.ts\n\n\n\nvar _DescribeEffectiveInstanceAssociationsCommand = class _DescribeEffectiveInstanceAssociationsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeEffectiveInstanceAssociations\", {}).n(\"SSMClient\", \"DescribeEffectiveInstanceAssociationsCommand\").f(void 0, void 0).ser(se_DescribeEffectiveInstanceAssociationsCommand).de(de_DescribeEffectiveInstanceAssociationsCommand).build() {\n};\n__name(_DescribeEffectiveInstanceAssociationsCommand, \"DescribeEffectiveInstanceAssociationsCommand\");\nvar DescribeEffectiveInstanceAssociationsCommand = _DescribeEffectiveInstanceAssociationsCommand;\n\n// src/commands/DescribeEffectivePatchesForPatchBaselineCommand.ts\n\n\n\nvar _DescribeEffectivePatchesForPatchBaselineCommand = class _DescribeEffectivePatchesForPatchBaselineCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeEffectivePatchesForPatchBaseline\", {}).n(\"SSMClient\", \"DescribeEffectivePatchesForPatchBaselineCommand\").f(void 0, void 0).ser(se_DescribeEffectivePatchesForPatchBaselineCommand).de(de_DescribeEffectivePatchesForPatchBaselineCommand).build() {\n};\n__name(_DescribeEffectivePatchesForPatchBaselineCommand, \"DescribeEffectivePatchesForPatchBaselineCommand\");\nvar DescribeEffectivePatchesForPatchBaselineCommand = _DescribeEffectivePatchesForPatchBaselineCommand;\n\n// src/commands/DescribeInstanceAssociationsStatusCommand.ts\n\n\n\nvar _DescribeInstanceAssociationsStatusCommand = class _DescribeInstanceAssociationsStatusCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeInstanceAssociationsStatus\", {}).n(\"SSMClient\", \"DescribeInstanceAssociationsStatusCommand\").f(void 0, void 0).ser(se_DescribeInstanceAssociationsStatusCommand).de(de_DescribeInstanceAssociationsStatusCommand).build() {\n};\n__name(_DescribeInstanceAssociationsStatusCommand, \"DescribeInstanceAssociationsStatusCommand\");\nvar DescribeInstanceAssociationsStatusCommand = _DescribeInstanceAssociationsStatusCommand;\n\n// src/commands/DescribeInstanceInformationCommand.ts\n\n\n\nvar _DescribeInstanceInformationCommand = class _DescribeInstanceInformationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeInstanceInformation\", {}).n(\"SSMClient\", \"DescribeInstanceInformationCommand\").f(void 0, DescribeInstanceInformationResultFilterSensitiveLog).ser(se_DescribeInstanceInformationCommand).de(de_DescribeInstanceInformationCommand).build() {\n};\n__name(_DescribeInstanceInformationCommand, \"DescribeInstanceInformationCommand\");\nvar DescribeInstanceInformationCommand = _DescribeInstanceInformationCommand;\n\n// src/commands/DescribeInstancePatchesCommand.ts\n\n\n\nvar _DescribeInstancePatchesCommand = class _DescribeInstancePatchesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeInstancePatches\", {}).n(\"SSMClient\", \"DescribeInstancePatchesCommand\").f(void 0, void 0).ser(se_DescribeInstancePatchesCommand).de(de_DescribeInstancePatchesCommand).build() {\n};\n__name(_DescribeInstancePatchesCommand, \"DescribeInstancePatchesCommand\");\nvar DescribeInstancePatchesCommand = _DescribeInstancePatchesCommand;\n\n// src/commands/DescribeInstancePatchStatesCommand.ts\n\n\n\nvar _DescribeInstancePatchStatesCommand = class _DescribeInstancePatchStatesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeInstancePatchStates\", {}).n(\"SSMClient\", \"DescribeInstancePatchStatesCommand\").f(void 0, DescribeInstancePatchStatesResultFilterSensitiveLog).ser(se_DescribeInstancePatchStatesCommand).de(de_DescribeInstancePatchStatesCommand).build() {\n};\n__name(_DescribeInstancePatchStatesCommand, \"DescribeInstancePatchStatesCommand\");\nvar DescribeInstancePatchStatesCommand = _DescribeInstancePatchStatesCommand;\n\n// src/commands/DescribeInstancePatchStatesForPatchGroupCommand.ts\n\n\n\nvar _DescribeInstancePatchStatesForPatchGroupCommand = class _DescribeInstancePatchStatesForPatchGroupCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeInstancePatchStatesForPatchGroup\", {}).n(\"SSMClient\", \"DescribeInstancePatchStatesForPatchGroupCommand\").f(void 0, DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog).ser(se_DescribeInstancePatchStatesForPatchGroupCommand).de(de_DescribeInstancePatchStatesForPatchGroupCommand).build() {\n};\n__name(_DescribeInstancePatchStatesForPatchGroupCommand, \"DescribeInstancePatchStatesForPatchGroupCommand\");\nvar DescribeInstancePatchStatesForPatchGroupCommand = _DescribeInstancePatchStatesForPatchGroupCommand;\n\n// src/commands/DescribeInstancePropertiesCommand.ts\n\n\n\nvar _DescribeInstancePropertiesCommand = class _DescribeInstancePropertiesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeInstanceProperties\", {}).n(\"SSMClient\", \"DescribeInstancePropertiesCommand\").f(void 0, DescribeInstancePropertiesResultFilterSensitiveLog).ser(se_DescribeInstancePropertiesCommand).de(de_DescribeInstancePropertiesCommand).build() {\n};\n__name(_DescribeInstancePropertiesCommand, \"DescribeInstancePropertiesCommand\");\nvar DescribeInstancePropertiesCommand = _DescribeInstancePropertiesCommand;\n\n// src/commands/DescribeInventoryDeletionsCommand.ts\n\n\n\nvar _DescribeInventoryDeletionsCommand = class _DescribeInventoryDeletionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeInventoryDeletions\", {}).n(\"SSMClient\", \"DescribeInventoryDeletionsCommand\").f(void 0, void 0).ser(se_DescribeInventoryDeletionsCommand).de(de_DescribeInventoryDeletionsCommand).build() {\n};\n__name(_DescribeInventoryDeletionsCommand, \"DescribeInventoryDeletionsCommand\");\nvar DescribeInventoryDeletionsCommand = _DescribeInventoryDeletionsCommand;\n\n// src/commands/DescribeMaintenanceWindowExecutionsCommand.ts\n\n\n\nvar _DescribeMaintenanceWindowExecutionsCommand = class _DescribeMaintenanceWindowExecutionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeMaintenanceWindowExecutions\", {}).n(\"SSMClient\", \"DescribeMaintenanceWindowExecutionsCommand\").f(void 0, void 0).ser(se_DescribeMaintenanceWindowExecutionsCommand).de(de_DescribeMaintenanceWindowExecutionsCommand).build() {\n};\n__name(_DescribeMaintenanceWindowExecutionsCommand, \"DescribeMaintenanceWindowExecutionsCommand\");\nvar DescribeMaintenanceWindowExecutionsCommand = _DescribeMaintenanceWindowExecutionsCommand;\n\n// src/commands/DescribeMaintenanceWindowExecutionTaskInvocationsCommand.ts\n\n\n\nvar _DescribeMaintenanceWindowExecutionTaskInvocationsCommand = class _DescribeMaintenanceWindowExecutionTaskInvocationsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeMaintenanceWindowExecutionTaskInvocations\", {}).n(\"SSMClient\", \"DescribeMaintenanceWindowExecutionTaskInvocationsCommand\").f(void 0, DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog).ser(se_DescribeMaintenanceWindowExecutionTaskInvocationsCommand).de(de_DescribeMaintenanceWindowExecutionTaskInvocationsCommand).build() {\n};\n__name(_DescribeMaintenanceWindowExecutionTaskInvocationsCommand, \"DescribeMaintenanceWindowExecutionTaskInvocationsCommand\");\nvar DescribeMaintenanceWindowExecutionTaskInvocationsCommand = _DescribeMaintenanceWindowExecutionTaskInvocationsCommand;\n\n// src/commands/DescribeMaintenanceWindowExecutionTasksCommand.ts\n\n\n\nvar _DescribeMaintenanceWindowExecutionTasksCommand = class _DescribeMaintenanceWindowExecutionTasksCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeMaintenanceWindowExecutionTasks\", {}).n(\"SSMClient\", \"DescribeMaintenanceWindowExecutionTasksCommand\").f(void 0, void 0).ser(se_DescribeMaintenanceWindowExecutionTasksCommand).de(de_DescribeMaintenanceWindowExecutionTasksCommand).build() {\n};\n__name(_DescribeMaintenanceWindowExecutionTasksCommand, \"DescribeMaintenanceWindowExecutionTasksCommand\");\nvar DescribeMaintenanceWindowExecutionTasksCommand = _DescribeMaintenanceWindowExecutionTasksCommand;\n\n// src/commands/DescribeMaintenanceWindowScheduleCommand.ts\n\n\n\nvar _DescribeMaintenanceWindowScheduleCommand = class _DescribeMaintenanceWindowScheduleCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeMaintenanceWindowSchedule\", {}).n(\"SSMClient\", \"DescribeMaintenanceWindowScheduleCommand\").f(void 0, void 0).ser(se_DescribeMaintenanceWindowScheduleCommand).de(de_DescribeMaintenanceWindowScheduleCommand).build() {\n};\n__name(_DescribeMaintenanceWindowScheduleCommand, \"DescribeMaintenanceWindowScheduleCommand\");\nvar DescribeMaintenanceWindowScheduleCommand = _DescribeMaintenanceWindowScheduleCommand;\n\n// src/commands/DescribeMaintenanceWindowsCommand.ts\n\n\n\nvar _DescribeMaintenanceWindowsCommand = class _DescribeMaintenanceWindowsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeMaintenanceWindows\", {}).n(\"SSMClient\", \"DescribeMaintenanceWindowsCommand\").f(void 0, DescribeMaintenanceWindowsResultFilterSensitiveLog).ser(se_DescribeMaintenanceWindowsCommand).de(de_DescribeMaintenanceWindowsCommand).build() {\n};\n__name(_DescribeMaintenanceWindowsCommand, \"DescribeMaintenanceWindowsCommand\");\nvar DescribeMaintenanceWindowsCommand = _DescribeMaintenanceWindowsCommand;\n\n// src/commands/DescribeMaintenanceWindowsForTargetCommand.ts\n\n\n\nvar _DescribeMaintenanceWindowsForTargetCommand = class _DescribeMaintenanceWindowsForTargetCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeMaintenanceWindowsForTarget\", {}).n(\"SSMClient\", \"DescribeMaintenanceWindowsForTargetCommand\").f(void 0, void 0).ser(se_DescribeMaintenanceWindowsForTargetCommand).de(de_DescribeMaintenanceWindowsForTargetCommand).build() {\n};\n__name(_DescribeMaintenanceWindowsForTargetCommand, \"DescribeMaintenanceWindowsForTargetCommand\");\nvar DescribeMaintenanceWindowsForTargetCommand = _DescribeMaintenanceWindowsForTargetCommand;\n\n// src/commands/DescribeMaintenanceWindowTargetsCommand.ts\n\n\n\nvar _DescribeMaintenanceWindowTargetsCommand = class _DescribeMaintenanceWindowTargetsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeMaintenanceWindowTargets\", {}).n(\"SSMClient\", \"DescribeMaintenanceWindowTargetsCommand\").f(void 0, DescribeMaintenanceWindowTargetsResultFilterSensitiveLog).ser(se_DescribeMaintenanceWindowTargetsCommand).de(de_DescribeMaintenanceWindowTargetsCommand).build() {\n};\n__name(_DescribeMaintenanceWindowTargetsCommand, \"DescribeMaintenanceWindowTargetsCommand\");\nvar DescribeMaintenanceWindowTargetsCommand = _DescribeMaintenanceWindowTargetsCommand;\n\n// src/commands/DescribeMaintenanceWindowTasksCommand.ts\n\n\n\nvar _DescribeMaintenanceWindowTasksCommand = class _DescribeMaintenanceWindowTasksCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeMaintenanceWindowTasks\", {}).n(\"SSMClient\", \"DescribeMaintenanceWindowTasksCommand\").f(void 0, DescribeMaintenanceWindowTasksResultFilterSensitiveLog).ser(se_DescribeMaintenanceWindowTasksCommand).de(de_DescribeMaintenanceWindowTasksCommand).build() {\n};\n__name(_DescribeMaintenanceWindowTasksCommand, \"DescribeMaintenanceWindowTasksCommand\");\nvar DescribeMaintenanceWindowTasksCommand = _DescribeMaintenanceWindowTasksCommand;\n\n// src/commands/DescribeOpsItemsCommand.ts\n\n\n\nvar _DescribeOpsItemsCommand = class _DescribeOpsItemsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeOpsItems\", {}).n(\"SSMClient\", \"DescribeOpsItemsCommand\").f(void 0, void 0).ser(se_DescribeOpsItemsCommand).de(de_DescribeOpsItemsCommand).build() {\n};\n__name(_DescribeOpsItemsCommand, \"DescribeOpsItemsCommand\");\nvar DescribeOpsItemsCommand = _DescribeOpsItemsCommand;\n\n// src/commands/DescribeParametersCommand.ts\n\n\n\nvar _DescribeParametersCommand = class _DescribeParametersCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeParameters\", {}).n(\"SSMClient\", \"DescribeParametersCommand\").f(void 0, void 0).ser(se_DescribeParametersCommand).de(de_DescribeParametersCommand).build() {\n};\n__name(_DescribeParametersCommand, \"DescribeParametersCommand\");\nvar DescribeParametersCommand = _DescribeParametersCommand;\n\n// src/commands/DescribePatchBaselinesCommand.ts\n\n\n\nvar _DescribePatchBaselinesCommand = class _DescribePatchBaselinesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribePatchBaselines\", {}).n(\"SSMClient\", \"DescribePatchBaselinesCommand\").f(void 0, void 0).ser(se_DescribePatchBaselinesCommand).de(de_DescribePatchBaselinesCommand).build() {\n};\n__name(_DescribePatchBaselinesCommand, \"DescribePatchBaselinesCommand\");\nvar DescribePatchBaselinesCommand = _DescribePatchBaselinesCommand;\n\n// src/commands/DescribePatchGroupsCommand.ts\n\n\n\nvar _DescribePatchGroupsCommand = class _DescribePatchGroupsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribePatchGroups\", {}).n(\"SSMClient\", \"DescribePatchGroupsCommand\").f(void 0, void 0).ser(se_DescribePatchGroupsCommand).de(de_DescribePatchGroupsCommand).build() {\n};\n__name(_DescribePatchGroupsCommand, \"DescribePatchGroupsCommand\");\nvar DescribePatchGroupsCommand = _DescribePatchGroupsCommand;\n\n// src/commands/DescribePatchGroupStateCommand.ts\n\n\n\nvar _DescribePatchGroupStateCommand = class _DescribePatchGroupStateCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribePatchGroupState\", {}).n(\"SSMClient\", \"DescribePatchGroupStateCommand\").f(void 0, void 0).ser(se_DescribePatchGroupStateCommand).de(de_DescribePatchGroupStateCommand).build() {\n};\n__name(_DescribePatchGroupStateCommand, \"DescribePatchGroupStateCommand\");\nvar DescribePatchGroupStateCommand = _DescribePatchGroupStateCommand;\n\n// src/commands/DescribePatchPropertiesCommand.ts\n\n\n\nvar _DescribePatchPropertiesCommand = class _DescribePatchPropertiesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribePatchProperties\", {}).n(\"SSMClient\", \"DescribePatchPropertiesCommand\").f(void 0, void 0).ser(se_DescribePatchPropertiesCommand).de(de_DescribePatchPropertiesCommand).build() {\n};\n__name(_DescribePatchPropertiesCommand, \"DescribePatchPropertiesCommand\");\nvar DescribePatchPropertiesCommand = _DescribePatchPropertiesCommand;\n\n// src/commands/DescribeSessionsCommand.ts\n\n\n\nvar _DescribeSessionsCommand = class _DescribeSessionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DescribeSessions\", {}).n(\"SSMClient\", \"DescribeSessionsCommand\").f(void 0, void 0).ser(se_DescribeSessionsCommand).de(de_DescribeSessionsCommand).build() {\n};\n__name(_DescribeSessionsCommand, \"DescribeSessionsCommand\");\nvar DescribeSessionsCommand = _DescribeSessionsCommand;\n\n// src/commands/DisassociateOpsItemRelatedItemCommand.ts\n\n\n\nvar _DisassociateOpsItemRelatedItemCommand = class _DisassociateOpsItemRelatedItemCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"DisassociateOpsItemRelatedItem\", {}).n(\"SSMClient\", \"DisassociateOpsItemRelatedItemCommand\").f(void 0, void 0).ser(se_DisassociateOpsItemRelatedItemCommand).de(de_DisassociateOpsItemRelatedItemCommand).build() {\n};\n__name(_DisassociateOpsItemRelatedItemCommand, \"DisassociateOpsItemRelatedItemCommand\");\nvar DisassociateOpsItemRelatedItemCommand = _DisassociateOpsItemRelatedItemCommand;\n\n// src/commands/GetAutomationExecutionCommand.ts\n\n\n\nvar _GetAutomationExecutionCommand = class _GetAutomationExecutionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetAutomationExecution\", {}).n(\"SSMClient\", \"GetAutomationExecutionCommand\").f(void 0, void 0).ser(se_GetAutomationExecutionCommand).de(de_GetAutomationExecutionCommand).build() {\n};\n__name(_GetAutomationExecutionCommand, \"GetAutomationExecutionCommand\");\nvar GetAutomationExecutionCommand = _GetAutomationExecutionCommand;\n\n// src/commands/GetCalendarStateCommand.ts\n\n\n\nvar _GetCalendarStateCommand = class _GetCalendarStateCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetCalendarState\", {}).n(\"SSMClient\", \"GetCalendarStateCommand\").f(void 0, void 0).ser(se_GetCalendarStateCommand).de(de_GetCalendarStateCommand).build() {\n};\n__name(_GetCalendarStateCommand, \"GetCalendarStateCommand\");\nvar GetCalendarStateCommand = _GetCalendarStateCommand;\n\n// src/commands/GetCommandInvocationCommand.ts\n\n\n\nvar _GetCommandInvocationCommand = class _GetCommandInvocationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetCommandInvocation\", {}).n(\"SSMClient\", \"GetCommandInvocationCommand\").f(void 0, void 0).ser(se_GetCommandInvocationCommand).de(de_GetCommandInvocationCommand).build() {\n};\n__name(_GetCommandInvocationCommand, \"GetCommandInvocationCommand\");\nvar GetCommandInvocationCommand = _GetCommandInvocationCommand;\n\n// src/commands/GetConnectionStatusCommand.ts\n\n\n\nvar _GetConnectionStatusCommand = class _GetConnectionStatusCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetConnectionStatus\", {}).n(\"SSMClient\", \"GetConnectionStatusCommand\").f(void 0, void 0).ser(se_GetConnectionStatusCommand).de(de_GetConnectionStatusCommand).build() {\n};\n__name(_GetConnectionStatusCommand, \"GetConnectionStatusCommand\");\nvar GetConnectionStatusCommand = _GetConnectionStatusCommand;\n\n// src/commands/GetDefaultPatchBaselineCommand.ts\n\n\n\nvar _GetDefaultPatchBaselineCommand = class _GetDefaultPatchBaselineCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetDefaultPatchBaseline\", {}).n(\"SSMClient\", \"GetDefaultPatchBaselineCommand\").f(void 0, void 0).ser(se_GetDefaultPatchBaselineCommand).de(de_GetDefaultPatchBaselineCommand).build() {\n};\n__name(_GetDefaultPatchBaselineCommand, \"GetDefaultPatchBaselineCommand\");\nvar GetDefaultPatchBaselineCommand = _GetDefaultPatchBaselineCommand;\n\n// src/commands/GetDeployablePatchSnapshotForInstanceCommand.ts\n\n\n\nvar _GetDeployablePatchSnapshotForInstanceCommand = class _GetDeployablePatchSnapshotForInstanceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetDeployablePatchSnapshotForInstance\", {}).n(\"SSMClient\", \"GetDeployablePatchSnapshotForInstanceCommand\").f(GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog, void 0).ser(se_GetDeployablePatchSnapshotForInstanceCommand).de(de_GetDeployablePatchSnapshotForInstanceCommand).build() {\n};\n__name(_GetDeployablePatchSnapshotForInstanceCommand, \"GetDeployablePatchSnapshotForInstanceCommand\");\nvar GetDeployablePatchSnapshotForInstanceCommand = _GetDeployablePatchSnapshotForInstanceCommand;\n\n// src/commands/GetDocumentCommand.ts\n\n\n\nvar _GetDocumentCommand = class _GetDocumentCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetDocument\", {}).n(\"SSMClient\", \"GetDocumentCommand\").f(void 0, void 0).ser(se_GetDocumentCommand).de(de_GetDocumentCommand).build() {\n};\n__name(_GetDocumentCommand, \"GetDocumentCommand\");\nvar GetDocumentCommand = _GetDocumentCommand;\n\n// src/commands/GetInventoryCommand.ts\n\n\n\nvar _GetInventoryCommand = class _GetInventoryCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetInventory\", {}).n(\"SSMClient\", \"GetInventoryCommand\").f(void 0, void 0).ser(se_GetInventoryCommand).de(de_GetInventoryCommand).build() {\n};\n__name(_GetInventoryCommand, \"GetInventoryCommand\");\nvar GetInventoryCommand = _GetInventoryCommand;\n\n// src/commands/GetInventorySchemaCommand.ts\n\n\n\nvar _GetInventorySchemaCommand = class _GetInventorySchemaCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetInventorySchema\", {}).n(\"SSMClient\", \"GetInventorySchemaCommand\").f(void 0, void 0).ser(se_GetInventorySchemaCommand).de(de_GetInventorySchemaCommand).build() {\n};\n__name(_GetInventorySchemaCommand, \"GetInventorySchemaCommand\");\nvar GetInventorySchemaCommand = _GetInventorySchemaCommand;\n\n// src/commands/GetMaintenanceWindowCommand.ts\n\n\n\nvar _GetMaintenanceWindowCommand = class _GetMaintenanceWindowCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetMaintenanceWindow\", {}).n(\"SSMClient\", \"GetMaintenanceWindowCommand\").f(void 0, GetMaintenanceWindowResultFilterSensitiveLog).ser(se_GetMaintenanceWindowCommand).de(de_GetMaintenanceWindowCommand).build() {\n};\n__name(_GetMaintenanceWindowCommand, \"GetMaintenanceWindowCommand\");\nvar GetMaintenanceWindowCommand = _GetMaintenanceWindowCommand;\n\n// src/commands/GetMaintenanceWindowExecutionCommand.ts\n\n\n\nvar _GetMaintenanceWindowExecutionCommand = class _GetMaintenanceWindowExecutionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetMaintenanceWindowExecution\", {}).n(\"SSMClient\", \"GetMaintenanceWindowExecutionCommand\").f(void 0, void 0).ser(se_GetMaintenanceWindowExecutionCommand).de(de_GetMaintenanceWindowExecutionCommand).build() {\n};\n__name(_GetMaintenanceWindowExecutionCommand, \"GetMaintenanceWindowExecutionCommand\");\nvar GetMaintenanceWindowExecutionCommand = _GetMaintenanceWindowExecutionCommand;\n\n// src/commands/GetMaintenanceWindowExecutionTaskCommand.ts\n\n\n\nvar _GetMaintenanceWindowExecutionTaskCommand = class _GetMaintenanceWindowExecutionTaskCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetMaintenanceWindowExecutionTask\", {}).n(\"SSMClient\", \"GetMaintenanceWindowExecutionTaskCommand\").f(void 0, GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog).ser(se_GetMaintenanceWindowExecutionTaskCommand).de(de_GetMaintenanceWindowExecutionTaskCommand).build() {\n};\n__name(_GetMaintenanceWindowExecutionTaskCommand, \"GetMaintenanceWindowExecutionTaskCommand\");\nvar GetMaintenanceWindowExecutionTaskCommand = _GetMaintenanceWindowExecutionTaskCommand;\n\n// src/commands/GetMaintenanceWindowExecutionTaskInvocationCommand.ts\n\n\n\nvar _GetMaintenanceWindowExecutionTaskInvocationCommand = class _GetMaintenanceWindowExecutionTaskInvocationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetMaintenanceWindowExecutionTaskInvocation\", {}).n(\"SSMClient\", \"GetMaintenanceWindowExecutionTaskInvocationCommand\").f(void 0, GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog).ser(se_GetMaintenanceWindowExecutionTaskInvocationCommand).de(de_GetMaintenanceWindowExecutionTaskInvocationCommand).build() {\n};\n__name(_GetMaintenanceWindowExecutionTaskInvocationCommand, \"GetMaintenanceWindowExecutionTaskInvocationCommand\");\nvar GetMaintenanceWindowExecutionTaskInvocationCommand = _GetMaintenanceWindowExecutionTaskInvocationCommand;\n\n// src/commands/GetMaintenanceWindowTaskCommand.ts\n\n\n\nvar _GetMaintenanceWindowTaskCommand = class _GetMaintenanceWindowTaskCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetMaintenanceWindowTask\", {}).n(\"SSMClient\", \"GetMaintenanceWindowTaskCommand\").f(void 0, GetMaintenanceWindowTaskResultFilterSensitiveLog).ser(se_GetMaintenanceWindowTaskCommand).de(de_GetMaintenanceWindowTaskCommand).build() {\n};\n__name(_GetMaintenanceWindowTaskCommand, \"GetMaintenanceWindowTaskCommand\");\nvar GetMaintenanceWindowTaskCommand = _GetMaintenanceWindowTaskCommand;\n\n// src/commands/GetOpsItemCommand.ts\n\n\n\nvar _GetOpsItemCommand = class _GetOpsItemCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetOpsItem\", {}).n(\"SSMClient\", \"GetOpsItemCommand\").f(void 0, void 0).ser(se_GetOpsItemCommand).de(de_GetOpsItemCommand).build() {\n};\n__name(_GetOpsItemCommand, \"GetOpsItemCommand\");\nvar GetOpsItemCommand = _GetOpsItemCommand;\n\n// src/commands/GetOpsMetadataCommand.ts\n\n\n\nvar _GetOpsMetadataCommand = class _GetOpsMetadataCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetOpsMetadata\", {}).n(\"SSMClient\", \"GetOpsMetadataCommand\").f(void 0, void 0).ser(se_GetOpsMetadataCommand).de(de_GetOpsMetadataCommand).build() {\n};\n__name(_GetOpsMetadataCommand, \"GetOpsMetadataCommand\");\nvar GetOpsMetadataCommand = _GetOpsMetadataCommand;\n\n// src/commands/GetOpsSummaryCommand.ts\n\n\n\nvar _GetOpsSummaryCommand = class _GetOpsSummaryCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetOpsSummary\", {}).n(\"SSMClient\", \"GetOpsSummaryCommand\").f(void 0, void 0).ser(se_GetOpsSummaryCommand).de(de_GetOpsSummaryCommand).build() {\n};\n__name(_GetOpsSummaryCommand, \"GetOpsSummaryCommand\");\nvar GetOpsSummaryCommand = _GetOpsSummaryCommand;\n\n// src/commands/GetParameterCommand.ts\n\n\n\nvar _GetParameterCommand = class _GetParameterCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetParameter\", {}).n(\"SSMClient\", \"GetParameterCommand\").f(void 0, GetParameterResultFilterSensitiveLog).ser(se_GetParameterCommand).de(de_GetParameterCommand).build() {\n};\n__name(_GetParameterCommand, \"GetParameterCommand\");\nvar GetParameterCommand = _GetParameterCommand;\n\n// src/commands/GetParameterHistoryCommand.ts\n\n\n\nvar _GetParameterHistoryCommand = class _GetParameterHistoryCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetParameterHistory\", {}).n(\"SSMClient\", \"GetParameterHistoryCommand\").f(void 0, GetParameterHistoryResultFilterSensitiveLog).ser(se_GetParameterHistoryCommand).de(de_GetParameterHistoryCommand).build() {\n};\n__name(_GetParameterHistoryCommand, \"GetParameterHistoryCommand\");\nvar GetParameterHistoryCommand = _GetParameterHistoryCommand;\n\n// src/commands/GetParametersByPathCommand.ts\n\n\n\nvar _GetParametersByPathCommand = class _GetParametersByPathCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetParametersByPath\", {}).n(\"SSMClient\", \"GetParametersByPathCommand\").f(void 0, GetParametersByPathResultFilterSensitiveLog).ser(se_GetParametersByPathCommand).de(de_GetParametersByPathCommand).build() {\n};\n__name(_GetParametersByPathCommand, \"GetParametersByPathCommand\");\nvar GetParametersByPathCommand = _GetParametersByPathCommand;\n\n// src/commands/GetParametersCommand.ts\n\n\n\nvar _GetParametersCommand = class _GetParametersCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetParameters\", {}).n(\"SSMClient\", \"GetParametersCommand\").f(void 0, GetParametersResultFilterSensitiveLog).ser(se_GetParametersCommand).de(de_GetParametersCommand).build() {\n};\n__name(_GetParametersCommand, \"GetParametersCommand\");\nvar GetParametersCommand = _GetParametersCommand;\n\n// src/commands/GetPatchBaselineCommand.ts\n\n\n\nvar _GetPatchBaselineCommand = class _GetPatchBaselineCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetPatchBaseline\", {}).n(\"SSMClient\", \"GetPatchBaselineCommand\").f(void 0, GetPatchBaselineResultFilterSensitiveLog).ser(se_GetPatchBaselineCommand).de(de_GetPatchBaselineCommand).build() {\n};\n__name(_GetPatchBaselineCommand, \"GetPatchBaselineCommand\");\nvar GetPatchBaselineCommand = _GetPatchBaselineCommand;\n\n// src/commands/GetPatchBaselineForPatchGroupCommand.ts\n\n\n\nvar _GetPatchBaselineForPatchGroupCommand = class _GetPatchBaselineForPatchGroupCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetPatchBaselineForPatchGroup\", {}).n(\"SSMClient\", \"GetPatchBaselineForPatchGroupCommand\").f(void 0, void 0).ser(se_GetPatchBaselineForPatchGroupCommand).de(de_GetPatchBaselineForPatchGroupCommand).build() {\n};\n__name(_GetPatchBaselineForPatchGroupCommand, \"GetPatchBaselineForPatchGroupCommand\");\nvar GetPatchBaselineForPatchGroupCommand = _GetPatchBaselineForPatchGroupCommand;\n\n// src/commands/GetResourcePoliciesCommand.ts\n\n\n\nvar _GetResourcePoliciesCommand = class _GetResourcePoliciesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetResourcePolicies\", {}).n(\"SSMClient\", \"GetResourcePoliciesCommand\").f(void 0, void 0).ser(se_GetResourcePoliciesCommand).de(de_GetResourcePoliciesCommand).build() {\n};\n__name(_GetResourcePoliciesCommand, \"GetResourcePoliciesCommand\");\nvar GetResourcePoliciesCommand = _GetResourcePoliciesCommand;\n\n// src/commands/GetServiceSettingCommand.ts\n\n\n\nvar _GetServiceSettingCommand = class _GetServiceSettingCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"GetServiceSetting\", {}).n(\"SSMClient\", \"GetServiceSettingCommand\").f(void 0, void 0).ser(se_GetServiceSettingCommand).de(de_GetServiceSettingCommand).build() {\n};\n__name(_GetServiceSettingCommand, \"GetServiceSettingCommand\");\nvar GetServiceSettingCommand = _GetServiceSettingCommand;\n\n// src/commands/LabelParameterVersionCommand.ts\n\n\n\nvar _LabelParameterVersionCommand = class _LabelParameterVersionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"LabelParameterVersion\", {}).n(\"SSMClient\", \"LabelParameterVersionCommand\").f(void 0, void 0).ser(se_LabelParameterVersionCommand).de(de_LabelParameterVersionCommand).build() {\n};\n__name(_LabelParameterVersionCommand, \"LabelParameterVersionCommand\");\nvar LabelParameterVersionCommand = _LabelParameterVersionCommand;\n\n// src/commands/ListAssociationsCommand.ts\n\n\n\nvar _ListAssociationsCommand = class _ListAssociationsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListAssociations\", {}).n(\"SSMClient\", \"ListAssociationsCommand\").f(void 0, void 0).ser(se_ListAssociationsCommand).de(de_ListAssociationsCommand).build() {\n};\n__name(_ListAssociationsCommand, \"ListAssociationsCommand\");\nvar ListAssociationsCommand = _ListAssociationsCommand;\n\n// src/commands/ListAssociationVersionsCommand.ts\n\n\n\nvar _ListAssociationVersionsCommand = class _ListAssociationVersionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListAssociationVersions\", {}).n(\"SSMClient\", \"ListAssociationVersionsCommand\").f(void 0, ListAssociationVersionsResultFilterSensitiveLog).ser(se_ListAssociationVersionsCommand).de(de_ListAssociationVersionsCommand).build() {\n};\n__name(_ListAssociationVersionsCommand, \"ListAssociationVersionsCommand\");\nvar ListAssociationVersionsCommand = _ListAssociationVersionsCommand;\n\n// src/commands/ListCommandInvocationsCommand.ts\n\n\n\nvar _ListCommandInvocationsCommand = class _ListCommandInvocationsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListCommandInvocations\", {}).n(\"SSMClient\", \"ListCommandInvocationsCommand\").f(void 0, void 0).ser(se_ListCommandInvocationsCommand).de(de_ListCommandInvocationsCommand).build() {\n};\n__name(_ListCommandInvocationsCommand, \"ListCommandInvocationsCommand\");\nvar ListCommandInvocationsCommand = _ListCommandInvocationsCommand;\n\n// src/commands/ListCommandsCommand.ts\n\n\n\nvar _ListCommandsCommand = class _ListCommandsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListCommands\", {}).n(\"SSMClient\", \"ListCommandsCommand\").f(void 0, ListCommandsResultFilterSensitiveLog).ser(se_ListCommandsCommand).de(de_ListCommandsCommand).build() {\n};\n__name(_ListCommandsCommand, \"ListCommandsCommand\");\nvar ListCommandsCommand = _ListCommandsCommand;\n\n// src/commands/ListComplianceItemsCommand.ts\n\n\n\nvar _ListComplianceItemsCommand = class _ListComplianceItemsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListComplianceItems\", {}).n(\"SSMClient\", \"ListComplianceItemsCommand\").f(void 0, void 0).ser(se_ListComplianceItemsCommand).de(de_ListComplianceItemsCommand).build() {\n};\n__name(_ListComplianceItemsCommand, \"ListComplianceItemsCommand\");\nvar ListComplianceItemsCommand = _ListComplianceItemsCommand;\n\n// src/commands/ListComplianceSummariesCommand.ts\n\n\n\nvar _ListComplianceSummariesCommand = class _ListComplianceSummariesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListComplianceSummaries\", {}).n(\"SSMClient\", \"ListComplianceSummariesCommand\").f(void 0, void 0).ser(se_ListComplianceSummariesCommand).de(de_ListComplianceSummariesCommand).build() {\n};\n__name(_ListComplianceSummariesCommand, \"ListComplianceSummariesCommand\");\nvar ListComplianceSummariesCommand = _ListComplianceSummariesCommand;\n\n// src/commands/ListDocumentMetadataHistoryCommand.ts\n\n\n\nvar _ListDocumentMetadataHistoryCommand = class _ListDocumentMetadataHistoryCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListDocumentMetadataHistory\", {}).n(\"SSMClient\", \"ListDocumentMetadataHistoryCommand\").f(void 0, void 0).ser(se_ListDocumentMetadataHistoryCommand).de(de_ListDocumentMetadataHistoryCommand).build() {\n};\n__name(_ListDocumentMetadataHistoryCommand, \"ListDocumentMetadataHistoryCommand\");\nvar ListDocumentMetadataHistoryCommand = _ListDocumentMetadataHistoryCommand;\n\n// src/commands/ListDocumentsCommand.ts\n\n\n\nvar _ListDocumentsCommand = class _ListDocumentsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListDocuments\", {}).n(\"SSMClient\", \"ListDocumentsCommand\").f(void 0, void 0).ser(se_ListDocumentsCommand).de(de_ListDocumentsCommand).build() {\n};\n__name(_ListDocumentsCommand, \"ListDocumentsCommand\");\nvar ListDocumentsCommand = _ListDocumentsCommand;\n\n// src/commands/ListDocumentVersionsCommand.ts\n\n\n\nvar _ListDocumentVersionsCommand = class _ListDocumentVersionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListDocumentVersions\", {}).n(\"SSMClient\", \"ListDocumentVersionsCommand\").f(void 0, void 0).ser(se_ListDocumentVersionsCommand).de(de_ListDocumentVersionsCommand).build() {\n};\n__name(_ListDocumentVersionsCommand, \"ListDocumentVersionsCommand\");\nvar ListDocumentVersionsCommand = _ListDocumentVersionsCommand;\n\n// src/commands/ListInventoryEntriesCommand.ts\n\n\n\nvar _ListInventoryEntriesCommand = class _ListInventoryEntriesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListInventoryEntries\", {}).n(\"SSMClient\", \"ListInventoryEntriesCommand\").f(void 0, void 0).ser(se_ListInventoryEntriesCommand).de(de_ListInventoryEntriesCommand).build() {\n};\n__name(_ListInventoryEntriesCommand, \"ListInventoryEntriesCommand\");\nvar ListInventoryEntriesCommand = _ListInventoryEntriesCommand;\n\n// src/commands/ListOpsItemEventsCommand.ts\n\n\n\nvar _ListOpsItemEventsCommand = class _ListOpsItemEventsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListOpsItemEvents\", {}).n(\"SSMClient\", \"ListOpsItemEventsCommand\").f(void 0, void 0).ser(se_ListOpsItemEventsCommand).de(de_ListOpsItemEventsCommand).build() {\n};\n__name(_ListOpsItemEventsCommand, \"ListOpsItemEventsCommand\");\nvar ListOpsItemEventsCommand = _ListOpsItemEventsCommand;\n\n// src/commands/ListOpsItemRelatedItemsCommand.ts\n\n\n\nvar _ListOpsItemRelatedItemsCommand = class _ListOpsItemRelatedItemsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListOpsItemRelatedItems\", {}).n(\"SSMClient\", \"ListOpsItemRelatedItemsCommand\").f(void 0, void 0).ser(se_ListOpsItemRelatedItemsCommand).de(de_ListOpsItemRelatedItemsCommand).build() {\n};\n__name(_ListOpsItemRelatedItemsCommand, \"ListOpsItemRelatedItemsCommand\");\nvar ListOpsItemRelatedItemsCommand = _ListOpsItemRelatedItemsCommand;\n\n// src/commands/ListOpsMetadataCommand.ts\n\n\n\nvar _ListOpsMetadataCommand = class _ListOpsMetadataCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListOpsMetadata\", {}).n(\"SSMClient\", \"ListOpsMetadataCommand\").f(void 0, void 0).ser(se_ListOpsMetadataCommand).de(de_ListOpsMetadataCommand).build() {\n};\n__name(_ListOpsMetadataCommand, \"ListOpsMetadataCommand\");\nvar ListOpsMetadataCommand = _ListOpsMetadataCommand;\n\n// src/commands/ListResourceComplianceSummariesCommand.ts\n\n\n\nvar _ListResourceComplianceSummariesCommand = class _ListResourceComplianceSummariesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListResourceComplianceSummaries\", {}).n(\"SSMClient\", \"ListResourceComplianceSummariesCommand\").f(void 0, void 0).ser(se_ListResourceComplianceSummariesCommand).de(de_ListResourceComplianceSummariesCommand).build() {\n};\n__name(_ListResourceComplianceSummariesCommand, \"ListResourceComplianceSummariesCommand\");\nvar ListResourceComplianceSummariesCommand = _ListResourceComplianceSummariesCommand;\n\n// src/commands/ListResourceDataSyncCommand.ts\n\n\n\nvar _ListResourceDataSyncCommand = class _ListResourceDataSyncCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListResourceDataSync\", {}).n(\"SSMClient\", \"ListResourceDataSyncCommand\").f(void 0, void 0).ser(se_ListResourceDataSyncCommand).de(de_ListResourceDataSyncCommand).build() {\n};\n__name(_ListResourceDataSyncCommand, \"ListResourceDataSyncCommand\");\nvar ListResourceDataSyncCommand = _ListResourceDataSyncCommand;\n\n// src/commands/ListTagsForResourceCommand.ts\n\n\n\nvar _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ListTagsForResource\", {}).n(\"SSMClient\", \"ListTagsForResourceCommand\").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {\n};\n__name(_ListTagsForResourceCommand, \"ListTagsForResourceCommand\");\nvar ListTagsForResourceCommand = _ListTagsForResourceCommand;\n\n// src/commands/ModifyDocumentPermissionCommand.ts\n\n\n\nvar _ModifyDocumentPermissionCommand = class _ModifyDocumentPermissionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ModifyDocumentPermission\", {}).n(\"SSMClient\", \"ModifyDocumentPermissionCommand\").f(void 0, void 0).ser(se_ModifyDocumentPermissionCommand).de(de_ModifyDocumentPermissionCommand).build() {\n};\n__name(_ModifyDocumentPermissionCommand, \"ModifyDocumentPermissionCommand\");\nvar ModifyDocumentPermissionCommand = _ModifyDocumentPermissionCommand;\n\n// src/commands/PutComplianceItemsCommand.ts\n\n\n\nvar _PutComplianceItemsCommand = class _PutComplianceItemsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"PutComplianceItems\", {}).n(\"SSMClient\", \"PutComplianceItemsCommand\").f(void 0, void 0).ser(se_PutComplianceItemsCommand).de(de_PutComplianceItemsCommand).build() {\n};\n__name(_PutComplianceItemsCommand, \"PutComplianceItemsCommand\");\nvar PutComplianceItemsCommand = _PutComplianceItemsCommand;\n\n// src/commands/PutInventoryCommand.ts\n\n\n\nvar _PutInventoryCommand = class _PutInventoryCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"PutInventory\", {}).n(\"SSMClient\", \"PutInventoryCommand\").f(void 0, void 0).ser(se_PutInventoryCommand).de(de_PutInventoryCommand).build() {\n};\n__name(_PutInventoryCommand, \"PutInventoryCommand\");\nvar PutInventoryCommand = _PutInventoryCommand;\n\n// src/commands/PutParameterCommand.ts\n\n\n\nvar _PutParameterCommand = class _PutParameterCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"PutParameter\", {}).n(\"SSMClient\", \"PutParameterCommand\").f(PutParameterRequestFilterSensitiveLog, void 0).ser(se_PutParameterCommand).de(de_PutParameterCommand).build() {\n};\n__name(_PutParameterCommand, \"PutParameterCommand\");\nvar PutParameterCommand = _PutParameterCommand;\n\n// src/commands/PutResourcePolicyCommand.ts\n\n\n\nvar _PutResourcePolicyCommand = class _PutResourcePolicyCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"PutResourcePolicy\", {}).n(\"SSMClient\", \"PutResourcePolicyCommand\").f(void 0, void 0).ser(se_PutResourcePolicyCommand).de(de_PutResourcePolicyCommand).build() {\n};\n__name(_PutResourcePolicyCommand, \"PutResourcePolicyCommand\");\nvar PutResourcePolicyCommand = _PutResourcePolicyCommand;\n\n// src/commands/RegisterDefaultPatchBaselineCommand.ts\n\n\n\nvar _RegisterDefaultPatchBaselineCommand = class _RegisterDefaultPatchBaselineCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"RegisterDefaultPatchBaseline\", {}).n(\"SSMClient\", \"RegisterDefaultPatchBaselineCommand\").f(void 0, void 0).ser(se_RegisterDefaultPatchBaselineCommand).de(de_RegisterDefaultPatchBaselineCommand).build() {\n};\n__name(_RegisterDefaultPatchBaselineCommand, \"RegisterDefaultPatchBaselineCommand\");\nvar RegisterDefaultPatchBaselineCommand = _RegisterDefaultPatchBaselineCommand;\n\n// src/commands/RegisterPatchBaselineForPatchGroupCommand.ts\n\n\n\nvar _RegisterPatchBaselineForPatchGroupCommand = class _RegisterPatchBaselineForPatchGroupCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"RegisterPatchBaselineForPatchGroup\", {}).n(\"SSMClient\", \"RegisterPatchBaselineForPatchGroupCommand\").f(void 0, void 0).ser(se_RegisterPatchBaselineForPatchGroupCommand).de(de_RegisterPatchBaselineForPatchGroupCommand).build() {\n};\n__name(_RegisterPatchBaselineForPatchGroupCommand, \"RegisterPatchBaselineForPatchGroupCommand\");\nvar RegisterPatchBaselineForPatchGroupCommand = _RegisterPatchBaselineForPatchGroupCommand;\n\n// src/commands/RegisterTargetWithMaintenanceWindowCommand.ts\n\n\n\nvar _RegisterTargetWithMaintenanceWindowCommand = class _RegisterTargetWithMaintenanceWindowCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"RegisterTargetWithMaintenanceWindow\", {}).n(\"SSMClient\", \"RegisterTargetWithMaintenanceWindowCommand\").f(RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog, void 0).ser(se_RegisterTargetWithMaintenanceWindowCommand).de(de_RegisterTargetWithMaintenanceWindowCommand).build() {\n};\n__name(_RegisterTargetWithMaintenanceWindowCommand, \"RegisterTargetWithMaintenanceWindowCommand\");\nvar RegisterTargetWithMaintenanceWindowCommand = _RegisterTargetWithMaintenanceWindowCommand;\n\n// src/commands/RegisterTaskWithMaintenanceWindowCommand.ts\n\n\n\nvar _RegisterTaskWithMaintenanceWindowCommand = class _RegisterTaskWithMaintenanceWindowCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"RegisterTaskWithMaintenanceWindow\", {}).n(\"SSMClient\", \"RegisterTaskWithMaintenanceWindowCommand\").f(RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog, void 0).ser(se_RegisterTaskWithMaintenanceWindowCommand).de(de_RegisterTaskWithMaintenanceWindowCommand).build() {\n};\n__name(_RegisterTaskWithMaintenanceWindowCommand, \"RegisterTaskWithMaintenanceWindowCommand\");\nvar RegisterTaskWithMaintenanceWindowCommand = _RegisterTaskWithMaintenanceWindowCommand;\n\n// src/commands/RemoveTagsFromResourceCommand.ts\n\n\n\nvar _RemoveTagsFromResourceCommand = class _RemoveTagsFromResourceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"RemoveTagsFromResource\", {}).n(\"SSMClient\", \"RemoveTagsFromResourceCommand\").f(void 0, void 0).ser(se_RemoveTagsFromResourceCommand).de(de_RemoveTagsFromResourceCommand).build() {\n};\n__name(_RemoveTagsFromResourceCommand, \"RemoveTagsFromResourceCommand\");\nvar RemoveTagsFromResourceCommand = _RemoveTagsFromResourceCommand;\n\n// src/commands/ResetServiceSettingCommand.ts\n\n\n\nvar _ResetServiceSettingCommand = class _ResetServiceSettingCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ResetServiceSetting\", {}).n(\"SSMClient\", \"ResetServiceSettingCommand\").f(void 0, void 0).ser(se_ResetServiceSettingCommand).de(de_ResetServiceSettingCommand).build() {\n};\n__name(_ResetServiceSettingCommand, \"ResetServiceSettingCommand\");\nvar ResetServiceSettingCommand = _ResetServiceSettingCommand;\n\n// src/commands/ResumeSessionCommand.ts\n\n\n\nvar _ResumeSessionCommand = class _ResumeSessionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"ResumeSession\", {}).n(\"SSMClient\", \"ResumeSessionCommand\").f(void 0, void 0).ser(se_ResumeSessionCommand).de(de_ResumeSessionCommand).build() {\n};\n__name(_ResumeSessionCommand, \"ResumeSessionCommand\");\nvar ResumeSessionCommand = _ResumeSessionCommand;\n\n// src/commands/SendAutomationSignalCommand.ts\n\n\n\nvar _SendAutomationSignalCommand = class _SendAutomationSignalCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"SendAutomationSignal\", {}).n(\"SSMClient\", \"SendAutomationSignalCommand\").f(void 0, void 0).ser(se_SendAutomationSignalCommand).de(de_SendAutomationSignalCommand).build() {\n};\n__name(_SendAutomationSignalCommand, \"SendAutomationSignalCommand\");\nvar SendAutomationSignalCommand = _SendAutomationSignalCommand;\n\n// src/commands/SendCommandCommand.ts\n\n\n\nvar _SendCommandCommand = class _SendCommandCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"SendCommand\", {}).n(\"SSMClient\", \"SendCommandCommand\").f(SendCommandRequestFilterSensitiveLog, SendCommandResultFilterSensitiveLog).ser(se_SendCommandCommand).de(de_SendCommandCommand).build() {\n};\n__name(_SendCommandCommand, \"SendCommandCommand\");\nvar SendCommandCommand = _SendCommandCommand;\n\n// src/commands/StartAssociationsOnceCommand.ts\n\n\n\nvar _StartAssociationsOnceCommand = class _StartAssociationsOnceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"StartAssociationsOnce\", {}).n(\"SSMClient\", \"StartAssociationsOnceCommand\").f(void 0, void 0).ser(se_StartAssociationsOnceCommand).de(de_StartAssociationsOnceCommand).build() {\n};\n__name(_StartAssociationsOnceCommand, \"StartAssociationsOnceCommand\");\nvar StartAssociationsOnceCommand = _StartAssociationsOnceCommand;\n\n// src/commands/StartAutomationExecutionCommand.ts\n\n\n\nvar _StartAutomationExecutionCommand = class _StartAutomationExecutionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"StartAutomationExecution\", {}).n(\"SSMClient\", \"StartAutomationExecutionCommand\").f(void 0, void 0).ser(se_StartAutomationExecutionCommand).de(de_StartAutomationExecutionCommand).build() {\n};\n__name(_StartAutomationExecutionCommand, \"StartAutomationExecutionCommand\");\nvar StartAutomationExecutionCommand = _StartAutomationExecutionCommand;\n\n// src/commands/StartChangeRequestExecutionCommand.ts\n\n\n\nvar _StartChangeRequestExecutionCommand = class _StartChangeRequestExecutionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"StartChangeRequestExecution\", {}).n(\"SSMClient\", \"StartChangeRequestExecutionCommand\").f(void 0, void 0).ser(se_StartChangeRequestExecutionCommand).de(de_StartChangeRequestExecutionCommand).build() {\n};\n__name(_StartChangeRequestExecutionCommand, \"StartChangeRequestExecutionCommand\");\nvar StartChangeRequestExecutionCommand = _StartChangeRequestExecutionCommand;\n\n// src/commands/StartSessionCommand.ts\n\n\n\nvar _StartSessionCommand = class _StartSessionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"StartSession\", {}).n(\"SSMClient\", \"StartSessionCommand\").f(void 0, void 0).ser(se_StartSessionCommand).de(de_StartSessionCommand).build() {\n};\n__name(_StartSessionCommand, \"StartSessionCommand\");\nvar StartSessionCommand = _StartSessionCommand;\n\n// src/commands/StopAutomationExecutionCommand.ts\n\n\n\nvar _StopAutomationExecutionCommand = class _StopAutomationExecutionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"StopAutomationExecution\", {}).n(\"SSMClient\", \"StopAutomationExecutionCommand\").f(void 0, void 0).ser(se_StopAutomationExecutionCommand).de(de_StopAutomationExecutionCommand).build() {\n};\n__name(_StopAutomationExecutionCommand, \"StopAutomationExecutionCommand\");\nvar StopAutomationExecutionCommand = _StopAutomationExecutionCommand;\n\n// src/commands/TerminateSessionCommand.ts\n\n\n\nvar _TerminateSessionCommand = class _TerminateSessionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"TerminateSession\", {}).n(\"SSMClient\", \"TerminateSessionCommand\").f(void 0, void 0).ser(se_TerminateSessionCommand).de(de_TerminateSessionCommand).build() {\n};\n__name(_TerminateSessionCommand, \"TerminateSessionCommand\");\nvar TerminateSessionCommand = _TerminateSessionCommand;\n\n// src/commands/UnlabelParameterVersionCommand.ts\n\n\n\nvar _UnlabelParameterVersionCommand = class _UnlabelParameterVersionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UnlabelParameterVersion\", {}).n(\"SSMClient\", \"UnlabelParameterVersionCommand\").f(void 0, void 0).ser(se_UnlabelParameterVersionCommand).de(de_UnlabelParameterVersionCommand).build() {\n};\n__name(_UnlabelParameterVersionCommand, \"UnlabelParameterVersionCommand\");\nvar UnlabelParameterVersionCommand = _UnlabelParameterVersionCommand;\n\n// src/commands/UpdateAssociationCommand.ts\n\n\n\nvar _UpdateAssociationCommand = class _UpdateAssociationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateAssociation\", {}).n(\"SSMClient\", \"UpdateAssociationCommand\").f(UpdateAssociationRequestFilterSensitiveLog, UpdateAssociationResultFilterSensitiveLog).ser(se_UpdateAssociationCommand).de(de_UpdateAssociationCommand).build() {\n};\n__name(_UpdateAssociationCommand, \"UpdateAssociationCommand\");\nvar UpdateAssociationCommand = _UpdateAssociationCommand;\n\n// src/commands/UpdateAssociationStatusCommand.ts\n\n\n\nvar _UpdateAssociationStatusCommand = class _UpdateAssociationStatusCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateAssociationStatus\", {}).n(\"SSMClient\", \"UpdateAssociationStatusCommand\").f(void 0, UpdateAssociationStatusResultFilterSensitiveLog).ser(se_UpdateAssociationStatusCommand).de(de_UpdateAssociationStatusCommand).build() {\n};\n__name(_UpdateAssociationStatusCommand, \"UpdateAssociationStatusCommand\");\nvar UpdateAssociationStatusCommand = _UpdateAssociationStatusCommand;\n\n// src/commands/UpdateDocumentCommand.ts\n\n\n\nvar _UpdateDocumentCommand = class _UpdateDocumentCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateDocument\", {}).n(\"SSMClient\", \"UpdateDocumentCommand\").f(void 0, void 0).ser(se_UpdateDocumentCommand).de(de_UpdateDocumentCommand).build() {\n};\n__name(_UpdateDocumentCommand, \"UpdateDocumentCommand\");\nvar UpdateDocumentCommand = _UpdateDocumentCommand;\n\n// src/commands/UpdateDocumentDefaultVersionCommand.ts\n\n\n\nvar _UpdateDocumentDefaultVersionCommand = class _UpdateDocumentDefaultVersionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateDocumentDefaultVersion\", {}).n(\"SSMClient\", \"UpdateDocumentDefaultVersionCommand\").f(void 0, void 0).ser(se_UpdateDocumentDefaultVersionCommand).de(de_UpdateDocumentDefaultVersionCommand).build() {\n};\n__name(_UpdateDocumentDefaultVersionCommand, \"UpdateDocumentDefaultVersionCommand\");\nvar UpdateDocumentDefaultVersionCommand = _UpdateDocumentDefaultVersionCommand;\n\n// src/commands/UpdateDocumentMetadataCommand.ts\n\n\n\nvar _UpdateDocumentMetadataCommand = class _UpdateDocumentMetadataCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateDocumentMetadata\", {}).n(\"SSMClient\", \"UpdateDocumentMetadataCommand\").f(void 0, void 0).ser(se_UpdateDocumentMetadataCommand).de(de_UpdateDocumentMetadataCommand).build() {\n};\n__name(_UpdateDocumentMetadataCommand, \"UpdateDocumentMetadataCommand\");\nvar UpdateDocumentMetadataCommand = _UpdateDocumentMetadataCommand;\n\n// src/commands/UpdateMaintenanceWindowCommand.ts\n\n\n\nvar _UpdateMaintenanceWindowCommand = class _UpdateMaintenanceWindowCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateMaintenanceWindow\", {}).n(\"SSMClient\", \"UpdateMaintenanceWindowCommand\").f(UpdateMaintenanceWindowRequestFilterSensitiveLog, UpdateMaintenanceWindowResultFilterSensitiveLog).ser(se_UpdateMaintenanceWindowCommand).de(de_UpdateMaintenanceWindowCommand).build() {\n};\n__name(_UpdateMaintenanceWindowCommand, \"UpdateMaintenanceWindowCommand\");\nvar UpdateMaintenanceWindowCommand = _UpdateMaintenanceWindowCommand;\n\n// src/commands/UpdateMaintenanceWindowTargetCommand.ts\n\n\n\nvar _UpdateMaintenanceWindowTargetCommand = class _UpdateMaintenanceWindowTargetCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateMaintenanceWindowTarget\", {}).n(\"SSMClient\", \"UpdateMaintenanceWindowTargetCommand\").f(UpdateMaintenanceWindowTargetRequestFilterSensitiveLog, UpdateMaintenanceWindowTargetResultFilterSensitiveLog).ser(se_UpdateMaintenanceWindowTargetCommand).de(de_UpdateMaintenanceWindowTargetCommand).build() {\n};\n__name(_UpdateMaintenanceWindowTargetCommand, \"UpdateMaintenanceWindowTargetCommand\");\nvar UpdateMaintenanceWindowTargetCommand = _UpdateMaintenanceWindowTargetCommand;\n\n// src/commands/UpdateMaintenanceWindowTaskCommand.ts\n\n\n\nvar _UpdateMaintenanceWindowTaskCommand = class _UpdateMaintenanceWindowTaskCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateMaintenanceWindowTask\", {}).n(\"SSMClient\", \"UpdateMaintenanceWindowTaskCommand\").f(UpdateMaintenanceWindowTaskRequestFilterSensitiveLog, UpdateMaintenanceWindowTaskResultFilterSensitiveLog).ser(se_UpdateMaintenanceWindowTaskCommand).de(de_UpdateMaintenanceWindowTaskCommand).build() {\n};\n__name(_UpdateMaintenanceWindowTaskCommand, \"UpdateMaintenanceWindowTaskCommand\");\nvar UpdateMaintenanceWindowTaskCommand = _UpdateMaintenanceWindowTaskCommand;\n\n// src/commands/UpdateManagedInstanceRoleCommand.ts\n\n\n\nvar _UpdateManagedInstanceRoleCommand = class _UpdateManagedInstanceRoleCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateManagedInstanceRole\", {}).n(\"SSMClient\", \"UpdateManagedInstanceRoleCommand\").f(void 0, void 0).ser(se_UpdateManagedInstanceRoleCommand).de(de_UpdateManagedInstanceRoleCommand).build() {\n};\n__name(_UpdateManagedInstanceRoleCommand, \"UpdateManagedInstanceRoleCommand\");\nvar UpdateManagedInstanceRoleCommand = _UpdateManagedInstanceRoleCommand;\n\n// src/commands/UpdateOpsItemCommand.ts\n\n\n\nvar _UpdateOpsItemCommand = class _UpdateOpsItemCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateOpsItem\", {}).n(\"SSMClient\", \"UpdateOpsItemCommand\").f(void 0, void 0).ser(se_UpdateOpsItemCommand).de(de_UpdateOpsItemCommand).build() {\n};\n__name(_UpdateOpsItemCommand, \"UpdateOpsItemCommand\");\nvar UpdateOpsItemCommand = _UpdateOpsItemCommand;\n\n// src/commands/UpdateOpsMetadataCommand.ts\n\n\n\nvar _UpdateOpsMetadataCommand = class _UpdateOpsMetadataCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateOpsMetadata\", {}).n(\"SSMClient\", \"UpdateOpsMetadataCommand\").f(void 0, void 0).ser(se_UpdateOpsMetadataCommand).de(de_UpdateOpsMetadataCommand).build() {\n};\n__name(_UpdateOpsMetadataCommand, \"UpdateOpsMetadataCommand\");\nvar UpdateOpsMetadataCommand = _UpdateOpsMetadataCommand;\n\n// src/commands/UpdatePatchBaselineCommand.ts\n\n\n\nvar _UpdatePatchBaselineCommand = class _UpdatePatchBaselineCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdatePatchBaseline\", {}).n(\"SSMClient\", \"UpdatePatchBaselineCommand\").f(UpdatePatchBaselineRequestFilterSensitiveLog, UpdatePatchBaselineResultFilterSensitiveLog).ser(se_UpdatePatchBaselineCommand).de(de_UpdatePatchBaselineCommand).build() {\n};\n__name(_UpdatePatchBaselineCommand, \"UpdatePatchBaselineCommand\");\nvar UpdatePatchBaselineCommand = _UpdatePatchBaselineCommand;\n\n// src/commands/UpdateResourceDataSyncCommand.ts\n\n\n\nvar _UpdateResourceDataSyncCommand = class _UpdateResourceDataSyncCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateResourceDataSync\", {}).n(\"SSMClient\", \"UpdateResourceDataSyncCommand\").f(void 0, void 0).ser(se_UpdateResourceDataSyncCommand).de(de_UpdateResourceDataSyncCommand).build() {\n};\n__name(_UpdateResourceDataSyncCommand, \"UpdateResourceDataSyncCommand\");\nvar UpdateResourceDataSyncCommand = _UpdateResourceDataSyncCommand;\n\n// src/commands/UpdateServiceSettingCommand.ts\n\n\n\nvar _UpdateServiceSettingCommand = class _UpdateServiceSettingCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command2, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command2.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSSM\", \"UpdateServiceSetting\", {}).n(\"SSMClient\", \"UpdateServiceSettingCommand\").f(void 0, void 0).ser(se_UpdateServiceSettingCommand).de(de_UpdateServiceSettingCommand).build() {\n};\n__name(_UpdateServiceSettingCommand, \"UpdateServiceSettingCommand\");\nvar UpdateServiceSettingCommand = _UpdateServiceSettingCommand;\n\n// src/SSM.ts\nvar commands = {\n  AddTagsToResourceCommand,\n  AssociateOpsItemRelatedItemCommand,\n  CancelCommandCommand,\n  CancelMaintenanceWindowExecutionCommand,\n  CreateActivationCommand,\n  CreateAssociationCommand,\n  CreateAssociationBatchCommand,\n  CreateDocumentCommand,\n  CreateMaintenanceWindowCommand,\n  CreateOpsItemCommand,\n  CreateOpsMetadataCommand,\n  CreatePatchBaselineCommand,\n  CreateResourceDataSyncCommand,\n  DeleteActivationCommand,\n  DeleteAssociationCommand,\n  DeleteDocumentCommand,\n  DeleteInventoryCommand,\n  DeleteMaintenanceWindowCommand,\n  DeleteOpsItemCommand,\n  DeleteOpsMetadataCommand,\n  DeleteParameterCommand,\n  DeleteParametersCommand,\n  DeletePatchBaselineCommand,\n  DeleteResourceDataSyncCommand,\n  DeleteResourcePolicyCommand,\n  DeregisterManagedInstanceCommand,\n  DeregisterPatchBaselineForPatchGroupCommand,\n  DeregisterTargetFromMaintenanceWindowCommand,\n  DeregisterTaskFromMaintenanceWindowCommand,\n  DescribeActivationsCommand,\n  DescribeAssociationCommand,\n  DescribeAssociationExecutionsCommand,\n  DescribeAssociationExecutionTargetsCommand,\n  DescribeAutomationExecutionsCommand,\n  DescribeAutomationStepExecutionsCommand,\n  DescribeAvailablePatchesCommand,\n  DescribeDocumentCommand,\n  DescribeDocumentPermissionCommand,\n  DescribeEffectiveInstanceAssociationsCommand,\n  DescribeEffectivePatchesForPatchBaselineCommand,\n  DescribeInstanceAssociationsStatusCommand,\n  DescribeInstanceInformationCommand,\n  DescribeInstancePatchesCommand,\n  DescribeInstancePatchStatesCommand,\n  DescribeInstancePatchStatesForPatchGroupCommand,\n  DescribeInstancePropertiesCommand,\n  DescribeInventoryDeletionsCommand,\n  DescribeMaintenanceWindowExecutionsCommand,\n  DescribeMaintenanceWindowExecutionTaskInvocationsCommand,\n  DescribeMaintenanceWindowExecutionTasksCommand,\n  DescribeMaintenanceWindowsCommand,\n  DescribeMaintenanceWindowScheduleCommand,\n  DescribeMaintenanceWindowsForTargetCommand,\n  DescribeMaintenanceWindowTargetsCommand,\n  DescribeMaintenanceWindowTasksCommand,\n  DescribeOpsItemsCommand,\n  DescribeParametersCommand,\n  DescribePatchBaselinesCommand,\n  DescribePatchGroupsCommand,\n  DescribePatchGroupStateCommand,\n  DescribePatchPropertiesCommand,\n  DescribeSessionsCommand,\n  DisassociateOpsItemRelatedItemCommand,\n  GetAutomationExecutionCommand,\n  GetCalendarStateCommand,\n  GetCommandInvocationCommand,\n  GetConnectionStatusCommand,\n  GetDefaultPatchBaselineCommand,\n  GetDeployablePatchSnapshotForInstanceCommand,\n  GetDocumentCommand,\n  GetInventoryCommand,\n  GetInventorySchemaCommand,\n  GetMaintenanceWindowCommand,\n  GetMaintenanceWindowExecutionCommand,\n  GetMaintenanceWindowExecutionTaskCommand,\n  GetMaintenanceWindowExecutionTaskInvocationCommand,\n  GetMaintenanceWindowTaskCommand,\n  GetOpsItemCommand,\n  GetOpsMetadataCommand,\n  GetOpsSummaryCommand,\n  GetParameterCommand,\n  GetParameterHistoryCommand,\n  GetParametersCommand,\n  GetParametersByPathCommand,\n  GetPatchBaselineCommand,\n  GetPatchBaselineForPatchGroupCommand,\n  GetResourcePoliciesCommand,\n  GetServiceSettingCommand,\n  LabelParameterVersionCommand,\n  ListAssociationsCommand,\n  ListAssociationVersionsCommand,\n  ListCommandInvocationsCommand,\n  ListCommandsCommand,\n  ListComplianceItemsCommand,\n  ListComplianceSummariesCommand,\n  ListDocumentMetadataHistoryCommand,\n  ListDocumentsCommand,\n  ListDocumentVersionsCommand,\n  ListInventoryEntriesCommand,\n  ListOpsItemEventsCommand,\n  ListOpsItemRelatedItemsCommand,\n  ListOpsMetadataCommand,\n  ListResourceComplianceSummariesCommand,\n  ListResourceDataSyncCommand,\n  ListTagsForResourceCommand,\n  ModifyDocumentPermissionCommand,\n  PutComplianceItemsCommand,\n  PutInventoryCommand,\n  PutParameterCommand,\n  PutResourcePolicyCommand,\n  RegisterDefaultPatchBaselineCommand,\n  RegisterPatchBaselineForPatchGroupCommand,\n  RegisterTargetWithMaintenanceWindowCommand,\n  RegisterTaskWithMaintenanceWindowCommand,\n  RemoveTagsFromResourceCommand,\n  ResetServiceSettingCommand,\n  ResumeSessionCommand,\n  SendAutomationSignalCommand,\n  SendCommandCommand,\n  StartAssociationsOnceCommand,\n  StartAutomationExecutionCommand,\n  StartChangeRequestExecutionCommand,\n  StartSessionCommand,\n  StopAutomationExecutionCommand,\n  TerminateSessionCommand,\n  UnlabelParameterVersionCommand,\n  UpdateAssociationCommand,\n  UpdateAssociationStatusCommand,\n  UpdateDocumentCommand,\n  UpdateDocumentDefaultVersionCommand,\n  UpdateDocumentMetadataCommand,\n  UpdateMaintenanceWindowCommand,\n  UpdateMaintenanceWindowTargetCommand,\n  UpdateMaintenanceWindowTaskCommand,\n  UpdateManagedInstanceRoleCommand,\n  UpdateOpsItemCommand,\n  UpdateOpsMetadataCommand,\n  UpdatePatchBaselineCommand,\n  UpdateResourceDataSyncCommand,\n  UpdateServiceSettingCommand\n};\nvar _SSM = class _SSM extends SSMClient {\n};\n__name(_SSM, \"SSM\");\nvar SSM = _SSM;\n(0, import_smithy_client.createAggregatedClient)(commands, SSM);\n\n// src/pagination/DescribeActivationsPaginator.ts\n\nvar paginateDescribeActivations = (0, import_core.createPaginator)(SSMClient, DescribeActivationsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeAssociationExecutionTargetsPaginator.ts\n\nvar paginateDescribeAssociationExecutionTargets = (0, import_core.createPaginator)(SSMClient, DescribeAssociationExecutionTargetsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeAssociationExecutionsPaginator.ts\n\nvar paginateDescribeAssociationExecutions = (0, import_core.createPaginator)(SSMClient, DescribeAssociationExecutionsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeAutomationExecutionsPaginator.ts\n\nvar paginateDescribeAutomationExecutions = (0, import_core.createPaginator)(SSMClient, DescribeAutomationExecutionsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeAutomationStepExecutionsPaginator.ts\n\nvar paginateDescribeAutomationStepExecutions = (0, import_core.createPaginator)(SSMClient, DescribeAutomationStepExecutionsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeAvailablePatchesPaginator.ts\n\nvar paginateDescribeAvailablePatches = (0, import_core.createPaginator)(SSMClient, DescribeAvailablePatchesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeEffectiveInstanceAssociationsPaginator.ts\n\nvar paginateDescribeEffectiveInstanceAssociations = (0, import_core.createPaginator)(SSMClient, DescribeEffectiveInstanceAssociationsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeEffectivePatchesForPatchBaselinePaginator.ts\n\nvar paginateDescribeEffectivePatchesForPatchBaseline = (0, import_core.createPaginator)(SSMClient, DescribeEffectivePatchesForPatchBaselineCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeInstanceAssociationsStatusPaginator.ts\n\nvar paginateDescribeInstanceAssociationsStatus = (0, import_core.createPaginator)(SSMClient, DescribeInstanceAssociationsStatusCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeInstanceInformationPaginator.ts\n\nvar paginateDescribeInstanceInformation = (0, import_core.createPaginator)(SSMClient, DescribeInstanceInformationCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeInstancePatchStatesForPatchGroupPaginator.ts\n\nvar paginateDescribeInstancePatchStatesForPatchGroup = (0, import_core.createPaginator)(SSMClient, DescribeInstancePatchStatesForPatchGroupCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeInstancePatchStatesPaginator.ts\n\nvar paginateDescribeInstancePatchStates = (0, import_core.createPaginator)(SSMClient, DescribeInstancePatchStatesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeInstancePatchesPaginator.ts\n\nvar paginateDescribeInstancePatches = (0, import_core.createPaginator)(SSMClient, DescribeInstancePatchesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeInstancePropertiesPaginator.ts\n\nvar paginateDescribeInstanceProperties = (0, import_core.createPaginator)(SSMClient, DescribeInstancePropertiesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeInventoryDeletionsPaginator.ts\n\nvar paginateDescribeInventoryDeletions = (0, import_core.createPaginator)(SSMClient, DescribeInventoryDeletionsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeMaintenanceWindowExecutionTaskInvocationsPaginator.ts\n\nvar paginateDescribeMaintenanceWindowExecutionTaskInvocations = (0, import_core.createPaginator)(SSMClient, DescribeMaintenanceWindowExecutionTaskInvocationsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeMaintenanceWindowExecutionTasksPaginator.ts\n\nvar paginateDescribeMaintenanceWindowExecutionTasks = (0, import_core.createPaginator)(SSMClient, DescribeMaintenanceWindowExecutionTasksCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeMaintenanceWindowExecutionsPaginator.ts\n\nvar paginateDescribeMaintenanceWindowExecutions = (0, import_core.createPaginator)(SSMClient, DescribeMaintenanceWindowExecutionsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeMaintenanceWindowSchedulePaginator.ts\n\nvar paginateDescribeMaintenanceWindowSchedule = (0, import_core.createPaginator)(SSMClient, DescribeMaintenanceWindowScheduleCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeMaintenanceWindowTargetsPaginator.ts\n\nvar paginateDescribeMaintenanceWindowTargets = (0, import_core.createPaginator)(SSMClient, DescribeMaintenanceWindowTargetsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeMaintenanceWindowTasksPaginator.ts\n\nvar paginateDescribeMaintenanceWindowTasks = (0, import_core.createPaginator)(SSMClient, DescribeMaintenanceWindowTasksCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeMaintenanceWindowsForTargetPaginator.ts\n\nvar paginateDescribeMaintenanceWindowsForTarget = (0, import_core.createPaginator)(SSMClient, DescribeMaintenanceWindowsForTargetCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeMaintenanceWindowsPaginator.ts\n\nvar paginateDescribeMaintenanceWindows = (0, import_core.createPaginator)(SSMClient, DescribeMaintenanceWindowsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeOpsItemsPaginator.ts\n\nvar paginateDescribeOpsItems = (0, import_core.createPaginator)(SSMClient, DescribeOpsItemsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeParametersPaginator.ts\n\nvar paginateDescribeParameters = (0, import_core.createPaginator)(SSMClient, DescribeParametersCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribePatchBaselinesPaginator.ts\n\nvar paginateDescribePatchBaselines = (0, import_core.createPaginator)(SSMClient, DescribePatchBaselinesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribePatchGroupsPaginator.ts\n\nvar paginateDescribePatchGroups = (0, import_core.createPaginator)(SSMClient, DescribePatchGroupsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribePatchPropertiesPaginator.ts\n\nvar paginateDescribePatchProperties = (0, import_core.createPaginator)(SSMClient, DescribePatchPropertiesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/DescribeSessionsPaginator.ts\n\nvar paginateDescribeSessions = (0, import_core.createPaginator)(SSMClient, DescribeSessionsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/GetInventoryPaginator.ts\n\nvar paginateGetInventory = (0, import_core.createPaginator)(SSMClient, GetInventoryCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/GetInventorySchemaPaginator.ts\n\nvar paginateGetInventorySchema = (0, import_core.createPaginator)(SSMClient, GetInventorySchemaCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/GetOpsSummaryPaginator.ts\n\nvar paginateGetOpsSummary = (0, import_core.createPaginator)(SSMClient, GetOpsSummaryCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/GetParameterHistoryPaginator.ts\n\nvar paginateGetParameterHistory = (0, import_core.createPaginator)(SSMClient, GetParameterHistoryCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/GetParametersByPathPaginator.ts\n\nvar paginateGetParametersByPath = (0, import_core.createPaginator)(SSMClient, GetParametersByPathCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/GetResourcePoliciesPaginator.ts\n\nvar paginateGetResourcePolicies = (0, import_core.createPaginator)(SSMClient, GetResourcePoliciesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListAssociationVersionsPaginator.ts\n\nvar paginateListAssociationVersions = (0, import_core.createPaginator)(SSMClient, ListAssociationVersionsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListAssociationsPaginator.ts\n\nvar paginateListAssociations = (0, import_core.createPaginator)(SSMClient, ListAssociationsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListCommandInvocationsPaginator.ts\n\nvar paginateListCommandInvocations = (0, import_core.createPaginator)(SSMClient, ListCommandInvocationsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListCommandsPaginator.ts\n\nvar paginateListCommands = (0, import_core.createPaginator)(SSMClient, ListCommandsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListComplianceItemsPaginator.ts\n\nvar paginateListComplianceItems = (0, import_core.createPaginator)(SSMClient, ListComplianceItemsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListComplianceSummariesPaginator.ts\n\nvar paginateListComplianceSummaries = (0, import_core.createPaginator)(SSMClient, ListComplianceSummariesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListDocumentVersionsPaginator.ts\n\nvar paginateListDocumentVersions = (0, import_core.createPaginator)(SSMClient, ListDocumentVersionsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListDocumentsPaginator.ts\n\nvar paginateListDocuments = (0, import_core.createPaginator)(SSMClient, ListDocumentsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListOpsItemEventsPaginator.ts\n\nvar paginateListOpsItemEvents = (0, import_core.createPaginator)(SSMClient, ListOpsItemEventsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListOpsItemRelatedItemsPaginator.ts\n\nvar paginateListOpsItemRelatedItems = (0, import_core.createPaginator)(SSMClient, ListOpsItemRelatedItemsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListOpsMetadataPaginator.ts\n\nvar paginateListOpsMetadata = (0, import_core.createPaginator)(SSMClient, ListOpsMetadataCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListResourceComplianceSummariesPaginator.ts\n\nvar paginateListResourceComplianceSummaries = (0, import_core.createPaginator)(SSMClient, ListResourceComplianceSummariesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListResourceDataSyncPaginator.ts\n\nvar paginateListResourceDataSync = (0, import_core.createPaginator)(SSMClient, ListResourceDataSyncCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/waiters/waitForCommandExecuted.ts\nvar import_util_waiter = require(\"@smithy/util-waiter\");\nvar checkState = /* @__PURE__ */ __name(async (client, input) => {\n  let reason;\n  try {\n    const result = await client.send(new GetCommandInvocationCommand(input));\n    reason = result;\n    try {\n      const returnComparator = /* @__PURE__ */ __name(() => {\n        return result.Status;\n      }, \"returnComparator\");\n      if (returnComparator() === \"Pending\") {\n        return { state: import_util_waiter.WaiterState.RETRY, reason };\n      }\n    } catch (e) {\n    }\n    try {\n      const returnComparator = /* @__PURE__ */ __name(() => {\n        return result.Status;\n      }, \"returnComparator\");\n      if (returnComparator() === \"InProgress\") {\n        return { state: import_util_waiter.WaiterState.RETRY, reason };\n      }\n    } catch (e) {\n    }\n    try {\n      const returnComparator = /* @__PURE__ */ __name(() => {\n        return result.Status;\n      }, \"returnComparator\");\n      if (returnComparator() === \"Delayed\") {\n        return { state: import_util_waiter.WaiterState.RETRY, reason };\n      }\n    } catch (e) {\n    }\n    try {\n      const returnComparator = /* @__PURE__ */ __name(() => {\n        return result.Status;\n      }, \"returnComparator\");\n      if (returnComparator() === \"Success\") {\n        return { state: import_util_waiter.WaiterState.SUCCESS, reason };\n      }\n    } catch (e) {\n    }\n    try {\n      const returnComparator = /* @__PURE__ */ __name(() => {\n        return result.Status;\n      }, \"returnComparator\");\n      if (returnComparator() === \"Cancelled\") {\n        return { state: import_util_waiter.WaiterState.FAILURE, reason };\n      }\n    } catch (e) {\n    }\n    try {\n      const returnComparator = /* @__PURE__ */ __name(() => {\n        return result.Status;\n      }, \"returnComparator\");\n      if (returnComparator() === \"TimedOut\") {\n        return { state: import_util_waiter.WaiterState.FAILURE, reason };\n      }\n    } catch (e) {\n    }\n    try {\n      const returnComparator = /* @__PURE__ */ __name(() => {\n        return result.Status;\n      }, \"returnComparator\");\n      if (returnComparator() === \"Failed\") {\n        return { state: import_util_waiter.WaiterState.FAILURE, reason };\n      }\n    } catch (e) {\n    }\n    try {\n      const returnComparator = /* @__PURE__ */ __name(() => {\n        return result.Status;\n      }, \"returnComparator\");\n      if (returnComparator() === \"Cancelling\") {\n        return { state: import_util_waiter.WaiterState.FAILURE, reason };\n      }\n    } catch (e) {\n    }\n  } catch (exception) {\n    reason = exception;\n    if (exception.name && exception.name == \"InvocationDoesNotExist\") {\n      return { state: import_util_waiter.WaiterState.RETRY, reason };\n    }\n  }\n  return { state: import_util_waiter.WaiterState.RETRY, reason };\n}, \"checkState\");\nvar waitForCommandExecuted = /* @__PURE__ */ __name(async (params, input) => {\n  const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n  return (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n}, \"waitForCommandExecuted\");\nvar waitUntilCommandExecuted = /* @__PURE__ */ __name(async (params, input) => {\n  const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n  const result = await (0, import_util_waiter.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n  return (0, import_util_waiter.checkExceptions)(result);\n}, \"waitUntilCommandExecuted\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  SSMServiceException,\n  __Client,\n  SSMClient,\n  SSM,\n  $Command,\n  AddTagsToResourceCommand,\n  AssociateOpsItemRelatedItemCommand,\n  CancelCommandCommand,\n  CancelMaintenanceWindowExecutionCommand,\n  CreateActivationCommand,\n  CreateAssociationBatchCommand,\n  CreateAssociationCommand,\n  CreateDocumentCommand,\n  CreateMaintenanceWindowCommand,\n  CreateOpsItemCommand,\n  CreateOpsMetadataCommand,\n  CreatePatchBaselineCommand,\n  CreateResourceDataSyncCommand,\n  DeleteActivationCommand,\n  DeleteAssociationCommand,\n  DeleteDocumentCommand,\n  DeleteInventoryCommand,\n  DeleteMaintenanceWindowCommand,\n  DeleteOpsItemCommand,\n  DeleteOpsMetadataCommand,\n  DeleteParameterCommand,\n  DeleteParametersCommand,\n  DeletePatchBaselineCommand,\n  DeleteResourceDataSyncCommand,\n  DeleteResourcePolicyCommand,\n  DeregisterManagedInstanceCommand,\n  DeregisterPatchBaselineForPatchGroupCommand,\n  DeregisterTargetFromMaintenanceWindowCommand,\n  DeregisterTaskFromMaintenanceWindowCommand,\n  DescribeActivationsCommand,\n  DescribeAssociationCommand,\n  DescribeAssociationExecutionTargetsCommand,\n  DescribeAssociationExecutionsCommand,\n  DescribeAutomationExecutionsCommand,\n  DescribeAutomationStepExecutionsCommand,\n  DescribeAvailablePatchesCommand,\n  DescribeDocumentCommand,\n  DescribeDocumentPermissionCommand,\n  DescribeEffectiveInstanceAssociationsCommand,\n  DescribeEffectivePatchesForPatchBaselineCommand,\n  DescribeInstanceAssociationsStatusCommand,\n  DescribeInstanceInformationCommand,\n  DescribeInstancePatchStatesCommand,\n  DescribeInstancePatchStatesForPatchGroupCommand,\n  DescribeInstancePatchesCommand,\n  DescribeInstancePropertiesCommand,\n  DescribeInventoryDeletionsCommand,\n  DescribeMaintenanceWindowExecutionTaskInvocationsCommand,\n  DescribeMaintenanceWindowExecutionTasksCommand,\n  DescribeMaintenanceWindowExecutionsCommand,\n  DescribeMaintenanceWindowScheduleCommand,\n  DescribeMaintenanceWindowTargetsCommand,\n  DescribeMaintenanceWindowTasksCommand,\n  DescribeMaintenanceWindowsCommand,\n  DescribeMaintenanceWindowsForTargetCommand,\n  DescribeOpsItemsCommand,\n  DescribeParametersCommand,\n  DescribePatchBaselinesCommand,\n  DescribePatchGroupStateCommand,\n  DescribePatchGroupsCommand,\n  DescribePatchPropertiesCommand,\n  DescribeSessionsCommand,\n  DisassociateOpsItemRelatedItemCommand,\n  GetAutomationExecutionCommand,\n  GetCalendarStateCommand,\n  GetCommandInvocationCommand,\n  GetConnectionStatusCommand,\n  GetDefaultPatchBaselineCommand,\n  GetDeployablePatchSnapshotForInstanceCommand,\n  GetDocumentCommand,\n  GetInventoryCommand,\n  GetInventorySchemaCommand,\n  GetMaintenanceWindowCommand,\n  GetMaintenanceWindowExecutionCommand,\n  GetMaintenanceWindowExecutionTaskCommand,\n  GetMaintenanceWindowExecutionTaskInvocationCommand,\n  GetMaintenanceWindowTaskCommand,\n  GetOpsItemCommand,\n  GetOpsMetadataCommand,\n  GetOpsSummaryCommand,\n  GetParameterCommand,\n  GetParameterHistoryCommand,\n  GetParametersByPathCommand,\n  GetParametersCommand,\n  GetPatchBaselineCommand,\n  GetPatchBaselineForPatchGroupCommand,\n  GetResourcePoliciesCommand,\n  GetServiceSettingCommand,\n  LabelParameterVersionCommand,\n  ListAssociationVersionsCommand,\n  ListAssociationsCommand,\n  ListCommandInvocationsCommand,\n  ListCommandsCommand,\n  ListComplianceItemsCommand,\n  ListComplianceSummariesCommand,\n  ListDocumentMetadataHistoryCommand,\n  ListDocumentVersionsCommand,\n  ListDocumentsCommand,\n  ListInventoryEntriesCommand,\n  ListOpsItemEventsCommand,\n  ListOpsItemRelatedItemsCommand,\n  ListOpsMetadataCommand,\n  ListResourceComplianceSummariesCommand,\n  ListResourceDataSyncCommand,\n  ListTagsForResourceCommand,\n  ModifyDocumentPermissionCommand,\n  PutComplianceItemsCommand,\n  PutInventoryCommand,\n  PutParameterCommand,\n  PutResourcePolicyCommand,\n  RegisterDefaultPatchBaselineCommand,\n  RegisterPatchBaselineForPatchGroupCommand,\n  RegisterTargetWithMaintenanceWindowCommand,\n  RegisterTaskWithMaintenanceWindowCommand,\n  RemoveTagsFromResourceCommand,\n  ResetServiceSettingCommand,\n  ResumeSessionCommand,\n  SendAutomationSignalCommand,\n  SendCommandCommand,\n  StartAssociationsOnceCommand,\n  StartAutomationExecutionCommand,\n  StartChangeRequestExecutionCommand,\n  StartSessionCommand,\n  StopAutomationExecutionCommand,\n  TerminateSessionCommand,\n  UnlabelParameterVersionCommand,\n  UpdateAssociationCommand,\n  UpdateAssociationStatusCommand,\n  UpdateDocumentCommand,\n  UpdateDocumentDefaultVersionCommand,\n  UpdateDocumentMetadataCommand,\n  UpdateMaintenanceWindowCommand,\n  UpdateMaintenanceWindowTargetCommand,\n  UpdateMaintenanceWindowTaskCommand,\n  UpdateManagedInstanceRoleCommand,\n  UpdateOpsItemCommand,\n  UpdateOpsMetadataCommand,\n  UpdatePatchBaselineCommand,\n  UpdateResourceDataSyncCommand,\n  UpdateServiceSettingCommand,\n  paginateDescribeActivations,\n  paginateDescribeAssociationExecutionTargets,\n  paginateDescribeAssociationExecutions,\n  paginateDescribeAutomationExecutions,\n  paginateDescribeAutomationStepExecutions,\n  paginateDescribeAvailablePatches,\n  paginateDescribeEffectiveInstanceAssociations,\n  paginateDescribeEffectivePatchesForPatchBaseline,\n  paginateDescribeInstanceAssociationsStatus,\n  paginateDescribeInstanceInformation,\n  paginateDescribeInstancePatchStatesForPatchGroup,\n  paginateDescribeInstancePatchStates,\n  paginateDescribeInstancePatches,\n  paginateDescribeInstanceProperties,\n  paginateDescribeInventoryDeletions,\n  paginateDescribeMaintenanceWindowExecutionTaskInvocations,\n  paginateDescribeMaintenanceWindowExecutionTasks,\n  paginateDescribeMaintenanceWindowExecutions,\n  paginateDescribeMaintenanceWindowSchedule,\n  paginateDescribeMaintenanceWindowTargets,\n  paginateDescribeMaintenanceWindowTasks,\n  paginateDescribeMaintenanceWindowsForTarget,\n  paginateDescribeMaintenanceWindows,\n  paginateDescribeOpsItems,\n  paginateDescribeParameters,\n  paginateDescribePatchBaselines,\n  paginateDescribePatchGroups,\n  paginateDescribePatchProperties,\n  paginateDescribeSessions,\n  paginateGetInventory,\n  paginateGetInventorySchema,\n  paginateGetOpsSummary,\n  paginateGetParameterHistory,\n  paginateGetParametersByPath,\n  paginateGetResourcePolicies,\n  paginateListAssociationVersions,\n  paginateListAssociations,\n  paginateListCommandInvocations,\n  paginateListCommands,\n  paginateListComplianceItems,\n  paginateListComplianceSummaries,\n  paginateListDocumentVersions,\n  paginateListDocuments,\n  paginateListOpsItemEvents,\n  paginateListOpsItemRelatedItems,\n  paginateListOpsMetadata,\n  paginateListResourceComplianceSummaries,\n  paginateListResourceDataSync,\n  waitForCommandExecuted,\n  waitUntilCommandExecuted,\n  ResourceTypeForTagging,\n  InternalServerError,\n  InvalidResourceId,\n  InvalidResourceType,\n  TooManyTagsError,\n  TooManyUpdates,\n  ExternalAlarmState,\n  AlreadyExistsException,\n  OpsItemConflictException,\n  OpsItemInvalidParameterException,\n  OpsItemLimitExceededException,\n  OpsItemNotFoundException,\n  OpsItemRelatedItemAlreadyExistsException,\n  DuplicateInstanceId,\n  InvalidCommandId,\n  InvalidInstanceId,\n  DoesNotExistException,\n  InvalidParameters,\n  AssociationAlreadyExists,\n  AssociationLimitExceeded,\n  AssociationComplianceSeverity,\n  AssociationSyncCompliance,\n  AssociationStatusName,\n  InvalidDocument,\n  InvalidDocumentVersion,\n  InvalidOutputLocation,\n  InvalidSchedule,\n  InvalidTag,\n  InvalidTarget,\n  InvalidTargetMaps,\n  UnsupportedPlatformType,\n  Fault,\n  AttachmentsSourceKey,\n  DocumentFormat,\n  DocumentType,\n  DocumentHashType,\n  DocumentParameterType,\n  PlatformType,\n  ReviewStatus,\n  DocumentStatus,\n  DocumentAlreadyExists,\n  DocumentLimitExceeded,\n  InvalidDocumentContent,\n  InvalidDocumentSchemaVersion,\n  MaxDocumentSizeExceeded,\n  IdempotentParameterMismatch,\n  ResourceLimitExceededException,\n  OpsItemDataType,\n  OpsItemAccessDeniedException,\n  OpsItemAlreadyExistsException,\n  OpsMetadataAlreadyExistsException,\n  OpsMetadataInvalidArgumentException,\n  OpsMetadataLimitExceededException,\n  OpsMetadataTooManyUpdatesException,\n  PatchComplianceLevel,\n  PatchFilterKey,\n  OperatingSystem,\n  PatchAction,\n  ResourceDataSyncS3Format,\n  ResourceDataSyncAlreadyExistsException,\n  ResourceDataSyncCountExceededException,\n  ResourceDataSyncInvalidConfigurationException,\n  InvalidActivation,\n  InvalidActivationId,\n  AssociationDoesNotExist,\n  AssociatedInstances,\n  InvalidDocumentOperation,\n  InventorySchemaDeleteOption,\n  InvalidDeleteInventoryParametersException,\n  InvalidInventoryRequestException,\n  InvalidOptionException,\n  InvalidTypeNameException,\n  OpsMetadataNotFoundException,\n  ParameterNotFound,\n  ResourceInUseException,\n  ResourceDataSyncNotFoundException,\n  MalformedResourcePolicyDocumentException,\n  ResourceNotFoundException,\n  ResourcePolicyConflictException,\n  ResourcePolicyInvalidParameterException,\n  ResourcePolicyNotFoundException,\n  TargetInUseException,\n  DescribeActivationsFilterKeys,\n  InvalidFilter,\n  InvalidNextToken,\n  InvalidAssociationVersion,\n  AssociationExecutionFilterKey,\n  AssociationFilterOperatorType,\n  AssociationExecutionDoesNotExist,\n  AssociationExecutionTargetsFilterKey,\n  AutomationExecutionFilterKey,\n  AutomationExecutionStatus,\n  AutomationSubtype,\n  AutomationType,\n  ExecutionMode,\n  InvalidFilterKey,\n  InvalidFilterValue,\n  AutomationExecutionNotFoundException,\n  StepExecutionFilterKey,\n  DocumentPermissionType,\n  InvalidPermissionType,\n  PatchDeploymentStatus,\n  UnsupportedOperatingSystem,\n  InstanceInformationFilterKey,\n  PingStatus,\n  ResourceType,\n  SourceType,\n  InvalidInstanceInformationFilterValue,\n  PatchComplianceDataState,\n  PatchOperationType,\n  RebootOption,\n  InstancePatchStateOperatorType,\n  InstancePropertyFilterOperator,\n  InstancePropertyFilterKey,\n  InvalidInstancePropertyFilterValue,\n  InventoryDeletionStatus,\n  InvalidDeletionIdException,\n  MaintenanceWindowExecutionStatus,\n  MaintenanceWindowTaskType,\n  MaintenanceWindowResourceType,\n  CreateAssociationRequestFilterSensitiveLog,\n  AssociationDescriptionFilterSensitiveLog,\n  CreateAssociationResultFilterSensitiveLog,\n  CreateAssociationBatchRequestEntryFilterSensitiveLog,\n  CreateAssociationBatchRequestFilterSensitiveLog,\n  FailedCreateAssociationFilterSensitiveLog,\n  CreateAssociationBatchResultFilterSensitiveLog,\n  CreateMaintenanceWindowRequestFilterSensitiveLog,\n  PatchSourceFilterSensitiveLog,\n  CreatePatchBaselineRequestFilterSensitiveLog,\n  DescribeAssociationResultFilterSensitiveLog,\n  InstanceInformationFilterSensitiveLog,\n  DescribeInstanceInformationResultFilterSensitiveLog,\n  InstancePatchStateFilterSensitiveLog,\n  DescribeInstancePatchStatesResultFilterSensitiveLog,\n  DescribeInstancePatchStatesForPatchGroupResultFilterSensitiveLog,\n  InstancePropertyFilterSensitiveLog,\n  DescribeInstancePropertiesResultFilterSensitiveLog,\n  MaintenanceWindowExecutionTaskInvocationIdentityFilterSensitiveLog,\n  DescribeMaintenanceWindowExecutionTaskInvocationsResultFilterSensitiveLog,\n  MaintenanceWindowIdentityFilterSensitiveLog,\n  DescribeMaintenanceWindowsResultFilterSensitiveLog,\n  MaintenanceWindowTaskCutoffBehavior,\n  OpsItemFilterKey,\n  OpsItemFilterOperator,\n  OpsItemStatus,\n  ParametersFilterKey,\n  ParameterTier,\n  ParameterType,\n  InvalidFilterOption,\n  PatchSet,\n  PatchProperty,\n  SessionFilterKey,\n  SessionState,\n  SessionStatus,\n  OpsItemRelatedItemAssociationNotFoundException,\n  CalendarState,\n  InvalidDocumentType,\n  UnsupportedCalendarException,\n  CommandInvocationStatus,\n  InvalidPluginName,\n  InvocationDoesNotExist,\n  ConnectionStatus,\n  UnsupportedFeatureRequiredException,\n  AttachmentHashType,\n  InventoryQueryOperatorType,\n  InvalidAggregatorException,\n  InvalidInventoryGroupException,\n  InvalidResultAttributeException,\n  InventoryAttributeDataType,\n  NotificationEvent,\n  NotificationType,\n  OpsFilterOperatorType,\n  InvalidKeyId,\n  ParameterVersionNotFound,\n  ServiceSettingNotFound,\n  ParameterVersionLabelLimitExceeded,\n  AssociationFilterKey,\n  CommandFilterKey,\n  CommandPluginStatus,\n  CommandStatus,\n  ComplianceQueryOperatorType,\n  ComplianceSeverity,\n  ComplianceStatus,\n  DocumentMetadataEnum,\n  DocumentReviewCommentType,\n  DocumentFilterKey,\n  OpsItemEventFilterKey,\n  OpsItemEventFilterOperator,\n  OpsItemRelatedItemsFilterKey,\n  OpsItemRelatedItemsFilterOperator,\n  LastResourceDataSyncStatus,\n  DocumentPermissionLimit,\n  ComplianceTypeCountLimitExceededException,\n  InvalidItemContentException,\n  ItemSizeLimitExceededException,\n  ComplianceUploadType,\n  TotalSizeLimitExceededException,\n  CustomSchemaCountLimitExceededException,\n  InvalidInventoryItemContextException,\n  ItemContentMismatchException,\n  SubTypeCountLimitExceededException,\n  UnsupportedInventoryItemContextException,\n  UnsupportedInventorySchemaVersionException,\n  HierarchyLevelLimitExceededException,\n  HierarchyTypeMismatchException,\n  IncompatiblePolicyException,\n  InvalidAllowedPatternException,\n  InvalidPolicyAttributeException,\n  InvalidPolicyTypeException,\n  ParameterAlreadyExists,\n  ParameterLimitExceeded,\n  ParameterMaxVersionLimitExceeded,\n  ParameterPatternMismatchException,\n  PoliciesLimitExceededException,\n  UnsupportedParameterType,\n  ResourcePolicyLimitExceededException,\n  FeatureNotAvailableException,\n  AutomationStepNotFoundException,\n  InvalidAutomationSignalException,\n  SignalType,\n  InvalidNotificationConfig,\n  InvalidOutputFolder,\n  InvalidRole,\n  InvalidAssociation,\n  AutomationDefinitionNotFoundException,\n  AutomationDefinitionVersionNotFoundException,\n  AutomationExecutionLimitExceededException,\n  InvalidAutomationExecutionParametersException,\n  MaintenanceWindowTargetFilterSensitiveLog,\n  DescribeMaintenanceWindowTargetsResultFilterSensitiveLog,\n  MaintenanceWindowTaskParameterValueExpressionFilterSensitiveLog,\n  MaintenanceWindowTaskFilterSensitiveLog,\n  DescribeMaintenanceWindowTasksResultFilterSensitiveLog,\n  BaselineOverrideFilterSensitiveLog,\n  GetDeployablePatchSnapshotForInstanceRequestFilterSensitiveLog,\n  GetMaintenanceWindowResultFilterSensitiveLog,\n  GetMaintenanceWindowExecutionTaskResultFilterSensitiveLog,\n  GetMaintenanceWindowExecutionTaskInvocationResultFilterSensitiveLog,\n  MaintenanceWindowLambdaParametersFilterSensitiveLog,\n  MaintenanceWindowRunCommandParametersFilterSensitiveLog,\n  MaintenanceWindowStepFunctionsParametersFilterSensitiveLog,\n  MaintenanceWindowTaskInvocationParametersFilterSensitiveLog,\n  GetMaintenanceWindowTaskResultFilterSensitiveLog,\n  ParameterFilterSensitiveLog,\n  GetParameterResultFilterSensitiveLog,\n  ParameterHistoryFilterSensitiveLog,\n  GetParameterHistoryResultFilterSensitiveLog,\n  GetParametersResultFilterSensitiveLog,\n  GetParametersByPathResultFilterSensitiveLog,\n  GetPatchBaselineResultFilterSensitiveLog,\n  AssociationVersionInfoFilterSensitiveLog,\n  ListAssociationVersionsResultFilterSensitiveLog,\n  CommandFilterSensitiveLog,\n  ListCommandsResultFilterSensitiveLog,\n  PutParameterRequestFilterSensitiveLog,\n  RegisterTargetWithMaintenanceWindowRequestFilterSensitiveLog,\n  RegisterTaskWithMaintenanceWindowRequestFilterSensitiveLog,\n  SendCommandRequestFilterSensitiveLog,\n  SendCommandResultFilterSensitiveLog,\n  AutomationDefinitionNotApprovedException,\n  TargetNotConnected,\n  InvalidAutomationStatusUpdateException,\n  StopType,\n  AssociationVersionLimitExceeded,\n  InvalidUpdate,\n  StatusUnchanged,\n  DocumentVersionLimitExceeded,\n  DuplicateDocumentContent,\n  DuplicateDocumentVersionName,\n  DocumentReviewAction,\n  OpsMetadataKeyLimitExceededException,\n  ResourceDataSyncConflictException,\n  UpdateAssociationRequestFilterSensitiveLog,\n  UpdateAssociationResultFilterSensitiveLog,\n  UpdateAssociationStatusResultFilterSensitiveLog,\n  UpdateMaintenanceWindowRequestFilterSensitiveLog,\n  UpdateMaintenanceWindowResultFilterSensitiveLog,\n  UpdateMaintenanceWindowTargetRequestFilterSensitiveLog,\n  UpdateMaintenanceWindowTargetResultFilterSensitiveLog,\n  UpdateMaintenanceWindowTaskRequestFilterSensitiveLog,\n  UpdateMaintenanceWindowTaskResultFilterSensitiveLog,\n  UpdatePatchBaselineRequestFilterSensitiveLog,\n  UpdatePatchBaselineResultFilterSensitiveLog\n});\n\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../shims-public.d.ts\" />\n\ntype AbortEventListener = (this: AbortSignalLike, ev?: any) => any;\n\nconst listenersMap = new WeakMap<AbortSignal, AbortEventListener[]>();\nconst abortedMap = new WeakMap<AbortSignal, boolean>();\n\n/**\n * Allows the request to be aborted upon firing of the \"abort\" event.\n * Compatible with the browser built-in AbortSignal and common polyfills.\n */\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nexport class AbortSignal implements AbortSignalLike {\n  constructor() {\n    listenersMap.set(this, []);\n    abortedMap.set(this, false);\n  }\n\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   */\n  public get aborted(): boolean {\n    if (!abortedMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    return abortedMap.get(this)!;\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will never be aborted.\n   *\n   * @readonly\n   */\n  public static get none(): AbortSignal {\n    return new AbortSignal();\n  }\n\n  /**\n   * onabort event listener.\n   */\n  public onabort: ((ev?: Event) => any) | null = null;\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be added\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n    listeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be removed\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Dispatches a synthetic event to the AbortSignal.\n   */\n  dispatchEvent(_event: Event): boolean {\n    throw new Error(\n      \"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\"\n    );\n  }\n}\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nexport function abortSignal(signal: AbortSignal): void {\n  if (signal.aborted) {\n    return;\n  }\n\n  if (signal.onabort) {\n    signal.onabort.call(signal);\n  }\n\n  const listeners = listenersMap.get(signal)!;\n  if (listeners) {\n    // Create a copy of listeners so mutations to the array\n    // (e.g. via removeListener calls) don't affect the listeners\n    // we invoke.\n    listeners.slice().forEach((listener) => {\n      listener.call(signal, { type: \"abort\" });\n    });\n  }\n\n  abortedMap.set(signal, true);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignal, AbortSignalLike, abortSignal } from \"./AbortSignal\";\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nexport class AbortController {\n  private _signal: AbortSignal;\n\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(parentSignals?: AbortSignalLike[]);\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(...parentSignals: AbortSignalLike[]);\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  constructor(parentSignals?: any) {\n    this._signal = new AbortSignal();\n\n    if (!parentSignals) {\n      return;\n    }\n    // coerce parentSignals into an array\n    if (!Array.isArray(parentSignals)) {\n      // eslint-disable-next-line prefer-rest-params\n      parentSignals = arguments;\n    }\n    for (const parentSignal of parentSignals) {\n      // if the parent signal has already had abort() called,\n      // then call abort on this signal as well.\n      if (parentSignal.aborted) {\n        this.abort();\n      } else {\n        // when the parent signal aborts, this signal should as well.\n        parentSignal.addEventListener(\"abort\", () => {\n          this.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * The AbortSignal associated with this controller that will signal aborted\n   * when the abort method is called on this controller.\n   *\n   * @readonly\n   */\n  public get signal(): AbortSignal {\n    return this._signal;\n  }\n\n  /**\n   * Signal that any operations passed this controller's associated abort signal\n   * to cancel any remaining work and throw an `AbortError`.\n   */\n  abort(): void {\n    abortSignal(this._signal);\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will abort after the provided ms.\n   * @param ms - Elapsed time in milliseconds to trigger an abort.\n   */\n  public static timeout(ms: number): AbortSignal {\n    const signal = new AbortSignal();\n    const timer = setTimeout(abortSignal, ms, signal);\n    // Prevent the active Timer from keeping the Node.js event loop active.\n    if (typeof timer.unref === \"function\") {\n      timer.unref();\n    }\n    return signal;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { EOL } from \"node:os\";\nimport util from \"node:util\";\nimport * as process from \"node:process\";\n\nexport function log(message: unknown, ...args: any[]): void {\n  process.stderr.write(`${util.format(message, ...args)}${EOL}`);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { log } from \"./log.js\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"azure:*\"\n   * Supports skip syntax, e.g. \"azure:*,-azure:storage:*\" will enable\n   * everything under azure except for things under azure:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log,\n  },\n);\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabledNamespace of enabledNamespaces) {\n    if (enabledNamespace.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend,\n  });\n\n  function debug(...args: any[]): void {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nexport default debugObj;\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport debug, { type Debugger } from \"./debug.js\";\nexport type { Debugger } from \"./debug.js\";\n\nconst registeredLoggers = new Set<AzureDebugger>();\nconst logLevelFromEnv =\n  (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\n\nlet azureLogLevel: AzureLogLevel | undefined;\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n  debug.log(...args);\n};\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype AzureDebugger = Debugger & { level: AzureLogLevel };\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\nif (logLevelFromEnv) {\n  // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n  if (isAzureLogLevel(logLevelFromEnv)) {\n    setLogLevel(logLevelFromEnv);\n  } else {\n    console.error(\n      `AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\n        \", \",\n      )}.`,\n    );\n  }\n}\n\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel): void {\n  if (level && !isAzureLogLevel(level)) {\n    throw new Error(\n      `Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`,\n    );\n  }\n  azureLogLevel = level;\n\n  const enabledNamespaces = [];\n  for (const logger of registeredLoggers) {\n    if (shouldEnable(logger)) {\n      enabledNamespaces.push(logger.namespace);\n    }\n  }\n\n  debug.enable(enabledNamespaces.join(\",\"));\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): AzureLogLevel | undefined {\n  return azureLogLevel;\n}\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100,\n};\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed troubleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  const clientRootLogger: AzureClientLogger = AzureLogger.extend(namespace);\n  patchLogMethod(AzureLogger, clientRootLogger);\n  return {\n    error: createLogger(clientRootLogger, \"error\"),\n    warning: createLogger(clientRootLogger, \"warning\"),\n    info: createLogger(clientRootLogger, \"info\"),\n    verbose: createLogger(clientRootLogger, \"verbose\"),\n  };\n}\n\nfunction patchLogMethod(parent: AzureClientLogger, child: AzureClientLogger | AzureDebugger): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction createLogger(parent: AzureClientLogger, level: AzureLogLevel): AzureDebugger {\n  const logger: AzureDebugger = Object.assign(parent.extend(level), {\n    level,\n  });\n\n  patchLogMethod(parent, logger);\n\n  if (shouldEnable(logger)) {\n    const enabledNamespaces = debug.disable();\n    debug.enable(enabledNamespaces + \",\" + logger.namespace);\n  }\n\n  registeredLoggers.add(logger);\n\n  return logger;\n}\n\nfunction shouldEnable(logger: AzureDebugger): boolean {\n  return Boolean(azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]);\n}\n\nfunction isAzureLogLevel(logLevel: string): logLevel is AzureLogLevel {\n  return AZURE_LOG_LEVELS.includes(logLevel as any);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ndeclare global {\n  interface Event {}\n}\n\nexport { AbortError } from \"./AbortError.js\";\nexport { AbortSignalLike } from \"./AbortSignalLike.js\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport type { AbortOptions } from \"./aborterUtils.js\";\n\n/**\n * Options for the createAbortablePromise function.\n */\nexport interface CreateAbortablePromiseOptions extends AbortOptions {\n  /** A function to be called if the promise was aborted */\n  cleanupBeforeAbort?: () => void;\n}\n\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise<T>(\n  buildPromise: (\n    resolve: (value: T | PromiseLike<T>) => void,\n    reject: (reason?: any) => void,\n  ) => void,\n  options?: CreateAbortablePromiseOptions,\n): Promise<T> {\n  const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options ?? {};\n  return new Promise((resolve, reject) => {\n    function rejectOnAbort(): void {\n      reject(new AbortError(abortErrorMsg ?? \"The operation was aborted.\"));\n    }\n    function removeListeners(): void {\n      abortSignal?.removeEventListener(\"abort\", onAbort);\n    }\n    function onAbort(): void {\n      cleanupBeforeAbort?.();\n      removeListeners();\n      rejectOnAbort();\n    }\n    if (abortSignal?.aborted) {\n      return rejectOnAbort();\n    }\n    try {\n      buildPromise(\n        (x) => {\n          removeListeners();\n          resolve(x);\n        },\n        (x) => {\n          removeListeners();\n          reject(x);\n        },\n      );\n    } catch (err) {\n      reject(err);\n    }\n    abortSignal?.addEventListener(\"abort\", onAbort);\n  });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { AbortOptions } from \"./aborterUtils.js\";\nimport { createAbortablePromise } from \"./createAbortablePromise.js\";\n\nconst StandardAbortMessage = \"The delay was aborted.\";\n\n/**\n * Options for support abort functionality for the delay method\n */\nexport interface DelayOptions extends AbortOptions {}\n\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs: number, options?: DelayOptions): Promise<void> {\n  let token: ReturnType<typeof setTimeout>;\n  const { abortSignal, abortErrorMsg } = options ?? {};\n  return createAbortablePromise(\n    (resolve) => {\n      token = setTimeout(resolve, timeInMs);\n    },\n    {\n      cleanupBeforeAbort: () => clearTimeout(token),\n      abortSignal,\n      abortErrorMsg: abortErrorMsg ?? StandardAbortMessage,\n    },\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport type { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * Options related to abort controller.\n */\nexport interface AbortOptions {\n  /**\n   * The abortSignal associated with containing operation.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * The abort error message associated with containing operation.\n   */\n  abortErrorMsg?: string;\n}\n\n/**\n * Represents a function that returns a promise that can be aborted.\n */\nexport type AbortablePromiseBuilder<T> = (abortOptions: {\n  abortSignal?: AbortSignalLike;\n}) => Promise<T>;\n\n/**\n * promise.race() wrapper that aborts rest of promises as soon as the first promise settles.\n */\nexport async function cancelablePromiseRace<T extends unknown[]>(\n  abortablePromiseBuilders: AbortablePromiseBuilder<T[number]>[],\n  options?: { abortSignal?: AbortSignalLike },\n): Promise<T[number]> {\n  const aborter = new AbortController();\n  function abortHandler(): void {\n    aborter.abort();\n  }\n  options?.abortSignal?.addEventListener(\"abort\", abortHandler);\n  try {\n    return await Promise.race(\n      abortablePromiseBuilders.map((p) => p({ abortSignal: aborter.signal })),\n    );\n  } finally {\n    aborter.abort();\n    options?.abortSignal?.removeEventListener(\"abort\", abortHandler);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min: number, max: number): number {\n  // Make sure inputs are integers.\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  // Pick a random offset from zero to the size of the range.\n  // Since Math.random() can never return 1, we have to make the range one larger\n  // in order to be inclusive of the maximum value after we take the floor.\n  const offset = Math.floor(Math.random() * (max - min + 1));\n  return offset + min;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A generic shape for a plain JS object.\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isObject } from \"./object.js\";\n\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e: unknown): e is Error {\n  if (isObject(e)) {\n    const hasName = typeof e.name === \"string\";\n    const hasMessage = typeof e.message === \"string\";\n    return hasName && hasMessage;\n  }\n  return false;\n}\n\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e: unknown): string {\n  if (isError(e)) {\n    return e.message;\n  } else {\n    let stringified: string;\n    try {\n      if (typeof e === \"object\" && e) {\n        stringified = JSON.stringify(e);\n      } else {\n        stringified = String(e);\n      }\n    } catch (err: any) {\n      stringified = \"[unable to stringify input]\";\n    }\n    return `Unknown error ${stringified}`;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHash, createHmac } from \"crypto\";\n\n/**\n * Generates a SHA-256 HMAC signature.\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n * @param stringToSign - The data to be signed.\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nexport async function computeSha256Hmac(\n  key: string,\n  stringToSign: string,\n  encoding: \"base64\" | \"hex\",\n): Promise<string> {\n  const decodedKey = Buffer.from(key, \"base64\");\n\n  return createHmac(\"sha256\", decodedKey).update(stringToSign).digest(encoding);\n}\n\n/**\n * Generates a SHA-256 hash.\n * @param content - The data to be included in the hash.\n * @param encoding - The textual encoding to use for the returned hash.\n */\nexport async function computeSha256Hash(\n  content: string,\n  encoding: \"base64\" | \"hex\",\n): Promise<string> {\n  return createHash(\"sha256\").update(content).digest(encoding);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[],\n): thing is Thing & Record<PropertyName, unknown> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nexport function objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName,\n): thing is Thing & Record<PropertyName, unknown> {\n  return (\n    isDefined(thing) && typeof thing === \"object\" && property in (thing as Record<string, unknown>)\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { randomUUID as v4RandomUUID } from \"crypto\";\n\ninterface Crypto {\n  randomUUID(): string;\n}\n\ndeclare const globalThis: {\n  crypto: Crypto;\n};\n\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction =\n  typeof globalThis?.crypto?.randomUUID === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : v4RandomUUID;\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID(): string {\n  return uuidFunction();\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ninterface Window {\n  document: unknown;\n}\n\ninterface DedicatedWorkerGlobalScope {\n  constructor: {\n    name: string;\n  };\n\n  importScripts: (...paths: string[]) => void;\n}\n\ninterface Navigator {\n  product: string;\n}\n\ninterface DenoGlobal {\n  version: {\n    deno: string;\n  };\n}\n\ninterface BunGlobal {\n  version: string;\n}\n\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\ndeclare const window: Window;\ndeclare const self: DedicatedWorkerGlobalScope;\ndeclare const Deno: DenoGlobal;\ndeclare const Bun: BunGlobal;\ndeclare const navigator: Navigator;\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker =\n  typeof self === \"object\" &&\n  typeof self?.importScripts === \"function\" &&\n  (self.constructor?.name === \"DedicatedWorkerGlobalScope\" ||\n    self.constructor?.name === \"ServiceWorkerGlobalScope\" ||\n    self.constructor?.name === \"SharedWorkerGlobalScope\");\n\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno =\n  typeof Deno !== \"undefined\" &&\n  typeof Deno.version !== \"undefined\" &&\n  typeof Deno.version.deno !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike =\n  typeof globalThis.process !== \"undefined\" &&\n  Boolean(globalThis.process.version) &&\n  Boolean(globalThis.process.versions?.node);\n\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n * @deprecated Use `isNodeLike` instead.\n */\nexport const isNode = isNodeLike;\n\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative =\n  typeof navigator !== \"undefined\" && navigator?.product === \"ReactNative\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/** The supported character encoding type */\nexport type EncodingType = \"utf-8\" | \"base64\" | \"base64url\" | \"hex\";\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes: Uint8Array, format: EncodingType): string {\n  return Buffer.from(bytes).toString(format);\n}\n\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value: string, format: EncodingType): Uint8Array {\n  return Buffer.from(value, format);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport { delay, type DelayOptions } from \"./delay.js\";\nexport {\n  type AbortOptions,\n  cancelablePromiseRace,\n  type AbortablePromiseBuilder,\n} from \"./aborterUtils.js\";\nexport {\n  createAbortablePromise,\n  type CreateAbortablePromiseOptions,\n} from \"./createAbortablePromise.js\";\nexport { getRandomIntegerInclusive } from \"./random.js\";\nexport { isObject, type UnknownObject } from \"./object.js\";\nexport { isError, getErrorMessage } from \"./error.js\";\nexport { computeSha256Hash, computeSha256Hmac } from \"./sha256.js\";\nexport { isDefined, isObjectWithProperties, objectHasProperty } from \"./typeGuards.js\";\nexport { randomUUID } from \"./uuidUtils.js\";\nexport {\n  isBrowser,\n  isBun,\n  isNode,\n  isNodeLike,\n  isNodeRuntime,\n  isDeno,\n  isReactNative,\n  isWebWorker,\n} from \"./checkEnvironment.js\";\nexport { uint8ArrayToString, stringToUint8Array, type EncodingType } from \"./bytesEncoding.js\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ndeclare global {\n  interface Event {}\n}\n\nexport { AbortError } from \"./AbortError.js\";\nexport { AbortSignalLike } from \"./AbortSignalLike.js\";\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar util = require('util');\n\nfunction ProtocolError(message) {\n    Error.captureStackTrace(this, ProtocolError);\n    this.message = message;\n    this.name = 'ProtocolError';\n}\nutil.inherits(ProtocolError, Error);\n\nfunction TypeError(message) {\n    Error.captureStackTrace(this, TypeError);\n    this.message = message;\n    this.name = 'TypeError';\n}\nutil.inherits(TypeError, ProtocolError);\n\nfunction ConnectionError(message, condition, connection) {\n    Error.captureStackTrace(this, ConnectionError);\n    this.message = message;\n    this.name = 'ConnectionError';\n    this.condition = condition;\n    this.description = message;\n    Object.defineProperty(this, 'connection', { value: connection });\n}\nutil.inherits(ConnectionError, Error);\n\nConnectionError.prototype.toJSON = function () {\n    return {\n        type: this.name,\n        code: this.condition,\n        message: this.description\n    };\n};\n\nmodule.exports = {\n    ProtocolError: ProtocolError,\n    TypeError: TypeError,\n    ConnectionError: ConnectionError\n};\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\n\nvar util = {};\n\nutil.allocate_buffer = function (size) {\n    return Buffer.alloc ? Buffer.alloc(size) : new Buffer(size);\n};\n\nutil.generate_uuid = function () {\n    return util.uuid_to_string(util.uuid4());\n};\n\nutil.uuid4 = function () {\n    var bytes = util.allocate_buffer(16);\n    for (var i = 0; i < bytes.length; i++) {\n        bytes[i] = Math.random()*255|0;\n    }\n\n    // From RFC4122, the version bits are set to 0100\n    bytes[7] &= 0x0F;\n    bytes[7] |= 0x40;\n\n    // From RFC4122, the top two bits of byte 8 get set to 01\n    bytes[8] &= 0x3F;\n    bytes[8] |= 0x80;\n\n    return bytes;\n};\n\n\nutil.uuid_to_string = function (buffer) {\n    if (buffer.length === 16) {\n        var chunks = [buffer.slice(0, 4), buffer.slice(4, 6), buffer.slice(6, 8), buffer.slice(8, 10), buffer.slice(10, 16)];\n        return chunks.map(function (b) { return b.toString('hex'); }).join('-');\n    } else {\n        throw new errors.TypeError('Not a UUID, expecting 16 byte buffer');\n    }\n};\n\nvar parse_uuid = /^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/;\n\nutil.string_to_uuid = function (uuid_string) {\n    var parts = parse_uuid.exec(uuid_string.toLowerCase());\n    if (parts) {\n        return Buffer.from(parts.slice(1).join(''), 'hex');\n    } else {\n        throw new errors.TypeError('Not a valid UUID string: ' + uuid_string);\n    }\n};\n\nutil.clone = function (o) {\n    var copy = Object.create(o.prototype || {});\n    var names = Object.getOwnPropertyNames(o);\n    for (var i = 0; i < names.length; i++) {\n        var key = names[i];\n        copy[key] = o[key];\n    }\n    return copy;\n};\n\nutil.and = function (f, g) {\n    if (g === undefined) return f;\n    return function (o) {\n        return f(o) && g(o);\n    };\n};\n\nutil.is_sender = function (o) { return o.is_sender(); };\nutil.is_receiver = function (o) { return o.is_receiver(); };\nutil.sender_filter = function (filter) { return util.and(util.is_sender, filter); };\nutil.receiver_filter = function (filter) { return util.and(util.is_receiver, filter); };\n\nutil.is_defined = function (field) {\n    return field !== undefined && field !== null;\n};\n\nmodule.exports = util;\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\nvar util = require('./util.js');\n\nvar CAT_FIXED = 1;\nvar CAT_VARIABLE = 2;\nvar CAT_COMPOUND = 3;\nvar CAT_ARRAY = 4;\n\nfunction Typed(type, value, code, descriptor) {\n    this.type = type;\n    this.value = value;\n    if (code) {\n        this.array_constructor = {'typecode':code};\n        if (descriptor) {\n            this.array_constructor.descriptor = descriptor;\n        }\n    }\n}\n\nTyped.prototype.toString = function() {\n    return this.value ? this.value.toString() : null;\n};\n\nTyped.prototype.toLocaleString = function() {\n    return this.value ? this.value.toLocaleString() : null;\n};\n\nTyped.prototype.valueOf = function() {\n    return this.value;\n};\n\nTyped.prototype.toJSON = function() {\n    return this.value && this.value.toJSON ? this.value.toJSON() : this.value;\n};\n\nTyped.prototype.toRheaTyped = function() {\n    return this;\n};\n\nfunction TypeDesc(name, typecode, props, empty_value) {\n    this.name = name;\n    this.typecode = typecode;\n    var subcategory = typecode >>> 4;\n    switch (subcategory) {\n    case 0x4:\n        this.width = 0;\n        this.category = CAT_FIXED;\n        break;\n    case 0x5:\n        this.width = 1;\n        this.category = CAT_FIXED;\n        break;\n    case 0x6:\n        this.width = 2;\n        this.category = CAT_FIXED;\n        break;\n    case 0x7:\n        this.width = 4;\n        this.category = CAT_FIXED;\n        break;\n    case 0x8:\n        this.width = 8;\n        this.category = CAT_FIXED;\n        break;\n    case 0x9:\n        this.width = 16;\n        this.category = CAT_FIXED;\n        break;\n    case 0xA:\n        this.width = 1;\n        this.category = CAT_VARIABLE;\n        break;\n    case 0xB:\n        this.width = 4;\n        this.category = CAT_VARIABLE;\n        break;\n    case 0xC:\n        this.width = 1;\n        this.category = CAT_COMPOUND;\n        break;\n    case 0xD:\n        this.width = 4;\n        this.category = CAT_COMPOUND;\n        break;\n    case 0xE:\n        this.width = 1;\n        this.category = CAT_ARRAY;\n        break;\n    case 0xF:\n        this.width = 4;\n        this.category = CAT_ARRAY;\n        break;\n    default:\n        //can't happen\n        break;\n    }\n\n    if (props) {\n        if (props.read) {\n            this.read = props.read;\n        }\n        if (props.write) {\n            this.write = props.write;\n        }\n        if (props.encoding) {\n            this.encoding = props.encoding;\n        }\n    }\n\n    var t = this;\n    if (subcategory === 0x4) {\n        // 'empty' types don't take a value\n        this.create = function () {\n            return new Typed(t, empty_value);\n        };\n    } else if (subcategory === 0xE || subcategory === 0xF) {\n        this.create = function (v, code, descriptor) {\n            return new Typed(t, v, code, descriptor);\n        };\n    } else {\n        this.create = function (v) {\n            return new Typed(t, v);\n        };\n    }\n}\n\nTypeDesc.prototype.toString = function () {\n    return this.name + '#' + hex(this.typecode);\n};\n\nfunction hex(i) {\n    return Number(i).toString(16);\n}\n\nvar types = {'by_code':{}};\nObject.defineProperty(types, 'MAX_UINT', {value: 4294967295, writable: false, configurable: false});\nObject.defineProperty(types, 'MAX_USHORT', {value: 65535, writable: false, configurable: false});\n\nfunction define_type(name, typecode, annotations, empty_value) {\n    var t = new TypeDesc(name, typecode, annotations, empty_value);\n    t.create.typecode = t.typecode;//hack\n    types.by_code[t.typecode] = t;\n    types[name] = t.create;\n}\n\nfunction buffer_uint8_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readUInt8(offset); },\n        'write': function (buffer, value, offset) { buffer.writeUInt8(value, offset); }\n    };\n}\n\nfunction buffer_uint16be_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readUInt16BE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeUInt16BE(value, offset); }\n    };\n}\n\nfunction buffer_uint32be_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readUInt32BE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeUInt32BE(value, offset); }\n    };\n}\n\nfunction buffer_int8_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readInt8(offset); },\n        'write': function (buffer, value, offset) { buffer.writeInt8(value, offset); }\n    };\n}\n\nfunction buffer_int16be_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readInt16BE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeInt16BE(value, offset); }\n    };\n}\n\nfunction buffer_int32be_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readInt32BE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeInt32BE(value, offset); }\n    };\n}\n\nfunction buffer_floatbe_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readFloatBE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeFloatBE(value, offset); }\n    };\n}\n\nfunction buffer_doublebe_ops() {\n    return {\n        'read': function (buffer, offset) { return buffer.readDoubleBE(offset); },\n        'write': function (buffer, value, offset) { buffer.writeDoubleBE(value, offset); }\n    };\n}\n\nvar MAX_UINT = 4294967296; // 2^32\nvar MIN_INT = -2147483647;\nfunction write_ulong(buffer, value, offset) {\n    if ((typeof value) === 'number' || value instanceof Number) {\n        var hi = Math.floor(value / MAX_UINT);\n        var lo = value % MAX_UINT;\n        buffer.writeUInt32BE(hi, offset);\n        buffer.writeUInt32BE(lo, offset + 4);\n    } else {\n        value.copy(buffer, offset);\n    }\n}\n\nfunction read_ulong(buffer, offset) {\n    var hi = buffer.readUInt32BE(offset);\n    var lo = buffer.readUInt32BE(offset + 4);\n    if (hi < 2097153) {\n        return hi * MAX_UINT + lo;\n    } else {\n        return buffer.slice(offset, offset + 8);\n    }\n}\n\nfunction write_long(buffer, value, offset) {\n    if ((typeof value) === 'number' || value instanceof Number) {\n        var abs = Math.abs(value);\n        var hi = Math.floor(abs / MAX_UINT);\n        var lo = abs % MAX_UINT;\n        buffer.writeInt32BE(hi, offset);\n        buffer.writeUInt32BE(lo, offset + 4);\n        if (value < 0) {\n            var carry = 1;\n            for (var i = 0; i < 8; i++) {\n                var index = offset + (7 - i);\n                var v = (buffer[index] ^ 0xFF) + carry;\n                buffer[index] = v & 0xFF;\n                carry = v >> 8;\n            }\n        }\n    } else {\n        value.copy(buffer, offset);\n    }\n}\n\nfunction write_timestamp(buffer, value, offset) {\n    if (typeof value === 'object' && value !== null && typeof value.getTime === 'function') {\n        value = value.getTime();\n    }\n    return write_long(buffer, value, offset);\n}\n\nfunction read_long(buffer, offset) {\n    var hi = buffer.readInt32BE(offset);\n    var lo = buffer.readUInt32BE(offset + 4);\n    if (hi < 2097153 && hi > -2097153) {\n        return hi * MAX_UINT + lo;\n    } else {\n        return buffer.slice(offset, offset + 8);\n    }\n}\n\nfunction read_timestamp(buffer, offset) {\n    const l = read_long(buffer, offset);\n    return new Date(l);\n}\n\ndefine_type('Null', 0x40, undefined, null);\ndefine_type('Boolean', 0x56, buffer_uint8_ops());\ndefine_type('True', 0x41, undefined, true);\ndefine_type('False', 0x42, undefined, false);\ndefine_type('Ubyte', 0x50, buffer_uint8_ops());\ndefine_type('Ushort', 0x60, buffer_uint16be_ops());\ndefine_type('Uint', 0x70, buffer_uint32be_ops());\ndefine_type('SmallUint', 0x52, buffer_uint8_ops());\ndefine_type('Uint0', 0x43, undefined, 0);\ndefine_type('Ulong', 0x80, {'write':write_ulong, 'read':read_ulong});\ndefine_type('SmallUlong', 0x53, buffer_uint8_ops());\ndefine_type('Ulong0', 0x44, undefined, 0);\ndefine_type('Byte', 0x51, buffer_int8_ops());\ndefine_type('Short', 0x61, buffer_int16be_ops());\ndefine_type('Int', 0x71, buffer_int32be_ops());\ndefine_type('SmallInt', 0x54, buffer_int8_ops());\ndefine_type('Long', 0x81, {'write':write_long, 'read':read_long});\ndefine_type('SmallLong', 0x55, buffer_int8_ops());\ndefine_type('Float', 0x72, buffer_floatbe_ops());\ndefine_type('Double', 0x82, buffer_doublebe_ops());\ndefine_type('Decimal32', 0x74);\ndefine_type('Decimal64', 0x84);\ndefine_type('Decimal128', 0x94);\ndefine_type('CharUTF32', 0x73, buffer_uint32be_ops());\ndefine_type('Timestamp', 0x83, {'write':write_timestamp, 'read':read_timestamp});\ndefine_type('Uuid', 0x98);//TODO: convert to/from stringified form?\ndefine_type('Vbin8', 0xa0);\ndefine_type('Vbin32', 0xb0);\ndefine_type('Str8', 0xa1, {'encoding':'utf8'});\ndefine_type('Str32', 0xb1, {'encoding':'utf8'});\ndefine_type('Sym8', 0xa3, {'encoding':'ascii'});\ndefine_type('Sym32', 0xb3, {'encoding':'ascii'});\ndefine_type('List0', 0x45, undefined, []);\ndefine_type('List8', 0xc0);\ndefine_type('List32', 0xd0);\ndefine_type('Map8', 0xc1);\ndefine_type('Map32', 0xd1);\ndefine_type('Array8', 0xe0);\ndefine_type('Array32', 0xf0);\n\nfunction is_one_of(o, typelist) {\n    for (var i = 0; i < typelist.length; i++) {\n        if (o.type.typecode === typelist[i].typecode) return true;\n    }\n    return false;\n}\nfunction buffer_zero(b, len, neg) {\n    for (var i = 0; i < len && i < b.length; i++) {\n        if (b[i] !== (neg ? 0xff : 0)) return false;\n    }\n    return true;\n}\ntypes.is_ulong = function(o) {\n    return is_one_of(o, [types.Ulong, types.Ulong0, types.SmallUlong]);\n};\ntypes.is_string = function(o) {\n    return is_one_of(o, [types.Str8, types.Str32]);\n};\ntypes.is_symbol = function(o) {\n    return is_one_of(o, [types.Sym8, types.Sym32]);\n};\ntypes.is_list = function(o) {\n    return is_one_of(o, [types.List0, types.List8, types.List32]);\n};\ntypes.is_map = function(o) {\n    return is_one_of(o, [types.Map8, types.Map32]);\n};\n\ntypes.wrap_boolean = function(v) {\n    return v ? types.True() : types.False();\n};\ntypes.wrap_ulong = function(l) {\n    if (Buffer.isBuffer(l)) {\n        if (buffer_zero(l, 8, false)) return types.Ulong0();\n        return buffer_zero(l, 7, false) ? types.SmallUlong(l[7]) : types.Ulong(l);\n    } else {\n        if (l === 0) return types.Ulong0();\n        else return l > 255 ? types.Ulong(l) : types.SmallUlong(l);\n    }\n};\ntypes.wrap_uint = function(l) {\n    if (l === 0) return types.Uint0();\n    else return l > 255 ? types.Uint(l) : types.SmallUint(l);\n};\ntypes.wrap_ushort = function(l) {\n    return types.Ushort(l);\n};\ntypes.wrap_ubyte = function(l) {\n    return types.Ubyte(l);\n};\ntypes.wrap_long = function(l) {\n    if (Buffer.isBuffer(l)) {\n        var negFlag = (l[0] & 0x80) !== 0;\n        if (buffer_zero(l, 7, negFlag) && (l[7] & 0x80) === (negFlag ? 0x80 : 0)) {\n            return types.SmallLong(negFlag ? -((l[7] ^ 0xff) + 1) : l[7]);\n        }\n        return types.Long(l);\n    } else {\n        return l > 127 || l < -128 ? types.Long(l) : types.SmallLong(l);\n    }\n};\ntypes.wrap_int = function(l) {\n    return l > 127 || l < -128 ? types.Int(l) : types.SmallInt(l);\n};\ntypes.wrap_short = function(l) {\n    return types.Short(l);\n};\ntypes.wrap_byte = function(l) {\n    return types.Byte(l);\n};\ntypes.wrap_float = function(l) {\n    return types.Float(l);\n};\ntypes.wrap_double = function(l) {\n    return types.Double(l);\n};\ntypes.wrap_timestamp = function(l) {\n    return types.Timestamp(l);\n};\ntypes.wrap_char = function(v) {\n    return types.CharUTF32(v);\n};\ntypes.wrap_uuid = function(v) {\n    return types.Uuid(v);\n};\ntypes.wrap_binary = function (s) {\n    return s.length > 255 ? types.Vbin32(s) : types.Vbin8(s);\n};\ntypes.wrap_string = function (s) {\n    return Buffer.byteLength(s) > 255 ? types.Str32(s) : types.Str8(s);\n};\ntypes.wrap_symbol = function (s) {\n    return Buffer.byteLength(s) > 255 ? types.Sym32(s) : types.Sym8(s);\n};\ntypes.wrap_list = function(l) {\n    if (l.length === 0) return types.List0();\n    var items = l.map(types.wrap);\n    return types.List32(items);\n};\ntypes.wrap_set_as_list = function(l) {\n    if (l.size === 0) return types.List0();\n    var items = Array.from(l, types.wrap);\n    return types.List32(items);\n};\ntypes.wrap_map = function(m, key_wrapper) {\n    var items = [];\n    for (var k in m) {\n        items.push(key_wrapper ? key_wrapper(k) : types.wrap(k));\n        items.push(types.wrap(m[k]));\n    }\n    return types.Map32(items);\n};\ntypes.wrap_map_as_map = function(m) {\n    var items = [];\n    for (var [k, v] of m) {\n        items.push(types.wrap(k));\n        items.push(types.wrap(v));\n    }\n    return types.Map32(items);\n};\ntypes.wrap_symbolic_map = function(m) {\n    return types.wrap_map(m, types.wrap_symbol);\n};\ntypes.wrap_array = function(l, code, descriptors) {\n    if (code) {\n        return types.Array32(l, code, descriptors);\n    } else {\n        console.trace('An array must specify a type for its elements');\n        throw new errors.TypeError('An array must specify a type for its elements');\n    }\n};\ntypes.wrap = function(o) {\n    var t = typeof o;\n    if (t === 'object' && o !== null && typeof o.toRheaTyped === 'function') {\n        return o.toRheaTyped();\n    } else if (t === 'string') {\n        return types.wrap_string(o);\n    } else if (t === 'boolean') {\n        return o ? types.True() : types.False();\n    } else if (t === 'number' || o instanceof Number) {\n        if (isNaN(o)) {\n            return types.Null();\n        } else if (Math.floor(o) - o !== 0) {\n            return types.Double(o);\n        } else if (o > 0) {\n            if (o < MAX_UINT) {\n                return types.wrap_uint(o);\n            } else {\n                return types.wrap_ulong(o);\n            }\n        } else {\n            if (o > MIN_INT) {\n                return types.wrap_int(o);\n            } else {\n                return types.wrap_long(o);\n            }\n        }\n    } else if (o instanceof Date) {\n        return types.wrap_timestamp(o.getTime());\n    } else if (o instanceof Buffer || o instanceof Uint8Array) {\n        return types.wrap_binary(o);\n    } else if (t === 'undefined' || o === null) {\n        return types.Null();\n    } else if (Array.isArray(o)) {\n        return types.wrap_list(o);\n    } else if (o instanceof Map) {\n        return types.wrap_map_as_map(o);\n    } else if (o instanceof Set) {\n        return types.wrap_set_as_list(o);\n    } else {\n        return types.wrap_map(o);\n    }\n};\n\ntypes.wrap_described = function(value, descriptor) {\n    var result = types.wrap(value);\n    if (descriptor) {\n        if (typeof descriptor === 'string') {\n            result = types.described(types.wrap_symbol(descriptor), result);\n        } else if (typeof descriptor === 'number' || descriptor instanceof Number) {\n            result = types.described(types.wrap_ulong(descriptor), result);\n        }\n    }\n    return result;\n};\n\ntypes.wrap_message_id = function(o) {\n    var t = typeof o;\n    if (t === 'string') {\n        return types.wrap_string(o);\n    } else if (t === 'number' || o instanceof Number) {\n        return types.wrap_ulong(o);\n    } else if (Buffer.isBuffer(o)) {\n        return types.wrap_uuid(o);\n    } else if (o instanceof Typed) {\n        return o;\n    } else {\n        //TODO handle uuids\n        throw new errors.TypeError('invalid message id:' + o);\n    }\n};\n\n/**\n * Converts the list of keys and values that comprise an AMQP encoded\n * map into a proper javascript map/object.\n */\nfunction mapify(elements) {\n    var result = {};\n    for (var i = 0; i+1 < elements.length;) {\n        result[elements[i++]] = elements[i++];\n    }\n    return result;\n}\n\nvar by_descriptor = {};\n\ntypes.unwrap_map_simple = function(o) {\n    return mapify(o.value.map(function (i) { return types.unwrap(i, true); }));\n};\n\ntypes.unwrap = function(o, leave_described) {\n    if (o instanceof Typed) {\n        if (o.descriptor) {\n            var c = by_descriptor[o.descriptor.value];\n            if (c) {\n                return new c(o.value);\n            } else if (leave_described) {\n                return o;\n            }\n        }\n        var u = types.unwrap(o.value, true);\n        return types.is_map(o) ? mapify(u) : u;\n    } else if (Array.isArray(o)) {\n        return o.map(function (i) { return types.unwrap(i, true); });\n    } else {\n        return o;\n    }\n};\n\n/*\ntypes.described = function (descriptor, typedvalue) {\n    var o = Object.create(typedvalue);\n    if (descriptor.length) {\n        o.descriptor = descriptor.shift();\n        return types.described(descriptor, o);\n    } else {\n        o.descriptor = descriptor;\n        return o;\n    }\n};\n*/\ntypes.described_nc = function (descriptor, o) {\n    if (descriptor.length) {\n        o.descriptor = descriptor.shift();\n        return types.described(descriptor, o);\n    } else {\n        o.descriptor = descriptor;\n        return o;\n    }\n};\ntypes.described = types.described_nc;\n\nfunction get_type(code) {\n    var type = types.by_code[code];\n    if (!type) {\n        throw new errors.TypeError('Unrecognised typecode: ' + hex(code));\n    }\n    return type;\n}\n\ntypes.Reader = function (buffer) {\n    this.buffer = buffer;\n    this.position = 0;\n};\n\ntypes.Reader.prototype.read_typecode = function () {\n    return this.read_uint(1);\n};\n\ntypes.Reader.prototype.read_uint = function (width) {\n    var current = this.position;\n    this.position += width;\n    if (width === 1) {\n        return this.buffer.readUInt8(current);\n    } else if (width === 2) {\n        return this.buffer.readUInt16BE(current);\n    } else if (width === 4) {\n        return this.buffer.readUInt32BE(current);\n    } else {\n        throw new errors.TypeError('Unexpected width for uint ' + width);\n    }\n};\n\ntypes.Reader.prototype.read_fixed_width = function (type) {\n    var current = this.position;\n    this.position += type.width;\n    if (type.read) {\n        return type.read(this.buffer, current);\n    } else {\n        return this.buffer.slice(current, this.position);\n    }\n};\n\ntypes.Reader.prototype.read_variable_width = function (type) {\n    var size = this.read_uint(type.width);\n    var slice = this.read_bytes(size);\n    return type.encoding ? slice.toString(type.encoding) : slice;\n};\n\ntypes.Reader.prototype.read = function () {\n    var constructor = this.read_constructor();\n    var value = this.read_value(get_type(constructor.typecode));\n    return constructor.descriptor ? types.described_nc(constructor.descriptor, value) : value;\n};\n\ntypes.Reader.prototype.read_constructor = function (descriptors) {\n    var code = this.read_typecode();\n    if (code === 0x00) {\n        if (descriptors === undefined) {\n            descriptors = [];\n        }\n        descriptors.push(this.read());\n        return this.read_constructor(descriptors);\n    } else {\n        if (descriptors === undefined) {\n            return {'typecode': code};\n        } else if (descriptors.length === 1) {\n            return {'typecode': code, 'descriptor':  descriptors[0]};\n        } else {\n            return {'typecode': code, 'descriptor':  descriptors[0], 'descriptors': descriptors};\n        }\n    }\n};\n\ntypes.Reader.prototype.read_value = function (type) {\n    if (type.width === 0) {\n        return type.create();\n    } else if (type.category === CAT_FIXED) {\n        return type.create(this.read_fixed_width(type));\n    } else if (type.category === CAT_VARIABLE) {\n        return type.create(this.read_variable_width(type));\n    } else if (type.category === CAT_COMPOUND) {\n        return this.read_compound(type);\n    } else if (type.category === CAT_ARRAY) {\n        return this.read_array(type);\n    } else {\n        throw new errors.TypeError('Invalid category for type: ' + type);\n    }\n};\n\ntypes.Reader.prototype.read_array_items = function (n, type) {\n    var items = [];\n    while (items.length < n) {\n        items.push(this.read_value(type));\n    }\n    return items;\n};\n\ntypes.Reader.prototype.read_n = function (n) {\n    var items = new Array(n);\n    for (var i = 0; i < n; i++) {\n        items[i] = this.read();\n    }\n    return items;\n};\n\ntypes.Reader.prototype.read_size_count = function (width) {\n    return {'size': this.read_uint(width), 'count': this.read_uint(width)};\n};\n\ntypes.Reader.prototype.read_compound = function (type) {\n    var limits = this.read_size_count(type.width);\n    return type.create(this.read_n(limits.count));\n};\n\ntypes.Reader.prototype.read_array = function (type) {\n    var limits = this.read_size_count(type.width);\n    var constructor = this.read_constructor();\n    return type.create(this.read_array_items(limits.count, get_type(constructor.typecode)), constructor.typecode, constructor.descriptor);\n};\n\ntypes.Reader.prototype.toString = function () {\n    var s = 'buffer@' + this.position;\n    if (this.position) s += ': ';\n    for (var i = this.position; i < this.buffer.length; i++) {\n        if (i > 0) s+= ',';\n        s += '0x' + Number(this.buffer[i]).toString(16);\n    }\n    return s;\n};\n\ntypes.Reader.prototype.reset = function () {\n    this.position = 0;\n};\n\ntypes.Reader.prototype.skip = function (bytes) {\n    this.position += bytes;\n};\n\ntypes.Reader.prototype.read_bytes = function (bytes) {\n    var current = this.position;\n    this.position += bytes;\n    return this.buffer.slice(current, this.position);\n};\n\ntypes.Reader.prototype.remaining = function () {\n    return this.buffer.length - this.position;\n};\n\ntypes.Writer = function (buffer) {\n    this.buffer = buffer ? buffer : util.allocate_buffer(1024);\n    this.position = 0;\n};\n\ntypes.Writer.prototype.toBuffer = function () {\n    return this.buffer.slice(0, this.position);\n};\n\nfunction max(a, b) {\n    return a > b ? a : b;\n}\n\ntypes.Writer.prototype.ensure = function (length) {\n    if (this.buffer.length < length) {\n        var bigger = util.allocate_buffer(max(this.buffer.length*2, length));\n        this.buffer.copy(bigger);\n        this.buffer = bigger;\n    }\n};\n\ntypes.Writer.prototype.write_typecode = function (code) {\n    this.write_uint(code, 1);\n};\n\ntypes.Writer.prototype.write_uint = function (value, width) {\n    var current = this.position;\n    this.ensure(this.position + width);\n    this.position += width;\n    if (width === 1) {\n        return this.buffer.writeUInt8(value, current);\n    } else if (width === 2) {\n        return this.buffer.writeUInt16BE(value, current);\n    } else if (width === 4) {\n        return this.buffer.writeUInt32BE(value, current);\n    } else {\n        throw new errors.TypeError('Unexpected width for uint ' + width);\n    }\n};\n\n\ntypes.Writer.prototype.write_fixed_width = function (type, value) {\n    var current = this.position;\n    this.ensure(this.position + type.width);\n    this.position += type.width;\n    if (type.write) {\n        type.write(this.buffer, value, current);\n    } else if (value.copy) {\n        value.copy(this.buffer, current);\n    } else {\n        throw new errors.TypeError('Cannot handle write for ' + type);\n    }\n};\n\ntypes.Writer.prototype.write_variable_width = function (type, value) {\n    var source = type.encoding ? Buffer.from(value, type.encoding) : Buffer.from(value);//TODO: avoid creating new buffers\n    this.write_uint(source.length, type.width);\n    this.write_bytes(source);\n};\n\ntypes.Writer.prototype.write_bytes = function (source) {\n    var current = this.position;\n    this.ensure(this.position + source.length);\n    this.position += source.length;\n    source.copy(this.buffer, current);\n};\n\ntypes.Writer.prototype.write_constructor = function (typecode, descriptor) {\n    if (descriptor) {\n        this.write_typecode(0x00);\n        this.write(descriptor);\n    }\n    this.write_typecode(typecode);\n};\n\ntypes.Writer.prototype.write = function (o) {\n    if (o.type === undefined) {\n        if (o.described) {\n            this.write(o.described());\n        } else {\n            throw new errors.TypeError('Cannot write ' + JSON.stringify(o));\n        }\n    } else {\n        this.write_constructor(o.type.typecode, o.descriptor);\n        this.write_value(o.type, o.value, o.array_constructor);\n    }\n};\n\ntypes.Writer.prototype.write_value = function (type, value, constructor/*for arrays only*/) {\n    if (type.width === 0) {\n        return;//nothing further to do\n    } else if (type.category === CAT_FIXED) {\n        this.write_fixed_width(type, value);\n    } else if (type.category === CAT_VARIABLE) {\n        this.write_variable_width(type, value);\n    } else if (type.category === CAT_COMPOUND) {\n        this.write_compound(type, value);\n    } else if (type.category === CAT_ARRAY) {\n        this.write_array(type, value, constructor);\n    } else {\n        throw new errors.TypeError('Invalid category ' + type.category + ' for type: ' + type);\n    }\n};\n\ntypes.Writer.prototype.backfill_size = function (width, saved) {\n    var gap = this.position - saved;\n    this.position = saved;\n    this.write_uint(gap - width, width);\n    this.position += (gap - width);\n};\n\ntypes.Writer.prototype.write_compound = function (type, value) {\n    var saved = this.position;\n    this.position += type.width;//skip size field\n    this.write_uint(value.length, type.width);//count field\n    for (var i = 0; i < value.length; i++) {\n        if (value[i] === undefined || value[i] === null) {\n            this.write(types.Null());\n        } else {\n            this.write(value[i]);\n        }\n    }\n    this.backfill_size(type.width, saved);\n};\n\ntypes.Writer.prototype.write_array = function (type, value, constructor) {\n    var saved = this.position;\n    this.position += type.width;//skip size field\n    this.write_uint(value.length, type.width);//count field\n    this.write_constructor(constructor.typecode, constructor.descriptor);\n    var ctype = get_type(constructor.typecode);\n    for (var i = 0; i < value.length; i++) {\n        this.write_value(ctype, value[i]);\n    }\n    this.backfill_size(type.width, saved);\n};\n\ntypes.Writer.prototype.toString = function () {\n    var s = 'buffer@' + this.position;\n    if (this.position) s += ': ';\n    for (var i = 0; i < this.position; i++) {\n        if (i > 0) s+= ',';\n        s += ('00' + Number(this.buffer[i]).toString(16)).slice(-2);\n    }\n    return s;\n};\n\ntypes.Writer.prototype.skip = function (bytes) {\n    this.ensure(this.position + bytes);\n    this.position += bytes;\n};\n\ntypes.Writer.prototype.clear = function () {\n    this.buffer.fill(0x00);\n    this.position = 0;\n};\n\ntypes.Writer.prototype.remaining = function () {\n    return this.buffer.length - this.position;\n};\n\n\nfunction get_constructor(typename) {\n    if (typename === 'symbol') {\n        return {typecode:types.Sym8.typecode};\n    }\n    throw new errors.TypeError('TODO: Array of type ' + typename + ' not yet supported');\n}\n\nfunction wrap_field(definition, instance) {\n    if (instance !== undefined && instance !== null) {\n        if (Array.isArray(instance)) {\n            if (!definition.multiple) {\n                throw new errors.TypeError('Field ' + definition.name + ' does not support multiple values, got ' + JSON.stringify(instance));\n            }\n            var constructor = get_constructor(definition.type);\n            return types.wrap_array(instance, constructor.typecode, constructor.descriptor);\n        } else if (definition.type === '*') {\n            return instance;\n        } else {\n            var wrapper = types['wrap_' + definition.type];\n            if (wrapper) {\n                return wrapper(instance);\n            } else {\n                throw new errors.TypeError('No wrapper for field ' + definition.name + ' of type ' + definition.type);\n            }\n        }\n    } else if (definition.mandatory) {\n        throw new errors.TypeError('Field ' + definition.name + ' is mandatory');\n    } else {\n        return types.Null();\n    }\n}\n\nfunction get_accessors(index, field_definition) {\n    var getter;\n    if (field_definition.type === '*') {\n        getter = function() { return this.value[index]; };\n    } else {\n        getter = function() { return types.unwrap(this.value[index]); };\n    }\n    var setter = function(o) { this.value[index] = wrap_field(field_definition, o); };\n    return {'get': getter, 'set': setter, 'enumerable':true, 'configurable':false};\n}\n\ntypes.define_composite = function(def) {\n    var c = function(fields) {\n        this.value = fields ? fields : [];\n    };\n    c.descriptor = {\n        numeric: def.code,\n        symbolic: 'amqp:' + def.name + ':list'\n    };\n    c.prototype.dispatch = function (target, frame) {\n        target['on_' + def.name](frame);\n    };\n    //c.prototype.descriptor = c.descriptor.numeric;\n    //c.prototype = Object.create(types.List8.prototype);\n    for (var i = 0; i < def.fields.length; i++) {\n        var f = def.fields[i];\n        Object.defineProperty(c.prototype, f.name, get_accessors(i, f));\n    }\n    c.toString = function() {\n        return def.name + '#' + Number(def.code).toString(16);\n    };\n    c.prototype.toJSON = function() {\n        var o = {};\n        for (var f in this) {\n            if (f !== 'value' && this[f]) {\n                o[f] = this[f];\n            }\n        }\n        return o;\n    };\n    c.create = function(fields) {\n        var o = new c;\n        for (var f in fields) {\n            o[f] = fields[f];\n        }\n        return o;\n    };\n    c.prototype.described = function() {\n        return types.described_nc(types.wrap_ulong(c.descriptor.numeric), types.wrap_list(this.value));\n    };\n    return c;\n};\n\nfunction add_type(def) {\n    var c = types.define_composite(def);\n    types['wrap_' + def.name] = function (fields) {\n        return c.create(fields).described();\n    };\n    by_descriptor[Number(c.descriptor.numeric).toString(10)] = c;\n    by_descriptor[c.descriptor.symbolic] = c;\n}\n\nadd_type({\n    name: 'error',\n    code: 0x1d,\n    fields: [\n        {name:'condition', type:'symbol', mandatory:true},\n        {name:'description', type:'string'},\n        {name:'info', type:'map'}\n    ]\n});\n\nmodule.exports = types;\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar types = require('./types.js');\nvar errors = require('./errors.js');\n\nvar frames = {};\nvar by_descriptor = {};\n\nframes.read_header = function(buffer) {\n    var offset = 4;\n    var header = {};\n    var name = buffer.toString('ascii', 0, offset);\n    if (name !== 'AMQP') {\n        // output name in hex (null-bytes can be tough to deal with in ascii)\n        throw new errors.ProtocolError('Invalid protocol header for AMQP: ' + buffer.toString('hex', 0, offset));\n    }\n    header.protocol_id = buffer.readUInt8(offset++);\n    header.major = buffer.readUInt8(offset++);\n    header.minor = buffer.readUInt8(offset++);\n    header.revision = buffer.readUInt8(offset++);\n    //the protocol header is interpreted in different ways for\n    //different versions(!); check some special cases to give clearer\n    //error messages:\n    if (header.protocol_id === 0 && header.major === 0 && header.minor === 9 && header.revision === 1) {\n        throw new errors.ProtocolError('Unsupported AMQP version: 0-9-1');\n    }\n    if (header.protocol_id === 1 && header.major === 1 && header.minor === 0 && header.revision === 10) {\n        throw new errors.ProtocolError('Unsupported AMQP version: 0-10');\n    }\n    if (header.major !== 1 || header.minor !== 0) {\n        throw new errors.ProtocolError('Unsupported AMQP version: ' + JSON.stringify(header));\n    }\n    return header;\n};\nframes.write_header = function(buffer, header) {\n    var offset = 4;\n    buffer.write('AMQP', 0, offset, 'ascii');\n    buffer.writeUInt8(header.protocol_id, offset++);\n    buffer.writeUInt8(header.major, offset++);\n    buffer.writeUInt8(header.minor, offset++);\n    buffer.writeUInt8(header.revision, offset++);\n    return 8;\n};\n//todo: define enumeration for frame types\nframes.TYPE_AMQP = 0x00;\nframes.TYPE_SASL = 0x01;\n\nframes.read_frame = function(buffer) {\n    var reader = new types.Reader(buffer);\n    var frame = {};\n    frame.size = reader.read_uint(4);\n    if (reader.remaining() < (frame.size-4)) {\n        return null;\n    }\n    var doff = reader.read_uint(1);\n    if (doff < 2) {\n        throw new errors.ProtocolError('Invalid data offset, must be at least 2 was ' + doff);\n    }\n    frame.type = reader.read_uint(1);\n    if (frame.type === frames.TYPE_AMQP) {\n        frame.channel = reader.read_uint(2);\n    } else if (frame.type === frames.TYPE_SASL) {\n        reader.skip(2);\n        frame.channel = 0;\n    } else {\n        throw new errors.ProtocolError('Unknown frame type ' + frame.type);\n    }\n    if (doff > 1) {\n        //ignore any extended header\n        reader.skip(doff * 4 - 8);\n    }\n    if (reader.remaining()) {\n        frame.performative = reader.read();\n        var c = by_descriptor[frame.performative.descriptor.value];\n        if (c) {\n            frame.performative = new c(frame.performative.value);\n        }\n        if (reader.remaining()) {\n            frame.payload = reader.read_bytes(reader.remaining());\n        }\n    }\n    return frame;\n};\n\nframes.write_frame = function(frame) {\n    var writer = new types.Writer();\n    writer.skip(4);//skip size until we know how much we have written\n    writer.write_uint(2, 1);//doff\n    writer.write_uint(frame.type, 1);\n    if (frame.type === frames.TYPE_AMQP) {\n        writer.write_uint(frame.channel, 2);\n    } else if (frame.type === frames.TYPE_SASL) {\n        writer.write_uint(0, 2);\n    } else {\n        throw new errors.ProtocolError('Unknown frame type ' + frame.type);\n    }\n    if (frame.performative) {\n        writer.write(frame.performative);\n        if (frame.payload) {\n            writer.write_bytes(frame.payload);\n        }\n    }\n    var buffer = writer.toBuffer();\n    buffer.writeUInt32BE(buffer.length, 0);//fill in the size\n    return buffer;\n};\n\nframes.amqp_frame = function(channel, performative, payload) {\n    return {'channel': channel || 0, 'type': frames.TYPE_AMQP, 'performative': performative, 'payload': payload};\n};\nframes.sasl_frame = function(performative) {\n    return {'channel': 0, 'type': frames.TYPE_SASL, 'performative': performative};\n};\n\nfunction define_frame(type, def) {\n    var c = types.define_composite(def);\n    frames[def.name] = c.create;\n    by_descriptor[Number(c.descriptor.numeric).toString(10)] = c;\n    by_descriptor[c.descriptor.symbolic] = c;\n}\n\nvar open = {\n    name: 'open',\n    code: 0x10,\n    fields: [\n        {name: 'container_id', type: 'string', mandatory: true},\n        {name: 'hostname', type: 'string'},\n        {name: 'max_frame_size', type: 'uint', default_value: 4294967295},\n        {name: 'channel_max', type: 'ushort', default_value: 65535},\n        {name: 'idle_time_out', type: 'uint'},\n        {name: 'outgoing_locales', type: 'symbol', multiple: true},\n        {name: 'incoming_locales', type: 'symbol', multiple: true},\n        {name: 'offered_capabilities', type: 'symbol', multiple: true},\n        {name: 'desired_capabilities', type: 'symbol', multiple: true},\n        {name: 'properties', type: 'symbolic_map'}\n    ]\n};\n\nvar begin = {\n    name: 'begin',\n    code: 0x11,\n    fields:[\n        {name: 'remote_channel', type: 'ushort'},\n        {name: 'next_outgoing_id', type: 'uint', mandatory: true},\n        {name: 'incoming_window', type: 'uint', mandatory: true},\n        {name: 'outgoing_window', type: 'uint', mandatory: true},\n        {name: 'handle_max', type: 'uint', default_value: '4294967295'},\n        {name: 'offered_capabilities', type: 'symbol', multiple: true},\n        {name: 'desired_capabilities', type: 'symbol', multiple: true},\n        {name: 'properties', type: 'symbolic_map'}\n    ]\n};\n\nvar attach = {\n    name: 'attach',\n    code: 0x12,\n    fields:[\n        {name: 'name', type: 'string', mandatory: true},\n        {name: 'handle', type: 'uint', mandatory: true},\n        {name: 'role', type: 'boolean', mandatory: true},\n        {name: 'snd_settle_mode', type: 'ubyte', default_value: 2},\n        {name: 'rcv_settle_mode', type: 'ubyte', default_value: 0},\n        {name: 'source', type: '*'},\n        {name: 'target', type: '*'},\n        {name: 'unsettled', type: 'map'},\n        {name: 'incomplete_unsettled', type: 'boolean', default_value: false},\n        {name: 'initial_delivery_count', type: 'uint'},\n        {name: 'max_message_size', type: 'ulong'},\n        {name: 'offered_capabilities', type: 'symbol', multiple: true},\n        {name: 'desired_capabilities', type: 'symbol', multiple: true},\n        {name: 'properties', type: 'symbolic_map'}\n    ]\n};\n\nvar flow = {\n    name: 'flow',\n    code: 0x13,\n    fields:[\n        {name: 'next_incoming_id', type: 'uint'},\n        {name: 'incoming_window', type: 'uint', mandatory: true},\n        {name: 'next_outgoing_id', type: 'uint', mandatory: true},\n        {name: 'outgoing_window', type: 'uint', mandatory: true},\n        {name: 'handle', type: 'uint'},\n        {name: 'delivery_count', type: 'uint'},\n        {name: 'link_credit', type: 'uint'},\n        {name: 'available', type: 'uint'},\n        {name: 'drain', type: 'boolean', default_value: false},\n        {name: 'echo', type: 'boolean', default_value: false},\n        {name: 'properties', type: 'symbolic_map'}\n    ]\n};\n\nvar transfer = {\n    name: 'transfer',\n    code: 0x14,\n    fields:[\n        {name: 'handle', type: 'uint', mandatory: true},\n        {name: 'delivery_id', type: 'uint'},\n        {name: 'delivery_tag', type: 'binary'},\n        {name: 'message_format', type: 'uint'},\n        {name: 'settled', type: 'boolean'},\n        {name: 'more', type: 'boolean', default_value: false},\n        {name: 'rcv_settle_mode', type: 'ubyte'},\n        {name: 'state', type: 'delivery_state'},\n        {name: 'resume', type: 'boolean', default_value: false},\n        {name: 'aborted', type: 'boolean', default_value: false},\n        {name: 'batchable', type: 'boolean', default_value: false}\n    ]\n};\n\nvar disposition = {\n    name: 'disposition',\n    code: 0x15,\n    fields:[\n        {name: 'role', type: 'boolean', mandatory: true},\n        {name: 'first', type: 'uint', mandatory: true},\n        {name: 'last', type: 'uint'},\n        {name: 'settled', type: 'boolean', default_value: false},\n        {name: 'state', type: '*'},\n        {name: 'batchable', type: 'boolean', default_value: false}\n    ]\n};\n\nvar detach = {\n    name: 'detach',\n    code: 0x16,\n    fields: [\n        {name: 'handle', type: 'uint', mandatory: true},\n        {name: 'closed', type: 'boolean', default_value: false},\n        {name: 'error', type: 'error'}\n    ]\n};\n\nvar end = {\n    name: 'end',\n    code: 0x17,\n    fields: [\n        {name: 'error', type: 'error'}\n    ]\n};\n\nvar close = {\n    name: 'close',\n    code: 0x18,\n    fields: [\n        {name: 'error', type: 'error'}\n    ]\n};\n\ndefine_frame(frames.TYPE_AMQP, open);\ndefine_frame(frames.TYPE_AMQP, begin);\ndefine_frame(frames.TYPE_AMQP, attach);\ndefine_frame(frames.TYPE_AMQP, flow);\ndefine_frame(frames.TYPE_AMQP, transfer);\ndefine_frame(frames.TYPE_AMQP, disposition);\ndefine_frame(frames.TYPE_AMQP, detach);\ndefine_frame(frames.TYPE_AMQP, end);\ndefine_frame(frames.TYPE_AMQP, close);\n\nvar sasl_mechanisms = {\n    name: 'sasl_mechanisms',\n    code: 0x40,\n    fields: [\n        {name: 'sasl_server_mechanisms', type: 'symbol', multiple: true, mandatory: true}\n    ]\n};\n\nvar sasl_init = {\n    name: 'sasl_init',\n    code: 0x41,\n    fields: [\n        {name: 'mechanism', type: 'symbol', mandatory: true},\n        {name: 'initial_response', type: 'binary'},\n        {name: 'hostname', type: 'string'}\n    ]\n};\n\nvar sasl_challenge = {\n    name: 'sasl_challenge',\n    code: 0x42,\n    fields: [\n        {name: 'challenge', type: 'binary', mandatory: true}\n    ]\n};\n\nvar sasl_response = {\n    name: 'sasl_response',\n    code: 0x43,\n    fields: [\n        {name: 'response', type: 'binary', mandatory: true}\n    ]\n};\n\nvar sasl_outcome = {\n    name: 'sasl_outcome',\n    code: 0x44,\n    fields: [\n        {name: 'code', type: 'ubyte', mandatory: true},\n        {name: 'additional_data', type: 'binary'}\n    ]\n};\n\ndefine_frame(frames.TYPE_SASL, sasl_mechanisms);\ndefine_frame(frames.TYPE_SASL, sasl_init);\ndefine_frame(frames.TYPE_SASL, sasl_challenge);\ndefine_frame(frames.TYPE_SASL, sasl_response);\ndefine_frame(frames.TYPE_SASL, sasl_outcome);\n\nmodule.exports = frames;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar debug = require('debug');\n\nif (debug.formatters) {\n    debug.formatters.h = function (v) {\n        return v.toString('hex');\n    };\n}\n\nmodule.exports = {\n    'config' : debug('rhea:config'),\n    'frames' : debug('rhea:frames'),\n    'raw' : debug('rhea:raw'),\n    'reconnect' : debug('rhea:reconnect'),\n    'events' : debug('rhea:events'),\n    'message' : debug('rhea:message'),\n    'flow' : debug('rhea:flow'),\n    'io' : debug('rhea:io')\n};\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\nvar frames = require('./frames.js');\nvar log = require('./log.js');\nvar util = require('./util.js');\n\n\nvar Transport = function (identifier, protocol_id, frame_type, handler) {\n    this.identifier = identifier;\n    this.protocol_id = protocol_id;\n    this.frame_type = frame_type;\n    this.handler = handler;\n    this.pending = [];\n    this.header_sent = undefined;\n    this.header_received = undefined;\n    this.write_complete = false;\n    this.read_complete = false;\n};\n\nTransport.prototype.has_writes_pending = function () {\n    return this.pending.length > 0 || !this.header_sent;\n};\n\nTransport.prototype.encode = function (frame) {\n    this.pending.push(frame);\n};\n\nTransport.prototype.write = function (socket) {\n    if (!this.header_sent) {\n        var buffer = util.allocate_buffer(8);\n        var header = {protocol_id:this.protocol_id, major:1, minor:0, revision:0};\n        log.frames('[%s] -> %o', this.identifier, header);\n        frames.write_header(buffer, header);\n        socket.write(buffer);\n        this.header_sent = header;\n    }\n    for (var i = 0; i < this.pending.length; i++) {\n        var frame = this.pending[i];\n        var buffer = frames.write_frame(frame);\n        socket.write(buffer);\n        if (frame.performative) {\n            log.frames('[%s]:%s -> %s %j', this.identifier, frame.channel, frame.performative.constructor, frame.performative, frame.payload || '');\n        } else {\n            log.frames('[%s]:%s -> empty', this.identifier, frame.channel);\n        }\n        log.raw('[%s] SENT: %d %h', this.identifier, buffer.length, buffer);\n    }\n    this.pending = [];\n};\n\nTransport.prototype.peek_size = function (buffer) {\n    log.frames('[%s] peek_size %o, %d', this.identifier, this.header_received, buffer.length);\n    if (this.header_received && buffer.length >= 4) {\n        return buffer.readUInt32BE();\n    }\n    return undefined;\n};\n\nTransport.prototype.read = function (buffer) {\n    var offset = 0;\n    if (!this.header_received) {\n        if (buffer.length < 8) {\n            return offset;\n        } else {\n            this.header_received = frames.read_header(buffer);\n            log.frames('[%s] <- %o', this.identifier, this.header_received);\n            if (this.header_received.protocol_id !== this.protocol_id) {\n                if (this.protocol_id === 3 && this.header_received.protocol_id === 0) {\n                    throw new errors.ProtocolError('Expecting SASL layer');\n                } else if (this.protocol_id === 0 && this.header_received.protocol_id === 3) {\n                    throw new errors.ProtocolError('SASL layer not enabled');\n                } else {\n                    throw new errors.ProtocolError('Invalid AMQP protocol id ' + this.header_received.protocol_id + ' expecting: ' + this.protocol_id);\n                }\n            }\n            offset = 8;\n        }\n    }\n    while (offset < (buffer.length - 4) && !this.read_complete) {\n        var frame_size = buffer.readUInt32BE(offset);\n        log.io('[%s] got frame of size %d', this.identifier, frame_size);\n        if (buffer.length < offset + frame_size) {\n            log.io('[%s] incomplete frame; have only %d of %d', this.identifier, (buffer.length - offset), frame_size);\n            //don't have enough data for a full frame yet\n            break;\n        } else {\n            var slice = buffer.slice(offset, offset + frame_size);\n            log.raw('[%s] RECV: %d %h', this.identifier, slice.length, slice);\n            var frame = frames.read_frame(slice);\n            if (frame.performative) {\n                log.frames('[%s]:%s <- %s %j', this.identifier, frame.channel, frame.performative.constructor, frame.performative, frame.payload || '');\n            } else {\n                log.frames('[%s]:%s <- empty', this.identifier, frame.channel);\n\n            }\n            if (frame.type !== this.frame_type) {\n                throw new errors.ProtocolError('Invalid frame type: ' + frame.type);\n            }\n            offset += frame_size;\n            if (frame.performative) {\n                frame.performative.dispatch(this.handler, frame);\n            }\n        }\n    }\n    return offset;\n};\n\nmodule.exports = Transport;\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\nvar frames = require('./frames.js');\nvar Transport = require('./transport.js');\nvar util = require('./util.js');\n\nvar sasl_codes = {\n    'OK':0,\n    'AUTH':1,\n    'SYS':2,\n    'SYS_PERM':3,\n    'SYS_TEMP':4,\n};\n\nvar SASL_PROTOCOL_ID = 0x03;\n\nfunction extract(buffer) {\n    var results = [];\n    var start = 0;\n    var i = 0;\n    while (i < buffer.length) {\n        if (buffer[i] === 0x00) {\n            if (i > start) results.push(buffer.toString('utf8', start, i));\n            else results.push(null);\n            start = ++i;\n        } else {\n            ++i;\n        }\n    }\n    if (i > start) results.push(buffer.toString('utf8', start, i));\n    else results.push(null);\n    return results;\n}\n\nvar PlainServer = function(callback) {\n    this.callback = callback;\n    this.outcome = undefined;\n    this.username = undefined;\n};\n\nPlainServer.prototype.start = function(response, hostname) {\n    var fields = extract(response);\n    if (fields.length !== 3) {\n        return Promise.reject('Unexpected response in PLAIN, got ' + fields.length + ' fields, expected 3');\n    }\n    var self = this;\n    return Promise.resolve(this.callback(fields[1], fields[2], hostname))\n        .then(function (result) {\n            if (result) {\n                self.outcome = true;\n                self.username = fields[1];\n            } else {\n                self.outcome = false;\n            }\n        });\n};\n\nvar PlainClient = function(username, password) {\n    this.username = username;\n    this.password = password;\n};\n\nPlainClient.prototype.start = function(callback) {\n    var response = util.allocate_buffer(1 + this.username.length + 1 + this.password.length);\n    response.writeUInt8(0, 0);\n    response.write(this.username, 1);\n    response.writeUInt8(0, 1 + this.username.length);\n    response.write(this.password, 1 + this.username.length + 1);\n    callback(undefined, response);\n};\n\nvar AnonymousServer = function() {\n    this.outcome = undefined;\n    this.username = undefined;\n};\n\nAnonymousServer.prototype.start = function(response) {\n    this.outcome = true;\n    this.username = response ? response.toString('utf8') : 'anonymous';\n};\n\nvar AnonymousClient = function(name) {\n    this.username = name ? name : 'anonymous';\n};\n\nAnonymousClient.prototype.start = function(callback) {\n    var response = util.allocate_buffer(1 + this.username.length);\n    response.writeUInt8(0, 0);\n    response.write(this.username, 1);\n    callback(undefined, response);\n};\n\nvar ExternalServer = function() {\n    this.outcome = undefined;\n    this.username = undefined;\n};\n\nExternalServer.prototype.start = function() {\n    this.outcome = true;\n};\n\nvar ExternalClient = function() {\n    this.username = undefined;\n};\n\nExternalClient.prototype.start = function(callback) {\n    callback(undefined, '');\n};\n\nExternalClient.prototype.step = function(callback) {\n    callback(undefined, '');\n};\n\nvar XOAuth2Client = function(username, token) {\n    this.username = username;\n    this.token = token;\n};\n\nXOAuth2Client.prototype.start = function(callback) {\n    var response = util.allocate_buffer(this.username.length + this.token.length + 5 + 12 + 3);\n    var count = 0;\n    response.write('user=', count);\n    count += 5;\n    response.write(this.username, count);\n    count += this.username.length;\n    response.writeUInt8(1, count);\n    count += 1;\n    response.write('auth=Bearer ', count);\n    count += 12;\n    response.write(this.token, count);\n    count += this.token.length;\n    response.writeUInt8(1, count);\n    count += 1;\n    response.writeUInt8(1, count);\n    count += 1;\n    callback(undefined, response);\n};\n\n/**\n * The mechanisms argument is a map of mechanism names to factory\n * functions for objects that implement that mechanism.\n */\nvar SaslServer = function (connection, mechanisms) {\n    this.connection = connection;\n    this.transport = new Transport(connection.amqp_transport.identifier, SASL_PROTOCOL_ID, frames.TYPE_SASL, this);\n    this.next = connection.amqp_transport;\n    this.mechanisms = mechanisms;\n    this.mechanism = undefined;\n    this.outcome = undefined;\n    this.username = undefined;\n    var mechlist = Object.getOwnPropertyNames(mechanisms);\n    this.transport.encode(frames.sasl_frame(frames.sasl_mechanisms({sasl_server_mechanisms:mechlist})));\n};\n\nSaslServer.prototype.do_step = function (challenge) {\n    if (this.mechanism.outcome === undefined) {\n        this.transport.encode(frames.sasl_frame(frames.sasl_challenge({'challenge':challenge})));\n        this.connection.output();\n    } else {\n        this.outcome = this.mechanism.outcome ? sasl_codes.OK : sasl_codes.AUTH;\n        var frame = frames.sasl_frame(frames.sasl_outcome({code: this.outcome}));\n        this.transport.encode(frame);\n        this.connection.output();\n        if (this.outcome === sasl_codes.OK) {\n            this.username = this.mechanism.username;\n            this.transport.write_complete = true;\n            this.transport.read_complete = true;\n        }\n    }\n};\n\nSaslServer.prototype.on_sasl_init = function (frame) {\n    var saslctor = this.mechanisms[frame.performative.mechanism];\n    if (saslctor) {\n        this.mechanism = saslctor();\n        Promise.resolve(this.mechanism.start(frame.performative.initial_response, frame.performative.hostname))\n            .then(this.do_step.bind(this))\n            .catch(this.do_fail.bind(this));\n    } else {\n        this.outcome = sasl_codes.AUTH;\n        this.transport.encode(frames.sasl_frame(frames.sasl_outcome({code: this.outcome})));\n    }\n};\n\nSaslServer.prototype.on_sasl_response = function (frame) {\n    Promise.resolve(this.mechanism.step(frame.performative.response))\n        .then(this.do_step.bind(this))\n        .catch(this.do_fail.bind(this));\n};\n\nSaslServer.prototype.do_fail = function (e) {\n    var frame = frames.sasl_frame(frames.sasl_outcome({code: sasl_codes.SYS}));\n    this.transport.encode(frame);\n    this.connection.output();\n    try {\n        this.connection.sasl_failed('Sasl callback promise failed with ' + e, 'amqp:internal-error');\n    } catch (e) {\n        console.error('Uncaught error: ', e.message);\n    }\n};\n\nSaslServer.prototype.has_writes_pending = function () {\n    return this.transport.has_writes_pending() || this.next.has_writes_pending();\n};\n\nSaslServer.prototype.write = function (socket) {\n    if (this.transport.write_complete && this.transport.pending.length === 0) {\n        return this.next.write(socket);\n    } else {\n        return this.transport.write(socket);\n    }\n};\n\nSaslServer.prototype.peek_size = function (buffer) {\n    if (this.transport.read_complete) {\n        return this.next.peek_size(buffer);\n    } else {\n        return this.transport.peek_size(buffer);\n    }\n};\n\nSaslServer.prototype.read = function (buffer) {\n    if (this.transport.read_complete) {\n        return this.next.read(buffer);\n    } else {\n        return this.transport.read(buffer);\n    }\n};\n\nvar SaslClient = function (connection, mechanisms, hostname) {\n    this.connection = connection;\n    this.transport = new Transport(connection.amqp_transport.identifier, SASL_PROTOCOL_ID, frames.TYPE_SASL, this);\n    this.next = connection.amqp_transport;\n    this.mechanisms = mechanisms;\n    this.mechanism = undefined;\n    this.mechanism_name = undefined;\n    this.hostname = hostname;\n    this.failed = false;\n};\n\nSaslClient.prototype.on_sasl_mechanisms = function (frame) {\n    var offered_mechanisms = [];\n    if (Array.isArray(frame.performative.sasl_server_mechanisms)) {\n        offered_mechanisms = frame.performative.sasl_server_mechanisms;\n    } else if (frame.performative.sasl_server_mechanisms) {\n        offered_mechanisms = [frame.performative.sasl_server_mechanisms];\n    }\n    for (var i = 0; this.mechanism === undefined && i < offered_mechanisms.length; i++) {\n        var mech = offered_mechanisms[i];\n        var f = this.mechanisms[mech];\n        if (f) {\n            this.mechanism = typeof f === 'function' ? f() : f;\n            this.mechanism_name = mech;\n        }\n    }\n    if (this.mechanism) {\n        var self = this;\n        this.mechanism.start(function (err, response) {\n            if (err) {\n                self.failed = true;\n                self.connection.sasl_failed('SASL mechanism init failed: ' + err);\n            } else {\n                var init = {'mechanism':self.mechanism_name,'initial_response':response};\n                if (self.hostname) {\n                    init.hostname = self.hostname;\n                }\n                self.transport.encode(frames.sasl_frame(frames.sasl_init(init)));\n                self.connection.output();\n            }\n        });\n    } else {\n        this.failed = true;\n        this.connection.sasl_failed('No suitable mechanism; server supports ' + frame.performative.sasl_server_mechanisms);\n    }\n};\nSaslClient.prototype.on_sasl_challenge = function (frame) {\n    var self = this;\n    this.mechanism.step(frame.performative.challenge, function (err, response) {\n        if (err) {\n            self.failed = true;\n            self.connection.sasl_failed('SASL mechanism challenge failed: ' + err);\n        } else {\n            self.transport.encode(frames.sasl_frame(frames.sasl_response({'response':response})));\n            self.connection.output();\n        }\n    });\n};\nSaslClient.prototype.on_sasl_outcome = function (frame) {\n    switch (frame.performative.code) {\n    case sasl_codes.OK:\n        this.transport.read_complete = true;\n        this.transport.write_complete = true;\n        break;\n    case sasl_codes.SYS:\n    case sasl_codes.SYS_PERM:\n    case sasl_codes.SYS_TEMP:\n        this.transport.write_complete = true;\n        this.connection.sasl_failed('Failed to authenticate: ' + frame.performative.code, 'amqp:internal-error');\n        break;\n    default:\n        this.transport.write_complete = true;\n        this.connection.sasl_failed('Failed to authenticate: ' + frame.performative.code);\n    }\n};\n\nSaslClient.prototype.has_writes_pending = function () {\n    return this.transport.has_writes_pending() || this.next.has_writes_pending();\n};\n\nSaslClient.prototype.write = function (socket) {\n    if (this.transport.write_complete) {\n        return this.next.write(socket);\n    } else {\n        return this.transport.write(socket);\n    }\n};\n\nSaslClient.prototype.peek_size = function (buffer) {\n    if (this.transport.read_complete) {\n        return this.next.peek_size(buffer);\n    } else {\n        return this.transport.peek_size(buffer);\n    }\n};\n\nSaslClient.prototype.read = function (buffer) {\n    if (this.transport.read_complete) {\n        return this.next.read(buffer);\n    } else {\n        return this.transport.read(buffer);\n    }\n};\n\nvar SelectiveServer = function (connection, mechanisms) {\n    this.header_received = false;\n    this.transports = {\n        0: connection.amqp_transport,\n        3: new SaslServer(connection, mechanisms)\n    };\n    this.selected = undefined;\n};\n\nSelectiveServer.prototype.has_writes_pending = function () {\n    return this.header_received && this.selected.has_writes_pending();\n};\n\nSelectiveServer.prototype.write = function (socket) {\n    if (this.selected) {\n        return this.selected.write(socket);\n    } else {\n        return 0;\n    }\n};\n\nSelectiveServer.prototype.peek_size = function (buffer) {\n    if (this.header_received) {\n        return this.selected.peek_size(buffer);\n    }\n    return undefined;\n};\n\nSelectiveServer.prototype.read = function (buffer) {\n    if (!this.header_received) {\n        if (buffer.length < 8) {\n            return 0;\n        } else {\n            this.header_received = frames.read_header(buffer);\n            this.selected = this.transports[this.header_received.protocol_id];\n            if (this.selected === undefined) {\n                throw new errors.ProtocolError('Invalid AMQP protocol id ' + this.header_received.protocol_id);\n            }\n        }\n    }\n    return this.selected.read(buffer);\n};\n\nvar default_server_mechanisms = {\n    enable_anonymous: function () {\n        this['ANONYMOUS'] = function() { return new AnonymousServer(); };\n    },\n    enable_plain: function (callback) {\n        this['PLAIN'] = function() { return new PlainServer(callback); };\n    }\n};\n\nvar default_client_mechanisms = {\n    enable_anonymous: function (name) {\n        this['ANONYMOUS'] = function() { return new AnonymousClient(name); };\n    },\n    enable_plain: function (username, password) {\n        this['PLAIN'] = function() { return new PlainClient(username, password); };\n    },\n    enable_external: function () {\n        this['EXTERNAL'] = function() { return new ExternalClient(); };\n    },\n    enable_xoauth2: function (username, token) {\n        if (username && token) {\n            this['XOAUTH2'] = function() { return new XOAuth2Client(username, token); };\n        } else if (token === undefined) {\n            throw Error('token must be specified');\n        } else if (username === undefined) {\n            throw Error('username must be specified');\n        }\n    }\n};\n\nmodule.exports = {\n    Client : SaslClient,\n    Server : SaslServer,\n    Selective: SelectiveServer,\n    server_mechanisms : function () {\n        return Object.create(default_server_mechanisms);\n    },\n    client_mechanisms : function () {\n        return Object.create(default_client_mechanisms);\n    },\n    server_add_external: function (mechs) {\n        mechs['EXTERNAL'] = function() { return new ExternalServer(); };\n        return mechs;\n    }\n};\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar EndpointState = function () {\n    this.init();\n};\n\nEndpointState.prototype.init = function () {\n    this.local_open = false;\n    this.remote_open = false;\n    this.open_requests = 0;\n    this.close_requests = 0;\n    this.initialised = false;\n    this.marker = undefined;\n};\n\nEndpointState.prototype.mark = function (o) {\n    this.marker = o || Date.now();\n    return this.marker;\n};\n\nEndpointState.prototype.open = function () {\n    this.marker = undefined;\n    this.initialised = true;\n    if (!this.local_open) {\n        this.local_open = true;\n        this.open_requests++;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.close = function () {\n    this.marker = undefined;\n    if (this.local_open) {\n        this.local_open = false;\n        this.close_requests++;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.disconnected = function () {\n    var was_initialised = this.initialised;\n    this.was_open = this.local_open;\n    this.init();\n    this.initialised = was_initialised;\n};\n\nEndpointState.prototype.reconnect = function () {\n    if (this.was_open) {\n        this.open();\n        this.was_open = undefined;\n    }\n};\n\nEndpointState.prototype.remote_opened = function () {\n    if (!this.remote_open) {\n        this.remote_open = true;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.remote_closed = function () {\n    if (this.remote_open) {\n        this.remote_open = false;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.is_open = function () {\n    return this.local_open && this.remote_open;\n};\n\nEndpointState.prototype.is_closed = function () {\n    return this.initialised && !(this.local_open || this.was_open) && !this.remote_open;\n};\n\nEndpointState.prototype.has_settled = function () {\n    return this.open_requests === 0 && this.close_requests === 0;\n};\n\nEndpointState.prototype.need_open = function () {\n    if (this.open_requests > 0) {\n        this.open_requests--;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nEndpointState.prototype.need_close = function () {\n    if (this.close_requests > 0) {\n        this.close_requests--;\n        return true;\n    } else {\n        return false;\n    }\n};\n\nmodule.exports = EndpointState;\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar log = require('./log.js');\nvar types = require('./types.js');\n\nvar by_descriptor = {};\nvar unwrappers = {};\nvar wrappers = [];\nvar message = {};\n\nfunction define_section(descriptor, unwrap, wrap) {\n    unwrap.descriptor = descriptor;\n    unwrappers[descriptor.symbolic] = unwrap;\n    unwrappers[Number(descriptor.numeric).toString(10)] = unwrap;\n    if (wrap) {\n        wrappers.push(wrap);\n    }\n}\n\nfunction define_composite_section(def) {\n    var c = types.define_composite(def);\n    message[def.name] = c.create;\n    by_descriptor[Number(c.descriptor.numeric).toString(10)] = c;\n    by_descriptor[c.descriptor.symbolic] = c;\n\n    var unwrap = function (msg, section) {\n        var composite = new c(section.value);\n        for (var i = 0; i < def.fields.length; i++) {\n            var f = def.fields[i];\n            var v = composite[f.name];\n            if (v !== undefined && v !== null) {\n                msg[f.name] = v;\n            }\n        }\n    };\n\n    var wrap = function (sections, msg) {\n        sections.push(c.create(msg).described());\n    };\n    define_section(c.descriptor, unwrap, wrap);\n}\n\n\nfunction define_map_section(def, symbolic) {\n    var wrapper = symbolic ? types.wrap_symbolic_map : types.wrap_map;\n    var descriptor = {numeric:def.code};\n    descriptor.symbolic = 'amqp:' + def.name.replace(/_/g, '-') + ':map';\n    var unwrap = function (msg, section) {\n        msg[def.name] = types.unwrap_map_simple(section);\n    };\n    var wrap = function (sections, msg) {\n        if (msg[def.name]) {\n            sections.push(types.described_nc(types.wrap_ulong(descriptor.numeric), wrapper(msg[def.name])));\n        }\n    };\n    define_section(descriptor, unwrap, wrap);\n}\n\nfunction Section(typecode, content, multiple) {\n    this.typecode = typecode;\n    this.content = content;\n    this.multiple = multiple;\n}\n\nSection.prototype.described = function (item) {\n    return types.described(types.wrap_ulong(this.typecode), types.wrap(item || this.content));\n};\n\nSection.prototype.collect_sections = function (sections) {\n    if (this.multiple) {\n        for (var i = 0; i < this.content.length; i++) {\n            sections.push(this.described(this.content[i]));\n        }\n    } else {\n        sections.push(this.described());\n    }\n};\n\ndefine_composite_section({\n    name:'header',\n    code:0x70,\n    fields:[\n        {name:'durable', type:'boolean', default_value:false},\n        {name:'priority', type:'ubyte', default_value:4},\n        {name:'ttl', type:'uint'},\n        {name:'first_acquirer', type:'boolean', default_value:false},\n        {name:'delivery_count', type:'uint', default_value:0}\n    ]\n});\ndefine_map_section({name:'delivery_annotations', code:0x71}, true);\ndefine_map_section({name:'message_annotations', code:0x72}, true);\ndefine_composite_section({\n    name:'properties',\n    code:0x73,\n    fields:[\n        {name:'message_id', type:'message_id'},\n        {name:'user_id', type:'binary'},\n        {name:'to', type:'string'},\n        {name:'subject', type:'string'},\n        {name:'reply_to', type:'string'},\n        {name:'correlation_id', type:'message_id'},\n        {name:'content_type', type:'symbol'},\n        {name:'content_encoding', type:'symbol'},\n        {name:'absolute_expiry_time', type:'timestamp'},\n        {name:'creation_time', type:'timestamp'},\n        {name:'group_id', type:'string'},\n        {name:'group_sequence', type:'uint'},\n        {name:'reply_to_group_id', type:'string'}\n    ]\n});\ndefine_map_section({name:'application_properties', code:0x74});\n\nfunction unwrap_body_section (msg, section, typecode) {\n    if (msg.body === undefined) {\n        msg.body = new Section(typecode, types.unwrap(section));\n    } else if (msg.body.constructor === Section && msg.body.typecode === typecode) {\n        if (msg.body.multiple) {\n            msg.body.content.push(types.unwrap(section));\n        } else {\n            msg.body.multiple = true;\n            msg.body.content = [msg.body.content, types.unwrap(section)];\n        }\n    }\n}\n\ndefine_section({numeric:0x75, symbolic:'amqp:data:binary'}, function (msg, section) { unwrap_body_section(msg, section, 0x75); });\ndefine_section({numeric:0x76, symbolic:'amqp:amqp-sequence:list'}, function (msg, section) { unwrap_body_section(msg, section, 0x76); });\ndefine_section({numeric:0x77, symbolic:'amqp:value:*'}, function (msg, section) { msg.body = types.unwrap(section); });\n\ndefine_map_section({name:'footer', code:0x78});\n\n\nfunction wrap_body (sections, msg) {\n    if (msg.body && msg.body.collect_sections) {\n        msg.body.collect_sections(sections);\n    } else {\n        sections.push(types.described(types.wrap_ulong(0x77), types.wrap(msg.body)));\n    }\n}\n\nwrappers.push(wrap_body);\n\nmessage.data_section = function (data) {\n    return new Section(0x75, data);\n};\n\nmessage.sequence_section = function (list) {\n    return new Section(0x76, list);\n};\n\nmessage.data_sections = function (data_elements) {\n    return new Section(0x75, data_elements, true);\n};\n\nmessage.sequence_sections = function (lists) {\n    return new Section(0x76, lists, true);\n};\n\nfunction copy(src, tgt) {\n    for (var k in src) {\n        var v = src[k];\n        if (typeof v === 'object') {\n            copy(v, tgt[k]);\n        } else {\n            tgt[k] = v;\n        }\n    }\n}\n\nfunction Message(o) {\n    if (o) {\n        copy(o, this);\n    }\n}\n\nMessage.prototype.toJSON = function () {\n    var o = {};\n    for (var key in this) {\n        if (typeof this[key] === 'function') continue;\n        o[key] = this[key];\n    }\n    return o;\n};\n\nMessage.prototype.toString = function () {\n    return JSON.stringify(this.toJSON());\n};\n\n\nmessage.encode = function(msg) {\n    var sections = [];\n    wrappers.forEach(function (wrapper_fn) { wrapper_fn(sections, msg); });\n    var writer = new types.Writer();\n    for (var i = 0; i < sections.length; i++) {\n        log.message('Encoding section %d of %d: %o', (i+1), sections.length, sections[i]);\n        writer.write(sections[i]);\n    }\n    var data = writer.toBuffer();\n    log.message('encoded %d bytes', data.length);\n    return data;\n};\n\nmessage.decode = function(buffer) {\n    var msg = new Message();\n    var reader = new types.Reader(buffer);\n    while (reader.remaining()) {\n        var s = reader.read();\n        log.message('decoding section: %o of type: %o', s, s.descriptor);\n        if (s.descriptor) {\n            var unwrap = unwrappers[s.descriptor.value];\n            if (unwrap) {\n                unwrap(msg, s);\n            } else {\n                console.warn('WARNING: did not recognise message section with descriptor ' + s.descriptor);\n            }\n        } else {\n            console.warn('WARNING: expected described message section got ' + JSON.stringify(s));\n        }\n    }\n    return msg;\n};\n\nvar outcomes = {};\n\nfunction define_outcome(def) {\n    var c = types.define_composite(def);\n    c.composite_type = def.name;\n    message[def.name] = c.create;\n    outcomes[Number(c.descriptor.numeric).toString(10)] = c;\n    outcomes[c.descriptor.symbolic] = c;\n    message['is_' + def.name] = function (o) {\n        if (o && o.descriptor) {\n            var c = outcomes[o.descriptor.value];\n            if (c) {\n                return c.descriptor.numeric === def.code;\n            }\n        }\n        return false;\n    };\n}\n\nmessage.unwrap_outcome = function (outcome) {\n    if (outcome && outcome.descriptor) {\n        var c = outcomes[outcome.descriptor.value];\n        if (c) {\n            return new c(outcome.value);\n        }\n    }\n    console.error('unrecognised outcome: ' + JSON.stringify(outcome));\n    return outcome;\n};\n\nmessage.are_outcomes_equivalent = function(a, b) {\n    if (a === undefined && b === undefined) return true;\n    else if (a === undefined || b === undefined) return false;\n    else return a.descriptor.value === b.descriptor.value && a.descriptor.value === 0x24;//only batch accepted\n};\n\ndefine_outcome({\n    name:'received',\n    code:0x23,\n    fields:[\n        {name:'section_number', type:'uint', mandatory:true},\n        {name:'section_offset', type:'ulong', mandatory:true}\n    ]});\ndefine_outcome({name:'accepted', code:0x24, fields:[]});\ndefine_outcome({name:'rejected', code:0x25, fields:[{name:'error', type:'error'}]});\ndefine_outcome({name:'released', code:0x26, fields:[]});\ndefine_outcome({\n    name:'modified',\n    code:0x27,\n    fields:[\n        {name:'delivery_failed', type:'boolean'},\n        {name:'undeliverable_here', type:'boolean'},\n        {name:'message_annotations', type:'map'}\n    ]});\n\nmodule.exports = message;\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar types = require('./types.js');\n\nvar terminus = {};\nvar by_descriptor = {};\n\nfunction define_terminus(def) {\n    var c = types.define_composite(def);\n    terminus[def.name] = c.create;\n    by_descriptor[Number(c.descriptor.numeric).toString(10)] = c;\n    by_descriptor[c.descriptor.symbolic] = c;\n}\n\nterminus.unwrap = function(field) {\n    if (field && field.descriptor) {\n        var c = by_descriptor[field.descriptor.value];\n        if (c) {\n            return new c(field.value);\n        } else {\n            console.warn('Unknown terminus: ' + field.descriptor);\n        }\n    }\n    return null;\n};\n\ndefine_terminus({\n    name: 'source',\n    code: 0x28,\n    fields: [\n        {name: 'address', type: 'string'},\n        {name: 'durable', type: 'uint', default_value: 0},\n        {name: 'expiry_policy', type: 'symbol', default_value: 'session-end'},\n        {name: 'timeout', type: 'uint', default_value: 0},\n        {name: 'dynamic', type: 'boolean', default_value: false},\n        {name: 'dynamic_node_properties', type: 'symbolic_map'},\n        {name: 'distribution_mode', type: 'symbol'},\n        {name: 'filter', type: 'symbolic_map'},\n        {name: 'default_outcome', type: '*'},\n        {name: 'outcomes', type: 'symbol', multiple: true},\n        {name: 'capabilities', type: 'symbol', multiple: true}\n    ]\n});\n\ndefine_terminus({\n    name: 'target',\n    code: 0x29,\n    fields: [\n        {name: 'address', type: 'string'},\n        {name: 'durable', type: 'uint', default_value: 0},\n        {name: 'expiry_policy', type: 'symbol', default_value: 'session-end'},\n        {name: 'timeout', type: 'uint', default_value: 0},\n        {name: 'dynamic', type: 'boolean', default_value: false},\n        {name: 'dynamic_node_properties', type: 'symbolic_map'},\n        {name: 'capabilities', type: 'symbol', multiple: true}\n    ]\n});\n\nmodule.exports = terminus;\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar frames = require('./frames.js');\nvar log = require('./log.js');\nvar message = require('./message.js');\nvar terminus = require('./terminus.js');\nvar EndpointState = require('./endpoint.js');\n\nvar FlowController = function (window) {\n    this.window = window;\n};\nFlowController.prototype.update = function (context) {\n    var delta = this.window - context.receiver.credit;\n    if (delta >= (this.window/4)) {\n        context.receiver.flow(delta);\n    }\n};\n\nfunction auto_settle(context) {\n    context.delivery.settled = true;\n}\n\nfunction auto_accept(context) {\n    context.delivery.update(undefined, message.accepted().described());\n}\n\nfunction LinkError(message, condition, link) {\n    Error.call(this);\n    Error.captureStackTrace(this, this.constructor);\n    this.message = message;\n    this.condition = condition;\n    this.description = message;\n    Object.defineProperty(this, 'link', { value: link });\n}\nrequire('util').inherits(LinkError, Error);\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar link = Object.create(EventEmitter.prototype);\nlink.dispatch = function(name) {\n    log.events('[%s] Link got event: %s', this.connection.options.id, name);\n    EventEmitter.prototype.emit.apply(this.observers, arguments);\n    if (this.listeners(name).length) {\n        EventEmitter.prototype.emit.apply(this, arguments);\n        return true;\n    } else {\n        return this.session.dispatch.apply(this.session, arguments);\n    }\n};\nlink.set_source = function (fields) {\n    this.local.attach.source = terminus.source(fields).described();\n};\nlink.set_target = function (fields) {\n    this.local.attach.target = terminus.target(fields).described();\n};\n\nlink.attach = function () {\n    if (this.state.open()) {\n        this.connection._register();\n    }\n};\nlink.open = link.attach;\n\nlink.detach = function () {\n    this.local.detach.closed = false;\n    if (this.state.close()) {\n        this.connection._register();\n    }\n};\nlink.close = function(error) {\n    if (error) this.local.detach.error = error;\n    this.local.detach.closed = true;\n    if (this.state.close()) {\n        this.connection._register();\n    }\n};\n\n/**\n * This forcibly removes the link from the parent session. It should\n * not be called for a link on an active session/connection, where\n * close() should be used instead.\n */\nlink.remove = function() {\n    this.session.remove_link(this);\n};\n\nlink.is_open = function () {\n    return this.session.is_open() && this.state.is_open();\n};\n\nlink.is_remote_open = function () {\n    return this.session.is_remote_open() && this.state.remote_open;\n};\n\nlink.is_itself_closed = function() {\n    return this.state.is_closed();\n};\n\nlink.is_closed = function () {\n    return this.session.is_closed() || this.is_itself_closed();\n};\n\nlink._process = function () {\n    do {\n        if (this.state.need_open()) {\n            this.session.output(this.local.attach);\n        }\n\n        if (this.issue_flow && this.state.local_open) {\n            this.session._write_flow(this);\n            this.issue_flow = false;\n        }\n\n        if (this.state.need_close()) {\n            this.session.output(this.local.detach);\n        }\n    } while (!this.state.has_settled());\n};\n\nlink.on_attach = function (frame) {\n    if (this.state.remote_opened()) {\n        if (!this.remote.handle) {\n            this.remote.handle = frame.handle;\n        }\n        frame.performative.source = terminus.unwrap(frame.performative.source);\n        frame.performative.target = terminus.unwrap(frame.performative.target);\n        this.remote.attach = frame.performative;\n        this.open();\n        this.dispatch(this.is_receiver() ? 'receiver_open' : 'sender_open', this._context());\n    } else {\n        throw Error('Attach already received');\n    }\n};\n\nlink.prefix_event = function (event) {\n    return (this.local.attach.role ? 'receiver_' : 'sender_') + event;\n};\n\nlink.on_detach = function (frame) {\n    if (this.state.remote_closed()) {\n        if (this._incomplete) {\n            this._incomplete.settled = true;\n        }\n        this.remote.detach = frame.performative;\n        var error = this.remote.detach.error;\n        if (error) {\n            var handled = this.dispatch(this.prefix_event('error'), this._context());\n            handled = this.dispatch(this.prefix_event('close'), this._context()) || handled;\n            if (!handled) {\n                EventEmitter.prototype.emit.call(this.connection.container, 'error', new LinkError(error.description, error.condition, this));\n            }\n        } else {\n            this.dispatch(this.prefix_event('close'), this._context());\n        }\n        var self = this;\n        var token = this.state.mark();\n        process.nextTick(function () {\n            if (self.state.marker === token) {\n                self.close();\n                process.nextTick(function () { self.remove(); });\n            }\n        });\n    } else {\n        throw Error('Detach already received');\n    }\n};\n\nfunction is_internal(name) {\n    switch (name) {\n    case 'name':\n    case 'handle':\n    case 'role':\n    case 'initial_delivery_count':\n        return true;\n    default:\n        return false;\n    }\n}\n\n\nvar aliases = [\n    'snd_settle_mode',\n    'rcv_settle_mode',\n    'source',\n    'target',\n    'max_message_size',\n    'offered_capabilities',\n    'desired_capabilities',\n    'properties'\n];\n\nfunction remote_property_shortcut(name) {\n    return function() { return this.remote.attach ? this.remote.attach[name] : undefined; };\n}\n\nlink.init = function (session, name, local_handle, opts, is_receiver) {\n    this.session = session;\n    this.connection = session.connection;\n    this.name = name;\n    this.options = opts === undefined ? {} : opts;\n    this.state = new EndpointState();\n    this.issue_flow = false;\n    this.local = {'handle': local_handle};\n    this.local.attach = frames.attach({'handle':local_handle,'name':name, role:is_receiver});\n    for (var field in this.local.attach) {\n        if (!is_internal(field) && this.options[field] !== undefined) {\n            this.local.attach[field] = this.options[field];\n        }\n    }\n    this.local.detach = frames.detach({'handle':local_handle, 'closed':true});\n    this.remote = {'handle':undefined};\n    this.delivery_count = 0;\n    this.credit = 0;\n    this.observers = new EventEmitter();\n    var self = this;\n    aliases.forEach(function (alias) { Object.defineProperty(self, alias, { get: remote_property_shortcut(alias) }); });\n    Object.defineProperty(this, 'error', { get:  function() { return this.remote.detach ? this.remote.detach.error : undefined; }});\n};\n\nlink._disconnect = function() {\n    this.state.disconnected();\n    if (!this.state.was_open) {\n        this.remove();\n    }\n};\n\nlink._reconnect = function() {\n    this.state.reconnect();\n    this.remote = {'handle':undefined};\n    this.delivery_count = 0;\n    this.credit = 0;\n};\n\nlink.has_credit = function () {\n    return this.credit > 0;\n};\nlink.is_receiver = function () {\n    return this.local.attach.role;\n};\nlink.is_sender = function () {\n    return !this.is_receiver();\n};\nlink._context = function (c) {\n    var context = c ? c : {};\n    if (this.is_receiver()) {\n        context.receiver = this;\n    } else {\n        context.sender = this;\n    }\n    return this.session._context(context);\n};\nlink.get_option = function (name, default_value) {\n    if (this.options[name] !== undefined) return this.options[name];\n    else return this.session.get_option(name, default_value);\n};\n\nvar Sender = function (session, name, local_handle, opts) {\n    this.init(session, name, local_handle, opts, false);\n    this._draining = false;\n    this._drained = false;\n    this.local.attach.initial_delivery_count = 0;\n    this.tag = 0;\n    if (this.get_option('autosettle', true)) {\n        this.observers.on('settled', auto_settle);\n    }\n    var sender = this;\n    if (this.get_option('treat_modified_as_released', true)) {\n        this.observers.on('modified', function (context) {\n            sender.dispatch('released', context);\n        });\n    }\n};\nSender.prototype = Object.create(link);\nSender.prototype.constructor = Sender;\nSender.prototype._get_drain = function () {\n    if (this._draining && this._drained && this.credit) {\n        while (this.credit) {\n            ++this.delivery_count;\n            --this.credit;\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\nSender.prototype.set_drained = function (drained) {\n    this._drained = drained;\n    if (this._draining && this._drained) {\n        this.issue_flow = true;\n    }\n};\nSender.prototype.next_tag = function () {\n    return Buffer.from(new String(this.tag++));\n};\nSender.prototype.sendable = function () {\n    return Boolean(this.credit && this.session.outgoing.available());\n};\nSender.prototype.on_flow = function (frame) {\n    var flow = frame.performative;\n    this.credit = flow.delivery_count + flow.link_credit - this.delivery_count;\n    this._draining = flow.drain;\n    this._drained = this.credit > 0;\n    if (this.is_open()) {\n        this.dispatch('sender_flow', this._context());\n        if (this._draining) {\n            this.dispatch('sender_draining', this._context());\n        }\n        if (this.sendable()) {\n            this.dispatch('sendable', this._context());\n        }\n    }\n};\nSender.prototype.on_transfer = function () {\n    throw Error('got transfer on sending link');\n};\n\nSender.prototype.send = function (msg, tag, format) {\n    var payload = format === undefined ? message.encode(msg) : msg;\n    var delivery = this.session.send(this, tag ? tag : this.next_tag(), payload, format);\n    if (this.local.attach.snd_settle_mode === 1) {\n        delivery.settled = true;\n    }\n    return delivery;\n};\n\nvar Receiver = function (session, name, local_handle, opts) {\n    this.init(session, name, local_handle, opts, true);\n    this.drain = false;\n    this.set_credit_window(this.get_option('credit_window', 1000));\n    if (this.get_option('autoaccept', true)) {\n        this.observers.on('message', auto_accept);\n    }\n    if (this.local.attach.rcv_settle_mode === 1 && this.get_option('autosettle', true)) {\n        this.observers.on('settled', auto_settle);\n    }\n};\nReceiver.prototype = Object.create(link);\nReceiver.prototype.constructor = Receiver;\nReceiver.prototype.on_flow = function (frame) {\n    this.dispatch('receiver_flow', this._context());\n    if (frame.performative.drain) {\n        this.credit = frame.performative.link_credit;\n        this.delivery_count = frame.performative.delivery_count;\n        if (frame.performative.link_credit > 0) console.error('ERROR: received flow with drain set, but non zero credit');\n        else this.dispatch('receiver_drained', this._context());\n    }\n};\nReceiver.prototype.flow = function(credit) {\n    if (credit > 0) {\n        this.credit += credit;\n        this.issue_flow = true;\n        this.connection._register();\n    }\n};\n\nReceiver.prototype.drain_credit = function() {\n    this.drain = true;\n    this.issue_flow = true;\n    this.connection._register();\n};\n\nReceiver.prototype.add_credit = Receiver.prototype.flow;//alias\nReceiver.prototype._get_drain = function () {\n    return this.drain;\n};\n\nReceiver.prototype.set_credit_window = function(credit_window) {\n    if (credit_window > 0) {\n        var flow_controller = new FlowController(credit_window);\n        var listener = flow_controller.update.bind(flow_controller);\n        this.observers.on('message', listener);\n        this.observers.on('receiver_open', listener);\n    }\n};\n\nmodule.exports = {'Sender': Sender, 'Receiver':Receiver};\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar frames = require('./frames.js');\nvar link = require('./link.js');\nvar log = require('./log.js');\nvar message = require('./message.js');\nvar types = require('./types.js');\nvar util = require('./util.js');\nvar EndpointState = require('./endpoint.js');\n\nvar EventEmitter = require('events').EventEmitter;\n\nfunction SessionError(message, condition, session) {\n    Error.call(this);\n    Error.captureStackTrace(this, this.constructor);\n    this.message = message;\n    this.condition = condition;\n    this.description = message;\n    Object.defineProperty(this, 'session', { value: session });\n}\nrequire('util').inherits(SessionError, Error);\n\nvar CircularBuffer = function (capacity) {\n    this.capacity = capacity;\n    this.size = 0;\n    this.head = 0;\n    this.tail = 0;\n    this.entries = [];\n};\n\nCircularBuffer.prototype.available = function () {\n    return this.capacity - this.size;\n};\n\nCircularBuffer.prototype.push = function (o) {\n    if (this.size < this.capacity) {\n        this.entries[this.tail] = o;\n        this.tail = (this.tail + 1) % this.capacity;\n        this.size++;\n    } else {\n        throw Error('circular buffer overflow: head=' + this.head + ' tail=' + this.tail + ' size=' + this.size + ' capacity=' + this.capacity);\n    }\n};\n\nCircularBuffer.prototype.pop_if = function (f) {\n    var count = 0;\n    while (this.size && f(this.entries[this.head])) {\n        this.entries[this.head] = undefined;\n        this.head = (this.head + 1) % this.capacity;\n        this.size--;\n        count++;\n    }\n    return count;\n};\n\nCircularBuffer.prototype.by_id = function (id) {\n    if (this.size > 0) {\n        var gap = id - this.entries[this.head].id;\n        if (gap < this.size) {\n            return this.entries[(this.head + gap) % this.capacity];\n        }\n    }\n    return undefined;\n};\n\nCircularBuffer.prototype.get_head = function () {\n    return this.size > 0 ? this.entries[this.head] : undefined;\n};\n\nCircularBuffer.prototype.get_tail = function () {\n    return this.size > 0 ? this.entries[(this.head + this.size - 1) % this.capacity] : undefined;\n};\n\nfunction write_dispositions(deliveries) {\n    var first, last, next_id, i, delivery;\n\n    for (i = 0; i < deliveries.length; i++) {\n        delivery = deliveries[i];\n        if (first === undefined) {\n            first = delivery;\n            last = delivery;\n            next_id = delivery.id;\n        }\n\n        if ((first !== last && !message.are_outcomes_equivalent(last.state, delivery.state)) || last.settled !== delivery.settled || next_id !== delivery.id) {\n            first.link.session.output(frames.disposition({'role' : first.link.is_receiver(), 'first' : first.id, 'last' : last.id, 'state' : first.state, 'settled' : first.settled}));\n            first = delivery;\n            last = delivery;\n            next_id = delivery.id;\n        } else {\n            if (last.id !== delivery.id) {\n                last = delivery;\n            }\n            next_id++;\n        }\n    }\n    if (first !== undefined && last !== undefined) {\n        first.link.session.output(frames.disposition({'role' : first.link.is_receiver(), 'first' : first.id, 'last' : last.id, 'state' : first.state, 'settled' : first.settled}));\n    }\n}\n\nvar Outgoing = function (connection) {\n    /* TODO: make size configurable? */\n    this.deliveries = new CircularBuffer(2048);\n    this.updated = [];\n    this.pending_dispositions = [];\n    this.next_delivery_id = 0;\n    this.next_pending_delivery = 0;\n    this.next_transfer_id = 0;\n    this.window = types.MAX_UINT;\n    this.remote_next_transfer_id = undefined;\n    this.remote_window = undefined;\n    this.connection = connection;\n};\n\nOutgoing.prototype.available = function () {\n    return this.deliveries.available();\n};\n\nOutgoing.prototype.compute_max_payload = function (tag) {\n    if (this.connection.max_frame_size) {\n        return this.connection.max_frame_size - (50 + tag.length);\n    } else {\n        return undefined;\n    }\n};\n\nOutgoing.prototype.send = function (sender, tag, data, format) {\n    var fragments = [];\n    var max_payload = this.compute_max_payload(tag);\n    if (max_payload && data.length > max_payload) {\n        var start = 0;\n        while (start < data.length) {\n            var end = Math.min(start + max_payload, data.length);\n            fragments.push(data.slice(start, end));\n            start = end;\n        }\n    } else {\n        fragments.push(data);\n    }\n    var d = {\n        'id':this.next_delivery_id++,\n        'tag':tag,\n        'link':sender,\n        'data': fragments,\n        'format':format ? format : 0,\n        'next_to_send': 0,\n        'sent': false,\n        'settled': false,\n        'state': undefined,\n        'remote_settled': false,\n        'remote_state': undefined\n    };\n    var self = this;\n    d.update = function (settled, state) {\n        self.update(d, settled, state);\n    };\n    this.deliveries.push(d);\n    return d;\n};\n\nOutgoing.prototype.on_begin = function (fields) {\n    this.remote_window = fields.incoming_window;\n};\n\nOutgoing.prototype.on_flow = function (fields) {\n    this.remote_next_transfer_id = fields.next_incoming_id;\n    this.remote_window = fields.incoming_window;\n};\n\nOutgoing.prototype.on_disposition = function (fields) {\n    var last = fields.last ? fields.last : fields.first;\n    for (var i = fields.first; i <= last; i++) {\n        var d = this.deliveries.by_id(i);\n        if (d && !d.remote_settled) {\n            var updated = false;\n            if (fields.settled) {\n                d.remote_settled = fields.settled;\n                updated = true;\n            }\n            if (fields.state && fields.state !== d.remote_state) {\n                d.remote_state = message.unwrap_outcome(fields.state);\n                updated = true;\n            }\n            if (updated) {\n                this.updated.push(d);\n            }\n        }\n    }\n};\n\nOutgoing.prototype.update = function (delivery, settled, state) {\n    if (delivery) {\n        delivery.settled = settled;\n        if (state !== undefined) delivery.state = state;\n        if (!delivery.remote_settled) {\n            this.pending_dispositions.push(delivery);\n        }\n        delivery.link.connection._register();\n    }\n};\n\nOutgoing.prototype.transfer_window = function() {\n    if (this.remote_window) {\n        return this.remote_window - (this.next_transfer_id - this.remote_next_transfer_id);\n    } else {\n        return 0;\n    }\n};\n\nOutgoing.prototype.process = function() {\n    var d;\n    // send pending deliveries for which there is credit:\n    while (this.next_pending_delivery < this.next_delivery_id) {\n        d = this.deliveries.by_id(this.next_pending_delivery);\n        if (d) {\n            if (d.link.has_credit()) {\n                const num_to_send = Math.min(this.transfer_window(), d.data.length - d.next_to_send);\n                if (num_to_send > 0) {\n                    this.window -= num_to_send;\n                    const end_of_send = d.next_to_send + num_to_send;\n                    for (var i = d.next_to_send; i < end_of_send; i++) {\n                        this.next_transfer_id++;\n                        var more = (i+1) < d.data.length;\n                        var transfer = frames.transfer({'handle':d.link.local.handle,'message_format':d.format,'delivery_id':d.id, 'delivery_tag':d.tag, 'settled':d.settled, 'more':more});\n                        d.link.session.output(transfer, d.data[i]);\n                    }\n                    if (end_of_send < d.data.length) {\n                        d.next_to_send = end_of_send;\n                        break;\n                    } else {\n                        if (d.settled) {\n                            d.remote_settled = true;//if sending presettled, it can now be cleaned up\n                        }\n                        d.link.credit--;\n                        d.link.delivery_count++;\n                        this.next_pending_delivery++;\n                    }\n                } else {\n                    log.flow('[%s] Incoming window of peer preventing sending further transfers: remote_window=%d, remote_next_transfer_id=%d, next_transfer_id=%d',\n                        this.connection.options.id, this.remote_window, this.remote_next_transfer_id, this.next_transfer_id);\n                    break;\n                }\n            } else {\n                log.flow('[%s] Link has no credit', this.connection.options.id);\n                break;\n            }\n        } else {\n            console.error('ERROR: Next pending delivery not found: ' + this.next_pending_delivery);\n            break;\n        }\n    }\n\n    // notify application of any updated deliveries:\n    for (var i = 0; i < this.updated.length; i++) {\n        d = this.updated[i];\n        if (d.remote_state && d.remote_state.constructor.composite_type) {\n            d.link.dispatch(d.remote_state.constructor.composite_type, d.link._context({'delivery':d}));\n        }\n        if (d.remote_settled) d.link.dispatch('settled', d.link._context({'delivery':d}));\n    }\n    this.updated = [];\n\n    if (this.pending_dispositions.length) {\n        write_dispositions(this.pending_dispositions);\n        this.pending_dispositions = [];\n    }\n\n    // remove any fully settled deliveries:\n    this.deliveries.pop_if(function (d) { return d.settled && d.remote_settled; });\n};\n\nvar Incoming = function () {\n    this.deliveries = new CircularBuffer(2048/*TODO: configurable?*/);\n    this.updated = [];\n    this.next_transfer_id = 0;\n    this.next_delivery_id = undefined;\n    Object.defineProperty(this, 'window', { get: function () { return this.deliveries.available(); } });\n    this.remote_next_transfer_id = undefined;\n    this.remote_window = undefined;\n    this.max_transfer_id = this.next_transfer_id + this.window;\n};\n\nIncoming.prototype.update = function (delivery, settled, state) {\n    if (delivery) {\n        delivery.settled = settled;\n        if (state !== undefined) delivery.state = state;\n        if (!delivery.remote_settled) {\n            this.updated.push(delivery);\n        }\n        delivery.link.connection._register();\n    }\n};\n\nIncoming.prototype.on_transfer = function(frame, receiver) {\n    this.next_transfer_id++;\n    if (receiver.is_remote_open()) {\n        if (this.next_delivery_id === undefined) {\n            this.next_delivery_id = frame.performative.delivery_id;\n        }\n        var current;\n        if (receiver._incomplete) {\n            current = receiver._incomplete;\n            if (util.is_defined(frame.performative.delivery_id) && current.id !== frame.performative.delivery_id) {\n                throw Error('frame sequence error: delivery ' + current.id + ' not complete, got ' + frame.performative.delivery_id);\n            }\n            if (frame.payload) {\n                current.frames.push(frame.payload);\n            }\n        } else if (this.next_delivery_id === frame.performative.delivery_id) {\n            current = {'id':frame.performative.delivery_id,\n                'tag':frame.performative.delivery_tag,\n                'format':frame.performative.message_format,\n                'link':receiver,\n                'settled': false,\n                'state': undefined,\n                'remote_settled': frame.performative.settled === undefined ? false : frame.performative.settled,\n                'remote_state': frame.performative.state,\n                'frames': [frame.payload],\n            };\n            var self = this;\n            current.update = function (settled, state) {\n                var settled_ = settled;\n                if (settled_ === undefined) {\n                    settled_ = receiver.local.attach.rcv_settle_mode !== 1;\n                }\n                self.update(current, settled_, state);\n            };\n            current.accept = function () { this.update(undefined, message.accepted().described()); };\n            current.release = function (params) {\n                if (params) {\n                    this.update(undefined, message.modified(params).described());\n                } else {\n                    this.update(undefined, message.released().described());\n                }\n            };\n            current.reject = function (error) { this.update(undefined, message.rejected({'error':error}).described()); };\n            current.modified = function (params) { this.update(undefined, message.modified(params).described()); };\n\n            this.deliveries.push(current);\n            this.next_delivery_id++;\n        } else {\n            //TODO: better error handling\n            throw Error('frame sequence error: expected ' + this.next_delivery_id + ', got ' + frame.performative.delivery_id);\n        }\n        current.incomplete = frame.performative.more;\n        if (current.incomplete) {\n            receiver._incomplete = current;\n        } else {\n            receiver._incomplete = undefined;\n            const data = current.frames.length === 1 ? current.frames[0] : Buffer.concat(current.frames);\n            delete current.frames;\n            if (receiver.credit > 0) receiver.credit--;\n            else console.error('Received transfer when credit was %d', receiver.credit);\n            receiver.delivery_count++;\n            var msgctxt = current.format === 0 ? {'message':message.decode(data), 'delivery':current} : {'message':data, 'delivery':current, 'format':current.format};\n            receiver.dispatch('message', receiver._context(msgctxt));\n        }\n    } else {\n        throw Error('transfer after detach');\n    }\n};\n\nIncoming.prototype.process = function (session) {\n    if (this.updated.length > 0) {\n        write_dispositions(this.updated);\n        this.updated = [];\n    }\n\n    // remove any fully settled deliveries:\n    this.deliveries.pop_if(function (d) { return d.settled; });\n\n    if (this.max_transfer_id - this.next_transfer_id < (this.window / 2)) {\n        session._write_flow();\n    }\n};\n\nIncoming.prototype.on_begin = function (fields) {\n    this.remote_window = fields.outgoing_window;\n    this.remote_next_transfer_id = fields.next_outgoing_id;\n};\n\nIncoming.prototype.on_flow = function (fields) {\n    this.remote_next_transfer_id = fields.next_outgoing_id;\n    this.remote_window = fields.outgoing_window;\n};\n\nIncoming.prototype.on_disposition = function (fields) {\n    var last = fields.last ? fields.last : fields.first;\n    for (var i = fields.first; i <= last; i++) {\n        var d = this.deliveries.by_id(i);\n        if (d && !d.remote_settled) {\n            if (fields.state && fields.state !== d.remote_state) {\n                d.remote_state = message.unwrap_outcome(fields.state);\n            }\n            if (fields.settled) {\n                d.remote_settled = fields.settled;\n                d.link.dispatch('settled', d.link._context({'delivery':d}));\n            }\n        }\n    }\n};\n\nvar Session = function (connection, local_channel) {\n    this.connection = connection;\n    this.outgoing = new Outgoing(connection);\n    this.incoming = new Incoming();\n    this.state = new EndpointState();\n    this.local = {'channel': local_channel, 'handles':{}};\n    this.local.begin = frames.begin({next_outgoing_id:this.outgoing.next_transfer_id,incoming_window:this.incoming.window,outgoing_window:this.outgoing.window});\n    this.local.end = frames.end();\n    this.remote = {'handles':{}};\n    this.links = {}; // map by name\n    this.options = {};\n    Object.defineProperty(this, 'error', { get:  function() { return this.remote.end ? this.remote.end.error : undefined; }});\n    this.observers = new EventEmitter();\n};\nSession.prototype = Object.create(EventEmitter.prototype);\nSession.prototype.constructor = Session;\n\nSession.prototype._disconnect = function() {\n    this.state.disconnected();\n    for (var l in this.links) {\n        this.links[l]._disconnect();\n    }\n    if (!this.state.was_open) {\n        this.remove();\n    }\n};\n\nSession.prototype._reconnect = function() {\n    this.state.reconnect();\n    this.outgoing = new Outgoing(this.connection);\n    this.incoming = new Incoming();\n    this.remote = {'handles':{}};\n    for (var l in this.links) {\n        this.links[l]._reconnect();\n    }\n};\n\nSession.prototype.dispatch = function(name) {\n    log.events('[%s] Session got event: %s', this.connection.options.id, name);\n    EventEmitter.prototype.emit.apply(this.observers, arguments);\n    if (this.listeners(name).length) {\n        EventEmitter.prototype.emit.apply(this, arguments);\n        return true;\n    } else {\n        return this.connection.dispatch.apply(this.connection, arguments);\n    }\n};\nSession.prototype.output = function (frame, payload) {\n    this.connection._write_frame(this.local.channel, frame, payload);\n};\n\nSession.prototype.create_sender = function (name, opts) {\n    if (!opts) {\n        opts = this.get_option('sender_options', {});\n    }\n    return this.create_link(name, link.Sender, opts);\n};\n\nSession.prototype.create_receiver = function (name, opts) {\n    if (!opts) {\n        opts = this.get_option('receiver_options', {});\n    }\n    return this.create_link(name, link.Receiver, opts);\n};\n\nfunction merge(defaults, specific) {\n    for (var f in specific) {\n        if (f === 'properties' && defaults.properties) {\n            merge(defaults.properties, specific.properties);\n        } else {\n            defaults[f] = specific[f];\n        }\n    }\n}\n\nfunction attach(factory, args, remote_terminus, default_args) {\n    var opts = Object.create(default_args || {});\n    if (typeof args === 'string') {\n        opts[remote_terminus] = args;\n    } else if (args) {\n        merge(opts, args);\n    }\n    if (!opts.name) opts.name = util.generate_uuid();\n    var l = factory(opts.name, opts);\n    for (var t in {'source':0, 'target':0}) {\n        if (opts[t]) {\n            if (typeof opts[t] === 'string') {\n                opts[t] = {'address' : opts[t]};\n            }\n            l['set_' + t](opts[t]);\n        }\n    }\n    if (l.is_sender() && opts.source === undefined) {\n        opts.source = l.set_source({});\n    }\n    if (l.is_receiver() && opts.target === undefined) {\n        opts.target = l.set_target({});\n    }\n    l.attach();\n    return l;\n}\n\nSession.prototype.get_option = function (name, default_value) {\n    if (this.options[name] !== undefined) return this.options[name];\n    else return this.connection.get_option(name, default_value);\n};\n\nSession.prototype.attach_sender = function (args) {\n    return attach(this.create_sender.bind(this), args, 'target', this.get_option('sender_options', {}));\n};\nSession.prototype.open_sender = Session.prototype.attach_sender;//alias\n\nSession.prototype.attach_receiver = function (args) {\n    return attach(this.create_receiver.bind(this), args, 'source', this.get_option('receiver_options', {}));\n};\nSession.prototype.open_receiver = Session.prototype.attach_receiver;//alias\n\nSession.prototype.find_sender = function (filter) {\n    return this.find_link(util.sender_filter(filter));\n};\n\nSession.prototype.find_receiver = function (filter) {\n    return this.find_link(util.receiver_filter(filter));\n};\n\nSession.prototype.find_link = function (filter) {\n    for (var name in this.links) {\n        var link = this.links[name];\n        if (filter(link)) return link;\n    }\n    return undefined;\n};\n\nSession.prototype.each_receiver = function (action, filter) {\n    this.each_link(action, util.receiver_filter(filter));\n};\n\nSession.prototype.each_sender = function (action, filter) {\n    this.each_link(action, util.sender_filter(filter));\n};\n\nSession.prototype.each_link = function (action, filter) {\n    for (var name in this.links) {\n        var link = this.links[name];\n        if (filter === undefined || filter(link)) action(link);\n    }\n};\n\nSession.prototype.create_link = function (name, constructor, opts) {\n    var i = 0;\n    while (this.local.handles[i]) i++;\n    var l = new constructor(this, name, i, opts);\n    this.links[name] = l;\n    this.local.handles[i] = l;\n    return l;\n};\n\nSession.prototype.begin = function () {\n    if (this.state.open()) {\n        this.connection._register();\n    }\n};\nSession.prototype.open = Session.prototype.begin;\n\nSession.prototype.end = function (error) {\n    if (error) this.local.end.error = error;\n    if (this.state.close()) {\n        this.connection._register();\n    }\n};\nSession.prototype.close = Session.prototype.end;\n\nSession.prototype.is_open = function () {\n    return this.connection.is_open() && this.state.is_open();\n};\n\nSession.prototype.is_remote_open = function () {\n    return this.connection.is_remote_open() && this.state.remote_open;\n};\n\nSession.prototype.is_itself_closed = function () {\n    return this.state.is_closed();\n};\n\nSession.prototype.is_closed = function () {\n    return this.connection.is_closed() || this.is_itself_closed();\n};\n\nfunction notify_sendable(sender) {\n    sender.dispatch('sendable', sender._context());\n}\n\nfunction is_sender_sendable(sender) {\n    return sender.is_open() && sender.sendable();\n}\n\nSession.prototype._process = function () {\n    do {\n        if (this.state.need_open()) {\n            this.output(this.local.begin);\n        }\n\n        var was_blocked = this.outgoing.deliveries.available() === 0;\n        this.outgoing.process();\n        if (was_blocked && this.outgoing.deliveries.available()) {\n            this.each_sender(notify_sendable, is_sender_sendable);\n        }\n        this.incoming.process(this);\n        for (var k in this.links) {\n            this.links[k]._process();\n        }\n\n        if (this.state.need_close()) {\n            this.output(this.local.end);\n        }\n    } while (!this.state.has_settled());\n};\n\nSession.prototype.send = function (sender, tag, data, format) {\n    var d = this.outgoing.send(sender, tag, data, format);\n    this.connection._register();\n    return d;\n};\n\nSession.prototype._write_flow = function (link) {\n    var fields = {'next_incoming_id':this.incoming.next_transfer_id,\n        'incoming_window':this.incoming.window,\n        'next_outgoing_id':this.outgoing.next_transfer_id,\n        'outgoing_window':this.outgoing.window\n    };\n    this.incoming.max_transfer_id = fields.next_incoming_id + fields.incoming_window;\n    if (link) {\n        if (link._get_drain()) fields.drain = true;\n        fields.delivery_count = link.delivery_count;\n        fields.handle = link.local.handle;\n        fields.link_credit = link.credit;\n    }\n    this.output(frames.flow(fields));\n};\n\nSession.prototype.on_begin = function (frame) {\n    if (this.state.remote_opened()) {\n        if (!this.remote.channel) {\n            this.remote.channel = frame.channel;\n        }\n        this.remote.begin = frame.performative;\n        this.outgoing.on_begin(frame.performative);\n        this.incoming.on_begin(frame.performative);\n        this.open();\n        this.dispatch('session_open', this._context());\n    } else {\n        throw Error('Begin already received');\n    }\n};\nSession.prototype.on_end = function (frame) {\n    if (this.state.remote_closed()) {\n        this.remote.end = frame.performative;\n        var error = this.remote.end.error;\n        if (error) {\n            var handled = this.dispatch('session_error', this._context());\n            handled = this.dispatch('session_close', this._context()) || handled;\n            if (!handled) {\n                EventEmitter.prototype.emit.call(this.connection.container, 'error', new SessionError(error.description, error.condition, this));\n            }\n        } else {\n            this.dispatch('session_close', this._context());\n        }\n        var self = this;\n        var token = this.state.mark();\n        process.nextTick(function () {\n            if (self.state.marker === token) {\n                self.close();\n                process.nextTick(function () { self.remove(); });\n            }\n        });\n    } else {\n        throw Error('End already received');\n    }\n};\n\nSession.prototype.on_attach = function (frame) {\n    var name = frame.performative.name;\n    var link = this.links[name];\n    if (!link) {\n        // if role is true, peer is receiver, so we are sender\n        link = frame.performative.role ? this.create_sender(name) : this.create_receiver(name);\n    }\n    this.remote.handles[frame.performative.handle] = link;\n    link.on_attach(frame);\n    link.remote.attach = frame.performative;\n};\n\nSession.prototype.on_disposition = function (frame) {\n    if (frame.performative.role) {\n        log.events('[%s] Received disposition for outgoing transfers', this.connection.options.id);\n        this.outgoing.on_disposition(frame.performative);\n    } else {\n        log.events('[%s] Received disposition for incoming transfers', this.connection.options.id);\n        this.incoming.on_disposition(frame.performative);\n    }\n    this.connection._register();\n};\n\nSession.prototype.on_flow = function (frame) {\n    this.outgoing.on_flow(frame.performative);\n    this.incoming.on_flow(frame.performative);\n    if (util.is_defined(frame.performative.handle)) {\n        this._get_link(frame).on_flow(frame);\n    }\n    this.connection._register();\n};\n\nSession.prototype._context = function (c) {\n    var context = c ? c : {};\n    context.session = this;\n    return this.connection._context(context);\n};\n\nSession.prototype._get_link = function (frame) {\n    var handle = frame.performative.handle;\n    var link = this.remote.handles[handle];\n    if (!link) {\n        throw Error('Invalid handle ' + handle);\n    }\n    return link;\n};\n\nSession.prototype.on_detach = function (frame) {\n    this._get_link(frame).on_detach(frame);\n};\n\nSession.prototype.remove_link = function (link) {\n    delete this.remote.handles[link.remote.handle];\n    delete this.local.handles[link.local.handle];\n    delete this.links[link.name];\n};\n\n/**\n * This forcibly removes the session from the parent connection. It\n * should not be called for a link on an active connection, where\n * close() should be used instead.\n */\nSession.prototype.remove = function () {\n    this.connection.remove_session(this);\n};\n\nSession.prototype.on_transfer = function (frame) {\n    this.incoming.on_transfer(frame, this._get_link(frame));\n};\n\nmodule.exports = Session;\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar errors = require('./errors.js');\nvar frames = require('./frames.js');\nvar log = require('./log.js');\nvar sasl = require('./sasl.js');\nvar util = require('./util.js');\nvar EndpointState = require('./endpoint.js');\nvar Session = require('./session.js');\nvar Transport = require('./transport.js');\n\nvar fs = require('fs');\nvar os = require('os');\nvar path = require('path');\nvar net = require('net');\nvar tls = require('tls');\nvar EventEmitter = require('events').EventEmitter;\n\nvar AMQP_PROTOCOL_ID = 0x00;\n\nfunction find_connect_config() {\n    var paths;\n    if (process.env.MESSAGING_CONNECT_FILE) {\n        paths = [process.env.MESSAGING_CONNECT_FILE];\n    } else {\n        paths = [process.cwd(), path.join(os.homedir(), '.config/messaging'),'/etc/messaging'].map(function (base) { return path.join(base, '/connect.json'); });\n    }\n    for (var i = 0; i < paths.length; i++) {\n        if (fs.existsSync(paths[i])) {\n            var obj = JSON.parse(fs.readFileSync(paths[i], 'utf8'));\n            log.config('using config from %s: %j', paths[i], obj);\n            return obj;\n        }\n    }\n    return {};\n}\n\nfunction get_default_connect_config() {\n    var config = find_connect_config();\n    var options = {};\n    if (config.scheme === 'amqps') options.transport = 'tls';\n    if (config.host) options.host = config.host;\n    if(config.port === 'amqp') options.port = 5672;\n    else if(config.port === 'amqps') options.port = 5671;\n    else options.port = config.port;\n    if (!(config.sasl && config.sasl.enabled === false)) {\n        if (config.user) options.username = config.user;\n        else options.username = 'anonymous';\n        if (config.password) options.password = config.password;\n        if (config.sasl_mechanisms) options.sasl_mechanisms = config.sasl_mechanisms;\n    }\n    if (config.tls) {\n        if (config.tls.key) options.key = fs.readFileSync(config.tls.key);\n        if (config.tls.cert) options.cert = fs.readFileSync(config.tls.cert);\n        if (config.tls.ca) options.ca = [ fs.readFileSync(config.tls.ca) ];\n        if (config.verify === false || config.tls.verify === false) options.rejectUnauthorized = false;\n    }\n    if (options.transport === 'tls') {\n        options.servername = options.host;\n    }\n    return options;\n}\n\nfunction get_socket_id(socket) {\n    if (socket.get_id_string) return socket.get_id_string();\n    return socket.localAddress + ':' + socket.localPort + ' -> ' + socket.remoteAddress + ':' + socket.remotePort;\n}\n\nfunction session_per_connection(conn) {\n    var ssn = null;\n    return {\n        'get_session' : function () {\n            if (!ssn) {\n                ssn = conn.create_session();\n                ssn.observers.on('session_close', function () { ssn = null; });\n                ssn.begin();\n            }\n            return ssn;\n        }\n    };\n}\n\nfunction restrict(count, f) {\n    if (count) {\n        var current = count;\n        var reset;\n        return function (successful_attempts) {\n            if (reset !== successful_attempts) {\n                current = count;\n                reset = successful_attempts;\n            }\n            if (current--) return f(successful_attempts);\n            else return -1;\n        };\n    } else {\n        return f;\n    }\n}\n\nfunction backoff(initial, max) {\n    var delay = initial;\n    var reset;\n    return function (successful_attempts) {\n        if (reset !== successful_attempts) {\n            delay = initial;\n            reset = successful_attempts;\n        }\n        var current = delay;\n        var next = delay*2;\n        delay = max > next ? next : max;\n        return current;\n    };\n}\n\nfunction get_connect_fn(options) {\n    if (options.transport === undefined || options.transport === 'tcp') {\n        return net.connect;\n    } else if (options.transport === 'tls' || options.transport === 'ssl') {\n        return tls.connect;\n    } else {\n        throw Error('Unrecognised transport: ' + options.transport);\n    }\n}\n\nfunction connection_details(options) {\n    var details = {};\n    details.connect = options.connect ? options.connect : get_connect_fn(options);\n    details.host = options.host ? options.host : 'localhost';\n    details.port = options.port ? options.port : 5672;\n    details.options = options;\n    return details;\n}\n\nvar aliases = [\n    'container_id',\n    'hostname',\n    'max_frame_size',\n    'channel_max',\n    'idle_time_out',\n    'outgoing_locales',\n    'incoming_locales',\n    'offered_capabilities',\n    'desired_capabilities',\n    'properties'\n];\n\nfunction remote_property_shortcut(name) {\n    return function() { return this.remote.open ? this.remote.open[name] : undefined; };\n}\n\nfunction connection_fields(fields) {\n    var o = {};\n    aliases.forEach(function (name) {\n        if (fields[name] !== undefined) {\n            o[name] = fields[name];\n        }\n    });\n    return o;\n}\n\nfunction set_reconnect(reconnect, connection) {\n    if (typeof reconnect === 'boolean') {\n        if (reconnect) {\n            var initial = connection.get_option('initial_reconnect_delay', 100);\n            var max = connection.get_option('max_reconnect_delay', 60000);\n            connection.options.reconnect = restrict(\n                connection.get_option('reconnect_limit'),\n                backoff(initial, max)\n            );\n        } else {\n            connection.options.reconnect = false;\n        }\n    } else if (typeof reconnect === 'number') {\n        var fixed = connection.options.reconnect;\n        connection.options.reconnect = restrict(\n            connection.get_option('reconnect_limit'),\n            function() {\n                return fixed;\n            }\n        );\n    }\n}\n\nvar conn_counter = 1;\n\nvar Connection = function (options, container) {\n    this.options = {};\n    if (options) {\n        for (var k in options) {\n            this.options[k] = options[k];\n        }\n        if ((options.transport === 'tls' || options.transport === 'ssl')\n            && options.servername === undefined && options.host !== undefined) {\n            this.options.servername = options.host;\n        }\n    } else {\n        this.options = get_default_connect_config();\n    }\n    this.container = container;\n    if (!this.options.id) {\n        this.options.id = 'connection-' + conn_counter++;\n    }\n    if (!this.options.container_id) {\n        this.options.container_id = container ? container.id : util.generate_uuid();\n    }\n    if (!this.options.connection_details) {\n        var self = this;\n        this.options.connection_details = function() { return connection_details(self.options); };\n    }\n    var reconnect = this.get_option('reconnect', true);\n    set_reconnect(reconnect, this);\n    this.registered = false;\n    this.state = new EndpointState();\n    this.local_channel_map = {};\n    this.remote_channel_map = {};\n    this.local = {};\n    this.remote = {};\n    this.local.open = frames.open(connection_fields(this.options));\n    this.local.close = frames.close({});\n    this.session_policy = session_per_connection(this);\n    this.amqp_transport = new Transport(this.options.id, AMQP_PROTOCOL_ID, frames.TYPE_AMQP, this);\n    this.sasl_transport = undefined;\n    this.transport = this.amqp_transport;\n    this.conn_established_counter = 0;\n    this.heartbeat_out = undefined;\n    this.heartbeat_in = undefined;\n    this.abort_idle = undefined;\n    this.socket_ready = false;\n    this.scheduled_reconnect = undefined;\n    this.default_sender = undefined;\n    this.closed_with_non_fatal_error = false;\n\n    var self = this;\n    aliases.forEach(function (alias) { Object.defineProperty(self, alias, { get: remote_property_shortcut(alias) }); });\n    Object.defineProperty(this, 'error', { get:  function() { return this.remote.close ? this.remote.close.error : undefined; }});\n};\n\nConnection.prototype = Object.create(EventEmitter.prototype);\nConnection.prototype.constructor = Connection;\nConnection.prototype.dispatch = function(name) {\n    log.events('[%s] Connection got event: %s', this.options.id, name);\n    if (this.listeners(name).length) {\n        EventEmitter.prototype.emit.apply(this, arguments);\n        return true;\n    } else if (this.container) {\n        return this.container.dispatch.apply(this.container, arguments);\n    } else {\n        return false;\n    }\n};\n\nConnection.prototype._disconnect = function() {\n    this.state.disconnected();\n    for (var k in this.local_channel_map) {\n        this.local_channel_map[k]._disconnect();\n    }\n    this.socket_ready = false;\n};\n\nConnection.prototype._reconnect = function() {\n    if (this.abort_idle) {\n        clearTimeout(this.abort_idle);\n        this.abort_idle = undefined;\n        this.local.close.error = undefined;\n        this.state = new EndpointState();\n        this.state.open();\n    }\n\n    this.state.reconnect();\n    this._reset_remote_state();\n};\n\nConnection.prototype._reset_remote_state = function() {\n    //reset transport\n    this.amqp_transport = new Transport(this.options.id, AMQP_PROTOCOL_ID, frames.TYPE_AMQP, this);\n    this.sasl_transport = undefined;\n    this.transport = this.amqp_transport;\n\n    //reset remote endpoint state\n    this.remote = {};\n    //reset sessions:\n    this.remote_channel_map = {};\n    var localChannelMap = this.local_channel_map;\n    for (var k in localChannelMap) {\n        localChannelMap[k]._reconnect();\n    }\n};\n\nConnection.prototype.connect = function () {\n    this.is_server = false;\n    if (this.abort_idle) {\n        clearTimeout(this.abort_idle);\n        this.abort_idle = undefined;\n    }\n    this._reset_remote_state();\n    this._connect(this.options.connection_details(this.conn_established_counter));\n    this.open();\n    return this;\n};\n\nConnection.prototype.reconnect = function () {\n    this.scheduled_reconnect = undefined;\n    log.reconnect('[%s] reconnecting...', this.options.id);\n    this._reconnect();\n    this._connect(this.options.connection_details(this.conn_established_counter));\n    process.nextTick(this._process.bind(this));\n    return this;\n};\n\nConnection.prototype.set_reconnect = function (reconnect) {\n    set_reconnect(reconnect, this);\n};\n\nConnection.prototype._connect = function (details) {\n    if (details.connect) {\n        this.init(details.connect(details.port, details.host, details.options, this.connected.bind(this)));\n    } else {\n        this.init(get_connect_fn(details)(details.port, details.host, details.options, this.connected.bind(this)));\n    }\n    return this;\n};\n\nConnection.prototype.accept = function (socket) {\n    this.is_server = true;\n    log.io('[%s] client accepted: %s', this.id, get_socket_id(socket));\n    this.socket_ready = true;\n    return this.init(socket);\n};\n\n\nConnection.prototype.abort_socket = function (socket) {\n    if (socket === this.socket) {\n        this.abort_idle = undefined;\n        log.io('[%s] aborting socket', this.options.id);\n        this.socket.end();\n        if (this.socket.removeAllListeners) {\n            this.socket.removeAllListeners('data');\n            this.socket.removeAllListeners('error');\n            this.socket.removeAllListeners('end');\n        }\n        if (typeof this.socket.destroy === 'function') {\n            this.socket.destroy();\n        }\n        this._disconnected();\n    }\n};\n\nConnection.prototype.init = function (socket) {\n    this.socket = socket;\n    if (this.get_option('tcp_no_delay', false) && this.socket.setNoDelay) {\n        this.socket.setNoDelay(true);\n    }\n    this.socket.on('data', this.input.bind(this));\n    this.socket.on('error', this.on_error.bind(this));\n    this.socket.on('end', this.eof.bind(this));\n\n    if (this.is_server) {\n        var mechs;\n        if (this.container && Object.getOwnPropertyNames(this.container.sasl_server_mechanisms).length) {\n            mechs = this.container.sasl_server_mechanisms;\n        }\n        if (this.socket.encrypted && this.socket.authorized && this.get_option('enable_sasl_external', false)) {\n            mechs = sasl.server_add_external(mechs ? util.clone(mechs) : {});\n        }\n        if (mechs) {\n            if (mechs.ANONYMOUS !== undefined && !this.get_option('require_sasl', false)) {\n                this.sasl_transport = new sasl.Selective(this, mechs);\n            } else {\n                this.sasl_transport = new sasl.Server(this, mechs);\n            }\n        } else {\n            if (!this.get_option('disable_sasl', false)) {\n                var anon = sasl.server_mechanisms();\n                anon.enable_anonymous();\n                this.sasl_transport = new sasl.Selective(this, anon);\n            }\n        }\n    } else {\n        var mechanisms = this.get_option('sasl_mechanisms');\n        if (!mechanisms) {\n            var username = this.get_option('username');\n            var password = this.get_option('password');\n            var token = this.get_option('token');\n            if (username) {\n                mechanisms = sasl.client_mechanisms();\n                if (password) mechanisms.enable_plain(username, password);\n                else if (token) mechanisms.enable_xoauth2(username, token);\n                else mechanisms.enable_anonymous(username);\n            }\n        }\n        if (this.socket.encrypted && this.options.cert && this.get_option('enable_sasl_external', false)) {\n            if (!mechanisms) mechanisms = sasl.client_mechanisms();\n            mechanisms.enable_external();\n        }\n\n        if (mechanisms) {\n            this.sasl_transport = new sasl.Client(this, mechanisms, this.options.sasl_init_hostname || this.options.servername || this.options.host);\n        }\n    }\n    this.transport = this.sasl_transport ? this.sasl_transport : this.amqp_transport;\n    return this;\n};\n\nConnection.prototype.attach_sender = function (options) {\n    return this.session_policy.get_session().attach_sender(options);\n};\nConnection.prototype.open_sender = Connection.prototype.attach_sender;//alias\n\nConnection.prototype.attach_receiver = function (options) {\n    if (this.get_option('tcp_no_delay', true) && this.socket.setNoDelay) {\n        this.socket.setNoDelay(true);\n    }\n    return this.session_policy.get_session().attach_receiver(options);\n};\nConnection.prototype.open_receiver = Connection.prototype.attach_receiver;//alias\n\nConnection.prototype.get_option = function (name, default_value) {\n    if (this.options[name] !== undefined) return this.options[name];\n    else if (this.container) return this.container.get_option(name, default_value);\n    else return default_value;\n};\n\nConnection.prototype.send = function(msg) {\n    if (this.default_sender === undefined) {\n        this.default_sender = this.open_sender({target:{}});\n    }\n    return this.default_sender.send(msg);\n};\n\nConnection.prototype.connected = function () {\n    this.socket_ready = true;\n    this.conn_established_counter++;\n    log.io('[%s] connected %s', this.options.id, get_socket_id(this.socket));\n    this.output();\n};\n\nConnection.prototype.sasl_failed = function (text, condition) {\n    this.transport_error = new errors.ConnectionError(text, condition ? condition : 'amqp:unauthorized-access', this);\n    this._handle_error();\n    this.socket.end();\n};\n\nConnection.prototype._is_fatal = function (error_condition) {\n    var all_errors_non_fatal = this.get_option('all_errors_non_fatal', false);\n    if (all_errors_non_fatal) {\n        return false;\n    } else {\n        var non_fatal = this.get_option('non_fatal_errors', ['amqp:connection:forced']);\n        return non_fatal.indexOf(error_condition) < 0;\n    }\n};\n\nConnection.prototype._handle_error = function () {\n    var error = this.get_error();\n    if (error) {\n        var handled = this.dispatch('connection_error', this._context({error:error}));\n        handled = this.dispatch('connection_close', this._context({error:error})) || handled;\n\n        if (!this._is_fatal(error.condition)) {\n            if (this.state.local_open) {\n                this.closed_with_non_fatal_error = true;\n            }\n        } else if (!handled) {\n            this.dispatch('error', new errors.ConnectionError(error.description, error.condition, this));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\nConnection.prototype.get_error = function () {\n    if (this.transport_error) return this.transport_error;\n    if (this.remote.close && this.remote.close.error) {\n        return new errors.ConnectionError(this.remote.close.error.description, this.remote.close.error.condition, this);\n    }\n    return undefined;\n};\n\nConnection.prototype._get_peer_details = function () {\n    var s = '';\n    if (this.remote.open && this.remote.open.container) {\n        s += this.remote.open.container + ' ';\n    }\n    if (this.remote.open && this.remote.open.properties) {\n        s += JSON.stringify(this.remote.open.properties);\n    }\n    return s;\n};\n\nConnection.prototype.output = function () {\n    try {\n        if (this.socket && this.socket_ready) {\n            if (this.heartbeat_out) clearTimeout(this.heartbeat_out);\n            this.transport.write(this.socket);\n            if (((this.is_closed() && this.state.has_settled()) || this.abort_idle || this.transport_error) && !this.transport.has_writes_pending()) {\n                this.socket.end();\n            } else if (this.is_open() && this.remote.open.idle_time_out) {\n                this.heartbeat_out = setTimeout(this._write_frame.bind(this), this.remote.open.idle_time_out / 2);\n            }\n            if (this.local.open.idle_time_out && this.heartbeat_in === undefined) {\n                this.heartbeat_in = setTimeout(this.idle.bind(this), this.local.open.idle_time_out);\n            }\n        }\n    } catch (e) {\n        this.saved_error = e;\n        if (e.name === 'ProtocolError') {\n            console.error('[' + this.options.id + '] error on write: ' + e + ' ' + this._get_peer_details() + ' ' + e.name);\n            this.dispatch('protocol_error', e) || console.error('[' + this.options.id + '] error on write: ' + e + ' ' + this._get_peer_details());\n        } else {\n            this.dispatch('error', e);\n        }\n        this.socket.end();\n    }\n};\n\nfunction byte_to_hex(value) {\n    if (value < 16) return '0x0' + Number(value).toString(16);\n    else return '0x' + Number(value).toString(16);\n}\n\nfunction buffer_to_hex(buffer) {\n    var bytes = [];\n    for (var i = 0; i < buffer.length; i++) {\n        bytes.push(byte_to_hex(buffer[i]));\n    }\n    return bytes.join(',');\n}\n\nConnection.prototype.input = function (buff) {\n    var buffer;\n    try {\n        if (this.heartbeat_in) clearTimeout(this.heartbeat_in);\n        log.io('[%s] read %d bytes', this.options.id, buff.length);\n        if (this.frame_size) {\n            this.received_bytes += buff.length;\n            this.chunks.push(buff);\n            if (this.frame_size <= this.received_bytes) {\n                buffer = Buffer.concat(this.chunks, this.received_bytes);\n                this.chunks = null;\n                this.frame_size = undefined;\n            } else {\n                log.io('[%s] pushed %d bytes', this.options.id, buff.length);\n                return;\n            }\n        } else if (this.previous_input) {\n            buffer = Buffer.concat([this.previous_input, buff]);\n            this.previous_input = null;\n        } else {\n            buffer = buff;\n        }\n        const read = this.transport.read(buffer, this);\n        if (read < buffer.length) {\n            const previous_input = buffer.slice(read);\n            this.frame_size = this.transport.peek_size(previous_input);\n            if (this.frame_size) {\n                this.chunks = [previous_input];\n                this.received_bytes = previous_input.length;\n                log.io('[%s] waiting frame_size %s', this.options.id, this.frame_size);\n            } else {\n                this.previous_input = previous_input;\n            }\n        }\n        if (this.local.open.idle_time_out) this.heartbeat_in = setTimeout(this.idle.bind(this), this.local.open.idle_time_out);\n        if (this.transport.has_writes_pending()) {\n            this.output();\n        } else if (this.is_closed() && this.state.has_settled()) {\n            this.socket.end();\n        } else if (this.is_open() && this.remote.open.idle_time_out && !this.heartbeat_out) {\n            this.heartbeat_out = setTimeout(this._write_frame.bind(this), this.remote.open.idle_time_out / 2);\n        }\n    } catch (e) {\n        this.saved_error = e;\n        if (e.name === 'ProtocolError') {\n            this.dispatch('protocol_error', e) ||\n                console.error('[' + this.options.id + '] error on read: ' + e + ' ' + this._get_peer_details() + ' (buffer:' + buffer_to_hex(buffer) + ')');\n        } else {\n            this.dispatch('error', e);\n        }\n        this.socket.end();\n    }\n\n};\n\nConnection.prototype.idle = function () {\n    if (!this.is_closed()) {\n        this.closed_with_non_fatal_error = true;\n        this.local.close.error = {condition:'amqp:resource-limit-exceeded', description:'max idle time exceeded'};\n        this.close();\n        this.abort_idle = setTimeout(this.abort_socket.bind(this, this.socket), 1000);\n    }\n};\n\nConnection.prototype.on_error = function (e) {\n    this._disconnected(e);\n};\n\nConnection.prototype.eof = function (e) {\n    var error = e || this.saved_error;\n    this.saved_error = undefined;\n    this._disconnected(error);\n};\n\nConnection.prototype._disconnected = function (error) {\n    if (this.heartbeat_out) {\n        clearTimeout(this.heartbeat_out);\n        this.heartbeat_out = undefined;\n    }\n    if (this.heartbeat_in) {\n        clearTimeout(this.heartbeat_in);\n        this.heartbeat_in = undefined;\n    }\n    if (this.abort_idle) {\n        clearTimeout(this.abort_idle);\n        this.abort_idle = undefined;\n    }\n    var was_closed_with_non_fatal_error = this.closed_with_non_fatal_error;\n    if (this.closed_with_non_fatal_error) {\n        this.closed_with_non_fatal_error = false;\n        if (this.options.reconnect) this.open();\n    }\n    if ((!this.is_closed() || was_closed_with_non_fatal_error) && this.scheduled_reconnect === undefined) {\n        this._disconnect();\n        var disconnect_ctxt = {};\n        if (error) {\n            disconnect_ctxt.error = error;\n        }\n        if (!this.is_server && !this.transport_error && this.options.reconnect) {\n            var delay = this.options.reconnect(this.conn_established_counter);\n            if (delay >= 0) {\n                log.reconnect('[%s] Scheduled reconnect in ' + delay + 'ms', this.options.id);\n                this.scheduled_reconnect = setTimeout(this.reconnect.bind(this), delay);\n                disconnect_ctxt.reconnecting = true;\n            } else {\n                disconnect_ctxt.reconnecting = false;\n            }\n        }\n        if (!this.dispatch('disconnected', this._context(disconnect_ctxt))) {\n            console.warn('[' + this.options.id + '] disconnected %s', disconnect_ctxt.error || '');\n        }\n    }\n};\n\nConnection.prototype.open = function () {\n    if (this.state.open()) {\n        this._register();\n    }\n};\n\nConnection.prototype.close = function (error) {\n    if (error) this.local.close.error = error;\n    if (this.state.close()) {\n        this._register();\n    }\n};\n\nConnection.prototype.is_open = function () {\n    return this.state.is_open();\n};\n\nConnection.prototype.is_remote_open = function () {\n    return this.state.remote_open;\n};\n\nConnection.prototype.is_closed = function () {\n    return this.state.is_closed();\n};\n\nConnection.prototype.create_session = function () {\n    var i = 0;\n    while (this.local_channel_map[i]) i++;\n    var session = new Session(this, i);\n    this.local_channel_map[i] = session;\n    return session;\n};\n\nConnection.prototype.find_sender = function (filter) {\n    return this.find_link(util.sender_filter(filter));\n};\n\nConnection.prototype.find_receiver = function (filter) {\n    return this.find_link(util.receiver_filter(filter));\n};\n\nConnection.prototype.find_link = function (filter) {\n    for (var channel in this.local_channel_map) {\n        var session = this.local_channel_map[channel];\n        var result = session.find_link(filter);\n        if (result) return result;\n    }\n    return undefined;\n};\n\nConnection.prototype.each_receiver = function (action, filter) {\n    this.each_link(action, util.receiver_filter(filter));\n};\n\nConnection.prototype.each_sender = function (action, filter) {\n    this.each_link(action, util.sender_filter(filter));\n};\n\nConnection.prototype.each_link = function (action, filter) {\n    for (var channel in this.local_channel_map) {\n        var session = this.local_channel_map[channel];\n        session.each_link(action, filter);\n    }\n};\n\nConnection.prototype.on_open = function (frame) {\n    if (this.state.remote_opened()) {\n        this.remote.open = frame.performative;\n        this.open();\n        this.dispatch('connection_open', this._context());\n    } else {\n        throw new errors.ProtocolError('Open already received');\n    }\n};\n\nConnection.prototype.on_close = function (frame) {\n    if (this.state.remote_closed()) {\n        this.remote.close = frame.performative;\n        if (this.remote.close.error) {\n            this._handle_error();\n        } else {\n            this.dispatch('connection_close', this._context());\n        }\n        if (this.heartbeat_out) clearTimeout(this.heartbeat_out);\n        var self = this;\n        process.nextTick(function () {\n            self.close();\n        });\n    } else {\n        throw new errors.ProtocolError('Close already received');\n    }\n};\n\nConnection.prototype._register = function () {\n    if (!this.registered) {\n        this.registered = true;\n        process.nextTick(this._process.bind(this));\n    }\n};\n\nConnection.prototype._process = function () {\n    this.registered = false;\n    do {\n        if (this.state.need_open()) {\n            this._write_open();\n        }\n        var localChannelMap = this.local_channel_map;\n        for (var k in localChannelMap) {\n            localChannelMap[k]._process();\n        }\n        if (this.state.need_close()) {\n            this._write_close();\n        }\n    } while (!this.state.has_settled());\n};\n\nConnection.prototype._write_frame = function (channel, frame, payload) {\n    this.amqp_transport.encode(frames.amqp_frame(channel, frame, payload));\n    this.output();\n};\n\nConnection.prototype._write_open = function () {\n    this._write_frame(0, this.local.open);\n};\n\nConnection.prototype._write_close = function () {\n    this._write_frame(0, this.local.close);\n    this.local.close.error = undefined;\n};\n\nConnection.prototype.on_begin = function (frame) {\n    var session;\n    if (frame.performative.remote_channel === null || frame.performative.remote_channel === undefined) {\n        //peer initiated\n        session = this.create_session();\n        session.local.begin.remote_channel = frame.channel;\n    } else {\n        session = this.local_channel_map[frame.performative.remote_channel];\n        if (!session) throw new errors.ProtocolError('Invalid value for remote channel ' + frame.performative.remote_channel);\n    }\n    session.on_begin(frame);\n    this.remote_channel_map[frame.channel] = session;\n};\n\nConnection.prototype.get_peer_certificate = function() {\n    if (this.socket && this.socket.getPeerCertificate) {\n        return this.socket.getPeerCertificate();\n    } else {\n        return undefined;\n    }\n};\n\nConnection.prototype.get_tls_socket = function() {\n    if (this.socket && (this.options.transport === 'tls' || this.options.transport === 'ssl')) {\n        return this.socket;\n    } else {\n        return undefined;\n    }\n};\n\nConnection.prototype._context = function (c) {\n    var context = c ? c : {};\n    context.connection = this;\n    if (this.container) context.container = this.container;\n    return context;\n};\n\nConnection.prototype.remove_session = function (session) {\n    if (this.remote_channel_map[session.remote.channel] === session) {\n        delete this.remote_channel_map[session.remote.channel];\n    }\n    if (this.local_channel_map[session.local.channel] === session) {\n        delete this.local_channel_map[session.local.channel];\n    }\n};\n\nConnection.prototype.remove_all_sessions = function () {\n    clearObject(this.remote_channel_map);\n    clearObject(this.local_channel_map);\n};\n\nfunction clearObject(obj) {\n    for (var k in obj) {\n        if (!Object.prototype.hasOwnProperty.call(obj, k)) {\n            continue;\n        }\n        delete obj[k];\n    }\n}\n\nfunction delegate_to_session(name) {\n    Connection.prototype['on_' + name] = function (frame) {\n        var session = this.remote_channel_map[frame.channel];\n        if (!session) {\n            throw new errors.ProtocolError(name + ' received on invalid channel ' + frame.channel);\n        }\n        session['on_' + name](frame);\n    };\n}\n\ndelegate_to_session('end');\ndelegate_to_session('attach');\ndelegate_to_session('detach');\ndelegate_to_session('transfer');\ndelegate_to_session('disposition');\ndelegate_to_session('flow');\n\nmodule.exports = Connection;\n", "/*\n * Copyright 2018 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar ReceiverEvents;\n(function (ReceiverEvents) {\n    /**\n     * @property {string} message Raised when a message is received.\n     */\n    ReceiverEvents['message'] = 'message';\n    /**\n     * @property {string} receiverOpen Raised when the remote peer indicates the link is\n     * open (i.e. attached in AMQP parlance).\n     */\n    ReceiverEvents['receiverOpen'] = 'receiver_open';\n    /**\n     * @property {string} receiverDrained Raised when the remote peer\n     * indicates that it has drained all credit (and therefore there\n     * are no more messages at present that it can send).\n     */\n    ReceiverEvents['receiverDrained'] = 'receiver_drained';\n    /**\n     * @property {string} receiverFlow Raised when a flow is received for receiver.\n     */\n    ReceiverEvents['receiverFlow'] = 'receiver_flow';\n    /**\n     * @property {string} receiverError Raised when the remote peer\n     * closes the receiver with an error. The context may also have an\n     * error property giving some information about the reason for the\n     * error.\n     */\n    ReceiverEvents['receiverError'] = 'receiver_error';\n    /**\n     * @property {string} receiverClose Raised when the remote peer indicates the link is closed.\n     */\n    ReceiverEvents['receiverClose'] = 'receiver_close';\n    /**\n     * @property {string} settled Raised when the receiver link receives a disposition.\n     */\n    ReceiverEvents['settled'] = 'settled';\n})(ReceiverEvents || (ReceiverEvents = {}));\n\nvar SenderEvents;\n(function (SenderEvents) {\n    /**\n     * @property {string} sendable Raised when the sender has sufficient credit to be able\n     * to transmit messages to its peer.\n     */\n    SenderEvents['sendable'] = 'sendable';\n    /**\n     * @property {string} senderOpen Raised when the remote peer indicates the link is\n     * open (i.e. attached in AMQP parlance).\n     */\n    SenderEvents['senderOpen'] = 'sender_open';\n    /**\n     * @property {string} senderDraining Raised when the remote peer\n     * requests that the sender drain its credit; sending all\n     * available messages within the credit limit and ensuring credit\n     * is used up..\n     */\n    SenderEvents['senderDraining'] = 'sender_draining';\n    /**\n     * @property {string} senderFlow Raised when a flow is received for sender.\n     */\n    SenderEvents['senderFlow'] = 'sender_flow';\n    /**\n     * @property {string} senderError Raised when the remote peer\n     * closes the sender with an error. The context may also have an\n     * error property giving some information about the reason for the\n     * error.\n     */\n    SenderEvents['senderError'] = 'sender_error';\n    /**\n     * @property {string} senderClose Raised when the remote peer indicates the link is closed.\n     */\n    SenderEvents['senderClose'] = 'sender_close';\n    /**\n     * @property {string} accepted Raised when a sent message is accepted by the peer.\n     */\n    SenderEvents['accepted'] = 'accepted';\n    /**\n     * @property {string} released Raised when a sent message is released by the peer.\n     */\n    SenderEvents['released'] = 'released';\n    /**\n     * @property {string} rejected Raised when a sent message is rejected by the peer.\n     */\n    SenderEvents['rejected'] = 'rejected';\n    /**\n     * @property {string} modified Raised when a sent message is modified by the peer.\n     */\n    SenderEvents['modified'] = 'modified';\n    /**\n     * @property {string} settled Raised when the sender link receives a disposition.\n     */\n    SenderEvents['settled'] = 'settled';\n})(SenderEvents || (SenderEvents = {}));\n\n\nvar SessionEvents;\n(function (SessionEvents) {\n    /**\n     * @property {string} sessionOpen Raised when the remote peer indicates the session is\n     * open (i.e. attached in AMQP parlance).\n     */\n    SessionEvents['sessionOpen'] = 'session_open';\n    /**\n     * @property {string} sessionError Raised when the remote peer receives an error. The context\n     * may also have an error property giving some information about the reason for the error.\n     */\n    SessionEvents['sessionError'] = 'session_error';\n    /**\n     * @property {string} sessionClose Raised when the remote peer indicates the session is closed.\n     */\n    SessionEvents['sessionClose'] = 'session_close';\n    /**\n     * @property {string} settled Raised when the session receives a disposition.\n     */\n    SessionEvents['settled'] = 'settled';\n})(SessionEvents || (SessionEvents = {}));\n\nvar ConnectionEvents;\n(function (ConnectionEvents) {\n    /**\n     * @property {string} connectionOpen Raised when the remote peer indicates the connection is open.\n     */\n    ConnectionEvents['connectionOpen'] = 'connection_open';\n    /**\n     * @property {string} connectionClose Raised when the remote peer indicates the connection is closed.\n     */\n    ConnectionEvents['connectionClose'] = 'connection_close';\n    /**\n     * @property {string} connectionError Raised when the remote peer indicates an error occurred on\n     * the connection.\n     */\n    ConnectionEvents['connectionError'] = 'connection_error';\n    /**\n     * @property {string} protocolError Raised when a protocol error is received on the underlying socket.\n     */\n    ConnectionEvents['protocolError'] = 'protocol_error',\n    /**\n     * @property {string} error Raised when an error is received on the underlying socket.\n     */\n    ConnectionEvents['error'] = 'error',\n    /**\n     * @property {string} disconnected Raised when the underlying tcp connection is lost. The context\n     * has a reconnecting property which is true if the library is attempting to automatically reconnect\n     * and false if it has reached the reconnect limit. If reconnect has not been enabled or if the connection\n     * is a tcp server, then the reconnecting property is undefined. The context may also have an error\n     * property giving some information about the reason for the disconnect.\n     */\n    ConnectionEvents['disconnected'] = 'disconnected';\n    /**\n     * @property {string} settled Raised when the connection receives a disposition.\n     */\n    ConnectionEvents['settled'] = 'settled';\n})(ConnectionEvents || (ConnectionEvents = {}));\n\nmodule.exports = {\n    ReceiverEvents: ReceiverEvents,\n    SenderEvents: SenderEvents,\n    SessionEvents: SessionEvents,\n    ConnectionEvents: ConnectionEvents\n};\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nfunction nulltransform(data) { return data; }\n\nfunction from_arraybuffer(data) {\n    if (data instanceof ArrayBuffer) return Buffer.from(new Uint8Array(data));\n    else return Buffer.from(data);\n}\n\nfunction to_typedarray(data) {\n    return new Uint8Array(data);\n}\n\nfunction wrap(ws) {\n    var data_recv = nulltransform;\n    var data_send = nulltransform;\n    if (ws.binaryType) {\n        ws.binaryType = 'arraybuffer';\n        data_recv = from_arraybuffer;\n        data_send = to_typedarray;\n    }\n    return {\n        end: function() {\n            ws.close();\n        },\n        write: function(data) {\n            try {\n                ws.send(data_send(data), {binary:true});\n            } catch (e) {\n                ws.onerror(e);\n            }\n        },\n        on: function(event, handler) {\n            if (event === 'data') {\n                ws.onmessage = function(msg_evt) {\n                    handler(data_recv(msg_evt.data));\n                };\n            } else if (event === 'end') {\n                ws.onclose = handler;\n            } else if (event === 'error') {\n                ws.onerror = handler;\n            } else {\n                console.error('ERROR: Attempt to set unrecognised handler on websocket wrapper: ' + event);\n            }\n        },\n        get_id_string: function() {\n            return ws.url;\n        }\n    };\n}\n\nmodule.exports = {\n\n    'connect': function(Impl) {\n        return function (url, protocols, options) {\n            return function () {\n                return {\n                    connect: function(port_ignore, host_ignore, options_ignore, callback) {\n                        var c = new Impl(url, protocols, options);\n                        c.onopen = callback;\n                        return wrap(c);\n                    }\n                };\n            };\n        };\n    },\n    'wrap': wrap\n};\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar amqp_types = require('./types.js');\n\nmodule.exports = {\n    selector : function (s) {\n        return {'jms-selector':amqp_types.wrap_described(s, 0x468C00000004)};\n    }\n};\n", "/*\n * Copyright 2015 Red Hat Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nvar Connection = require('./connection.js');\nvar log = require('./log.js');\nvar sasl = require('./sasl.js');\nvar util = require('./util.js');\nvar eventTypes = require('./eventTypes.js');\n\nvar net = require('net');\nvar tls = require('tls');\nvar EventEmitter = require('events').EventEmitter;\n\nvar Container = function (options) {\n    this.options = options ? Object.create(options) : {};\n    if (!this.options.id) {\n        this.options.id = util.generate_uuid();\n    }\n    this.id = this.options.id;\n    this.sasl_server_mechanisms = sasl.server_mechanisms();\n};\n\nContainer.prototype = Object.create(EventEmitter.prototype);\nContainer.prototype.constructor = Container;\nContainer.prototype.dispatch = function(name) {\n    log.events('[%s] Container got event: ' + name, this.id);\n    EventEmitter.prototype.emit.apply(this, arguments);\n    if (this.listeners(name).length) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nContainer.prototype.connect = function (options) {\n    return new Connection(options, this).connect();\n};\n\nContainer.prototype.create_connection = function (options) {\n    return new Connection(options, this);\n};\n\nContainer.prototype.listen = function (options) {\n    var container = this;\n    var server;\n    if (options.transport === undefined || options.transport === 'tcp') {\n        server = net.createServer(options);\n        server.on('connection', function (socket) {\n            new Connection(options, container).accept(socket);\n        });\n    } else if (options.transport === 'tls' || options.transport === 'ssl') {\n        server = tls.createServer(options);\n        server.on('secureConnection', function (socket) {\n            new Connection(options, container).accept(socket);\n        });\n    } else {\n        throw Error('Unrecognised transport: ' + options.transport);\n    }\n    if (process.version.match(/v0\\.10\\.\\d+/)) {\n        server.listen(options.port, options.host);\n    } else {\n        server.listen(options);\n    }\n    return server;\n};\n\nContainer.prototype.create_container = function (options) {\n    return new Container(options);\n};\n\nContainer.prototype.get_option = function (name, default_value) {\n    if (this.options[name] !== undefined) return this.options[name];\n    else return default_value;\n};\n\nContainer.prototype.generate_uuid = util.generate_uuid;\nContainer.prototype.string_to_uuid = util.string_to_uuid;\nContainer.prototype.uuid_to_string = util.uuid_to_string;\nvar ws = require('./ws.js');\nContainer.prototype.websocket_accept = function(socket, options) {\n    new Connection(options, this).accept(ws.wrap(socket));\n};\nContainer.prototype.websocket_connect = ws.connect;\nContainer.prototype.filter = require('./filter.js');\nContainer.prototype.types = require('./types.js');\nContainer.prototype.message = require('./message.js');\nContainer.prototype.sasl = sasl;\nContainer.prototype.ReceiverEvents = eventTypes.ReceiverEvents;\nContainer.prototype.SenderEvents = eventTypes.SenderEvents;\nContainer.prototype.SessionEvents = eventTypes.SessionEvents;\nContainer.prototype.ConnectionEvents = eventTypes.ConnectionEvents;\n\nmodule.exports = new Container();\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport * as debugModule from \"debug\";\n/**\n * @ignore\n * log statements for container\n */\nexport const container = debugModule(\"rhea-promise:container\");\n/**\n * @ignore\n * log statements for connection\n */\nexport const connection = debugModule(\"rhea-promise:connection\");\n/**\n * @ignore\n * log statements for session\n */\nexport const session = debugModule(\"rhea-promise:session\");\n/**\n * @ignore\n * log statements for sender\n */\nexport const sender = debugModule(\"rhea-promise:sender\");\n/**\n * @ignore\n * log statements for receiver\n */\nexport const receiver = debugModule(\"rhea-promise:receiver\");\n/**\n * @ignore\n * log statements for error\n */\nexport const error = debugModule(\"rhea-promise:error\");\n/**\n * @ignore\n * log statements for error\n */\nexport const eventHandler = debugModule(\"rhea-promise:eventhandler\");\n/**\n * @ignore\n * log statements for error\n */\nexport const contextTranslator = debugModule(\"rhea-promise:translate\");\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { EventContext as RheaEventContext } from \"rhea\";\nimport { Link } from \"../link\";\nimport { Session } from \"../session\";\nimport { Connection } from \"../connection\";\nimport * as log from \"../log\";\nimport { EventContext } from '../eventContext';\n\n/**\n * Defines a mapping for Http like response status codes for different status-code values\n * provided by an AMQP broker.\n * @enum AmqpResponseStatusCode\n */\nexport enum AmqpResponseStatusCode {\n  Continue = 100,\n  SwitchingProtocols = 101,\n  OK = 200,\n  Created = 201,\n  Accepted = 202,\n  NonAuthoritativeInformation = 203,\n  NoContent = 204,\n  ResetContent = 205,\n  PartialContent = 206,\n  Ambiguous = 300,\n  MultipleChoices = 300,\n  Moved = 301,\n  MovedPermanently = 301,\n  Found = 302,\n  Redirect = 302,\n  RedirectMethod = 303,\n  SeeOther = 303,\n  NotModified = 304,\n  UseProxy = 305,\n  Unused = 306,\n  RedirectKeepVerb = 307,\n  TemporaryRedirect = 307,\n  BadRequest = 400,\n  Unauthorized = 401,\n  PaymentRequired = 402,\n  Forbidden = 403,\n  NotFound = 404,\n  MethodNotAllowed = 405,\n  NotAcceptable = 406,\n  ProxyAuthenticationRequired = 407,\n  RequestTimeout = 408,\n  Conflict = 409,\n  Gone = 410,\n  LengthRequired = 411,\n  PreconditionFailed = 412,\n  RequestEntityTooLarge = 413,\n  RequestUriTooLong = 414,\n  UnsupportedMediaType = 415,\n  RequestedRangeNotSatisfiable = 416,\n  ExpectationFailed = 417,\n  UpgradeRequired = 426,\n  InternalServerError = 500,\n  NotImplemented = 501,\n  BadGateway = 502,\n  ServiceUnavailable = 503,\n  GatewayTimeout = 504,\n  HttpVersionNotSupported = 505\n}\n\n/**\n * Provides a list of predefined (amqp) protocol level properties for an amqp message.\n */\nexport const messageProperties: string[] = [\n  \"message_id\", \"reply_to\", \"to\", \"correlation_id\", \"content_type\", \"absolute_expiry_time\",\n  \"group_id\", \"group_sequence\", \"reply_to_group_id\", \"content_encoding\", \"creation_time\", \"subject\",\n  \"user_id\"\n];\n\n/**\n * Provides a list of predefined (amqp) protocol level properties for an amqp message header.\n */\nexport const messageHeader: string[] = [\n  \"first_acquirer\", \"delivery_count\", \"ttl\", \"durable\", \"priority\"\n];\n\n/**\n * Type declaration for a Function type where T is the input to the function and V is the output of the function.\n */\nexport type Func<T, V> = (a: T) => V;\n\n/**\n * Determines whether the given error object is like an AmqpError object.\n * @param {object} err The AmqpError object\n * @returns {boolean} result - `true` if it is an AMQP Error; `false` otherwise.\n */\nexport function isAmqpError(err: any): boolean {\n  if (!err || typeof err !== \"object\") {\n    throw new Error(\"err is a required parameter and must be of type 'object'.\");\n  }\n  let result = false;\n  if (((err.condition && typeof err.condition === \"string\") && (err.description && typeof err.description === \"string\"))\n    || (err.value && Array.isArray(err.value))\n    || (err.constructor && err.constructor.name === \"c\")) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * Describes the options that can be provided while parsing connection strings.\n * The connection string usually looks like `{A}={B};{C}={D}`.\n * @interface ConnectionStringParseOptions\n */\nexport interface ConnectionStringParseOptions {\n  /**\n   * @property {string} [entitySeperator] Describes the separator that separates different parts/\n   * entities in a connection string. Default value `;`.\n   */\n  entitySeperator?: string;\n  /**\n   * @property {string} [keyValueSeparator] Describes the separator that separates the key/value\n   * pair for an entity/part in a connection string; Default value `=`.\n   */\n  keyValueSeparator?: string;\n}\n\n/**\n * Defines an object with possible properties defined in T.\n * @type ParsedOutput<T>\n */\nexport type ParsedOutput<T> = {\n  [P in keyof T]: T[P];\n};\n\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} t - The number of milliseconds to be delayed.\n * @param {T} value - The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T | void>} - Resolved promise\n */\nexport function delay<T>(t: number, value?: T): Promise<T | void> {\n  return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n\n/**\n * Parses the connection string and returns an object of type T.\n * @param {string} connectionString The connection string to be parsed.\n * @returns {ParsedOutput<T>} ParsedOutput<T>.\n */\nexport function parseConnectionString<T>(connectionString: string, options?: ConnectionStringParseOptions): ParsedOutput<T> {\n  if (!options) options = {};\n  const entitySeperator = options.entitySeperator || \";\";\n  const keyValueSeparator = options.keyValueSeparator || \"=\";\n\n  return connectionString.split(entitySeperator).reduce((acc, part) => {\n    const splitIndex = part.indexOf(keyValueSeparator);\n    return {\n      ...acc,\n      [part.substring(0, splitIndex)]: part.substring(splitIndex + 1)\n    };\n  }, {} as any);\n}\n\n/**\n * @ignore\n * Describes the parameters to be provided to the function `emitEvent()`.\n * @interface EmitParameters\n */\nexport interface EmitParameters {\n  rheaContext: RheaEventContext;\n  emitter: Link | Session | Connection;\n  eventName: string;\n  connectionId: string;\n  emitterType: \"sender\" | \"receiver\" | \"session\" | \"connection\";\n}\n\n/**\n * @ignore\n * Emits an event.\n * @param params parameters needed to emit an event from one of the rhea-promise objects.\n * @returns void\n */\nexport function emitEvent(params: EmitParameters): void {\n  const emit = () => {\n    const id = params.emitter &&\n      ((params.emitter as Connection | Session).id || (params.emitter as Link).name);\n    log[params.emitterType](\"[%s] %s '%s' got event: '%s'. Re-emitting the translated context.\",\n      params.connectionId, params.emitterType, id, params.eventName);\n    params.emitter.emit(params.eventName,\n      EventContext.translate(params.rheaContext, params.emitter, params.eventName));\n  };\n  if (params.eventName.indexOf(\"error\") !== -1 && params.emitter.actionInitiated > 0) {\n    log[params.emitterType](\"[%s] %s got event: '%s'. Will re-emit in the next tick, since \" +\n      \"this happened before the promise for create/close was resolved.\", params.connectionId,\n    params.emitterType, params.eventName);\n    // setTimeout() without any time is equivalent to process.nextTick() and works in node.js and\n    // browsers. We wait for a tick to emit error events in general. This should give enough\n    // time for promises to resolve on *_open (create) and *_close (close).\n    setTimeout(emit);\n  } else {\n    emit();\n  }\n}\n\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\nexport const abortErrorName = \"AbortError\";\n\n/**\n * Helper method to return an Error to be used when an operation is cancelled\n * using an AbortSignalLike\n */\nexport function createAbortError(): Error {\n  const error = new Error(\"The operation was aborted.\");\n  error.name = abortErrorName;\n  return error;\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { EventEmitter } from \"events\";\n\n/**\n * Abstract base class for all the entities like Connection, Session, Sender, Receiver in the\n * AMQP protocol.\n * @class Entity\n */\nexport abstract class Entity extends EventEmitter {\n  /**\n   * @property actionInitiated Indicates whether the action of creating or closing an entity has\n   * been initiated. Whenever an action has been initiated, the count will be incremented by 1.\n   * Whenever the action completes (succeeds/fails) the count will be decremented by 1.\n   * Default value: `0`.\n   */\n  actionInitiated = 0;\n  constructor() {\n    super();\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\n/**\n * Defines the error that occurs when an operation timeout occurs.\n */\nexport class OperationTimeoutError extends Error {\n  /**\n   * Describes the name of the error.\n   */\n  readonly name: string = \"OperationTimeoutError\";\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Defines the error that occurs when the Sender does not have enough credit.\n */\nexport class InsufficientCreditError extends Error {\n  /**\n   * Describes the name of the error.\n   */\n  readonly name: string = \"InsufficientCreditError\";\n\n  constructor(message: string) {\n    super(message);\n  }\n}\n\n/**\n * Defines the error that occurs when the Sender fails to send a message.\n */\nexport class SendOperationFailedError extends Error {\n  /**\n   * Describes the name of the error.\n   */\n  readonly name: string = \"SendOperationFailedError\";\n\n  constructor(\n    /**\n     * Provides descriptive information about the error.\n     */\n    readonly message: string,\n    /**\n     * Provides the corresponding event associated with the `SendOperationFailedError`.\n     * - If the code is `\"sender_error\"` | `\"session_error\"`, then the send operation failed\n     * due to the sender link getting disconnected.\n     * - If the code is `\"rejected\"` | `\"released\"` | `\"modified\"`, then the send operation failed\n     * because the server is currently unable to accept the message being sent. Please take a look\n     * at the [AMQP 1.0 specification - \"Section 3.4 Delivery State\"](http://www.amqp.org/sites/amqp.org/files/amqp.pdf)\n     * for details about `\"rejected\"` | `\"released\"` | `\"modified\"` disposition.\n     */\n    readonly code: \"rejected\" | \"released\" | \"modified\" | \"sender_error\" | \"session_error\",\n    /**\n     * Describes the underlying error that caused the send operation to fail.\n     */\n    readonly innerError?: Error) {\n    super(message);\n    this.code = code;\n    this.innerError = innerError;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport * as log from \"./log\";\nimport {\n  link, LinkOptions, AmqpError, Dictionary, Source, TerminusOptions, SenderEvents, ReceiverEvents,\n  EventContext as RheaEventContext, ConnectionEvents\n} from \"rhea\";\nimport { Session } from \"./session\";\nimport { Connection } from \"./connection\";\nimport { emitEvent, EmitParameters } from './util/utils';\nimport { Entity } from \"./entity\";\nimport { OperationTimeoutError } from \"./errorDefinitions\";\n\nexport enum LinkType {\n  sender = \"sender\",\n  receiver = \"receiver\"\n}\n\n/**\n * @interface LinkCloseOptions\n * Describes the options that can be provided while closing the link.\n */\nexport interface LinkCloseOptions {\n  /**\n   * Indicates whether the underlying amqp session should also be closed when the\n   * link is being closed.\n   * - **Default: `true`**.\n   */\n  closeSession?: boolean;\n}\n\nexport abstract class Link extends Entity {\n  linkOptions?: LinkOptions;\n  type: LinkType;\n  protected _link: link;\n  protected _session: Session;\n  constructor(type: LinkType, session: Session, link: link, options?: LinkOptions) {\n    super();\n    this.type = type;\n    this._session = session;\n    this._link = link;\n    this.linkOptions = options;\n    this._initializeEventListeners();\n  }\n\n  get name(): string {\n    return this._link.name;\n  }\n\n  get error(): AmqpError | Error | undefined {\n    return this._link.error;\n  }\n\n  get properties(): Dictionary<any> {\n    return this._link.properties;\n  }\n\n  get sendSettleMode(): 0 | 1 | 2 {\n    return this._link.snd_settle_mode;\n  }\n\n  get receiveSettleMode(): 0 | 1 {\n    return this._link.rcv_settle_mode;\n  }\n\n  get source(): Source {\n    return this._link.source;\n  }\n\n  set source(fields: Source) {\n    this._link.set_source(fields);\n  }\n\n  get target(): TerminusOptions {\n    return this._link.target;\n  }\n\n  set target(fields: TerminusOptions) {\n    this._link.set_source(fields);\n  }\n\n  get maxMessageSize(): number {\n    return this._link.max_message_size;\n  }\n\n  get offeredCapabilities(): string | string[] {\n    return this._link.offered_capabilities;\n  }\n\n  get desiredCapabilities(): string | string[] {\n    return this._link.desired_capabilities;\n  }\n\n  get address(): string {\n    return this.source.address;\n  }\n\n  get credit(): number {\n    return (this._link as any).credit;\n  }\n\n  get session(): Session {\n    return this._session;\n  }\n\n  get connection(): Connection {\n    return this._session.connection;\n  }\n\n  /**\n   * Determines whether the sender link and its underlying session is open.\n   * @returns {boolean} `true` open. `false` closed.\n   */\n  isOpen(): boolean {\n    let result = false;\n    if (this._session.isOpen() && this._link.is_open()) {\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Determines whether the remote end of the link is open.\n   * @return {boolean} boolean `true` - is open; `false` otherwise.\n   */\n  isRemoteOpen(): boolean {\n    return this._link.is_remote_open();\n  }\n\n  /**\n   * Determines whether the link has credit.\n   * @return {boolean} boolean `true` - has credit; `false` otherwise.\n   */\n  hasCredit(): boolean {\n    return this._link.has_credit();\n  }\n\n  /**\n   * Determines whether the link is a sender.\n   * @return {boolean} boolean `true` - sender; `false` otherwise.\n   */\n  isSender(): boolean {\n    return this._link.is_sender();\n  }\n\n  /**\n   * Determines whether the link is a receiver.\n   * @return {boolean} boolean `true` - receiver; `false` otherwise.\n   */\n  isReceiver(): boolean {\n    return this._link.is_receiver();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for link or it's underlying session\n   * or it's underlying connection are closed.\n   * Within the \"sender_close\", \"session_close\" event handler, if this\n   * method returns `false` it means that the local end is still open. It can be useful to\n   * determine whether the close was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` if closed, `false` otherwise.\n   */\n  isClosed(): boolean {\n    return this._link.is_closed();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for just the link itself are closed.\n   * Within the \"sender_close\" event handler, if this method returns `false` it\n   * means that the local end is still open. It can be useful to determine whether the close\n   * was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` - closed, `false` otherwise.\n   */\n  isItselfClosed(): boolean {\n    return this._link.is_itself_closed();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for session or it's underlying\n   * connection are closed.\n   *\n   * Within the \"session_close\" event handler, if this method returns `false` it means that\n   * the local end is still open. It can be useful to determine whether the close\n   * was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` - closed, `false` otherwise.\n   */\n  isSessionClosed(): boolean {\n    return this._session.isClosed();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for just the session itself are closed.\n   * Within the \"session_close\" event handler, if this method returns `false` it means that\n   * the local end is still open. It can be useful to determine whether the close\n   * was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` - closed, `false` otherwise.\n   */\n  isSessionItselfClosed(): boolean {\n    return this._session.isItselfClosed();\n  }\n\n  /**\n   * Removes the underlying amqp link and it's session from the internal map in rhea. Also removes\n   * all the event handlers added in the rhea-promise library on the link and it's session.\n   * @returns {void} void\n   */\n  remove(): void {\n    if (this._link) {\n      // Remove our listeners and listeners from rhea's link object.\n      this.removeAllListeners();\n      this._link.removeAllListeners();\n      this._link.remove();\n    }\n    if (this._session) {\n      this._session.remove();\n    }\n  }\n\n  /**\n   * Closes the underlying amqp link and optionally the session as well in rhea if open.\n   * Also removes all the event handlers added in the rhea-promise library on the link\n   * and optionally it's session.\n   * @returns Promise<void>\n   * - **Resolves** the promise when rhea emits the \"sender_close\" | \"receiver_close\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the\n   * \"sender_error\" | \"receiver_error\" event while trying to close the amqp link.\n   */\n  async close(options?: LinkCloseOptions): Promise<void> {\n    if (!options) options = {};\n    if (options.closeSession == undefined) options.closeSession = true;\n\n    const closePromise = new Promise<void>((resolve, reject) => {\n      log.error(\"[%s] The %s '%s' on amqp session '%s' is open ? -> %s\",\n        this.connection.id, this.type, this.name, this.session.id, this.isOpen());\n      if (this.isOpen()) {\n        const errorEvent = this.type === LinkType.sender\n          ? SenderEvents.senderError\n          : ReceiverEvents.receiverError;\n        const closeEvent = this.type === LinkType.sender\n          ? SenderEvents.senderClose\n          : ReceiverEvents.receiverClose;\n\n        const removeListeners = () => {\n          clearTimeout(waitTimer);\n          this.actionInitiated--;\n          this._link.removeListener(errorEvent, onError);\n          this._link.removeListener(closeEvent, onClose);\n          this._link.connection.removeListener(ConnectionEvents.disconnected, onDisconnected);\n        };\n\n        const onClose = (context: RheaEventContext) => {\n          removeListeners();\n          log[this.type](\"[%s] Resolving the promise as the %s '%s' on amqp session '%s' \" +\n            \"has been closed.\", this.connection.id, this.type, this.name, this.session.id);\n          return resolve();\n        };\n\n        const onError = (context: RheaEventContext) => {\n          removeListeners();\n          let error = context.session!.error;\n          if (this.type === LinkType.sender && context.sender && context.sender.error) {\n            error = context.sender.error;\n          } else if (this.type === LinkType.receiver && context.receiver && context.receiver.error) {\n            error = context.receiver.error;\n          }\n\n          log.error(\"[%s] Error occurred while closing %s '%s' on amqp session '%s': %O.\",\n            this.connection.id, this.type, this.name, this.session.id, error);\n          return reject(error);\n        };\n\n        const onDisconnected = (context: RheaEventContext) => {\n          removeListeners();\n          const error = context.connection && context.connection.error\n            ? context.connection.error\n            : context.error;\n          log.error(\"[%s] Connection got disconnected while closing amqp %s '%s' on amqp \" +\n            \"session '%s': %O.\", this.connection.id, this.type, this.name, this.session.id, error);\n        };\n\n        const actionAfterTimeout = () => {\n          removeListeners();\n          const msg: string = `Unable to close the ${this.type} '${this.name}' ` +\n            `on amqp session '${this.session.id}' due to operation timeout.`;\n          log.error(\"[%s] %s\", this.connection.id, msg);\n          return reject(new OperationTimeoutError(msg));\n        };\n\n        // listeners that we add for completing the operation are added directly to rhea's objects.\n        this._link.once(closeEvent, onClose);\n        this._link.once(errorEvent, onError);\n        this._link.connection.once(ConnectionEvents.disconnected, onDisconnected);\n        const waitTimer = setTimeout(actionAfterTimeout,\n          this.connection.options!.operationTimeoutInSeconds! * 1000);\n        this._link.close();\n        this.actionInitiated++;\n      } else {\n        return resolve();\n      }\n    });\n\n    try {\n      await closePromise;\n    } finally {\n      this.removeAllListeners();\n    }\n\n    if (options.closeSession) {\n      log[this.type](\"[%s] %s '%s' has been closed, now closing it's amqp session '%s'.\",\n        this.connection.id, this.type, this.name, this.session.id);\n      return this._session.close();\n    }\n  }\n\n  /**\n   * Adds event listeners for the possible events that can occur on the link object and\n   * re-emits the same event back with the received arguments from rhea's event emitter.\n   * @private\n   * @returns {void} void\n   */\n  private _initializeEventListeners(): void {\n    const events = this.type === LinkType.sender ? SenderEvents : ReceiverEvents;\n    for (const eventName of Object.keys(events) as Array<keyof typeof events>) {\n      this._link.on(events[eventName],\n        (context: RheaEventContext) => {\n          const params: EmitParameters = {\n            rheaContext: context,\n            emitter: this,\n            eventName: events[eventName],\n            emitterType: this.type,\n            connectionId: this.connection.id\n          };\n          emitEvent(params);\n        });\n    }\n    if (typeof this._link.eventNames === \"function\") {\n      log.eventHandler(\"[%s] rhea-promise '%s' object is listening for events: %o \" +\n        \"emitted by rhea's '%s' object.\", this.connection.id, this.type,\n        this._link.eventNames(), this.type);\n    }\n    if (typeof this._link.listenerCount === \"function\") {\n      log.eventHandler(\"[%s] ListenerCount for event '%s_error' on rhea's '%s' object is: %d.\",\n        this.connection.id, this.type, this.type, this._link.listenerCount(`${this.type}_error`));\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { Session } from \"./session\";\nimport {\n  ReceiverEvents,\n  Receiver as RheaReceiver,\n  ReceiverOptions as RheaReceiverOptions,\n} from \"rhea\";\nimport { Link, LinkType } from \"./link\";\nimport { OnAmqpEvent } from \"./eventContext\";\n\n/**\n * Descibes the options that can be provided while creating an AMQP sender.\n * @interface ReceiverOptions\n */\nexport interface ReceiverOptions extends RheaReceiverOptions {\n  /**\n   * @property {OnAmqpEvent} [onSettled] The handler that can be provided for receiving the\n   * \"settled\" event when a message is received on the underling rhea receiver.\n   */\n  onSettled?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onMessage] The handler that can be provided for receiving the\n   * \"message\" event when a message is received on the underling rhea receiver.\n   */\n  onMessage?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onError] The handler that can be provided for receiving any\n   * errors that occur on the \"receiver_error\" event on the underlying rhea receiver.\n   */\n  onError?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onClose] The handler that can be provided for receiving the\n   * \"receiver_close\" event on the underlying rhea receiver.\n   */\n  onClose?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onSessionError] The handler that can be provided for receiving\n   * the \"session_error\" event that occurs on the underlying rhea session.\n   */\n  onSessionError?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onSessionClose] The handler that can be provided for receiving the\n   * \"session_close\" event that occurs on the underlying rhea session.\n   */\n  onSessionClose?: OnAmqpEvent;\n}\n\n/**\n * Describes the event listeners that can be added to the Receiver.\n * @interface Receiver\n */\nexport declare interface Receiver {\n  on(event: ReceiverEvents, listener: OnAmqpEvent): this;\n}\n\n/**\n * Describes the receiver that wraps the rhea receiver.\n * @class Receiver.\n */\nexport class Receiver extends Link {\n  constructor(\n    session: Session,\n    receiver: RheaReceiver,\n    options?: ReceiverOptions\n  ) {\n    super(LinkType.receiver, session, receiver, options);\n  }\n\n  get drain(): boolean {\n    return (this._link as RheaReceiver).drain;\n  }\n\n  set drain(value: boolean) {\n    (this._link as RheaReceiver).drain = value;\n  }\n\n  addCredit(credit: number): void {\n    (this._link as RheaReceiver).add_credit(credit);\n  }\n\n  drainCredit(): void {\n    (this._link as RheaReceiver).drain_credit();\n  }\n\n  setCreditWindow(creditWindow: number): void {\n    (this._link as RheaReceiver).set_credit_window(creditWindow);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport {\n  SenderOptions as RheaSenderOptions, Delivery, Message, Sender as RheaSender\n} from \"rhea\";\nimport { Session } from \"./session\";\nimport { SenderEvents } from \"rhea\";\nimport { Link, LinkType } from './link';\nimport { OnAmqpEvent } from \"./eventContext\";\n\n/**\n * Descibes the options that can be provided while creating an AMQP Basesender.\n * @interface BaseSenderOptions\n */\nexport interface BaseSenderOptions extends RheaSenderOptions {\n  /**\n   * @property {OnAmqpEvent} [onError] The handler that can be provided for receiving any\n   * errors that occur on the \"sender_error\" event.\n   */\n  onError?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onClose] The handler that can be provided for receiving the\n   * \"sender_close\" event.\n   */\n  onClose?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onSessionError] The handler that can be provided for receiving\n   * the \"session_error\" event that occurs on the underlying session.\n   */\n  onSessionError?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onSessionClose] The handler that can be provided for receiving the\n   * \"session_close\" event that occurs on the underlying session.\n   */\n  onSessionClose?: OnAmqpEvent;\n}\n\n/**\n * Descibes the options that can be provided while creating an AMQP sender.\n * @interface SenderOptions\n */\nexport interface SenderOptions extends BaseSenderOptions {\n  /**\n   * @property {OnAmqpEvent} [onAccepted] The handler that can be provided for receiving the\n   * \"accepted\" event after a message is sent from the underlying rhea sender.\n   */\n  onAccepted?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onRejected] The handler that can be provided for receiving the\n   * \"rejected\" event after a message is sent from the underlying rhea sender.\n   */\n  onRejected?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onReleased] The handler that can be provided for receiving the\n   * \"released\" event after a message is sent from the underlying rhea sender.\n   */\n  onReleased?: OnAmqpEvent;\n  /**\n   * @property {OnAmqpEvent} [onModified] The handler that can be provided for receiving the\n   * \"modified\" event after a message is sent from the underlying rhea sender.\n   */\n  onModified?: OnAmqpEvent;\n}\n\n/**\n * Describes the event listeners that can be added to the Sender.\n * @interface Sender\n */\nexport declare interface Sender {\n  on(event: SenderEvents, listener: OnAmqpEvent): this;\n}\n\n/**\n * Describes the base sender that wraps the rhea sender.\n * @class BaseSender\n */\nexport class BaseSender extends Link {\n\n  constructor(session: Session, sender: RheaSender, options?: BaseSenderOptions) {\n    super(LinkType.sender, session, sender, options);\n  }\n\n  setDrained(drained: boolean): void {\n    (this._link as RheaSender).set_drained(drained);\n  }\n\n  /**\n   * Determines whether the message is sendable.\n   * @returns {boolean} `true` Sendable. `false` Not Sendable.\n   */\n  sendable(): boolean {\n    return (this._link as RheaSender).sendable();\n  }\n}\n\nexport class SenderSendOptions {\n  /**\n   * The message format. Specify this if a message with custom format needs to be sent.\n   * `0` implies the standard AMQP 1.0 defined format. If no value is provided, then the\n   * given message is assumed to be of type Message interface and encoded appropriately.\n   */\n  format?: number;\n  /**\n   * The message tag if any.\n   */\n  tag?: Buffer | string;\n}\n\n/**\n * Describes the AMQP Sender.\n * @class Sender\n */\nexport class Sender extends BaseSender {\n\n  constructor(session: Session, sender: RheaSender, options?: SenderOptions) {\n    super(session, sender, options);\n  }\n\n  /**\n   * Sends the message\n   * @param {Message | Buffer} msg The message to be sent. For default AMQP format msg parameter\n   * should be of type Message interface. For a custom format, the msg parameter should be a Buffer\n   * and a valid value should be passed to the `format` argument.\n   * @param {SenderSendOptions} [options] Options to configure the tag and message format of the message.\n   * @returns {Delivery} Delivery The delivery information about the sent message.\n   */\n  send(msg: Message | Buffer, options: SenderSendOptions = {}): Delivery {\n    return (this._link as RheaSender).send(msg, options.tag, options.format);\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport {\n  Delivery, Message, Sender as RheaSender, SessionEvents\n} from \"rhea\";\nimport * as log from \"./log\";\nimport { BaseSender, BaseSenderOptions } from \"./sender\";\nimport { SenderEvents } from \"rhea\";\nimport { OnAmqpEvent, EventContext } from \"./eventContext\";\nimport { Session } from \"./session\";\nimport {\n  OperationTimeoutError, InsufficientCreditError, SendOperationFailedError\n} from \"./errorDefinitions\";\nimport { AbortSignalLike, createAbortError } from \"./util/utils\";\n\n/**\n * Describes the interface for the send operation Promise which contains a reference to resolve,\n * reject functions and the timer for that Promise.\n * @interface PromiseLike\n */\nexport interface PromiseLike {\n  resolve: (value?: any) => void;\n  reject: (reason?: any) => void;\n  timer: NodeJS.Timer;\n}\n\n/**\n * Describes the event listeners that can be added to the AwaitableSender.\n * @interface Sender\n */\nexport declare interface AwaitableSender {\n  on(event: SenderEvents, listener: OnAmqpEvent): this;\n}\n\nexport type AwaitableSenderOptions = BaseSenderOptions\n\nexport interface AwaitableSendOptions {\n  /**\n   * The duration in which the promise to send the message should complete (resolve/reject).\n   * If it is not completed, then the Promise will be rejected after timeout occurs.\n   * Default: `20 seconds`.\n   */\n  timeoutInSeconds?: number;\n  /**\n   * A signal to cancel the send operation. This does not guarantee that the message will not be\n   * sent. It only stops listening for an acknowledgement from the remote endpoint.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * The message format. Specify this if a message with custom format needs to be sent.\n   * `0` implies the standard AMQP 1.0 defined format. If no value is provided, then the\n   * given message is assumed to be of type Message interface and encoded appropriately.\n   */\n  format?: number;\n  /**\n   * The message tag if any.\n   */\n  tag?: Buffer | string;\n}\n\n/**\n * Describes the sender where one can await on the message being sent.\n * @class AwaitableSender\n */\nexport class AwaitableSender extends BaseSender {\n  /**\n   * @property {Map<number, PromiseLike} deliveryDispositionMap Maintains a map of delivery of\n   * messages that are being sent. It acts as a store for correlating the dispositions received\n   * for sent messages.\n   */\n  deliveryDispositionMap: Map<number, PromiseLike> = new Map<number, PromiseLike>();\n\n  constructor(session: Session, sender: RheaSender, options: AwaitableSenderOptions = {}) {\n    super(session, sender, options);\n    /**\n     * The handler that will be added on the Sender for `accepted` event. If the delivery id is\n     * present in the disposition map then it will clear the timer and resolve the promise with the\n     * delivery.\n     * @param delivery Delivery associated with message that was sent.\n     */\n    const onSendSuccess = (delivery: Delivery) => {\n      const id = delivery.id;\n      if (this.deliveryDispositionMap.has(delivery.id)) {\n        const promise = this.deliveryDispositionMap.get(id) as PromiseLike;\n        clearTimeout(promise.timer);\n        const deleteResult = this.deliveryDispositionMap.delete(id);\n        log.sender(\n          \"[%s] Event: 'Accepted', Successfully deleted the delivery with id %d from \" +\n          \"the map of sender '%s' on amqp session '%s' and cleared the timer: %s.\",\n          this.connection.id, id, this.name, this.session.id, deleteResult\n        );\n        return promise.resolve(delivery);\n      }\n    };\n\n    /**\n     * The handler is added on the Sender for `rejected`, `released` and `modified` events.\n     * If the delivery is found in the disposition map then the timer will be cleared and the\n     * promise will be rejected with an appropriate error message.\n     * @param eventName Name of the event that was raised.\n     * @param id Delivery id.\n     * @param error Error from the context if any.\n     */\n    const onSendFailure = (\n      eventName: \"rejected\" | \"released\" | \"modified\" | \"sender_error\" | \"session_error\",\n      id: number,\n      error?: Error) => {\n      if (this.deliveryDispositionMap.has(id)) {\n        const promise = this.deliveryDispositionMap.get(id) as PromiseLike;\n        clearTimeout(promise.timer);\n        const deleteResult = this.deliveryDispositionMap.delete(id);\n        log.sender(\n          \"[%s] Event: '%s', Successfully deleted the delivery with id %d from the \" +\n          \" map of sender '%s' on amqp session '%s' and cleared the timer: %s.\",\n          this.connection.id, eventName, id, this.name, this.session.id, deleteResult\n        );\n        const msg = `Sender '${this.name}' on amqp session '${this.session.id}', received a ` +\n          `'${eventName}' disposition. Hence we are rejecting the promise.`;\n        const err = new SendOperationFailedError(msg, eventName, error);\n        log.error(\"[%s] %s\", this.connection.id, msg);\n        return promise.reject(err);\n      }\n    };\n\n    /**\n     * The handler that will be added on the Sender link for `sender_error` and on it's underlying\n     * session for `session_error` event. These events are raised when the sender link or it's\n     * underlying session get disconnected.\n     * The handler will clear the timer and reject the promise for every pending send in the map.\n     * @param eventName Name of the event that was raised.\n     * @param error Error from the context if any\n     */\n    const onError = (eventName: \"sender_error\" | \"session_error\", error?: Error) => {\n      for (const id of this.deliveryDispositionMap.keys()) {\n        onSendFailure(eventName, id, error);\n      }\n    };\n\n    this.on(SenderEvents.accepted, (context: EventContext) => {\n      onSendSuccess(context.delivery!);\n    });\n    this.on(SenderEvents.rejected, (context: EventContext) => {\n      const delivery = context.delivery!;\n      onSendFailure(SenderEvents.rejected, delivery.id, delivery.remote_state && delivery.remote_state.error);\n    });\n    this.on(SenderEvents.released, (context: EventContext) => {\n      const delivery = context.delivery!;\n      onSendFailure(SenderEvents.released, delivery.id, delivery.remote_state && delivery.remote_state.error);\n    });\n    this.on(SenderEvents.modified, (context: EventContext) => {\n      const delivery = context.delivery!;\n      onSendFailure(SenderEvents.modified, delivery.id, delivery.remote_state && delivery.remote_state.error);\n    });\n\n    // The user may have it's custom reconnect logic for bringing the sender link back online and\n    // retry logic for sending messages on failures hence they can provide their error handlers\n    // for `sender_error` and `session_error`.\n    // If the user did not provide its error handler for `sender_error` and `session_error`,\n    // then we add our handlers and make sure we clear the timer and reject the promise for sending\n    // messages with appropriate Error.\n    if (!options.onError) {\n      this.on(SenderEvents.senderError, (context: EventContext) => {\n        onError(SenderEvents.senderError, context.sender!.error as Error);\n      });\n    }\n    if (!options.onSessionError) {\n      this.session.on(SessionEvents.sessionError, (context: EventContext) => {\n        onError(SessionEvents.sessionError, context.session!.error as Error);\n      });\n    }\n  }\n\n  /**\n   * Sends the message on which one can await to ensure that the message has been successfully\n   * delivered.\n   * @param {Message | Buffer} msg The message to be sent. For default AMQP format msg parameter\n   * should be of type Message interface. For a custom format, the msg parameter should be a Buffer\n   * and a valid value should be passed to the `format` argument.\n   * @param {AwaitableSendOptions} [options] Options to configure the timeout, cancellation for\n   * the send operation and the tag and message format of the message.\n   * @returns {Promise<Delivery>} Promise<Delivery> The delivery information about the sent message.\n   */\n  send(msg: Message | Buffer, options: AwaitableSendOptions = {}): Promise<Delivery> {\n    return new Promise<Delivery>((resolve, reject) => {\n      log.sender(\"[%s] Sender '%s' on amqp session '%s', credit: %d available: %d\",\n        this.connection.id, this.name, this.session.id, this.credit,\n        this.session.outgoing.available());\n\n      const abortSignal = options && options.abortSignal;\n      const timeoutInSeconds = options.timeoutInSeconds || 20;\n\n      if (abortSignal && abortSignal.aborted) {\n        const err = createAbortError();\n        log.error(\"[%s] %s\", this.connection.id, err.message);\n        return reject(err);\n      }\n\n      if (this.sendable()) {\n        const timer = setTimeout(() => {\n          this.deliveryDispositionMap.delete(delivery.id);\n          const message = `Sender '${this.name}' on amqp session ` +\n            `'${this.session.id}', with address '${this.address}' was not able to send the ` +\n            `message with delivery id ${delivery.id} right now, due to operation timeout.`;\n          log.error(\"[%s] %s\", this.connection.id, message);\n          return reject(new OperationTimeoutError(message));\n        }, timeoutInSeconds * 1000);\n\n        const onAbort = () => {\n          if (this.deliveryDispositionMap.has(delivery.id)) {\n            const promise = this.deliveryDispositionMap.get(delivery.id) as PromiseLike;\n            clearTimeout(promise.timer);\n            const deleteResult = this.deliveryDispositionMap.delete(delivery.id);\n            log.sender(\n              \"[%s] Event: 'abort', Successfully deleted the delivery with id %d from the \" +\n              \" map of sender '%s' on amqp session '%s' and cleared the timer: %s.\",\n              this.connection.id, delivery.id, this.name, this.session.id, deleteResult\n            );\n            const err = createAbortError();\n            log.error(\"[%s] %s\", this.connection.id, err.message);\n            promise.reject(err);\n          }\n        };\n\n        const removeAbortListener = () => {\n          if (abortSignal) {\n            abortSignal.removeEventListener(\"abort\", onAbort);\n          }\n        };\n\n        const delivery = (this._link as RheaSender).send(msg, options.tag, options.format);\n        this.deliveryDispositionMap.set(delivery.id, {\n          resolve: (delivery: any) => {\n            resolve(delivery);\n            removeAbortListener();\n          },\n          reject: (reason?: any) => {\n            reject(reason);\n            removeAbortListener();\n          },\n          timer: timer\n        });\n\n        if (abortSignal) {\n          abortSignal.addEventListener(\"abort\", onAbort);\n        }\n      } else {\n        // Please send the message after some time.\n        const msg =\n          `Sender \"${this.name}\" on amqp session \"${this.session.id}\", with address ` +\n          `${this.address} cannot send the message right now as it does not have ` +\n          `enough credit. Please try later.`;\n        log.error(\"[%s] %s\", this.connection.id, msg);\n        reject(new InsufficientCreditError(msg));\n      }\n    });\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport * as log from \"./log\";\nimport { Connection, CreateReceiverOptions } from \"./connection\";\nimport { Receiver, ReceiverOptions } from \"./receiver\";\nimport { Sender, SenderOptions } from \"./sender\";\nimport {\n  SenderEvents, ReceiverEvents, SessionEvents, AmqpError, Session as RheaSession,\n  EventContext as RheaEventContext, ConnectionEvents\n} from \"rhea\";\nimport { Func, EmitParameters, emitEvent, createAbortError, AbortSignalLike } from \"./util/utils\";\nimport { OnAmqpEvent } from \"./eventContext\";\nimport { Entity } from \"./entity\";\nimport { OperationTimeoutError } from \"./errorDefinitions\";\nimport { AwaitableSender, AwaitableSenderOptions } from \"./awaitableSender\";\n\n/**\n * Describes the event listeners that can be added to the Session.\n * @interface Session\n */\nexport declare interface Session {\n  on(event: SessionEvents, listener: OnAmqpEvent): this;\n}\n\n/**\n * Set of options to use when running session.close()\n */\nexport interface SessionCloseOptions {\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * @internal\n */\nenum SenderType {\n  sender = \"sender\",\n  AwaitableSender = \"AwaitableSender\"\n}\n\n/**\n * Describes the session that wraps the rhea session.\n * @class Session\n */\nexport class Session extends Entity {\n  private _session: RheaSession;\n  private _connection: Connection;\n\n  constructor(connection: Connection, session: RheaSession) {\n    super();\n    this._connection = connection;\n    this._session = session;\n    this._initializeEventListeners();\n  }\n  /**\n   * @property {Connection} connection The underlying AMQP connection.\n   * @readonly\n   */\n  get connection(): Connection {\n    return this._connection;\n  }\n\n  get incoming(): { deliveries: { size: number; capacity: number } } {\n    return (this._session as any).incoming;\n  }\n\n  get outgoing(): any {\n    return (this._session as any).outgoing;\n  }\n\n  get error(): AmqpError | Error | undefined {\n    return this._session.error;\n  }\n\n  /**\n   * Returns the unique identifier for the session in the format:\n   * \"local_<number>-remote_<number>-<connection-id>\" or an empty string if the local channel or\n   * remote channel are not yet defined.\n   */\n  get id(): string {\n    let result = \"\";\n    const session: any = this._session;\n    if (session.local) {\n      result += `local-${session.local.channel}_`;\n    }\n\n    if (session.remote) {\n      result += `remote-${session.remote.channel}_`;\n    }\n\n    if (result) {\n      result += `${this._connection.id}`;\n    }\n\n    return result;\n  }\n\n  /**\n   * Determines whether the session and the underlying connection is open.\n   * @returns {boolean} result `true` - is open; `false` otherwise.\n   */\n  isOpen(): boolean {\n    let result = false;\n    if (this._connection.isOpen() && this._session.is_open()) {\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Determines whether the close from the peer is a response to a locally initiated close request.\n   * @returns {boolean} `true` if close was locally initiated, `false` otherwise.\n   */\n  isClosed(): boolean {\n    return this._session.is_closed();\n  }\n\n  /**\n   * Determines whether both local and remote endpoint for just the session itself are closed.\n   * Within the \"session_close\" event handler, if this method returns `false` it means that\n   * the local end is still open. It can be useful to determine whether the close\n   * was initiated locally under such circumstances.\n   *\n   * @returns {boolean} `true` - closed, `false` otherwise.\n   */\n  isItselfClosed(): boolean {\n    return this._session.is_itself_closed();\n  }\n\n  /**\n   * Removes the underlying amqp session from the internal map in rhea.\n   * Also removes all the event handlers added in the rhea-promise library on the session.\n   */\n  remove(): void {\n    if (this._session) {\n      // Remove our listeners and listeners from rhea's 'session' object.\n      this.removeAllListeners();\n      this._session.removeAllListeners();\n      this._session.remove();\n    }\n  }\n\n  begin(): void {\n    if (this._session) {\n      this._session.begin();\n    }\n  }\n\n  /**\n   * Closes the underlying amqp session in rhea if open. Also removes all the event\n   * handlers added in the rhea-promise library on the session\n   * @param options A set of options including a signal used to cancel the operation.\n   * When the abort signal in the options is fired, the local endpoint is closed.\n   * This does not guarantee that the remote has closed as well. It only stops listening for\n   * an acknowledgement that the remote endpoint is closed as well.\n   * @return {Promise<void>} Promise<void>\n   * - **Resolves** the promise when rhea emits the \"session_close\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"session_error\" event while trying\n   * to close an amqp session or with an AbortError if the operation was cancelled.\n   */\n  async close(options?: SessionCloseOptions): Promise<void> {\n\n    const closePromise = new Promise<void>((resolve, reject) => {\n      log.error(\"[%s] The amqp session '%s' is open ? -> %s\", this.connection.id, this.id, this.isOpen());\n      if (this.isOpen()) {\n        // let onError: Func<RheaEventContext, void>;\n        // let onClose: Func<RheaEventContext, void>;\n        // let onDisconnected: Func<RheaEventContext, void>;\n        // let onAbort: Func<void, void>;\n        const abortSignal = options && options.abortSignal;\n        // let waitTimer: any;\n\n        const removeListeners = () => {\n          clearTimeout(waitTimer);\n          this.actionInitiated--;\n          this._session.removeListener(SessionEvents.sessionError, onError);\n          this._session.removeListener(SessionEvents.sessionClose, onClose);\n          this._session.connection.removeListener(ConnectionEvents.disconnected, onDisconnected);\n          if (abortSignal) {\n            abortSignal.removeEventListener(\"abort\", onAbort);\n          }\n        };\n\n        const onClose = (context: RheaEventContext) => {\n          removeListeners();\n          log.session(\"[%s] Resolving the promise as the amqp session '%s' has been closed.\",\n            this.connection.id, this.id);\n          return resolve();\n        };\n\n        const onError = (context: RheaEventContext) => {\n          removeListeners();\n          log.error(\"[%s] Error occurred while closing amqp session '%s'.\",\n            this.connection.id, this.id, context.session!.error);\n          reject(context.session!.error);\n        };\n\n        const onDisconnected = (context: RheaEventContext) => {\n          removeListeners();\n          const error = context.connection && context.connection.error\n            ? context.connection.error\n            : context.error;\n          log.error(\"[%s] Connection got disconnected while closing amqp session '%s': %O.\",\n            this.connection.id, this.id, error);\n        };\n\n        const onAbort = () => {\n          removeListeners();\n          const err = createAbortError();\n          log.error(\"[%s] [%s]\", this.connection.id, err.message);\n          return reject(err);\n        };\n\n        const actionAfterTimeout = () => {\n          removeListeners();\n          const msg = `Unable to close the amqp session ${this.id} due to operation timeout.`;\n          log.error(\"[%s] %s\", this.connection.id, msg);\n          reject(new OperationTimeoutError(msg));\n        };\n\n        // listeners that we add for completing the operation are added directly to rhea's objects.\n        this._session.once(SessionEvents.sessionClose, onClose);\n        this._session.once(SessionEvents.sessionError, onError);\n        this._session.connection.once(ConnectionEvents.disconnected, onDisconnected);\n        log.session(\"[%s] Calling session.close() for amqp session '%s'.\", this.connection.id, this.id);\n        const waitTimer = setTimeout(actionAfterTimeout, this.connection.options!.operationTimeoutInSeconds! * 1000);\n        this._session.close();\n        this.actionInitiated++;\n\n        if (abortSignal) {\n          if (abortSignal.aborted) {\n            onAbort();\n          } else {\n            abortSignal.addEventListener(\"abort\", onAbort);\n          }\n        }\n      } else {\n        return resolve();\n      }\n    });\n\n    try {\n      await closePromise;\n    } finally {\n      this.removeAllListeners();\n    }\n\n  }\n\n  /**\n   * Creates an amqp receiver on this session.\n   * @param session The amqp session object on which the receiver link needs to be established.\n   * @param options Options that can be provided while creating an amqp receiver.\n   * @return Promise<Receiver>\n   * - **Resolves** the promise with the Receiver object when rhea emits the \"receiver_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"receiver_close\" event while trying\n   * to create an amqp receiver or the operation timeout occurs.\n   */\n  createReceiver(options?: ReceiverOptions & { abortSignal?: AbortSignalLike }): Promise<Receiver> {\n    return new Promise((resolve, reject) => {\n      if (options &&\n        ((options.onMessage && !options.onError) || (options.onError && !options.onMessage))) {\n        if (options.credit_window !== 0) {\n          // - If the 'onMessage' handler is not provided and the credit_window is not set to 0,\n          // then messages may be lost between the receiver link getting created and the message\n          // handler being attached.\n          // - It can be possible for a service to initially accept the link attach, which would\n          // cause the promise to resolve. However, moments later the service may send a detach\n          // due to some internal or configuration issue. If no error handler is attached, then\n          // the error may fall through.\n          // - Hence it is advised to either provide both 'onMessage' and 'onError' handlers, or\n          // please set the credit_window to `0`, if you want to provide only the 'onError' handler.\n          return reject(new Error(\"Either provide both 'onMessage' and 'onError' handlers, or pl\" +\n            \"ease set the credit_window to 0, if you want to provide only the 'onError' \" +\n            \"handler. This ensures no messages are lost between the receiver getting created \" +\n            \" and the 'onMessage' handler being added.\"));\n        }\n      }\n\n      const abortSignal = options && options.abortSignal;\n      let onAbort: Func<void, void>;\n      if (abortSignal) {\n        const rejectOnAbort = () => {\n          const err = createAbortError();\n          log.error(\"[%s] [%s]\", this.connection.id, err.message);\n          return reject(err);\n        };\n\n        onAbort = () => {\n          removeListeners();\n          if (rheaReceiver.is_open()) {\n            // This scenario *shouldn't* be possible because if `is_open()` returns true,\n            // our `onOpen` handler should have executed and removed this abort listener.\n            // This is a 'just in case' check in case the operation was cancelled sometime\n            // between when the receiver's state was updated and when the receiverOpen\n            // event was handled.\n            rheaReceiver.close();\n          } else if (!rheaReceiver.is_closed()) {\n            // If the rheaReceiver isn't closed, then it's possible the peer will still\n            // attempt to attach the link and open our receiver.\n            // We can detect that if it occurs and close our receiver.\n            rheaReceiver.once(ReceiverEvents.receiverOpen, () => {\n              rheaReceiver.close();\n            });\n          }\n          return rejectOnAbort();\n        };\n\n        if (abortSignal.aborted) {\n          // Exit early before we do any work.\n          return rejectOnAbort();\n        } else {\n          abortSignal.addEventListener(\"abort\", onAbort);\n        }\n      }\n\n      // Register session handlers for session_error and session_close if provided.\n      // listeners provided by the user in the options object should be added\n      // to our (rhea-promise) object.\n      if (options && options.onSessionError) {\n        this.on(SessionEvents.sessionError, options.onSessionError);\n        log.session(\"[%s] Added event handler for event '%s' on rhea-promise 'session: %s', \" +\n          \"while creating the 'receiver'.\", this.connection.id, SessionEvents.sessionError, this.id);\n      }\n\n      if (options && options.onSessionClose) {\n        this.on(SessionEvents.sessionClose, options.onSessionClose);\n        log.session(\"[%s] Added event handler for event '%s' on rhea-promise 'session: %s', \" +\n          \" while creating the 'receiver'.\", this.connection.id, SessionEvents.sessionClose, this.id);\n      }\n      const rheaReceiver = this._session.attach_receiver(options);\n      const receiver = new Receiver(this, rheaReceiver, options);\n      receiver.actionInitiated++;\n\n      if (options && options.onMessage) {\n        receiver.on(ReceiverEvents.message, options.onMessage);\n        log.receiver(\"[%s] Added event handler for event '%s' on rhea-promise 'receiver'.\",\n          this.connection.id, ReceiverEvents.message);\n      }\n      if (options && options.onError) {\n        receiver.on(ReceiverEvents.receiverError, options.onError);\n        log.receiver(\"[%s] Added event handler for event '%s' on rhea-promise 'receiver'.\",\n          this.connection.id, ReceiverEvents.receiverError);\n      }\n\n      if (options && options.onClose) {\n        receiver.on(ReceiverEvents.receiverClose, options.onClose);\n        log.receiver(\"[%s] Added event handler for event '%s' on rhea-promise 'receiver'.\",\n          this.connection.id, ReceiverEvents.receiverClose);\n      }\n\n      if (options && options.onSettled) {\n        receiver.on(ReceiverEvents.settled, options.onSettled);\n        log.receiver(\"[%s] Added event handler for event '%s' on rhea-promise 'receiver'.\",\n          this.connection.id, ReceiverEvents.settled);\n      }\n\n      const removeListeners = () => {\n        clearTimeout(waitTimer);\n        receiver.actionInitiated--;\n        rheaReceiver.removeListener(ReceiverEvents.receiverOpen, onOpen);\n        rheaReceiver.removeListener(ReceiverEvents.receiverClose, onClose);\n        rheaReceiver.session.connection.removeListener(ConnectionEvents.disconnected, onDisconnected);\n        if (abortSignal) {\n          abortSignal.removeEventListener(\"abort\", onAbort);\n        }\n      };\n\n      const onOpen = (context: RheaEventContext) => {\n        removeListeners();\n        log.receiver(\"[%s] Resolving the promise with amqp receiver '%s' on amqp session '%s'.\",\n          this.connection.id, receiver.name, this.id);\n        return resolve(receiver);\n      };\n\n      const onClose = (context: RheaEventContext) => {\n        removeListeners();\n        log.error(\"[%s] Error occurred while creating the amqp receiver '%s' on amqp session \" +\n          \"'%s' over amqp connection: %O.\",\n          this.connection.id, receiver.name, this.id, context.receiver!.error);\n        return reject(context.receiver!.error);\n      };\n\n      const onDisconnected = (context: RheaEventContext) => {\n        removeListeners();\n        const error = context.connection && context.connection.error\n          ? context.connection.error\n          : context.error;\n        log.error(\"[%s] Connection got disconnected while creating amqp receiver '%s' on amqp \" +\n          \"session '%s': %O.\", this.connection.id, receiver.name, this.id, error);\n        return reject(error);\n      };\n\n      const actionAfterTimeout = () => {\n        removeListeners();\n        const msg: string = `Unable to create the amqp receiver '${receiver.name}' on amqp ` +\n          `session '${this.id}' due to operation timeout.`;\n        log.error(\"[%s] %s\", this.connection.id, msg);\n\n        const createReceiverOptions = options as CreateReceiverOptions;\n        if (createReceiverOptions?.session?.createReceiver) {\n          // being called on a session passed via the options so don't close the session\n          receiver.close({ closeSession: false }).then(() => { receiver.remove(); })\n        } else {\n          receiver.close({ closeSession: true }).then(() => { receiver.remove(); })\n        }\n\n        return reject(new OperationTimeoutError(msg));\n      };\n\n      // listeners that we add for completing the operation are added directly to rhea's objects.\n      rheaReceiver.once(ReceiverEvents.receiverOpen, onOpen);\n      rheaReceiver.once(ReceiverEvents.receiverClose, onClose);\n      rheaReceiver.session.connection.on(ConnectionEvents.disconnected, onDisconnected);\n      const waitTimer = setTimeout(actionAfterTimeout, this.connection.options!.operationTimeoutInSeconds! * 1000);\n    });\n  }\n\n  /**\n   * Creates an amqp sender on this session.\n   * @param options Options that can be provided while creating an amqp sender.\n   * @return Promise<Sender>\n   * - **Resolves** the promise with the Sender object when rhea emits the \"sender_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"sender_close\" event while trying\n   * to create an amqp sender or the operation timeout occurs.\n   */\n  createSender(options?: SenderOptions & { abortSignal?: AbortSignalLike }): Promise<Sender> {\n    return this._createSender(SenderType.sender, options) as Promise<Sender>;\n  }\n\n  /**\n   * Creates an awaitable amqp sender on this session.\n   * @param options Options that can be provided while creating an async amqp sender.\n   * - If `onError` and `onSessionError` handlers are not provided then the `AwaitableSender` will\n   * clear the timer and reject the Promise for all the entries of inflight send operation in its\n   * `deliveryDispositionMap`.\n   * - If the user is handling the reconnection of sender link or the underlying connection in it's\n   * app, then the `onError` and `onSessionError` handlers must be provided by the user and (s)he\n   * shall be responsible of clearing the `deliveryDispotionMap` of inflight `send()` operation.\n   *\n   * @return Promise<AwaitableSender>\n   * - **Resolves** the promise with the Sender object when rhea emits the \"sender_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"sender_close\" event while trying\n   * to create an amqp sender or the operation timeout occurs.\n   */\n  createAwaitableSender(options?: AwaitableSenderOptions & { abortSignal?: AbortSignalLike }): Promise<AwaitableSender> {\n    return this._createSender(SenderType.AwaitableSender, options) as Promise<AwaitableSender>;\n  }\n\n  /**\n   * Creates the Sender based on the provided type.\n   * @internal\n   * @param type The type of sender\n   * @param options Options to be provided while creating the sender.\n   */\n  private _createSender(\n    type: SenderType,\n    options?: (SenderOptions | AwaitableSenderOptions) & { abortSignal?: AbortSignalLike }): Promise<Sender | AwaitableSender> {\n    return new Promise((resolve, reject) => {\n      const abortSignal = options && options.abortSignal;\n      let onAbort: Func<void, void>;\n      if (abortSignal) {\n        const rejectOnAbort = () => {\n          const err = createAbortError();\n          log.error(\"[%s] [%s]\", this.connection.id, err.message);\n          return reject(err);\n        };\n\n        onAbort = () => {\n          removeListeners();\n          if (rheaSender.is_open()) {\n            // This scenario *shouldn't* be possible because if `is_open()` returns true,\n            // our `onOpen` handler should have executed and removed this abort listener.\n            // This is a 'just in case' check in case the operation was cancelled sometime\n            // between when the sender's state was updated and when the senderOpen\n            // event was handled.\n            rheaSender.close();\n          } else if (!rheaSender.is_closed()) {\n            // If the rheaSender isn't closed, then it's possible the peer will still\n            // attempt to attach the link and open our sender.\n            // We can detect that if it occurs and close our sender.\n            rheaSender.once(SenderEvents.senderOpen, () => {\n              rheaSender.close();\n            });\n          }\n          return rejectOnAbort();\n        };\n\n        if (abortSignal.aborted) {\n          // Exit early before we do any work.\n          return rejectOnAbort();\n        } else {\n          abortSignal.addEventListener(\"abort\", onAbort);\n        }\n      }\n\n      // Register session handlers for session_error and session_close if provided.\n      if (options && options.onSessionError) {\n        this.on(SessionEvents.sessionError, options.onSessionError);\n        log.session(\"[%s] Added event handler for event '%s' on rhea-promise 'session: %s', \" +\n          \"while creating the sender.\", this.connection.id, SessionEvents.sessionError, this.id);\n      }\n\n      if (options && options.onSessionClose) {\n        this.on(SessionEvents.sessionClose, options.onSessionClose);\n        log.session(\"[%s] Added event handler for event '%s' on rhea-promise 'session: %s', \" +\n          \"while creating the sender.\", this.connection.id, SessionEvents.sessionClose, this.id);\n      }\n\n      const rheaSender = this._session.attach_sender(options);\n      let sender: Sender | AwaitableSender;\n      if (type === SenderType.sender) {\n        sender = new Sender(this, rheaSender, options);\n      } else {\n        sender = new AwaitableSender(this, rheaSender, options);\n      }\n      sender.actionInitiated++;\n      // let onSendable: Func<RheaEventContext, void>;\n      // let onClose: Func<RheaEventContext, void>;\n      // let onDisconnected: Func<RheaEventContext, void>;\n      // let waitTimer: any;\n\n      // listeners provided by the user in the options object should be added\n      // to our (rhea-promise) object.\n      if (options) {\n        if (options.onError) {\n          sender.on(SenderEvents.senderError, options.onError);\n        }\n        if (options.onClose) {\n          sender.on(SenderEvents.senderClose, options.onClose);\n        }\n        if (type === SenderType.sender) {\n          if ((options as SenderOptions).onAccepted) {\n            sender.on(SenderEvents.accepted, (options as SenderOptions).onAccepted!);\n          }\n          if ((options as SenderOptions).onRejected) {\n            sender.on(SenderEvents.rejected, (options as SenderOptions).onRejected!);\n          }\n          if ((options as SenderOptions).onReleased) {\n            sender.on(SenderEvents.released, (options as SenderOptions).onReleased!);\n          }\n          if ((options as SenderOptions).onModified) {\n            sender.on(SenderEvents.modified, (options as SenderOptions).onModified!);\n          }\n        }\n      }\n\n      const removeListeners = () => {\n        clearTimeout(waitTimer);\n        sender.actionInitiated--;\n        rheaSender.removeListener(SenderEvents.senderOpen, onSendable);\n        rheaSender.removeListener(SenderEvents.senderClose, onClose);\n        rheaSender.session.connection.removeListener(ConnectionEvents.disconnected, onDisconnected);\n        if (abortSignal) {\n          abortSignal.removeEventListener(\"abort\", onAbort);\n        }\n      };\n\n      const onSendable = (context: RheaEventContext) => {\n        removeListeners();\n        log.sender(\"[%s] Resolving the promise with amqp sender '%s' on amqp session '%s'.\",\n          this.connection.id, sender.name, this.id);\n        return resolve(sender);\n      };\n\n      const onClose = (context: RheaEventContext) => {\n        removeListeners();\n        log.error(\"[%s] Error occurred while creating the amqp sender '%s' on amqp session '%s' \" +\n          \"over amqp connection: %O.\",\n          this.connection.id, sender.name, this.id, context.sender!.error);\n        return reject(context.sender!.error);\n      };\n\n      const onDisconnected = (context: RheaEventContext) => {\n        removeListeners();\n        const error = context.connection && context.connection.error\n          ? context.connection.error\n          : context.error;\n        log.error(\"[%s] Connection got disconnected while creating amqp sender '%s' on amqp \" +\n          \"session '%s': %O.\", this.connection.id, sender.name, this.id, error);\n        return reject(error);\n      };\n\n      const actionAfterTimeout = () => {\n        removeListeners();\n        const msg: string = `Unable to create the amqp sender '${sender.name}' on amqp session ` +\n          `'${this.id}' due to operation timeout.`;\n        log.error(\"[%s] %s\", this.connection.id, msg);\n        return reject(new OperationTimeoutError(msg));\n      };\n\n      // listeners that we add for completing the operation are added directly to rhea's objects.\n      rheaSender.once(SenderEvents.sendable, onSendable);\n      rheaSender.once(SenderEvents.senderClose, onClose);\n      rheaSender.session.connection.on(ConnectionEvents.disconnected, onDisconnected);\n      const waitTimer = setTimeout(actionAfterTimeout, this.connection.options!.operationTimeoutInSeconds! * 1000);\n    });\n  }\n\n  /**\n   * Adds event listeners for the possible events that can occur on the session object and\n   * re-emits the same event back with the received arguments from rhea's event emitter.\n   * @private\n   * @returns {void} void\n   */\n  private _initializeEventListeners(): void {\n\n    for (const eventName of Object.keys(SessionEvents) as Array<keyof typeof SessionEvents>) {\n      this._session.on(SessionEvents[eventName],\n        (context) => {\n          const params: EmitParameters = {\n            rheaContext: context,\n            emitter: this,\n            eventName: SessionEvents[eventName],\n            emitterType: \"session\",\n            connectionId: this.connection.id\n          };\n          emitEvent(params);\n        });\n    }\n\n    // Add event handlers for *_error and *_close events that can be propagated to the session\n    // object, if they are not handled at their level. * denotes - Sender and Receiver.\n\n    // Sender\n    this._session.on(SenderEvents.senderError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SenderEvents.senderError,\n        emitterType: \"session\",\n        connectionId: this.connection.id\n      };\n      emitEvent(params);\n    });\n    this._session.on(SenderEvents.senderClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SenderEvents.senderClose,\n        emitterType: \"session\",\n        connectionId: this.connection.id\n      };\n      emitEvent(params);\n    });\n\n    // Receiver\n    this._session.on(ReceiverEvents.receiverError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: ReceiverEvents.receiverError,\n        emitterType: \"session\",\n        connectionId: this.connection.id\n      };\n      emitEvent(params);\n    });\n    this._session.on(ReceiverEvents.receiverClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: ReceiverEvents.receiverClose,\n        emitterType: \"session\",\n        connectionId: this.connection.id\n      };\n      emitEvent(params);\n    });\n    if (typeof this._session.eventNames === \"function\") {\n      log.eventHandler(\"[%s] rhea-promise 'session' object '%s' is listening for events: %o \" +\n        \"emitted by rhea's 'session' object.\",\n        this.connection.id, this.id, this._session.eventNames());\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport type { Connection } from \"./connection\";\nimport type { Container } from \"./container\";\nimport { Session } from \"./session\";\nimport {\n  Delivery, Message, ConnectionError, EventContext as RheaEventContext\n} from \"rhea\";\nimport { Receiver } from \"./receiver\";\nimport { Sender } from \"./sender\";\nimport { Link, LinkType } from './link';\nimport * as log from \"./log\";\n\n/**\n * Describes the signature of the event handler for any event emitted by rhea-promise.\n * @type OnAmqpEvent\n * @param {EventContext} context The rhea-promise event context.\n */\nexport type OnAmqpEvent = (context: EventContext) => void;\n\n/**\n * Defines the AMQP Connection context. This context is provided when you add an\n * event handler to any of the objects.\n * @interface EventContext\n */\nexport interface EventContext {\n  /**\n   * @property {Connection} connection The amqp connection.\n   */\n  connection: Connection;\n  /**\n   * @property {Container} container The amqp container\n   */\n  container: Container;\n  /**\n   * @property {Session} [session] The amqp session link that was created on the amqp connection.\n   */\n  session?: Session;\n  /**\n   * @property {Delivery} [delivery] The amqp delivery that is received after sending a message.\n   */\n  delivery?: Delivery;\n  /**\n   * @property {AmqpMessage} [message] The amqp message that is received in the message event\n   * handler when rhea emits a message event on a receiver.\n   */\n  message?: Message;\n  /**\n   * @property {Receiver} [receiver] The amqp receiver link that was created on the amqp connection.\n   */\n  receiver?: Receiver;\n  /**\n   * @property {Sender} [sender] The amqp sender link that was created on the amqp connection.\n   */\n  sender?: Sender;\n  /**\n   * @property {Error | ConnectionError} [error] An optional error object.\n   * - On `connection_error` event this property will be present. It will have the same information as\n   * `connection.error` but the type will be `ConnectionError`.\n   * - An error with SASL will be available through this property, but not through `connection.error`\n   * (as the amqp connection was never established).\n   * - On `disconnected` event the context will have an error property that will be of type\n   * `Error` (or some subclass) as emitted by the underlying socket.\n   * - The `session_error`, `sender_error` and `receiver_error` events will not have this (`error`)\n   * property on the EventContext.\n   */\n  error?: Error | ConnectionError;\n  /**\n   * @property {boolean} [reconnecting] The value is true if the library is attempting to automatically\n   * reconnect and false if it has reached the reconnect limit. If reconnect has not been enabled\n   * or if the connection is a tcp server, then the reconnecting property is undefined. This property\n   * is used in conjunction with \"disconnected\" event.\n   */\n  reconnecting?: boolean;\n  /**\n   * @property {RheaEventContext} _context The EventContext emitted by objects from rhea. This\n   * can be used as a fallback mechanism when the translated EventContext provided by this library\n   * has any issues.\n   */\n  _context: RheaEventContext;\n}\n\nfunction hasConnection(val: any): val is Link | Session {\n  return val && val.connection;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace EventContext {\n  /**\n   * Translates rhea's EventContext into rhea-promise EventContext\n   * @param rheaContext The received context from rhea's event emitter\n   * @param emitter The rhea-promise equivalent object that is supposed emit the same event\n   * @param eventName The name of the event for which the context will be translated\n   *\n   * @returns EventContext The translated EventContext.\n   */\n  export function translate(\n    rheaContext: RheaEventContext,\n    emitter: Link | Session | Connection,\n    eventName: string): EventContext {\n    const connection = hasConnection(emitter)\n      ? emitter.connection\n      : emitter;\n\n    log.contextTranslator(\"[%s] Translating the context for event: '%s'.\", connection.id, eventName);\n\n    // initialize the result\n    const result: EventContext = {\n      _context: rheaContext,\n      ...rheaContext\n    } as any;\n\n    // set rhea-promise connection and container\n    result.connection = connection;\n    result.container = connection.container;\n\n    // set rhea-promise session, sender/receiver.\n    if (emitter instanceof Link) {\n      result.session = emitter.session;\n      if (emitter.type === LinkType.receiver && rheaContext.receiver) {\n        result.receiver = emitter as Receiver;\n      } else if (emitter.type === LinkType.sender && rheaContext.sender) {\n        result.sender = emitter as Sender;\n      }\n    } else if (emitter instanceof Session) {\n      result.session = emitter;\n    }\n\n    return result;\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\n/**\n * Describes the default operation timeout in seconds. Value: `60`.\n */\nexport const defaultOperationTimeoutInSeconds = 60;\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport { PeerCertificate } from \"tls\";\nimport { Socket } from \"net\";\nimport * as log from \"./log\";\nimport { Session } from \"./session\";\nimport { Sender, SenderOptions } from \"./sender\";\nimport { Receiver, ReceiverOptions } from \"./receiver\";\nimport { Container } from \"./container\";\nimport { defaultOperationTimeoutInSeconds } from \"./util/constants\";\nimport { Func, EmitParameters, emitEvent, AbortSignalLike, createAbortError } from \"./util/utils\";\nimport {\n  ConnectionEvents, SessionEvents, SenderEvents, ReceiverEvents, create_connection, websocket_connect,\n  ConnectionOptions as RheaConnectionOptions, Connection as RheaConnection, AmqpError, Dictionary,\n  ConnectionError, EventContext as RheaEventContext\n} from \"rhea\";\n\nimport { OnAmqpEvent } from \"./eventContext\";\nimport { Entity } from \"./entity\";\nimport { OperationTimeoutError } from \"./errorDefinitions\";\nimport { AwaitableSender, AwaitableSenderOptions } from \"./awaitableSender\";\n\n/**\n * Describes the options that can be provided while creating an AMQP sender. One can also provide\n * a session if it was already created.\n * @interface SenderOptionsWithSession\n */\nexport interface CreateSenderOptions extends SenderOptions {\n  session?: Session;\n  /**\n   * A signal used to cancel the Connection.createSender() operation.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Describes the options that can be provided while creating an Async AMQP sender.\n * One can also provide a session if it was already created.\n */\nexport interface CreateAwaitableSenderOptions extends AwaitableSenderOptions {\n  session?: Session;\n  /**\n   * A signal used to cancel the Connection.createAwaitableSender() operation.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Describes the options that can be provided while creating an AMQP receiver. One can also provide\n * a session if it was already created.\n */\nexport interface CreateReceiverOptions extends ReceiverOptions {\n  session?: Session;\n  /**\n   * A signal used to cancel the Connection.createReceiver() operation.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Describes the options that can be provided while creating an AMQP Request-Response link. One can also provide\n * a session if it was already created.\n */\nexport interface CreateRequestResponseLinkOptions {\n  session?: Session;\n  /**\n   * A signal used to cancel the Connection.createRequestResponseLink() operation.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Set of options to use when running Connection.open()\n */\nexport interface ConnectionOpenOptions {\n  /**\n   * A signal used to cancel the Connection.open() operation.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Set of options to use when running Connection.close()\n */\nexport interface ConnectionCloseOptions {\n  /**\n   * A signal used to cancel the Connection.close() operation.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Set of options to use when running Connection.createSession()\n */\nexport interface SessionCreateOptions {\n  /**\n   * A signal used to cancel the Connection.createSession() operation.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Describes the options that can be provided while creating an AMQP connection.\n * @interface ConnectionOptions\n */\nexport type ConnectionOptions = RheaConnectionOptions & {\n  /**\n   * @property {number} [operationTimeoutInSeconds] - The duration in which the promise should\n   * complete (resolve/reject). If it is not completed, then the Promise will be rejected after\n   * timeout occurs. Default: `60 seconds`.\n   */\n  operationTimeoutInSeconds?: number;\n\n  /**\n   * @property {Object} [webSocketOptions] - Options that include a web socket constructor along\n   * with arguments to be passed to the function returned by rhea.websocket_connect()\n   * This is required when the connection needs to use web sockets but is being created without\n   * creating a container first. If a container is already available, use `websocket_connect` on it\n   * directly instead.\n   */\n  webSocketOptions?: {\n    /**\n     * @property {any} [webSocket] - The WebSocket constructor used to create an AMQP\n     * connection over a WebSocket.\n     */\n    webSocket: any;\n    /**\n     * @property {string} [url] - Websocket url which will be passed to the function returned by\n     * rhea.websocket_connect()\n     */\n    url: string;\n    /**\n     * @property {string[]} {protocol} - Websocket SubProtocol to be passed to the function\n     * returned by rhea.websocket_connect()\n     */\n    protocol: string[];\n    /** *\n     * @property {any} {options} - Options to be passed to the function returned by\n     * rhea.websocket_connect()\n     */\n    options?: any;\n  };\n};\n\n\n\n/**\n * Describes the options that can be provided while creating a rhea-promise connection from an\n * already created rhea connection object.\n * @interface CreatedRheaConnectionOptions\n */\nexport interface CreatedRheaConnectionOptions {\n  /**\n   * @property {number} [operationTimeoutInSeconds] - The duration in which the promise should\n   * complete (resolve/reject). If it is not completed, then the Promise will be rejected after\n   * timeout occurs. Default: `60 seconds`.\n   */\n  operationTimeoutInSeconds?: number;\n  /**\n   * @property rheaConnection The connection object from rhea\n   */\n  rheaConnection: RheaConnection;\n  /**\n   * @property container The Container object from this (rhea-promise) library.\n   */\n  container: Container;\n}\n\n// Determines whether the given object is a CreatedRheConnectionOptions object.\nfunction isCreatedRheaConnectionOptions(obj: any): obj is CreatedRheaConnectionOptions {\n  return (obj && typeof obj.container === \"object\" && typeof obj.rheaConnection === \"object\");\n}\n\n/**\n * Provides a sender and a receiver link on the same session. It is useful while constructing a\n * request/response link.\n *\n * @interface ReqResLink\n */\nexport interface ReqResLink {\n  /**\n   * @property {Sender} sender - The sender link for sending a request.\n   */\n  sender: Sender;\n  /**\n   * @property {Receiver} receiver - The receiver link for receiving a response.\n   */\n  receiver: Receiver;\n  /**\n   * @property {Session} session - The underlying session on whicn the sender and receiver links\n   * exist.\n   */\n  session: Session;\n}\n\n/**\n * Describes the event listeners that can be added to the Connection.\n * @interface Connection\n */\nexport declare interface Connection {\n  on(event: ConnectionEvents, listener: OnAmqpEvent): this;\n}\n\nconst maxListenerLimit = 1000;\n\n/**\n * Describes the AMQP Connection.\n * @class Connection\n */\nexport class Connection extends Entity {\n  /**\n   * @property {ConnectionOptions} options Options that can be provided while creating the\n   * connection.\n   */\n  options: ConnectionOptions;\n  /**\n   * @property {Container} container The underlying Container instance on which the connection\n   * exists.\n   */\n  readonly container: Container;\n  /**\n   * @property {RheaConnection} _connection The connection object from rhea library.\n   * @private\n   */\n  private _connection: RheaConnection;\n\n  /**\n   * Creates an instance of the Connection object.\n   * @constructor\n   * @param {Connection} _connection The connection object from rhea library.\n   */\n  constructor(options?: ConnectionOptions | CreatedRheaConnectionOptions) {\n    super();\n\n    if (isCreatedRheaConnectionOptions(options)) {\n      this._connection = (options as CreatedRheaConnectionOptions).rheaConnection;\n      this.container = (options as CreatedRheaConnectionOptions).container;\n    } else {\n      let connectionOptions = options as ConnectionOptions;\n      if (!connectionOptions) connectionOptions = { transport: \"tls\" };\n      if (!connectionOptions.operationTimeoutInSeconds) {\n        connectionOptions.operationTimeoutInSeconds = defaultOperationTimeoutInSeconds;\n      }\n      if (connectionOptions.webSocketOptions) {\n        const ws = websocket_connect(connectionOptions.webSocketOptions.webSocket);\n        (connectionOptions.connection_details as any) = ws(\n          connectionOptions.webSocketOptions.url,\n          connectionOptions.webSocketOptions.protocol,\n          connectionOptions.webSocketOptions.options);\n      }\n      this._connection = create_connection(connectionOptions);\n      this.container = Container.copyFromContainerInstance(this._connection.container);\n      options = connectionOptions;\n    }\n\n    this.options = this._connection.options;\n    this.options.operationTimeoutInSeconds = options?.operationTimeoutInSeconds ?? defaultOperationTimeoutInSeconds;\n\n    this._initializeEventListeners();\n\n    // Set max listeners on the connection to 1000 because Session and Link add their own listeners\n    // and the default value of 10 in NodeJS is too low.\n    this._connection.setMaxListeners(maxListenerLimit);\n  }\n\n  /**\n   * @property {string} id Returns the connection id.\n   * @readonly\n   */\n  get id(): string {\n    return this._connection.options.id!;\n  }\n\n  /**\n   * @property {Dictionary<any> | undefined} [properties] Provides the connection properties.\n   * @readonly\n   */\n  get properties(): Dictionary<any> | undefined {\n    return this._connection.properties;\n  }\n\n  /**\n   * @property {number | undefined} [maxFrameSize] Provides the max frame size.\n   * @readonly\n   */\n  get maxFrameSize(): number | undefined {\n    return this._connection.max_frame_size;\n  }\n\n  /**\n   * @property {number | undefined} [idleTimeout] Provides the idle timeout for the connection.\n   * @readonly\n   */\n  get idleTimeout(): number | undefined {\n    return this._connection.idle_time_out;\n  }\n\n  /**\n   * @property {number | undefined} [channelMax] Provides the maximum number of channels supported.\n   * @readonly\n   */\n  get channelMax(): number | undefined {\n    return this._connection.channel_max;\n  }\n\n  /**\n   * @property {AmqpError | Error | undefined} [error] Provides the last error that occurred on the\n   * connection.\n   */\n  get error(): AmqpError | Error | undefined {\n    return this._connection.error;\n  }\n\n  /**\n   * Removes the provided session from the internal map in rhea.\n   * Also removes all the event handlers added in the rhea-promise library on the provided session.\n   * @param {Session} session The session to be removed.\n   */\n  removeSession(session: Session): void {\n    return session.remove();\n  }\n\n  /**\n   * Creates a new amqp connection.\n   * @param options A set of options including a signal used to cancel the operation.\n   * @return {Promise<Connection>} Promise<Connection>\n   * - **Resolves** the promise with the Connection object when rhea emits the \"connection_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"connection_close\" event\n   * while trying to establish an amqp connection or with an AbortError if the operation was cancelled.\n   */\n  open(options?: ConnectionOpenOptions): Promise<Connection> {\n    return new Promise((resolve, reject) => {\n      if (!this.isOpen()) {\n\n        const abortSignal = options && options.abortSignal;\n\n        const removeListeners = () => {\n          clearTimeout(waitTimer);\n          this.actionInitiated--;\n          this._connection.removeListener(ConnectionEvents.connectionOpen, onOpen);\n          this._connection.removeListener(ConnectionEvents.connectionClose, onClose);\n          this._connection.removeListener(ConnectionEvents.disconnected, onClose);\n          if (abortSignal) {\n            abortSignal.removeEventListener(\"abort\", onAbort);\n          }\n        };\n\n        const onOpen = (context: RheaEventContext) => {\n          removeListeners();\n          log.connection(\"[%s] Resolving the promise with amqp connection.\", this.id);\n          return resolve(this);\n        };\n\n        const onClose = (context: RheaEventContext) => {\n          removeListeners();\n          const err = context.error || context.connection.error || Error('Failed to connect');\n          log.error(\"[%s] Error occurred while establishing amqp connection: %O\",\n            this.id, err);\n          return reject(err);\n        };\n\n        const onAbort = () => {\n          removeListeners();\n          this._connection.close();\n          const err = createAbortError();\n          log.error(\"[%s] [%s]\", this.id, err.message);\n          return reject(err);\n        };\n\n        const actionAfterTimeout = () => {\n          removeListeners();\n          const msg = `Unable to open the amqp connection \"${this.id}\" due to operation timeout.`;\n          log.error(\"[%s] %s\", this.id, msg);\n          return reject(new Error(msg));\n        };\n\n        // listeners that we add for completing the operation are added directly to rhea's objects.\n        this._connection.once(ConnectionEvents.connectionOpen, onOpen);\n        this._connection.once(ConnectionEvents.connectionClose, onClose);\n        this._connection.once(ConnectionEvents.disconnected, onClose);\n        const waitTimer = setTimeout(actionAfterTimeout, this.options!.operationTimeoutInSeconds! * 1000);\n        log.connection(\"[%s] Trying to create a new amqp connection.\", this.id);\n        this._connection.connect();\n        this.actionInitiated++;\n\n        if (abortSignal) {\n          if (abortSignal.aborted) {\n            onAbort();\n          } else {\n            abortSignal.addEventListener(\"abort\", onAbort);\n          }\n        }\n      } else {\n        return resolve(this);\n      }\n    });\n  }\n\n\n  /**\n   * Closes the amqp connection.\n   * @param options A set of options including a signal used to cancel the operation.\n   * When the abort signal in the options is fired, the local endpoint is closed.\n   * This does not guarantee that the remote has closed as well. It only stops listening for\n   * an acknowledgement that the remote endpoint is closed as well.\n   * @return {Promise<void>} Promise<void>\n   * - **Resolves** the promise when rhea emits the \"connection_close\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"connection_error\" event while\n   * trying to close an amqp connection or with an AbortError if the operation was cancelled.\n   */\n  close(options?: ConnectionCloseOptions): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      log.error(\"[%s] The connection is open ? -> %s\", this.id, this.isOpen());\n      if (this.isOpen()) {\n        const abortSignal = options && options.abortSignal;\n\n        const removeListeners = () => {\n          clearTimeout(waitTimer);\n          this.actionInitiated--;\n          this._connection.removeListener(ConnectionEvents.connectionError, onError);\n          this._connection.removeListener(ConnectionEvents.connectionClose, onClose);\n          this._connection.removeListener(ConnectionEvents.disconnected, onDisconnected);\n          if (abortSignal) {\n            abortSignal.removeEventListener(\"abort\", onAbort);\n          }\n        };\n\n        const onClose = (context: RheaEventContext) => {\n          removeListeners();\n          log.connection(\"[%s] Resolving the promise as the connection has been successfully closed.\",\n            this.id);\n          return resolve();\n        };\n\n        const onError = (context: RheaEventContext) => {\n          removeListeners();\n          log.error(\"[%s] Error occurred while closing amqp connection: %O.\",\n            this.id, context.connection.error);\n          return reject(context.connection.error);\n        };\n\n        const onDisconnected = (context: RheaEventContext) => {\n          removeListeners();\n          const error = context.connection && context.connection.error\n            ? context.connection.error\n            : context.error;\n          log.error(\"[%s] Connection got disconnected while closing itself: %O.\", this.id, error);\n        };\n\n        const onAbort = () => {\n          removeListeners();\n          const err = createAbortError();\n          log.error(\"[%s] [%s]\", this.id, err.message);\n          return reject(err);\n        };\n\n        const actionAfterTimeout = () => {\n          removeListeners();\n          const msg = `Unable to close the amqp connection \"${this.id}\" due to operation timeout.`;\n          log.error(\"[%s] %s\", this.id, msg);\n          return reject(new Error(msg));\n        };\n\n        // listeners that we add for completing the operation are added directly to rhea's objects.\n        this._connection.once(ConnectionEvents.connectionClose, onClose);\n        this._connection.once(ConnectionEvents.connectionError, onError);\n        this._connection.once(ConnectionEvents.disconnected, onDisconnected);\n        const waitTimer = setTimeout(actionAfterTimeout, this.options!.operationTimeoutInSeconds! * 1000);\n        this._connection.close();\n        this.actionInitiated++;\n\n        if (abortSignal) {\n          if (abortSignal.aborted) {\n            onAbort();\n          } else {\n            abortSignal.addEventListener(\"abort\", onAbort);\n          }\n        }\n      } else {\n        return resolve();\n      }\n    });\n  }\n\n  /**\n   * Determines whether the connection is open.\n   * @returns {boolean} result `true` - is open; `false` otherwise.\n   */\n  isOpen(): boolean {\n    let result = false;\n    if (this._connection && this._connection.is_open && this._connection.is_open()) {\n      result = true;\n    }\n    return result;\n  }\n\n  /**\n   * Clears all the amqp sessions from the internal map maintained in rhea. This does not remove any\n   * of the event handlers added in the rhea-promise library. To clear such event handlers, either\n   * call remove() or close() on each session\n   */\n  removeAllSessions(): void {\n    if (this._connection) {\n      this._connection.remove_all_sessions();\n    }\n  }\n\n  /**\n   * Determines whether the remote end of the connection is open.\n   * @returns {boolean} result `true` - is open; `false` otherwise.\n   */\n  isRemoteOpen(): boolean {\n    return this._connection.is_remote_open();\n  }\n\n  /**\n   * Gets the connection error if present.\n   * @returns {ConnectionError | undefined} ConnectionError | undefined\n   */\n  getError(): ConnectionError | undefined {\n    return this._connection.get_error();\n  }\n\n  /**\n   * Gets the peer certificate if present.\n   * @returns {PeerCertificate | undefined} PeerCertificate | undefined\n   */\n  getPeerCertificate(): PeerCertificate | undefined {\n    return this._connection.get_peer_certificate();\n  }\n\n  /**\n   * Gets the tls socket if present.\n   * @returns {Socket | undefined} Socket | undefined\n   */\n  getTlsSocket(): Socket | undefined {\n    return this._connection.get_tls_socket();\n  }\n\n  /**\n   * Determines whether the close from the peer is a response to a locally initiated close request\n   * for the connection.\n   * @returns {boolean} `true` if close was locally initiated, `false` otherwise.\n   */\n  wasCloseInitiated(): boolean {\n    return this._connection.is_closed();\n  }\n\n  /**\n   * Creates an amqp session on the provided amqp connection.\n   * @param options A set of options including a signal used to cancel the operation.\n   * @return {Promise<Session>} Promise<Session>\n   * - **Resolves** the promise with the Session object when rhea emits the \"session_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"session_close\" event while\n   * trying to create an amqp session or with an AbortError if the operation was cancelled.\n   */\n  createSession(options?: SessionCreateOptions): Promise<Session> {\n    return new Promise((resolve, reject) => {\n      const abortSignal = options && options.abortSignal;\n      let onAbort: Func<void, void>;\n      if (abortSignal) {\n        const rejectOnAbort = () => {\n          const err = createAbortError();\n          log.error(\"[%s] [%s]\", this.id, err.message);\n          return reject(err);\n        };\n\n        onAbort = () => {\n          removeListeners();\n          if (rheaSession.is_open()) {\n            // This scenario *shouldn't* be possible because if `is_open()` returns true,\n            // our `onOpen` handler should have executed and removed this abort listener.\n            // This is a 'just in case' check in case the operation was cancelled sometime\n            // between when the session's state was updated and when the sessionOpen\n            // event was handled.\n            rheaSession.close();\n          } else if (!rheaSession.is_closed()) {\n            // If the rheaSession isn't closed, then it's possible the peer will still\n            // attempt to begin the session.\n            // We can detect that if it occurs and close our session.\n            rheaSession.once(SessionEvents.sessionOpen, () => {\n              rheaSession.close();\n            });\n          }\n          return rejectOnAbort();\n        };\n\n        if (abortSignal.aborted) {\n          // Exit early before we do any work.\n          return rejectOnAbort();\n        } else {\n          abortSignal.addEventListener(\"abort\", onAbort);\n        }\n      }\n\n      const rheaSession = this._connection.create_session();\n      const session = new Session(this, rheaSession);\n      session.actionInitiated++;\n\n      const removeListeners = () => {\n        clearTimeout(waitTimer);\n        session.actionInitiated--;\n        rheaSession.removeListener(SessionEvents.sessionOpen, onOpen);\n        rheaSession.removeListener(SessionEvents.sessionClose, onClose);\n        rheaSession.connection.removeListener(ConnectionEvents.disconnected, onDisconnected);\n        if (abortSignal) {\n          abortSignal.removeEventListener(\"abort\", onAbort);\n        }\n      };\n\n      const onOpen = (context: RheaEventContext) => {\n        removeListeners();\n        log.session(\"[%s] Resolving the promise with amqp session '%s'.\", this.id, session.id);\n        return resolve(session);\n      };\n\n      const onClose = (context: RheaEventContext) => {\n        removeListeners();\n        log.error(\"[%s] Error occurred while establishing a session over amqp connection: %O.\",\n          this.id, context.session!.error);\n        return reject(context.session!.error);\n      };\n\n      const onDisconnected = (context: RheaEventContext) => {\n        removeListeners();\n        const error = context.connection && context.connection.error\n          ? context.connection.error\n          : context.error;\n        log.error(\"[%s] Connection got disconnected while creating amqp session '%s': %O.\",\n          this.id, session.id, error);\n        return reject(error);\n      };\n\n      const actionAfterTimeout = () => {\n        removeListeners();\n        const msg = `Unable to create the amqp session due to operation timeout.`;\n        log.error(\"[%s] %s\", this.id, msg);\n        return reject(new OperationTimeoutError(msg));\n      };\n\n      // listeners that we add for completing the operation are added directly to rhea's objects.\n      rheaSession.once(SessionEvents.sessionOpen, onOpen);\n      rheaSession.once(SessionEvents.sessionClose, onClose);\n      rheaSession.connection.once(ConnectionEvents.disconnected, onDisconnected);\n      log.session(\"[%s] Calling amqp session.begin().\", this.id);\n      const waitTimer = setTimeout(actionAfterTimeout, this.options!.operationTimeoutInSeconds! * 1000);\n      rheaSession.begin();\n    });\n  }\n\n  /**\n   * Creates an amqp sender link. It either uses the provided session or creates a new one.\n   * - **Resolves** the promise with the Sender object when rhea emits the \"sender_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"sender_close\" event while\n   * trying to create an amqp session or with an AbortError if the operation was cancelled.\n   * @param {CreateSenderOptions} options Optional parameters to create a sender link.\n   * @return {Promise<Sender>} Promise<Sender>.\n   */\n  async createSender(options?: CreateSenderOptions): Promise<Sender> {\n    if (options && options.session && options.session.createSender) {\n      return options.session.createSender(options);\n    }\n    const session = await this.createSession({ abortSignal: options && options.abortSignal });\n    return session.createSender(options);\n  }\n\n  /**\n   * Creates an awaitable amqp sender. It either uses the provided session or creates a new one.\n   * @param options Optional parameters to create an awaitable sender link.\n   * - If `onError` and `onSessionError` handlers are not provided then the `AwaitableSender` will\n   * clear the timer and reject the Promise for all the entries of inflight send operation in its\n   * `deliveryDispositionMap`.\n   * - If the user is handling the reconnection of sender link or the underlying connection in it's\n   * app, then the `onError` and `onSessionError` handlers must be provided by the user and (s)he\n   * shall be responsible of clearing the `deliveryDispositionMap` of inflight `send()` operation.\n   *\n   * @return Promise<AwaitableSender>.\n   */\n  async createAwaitableSender(options?: CreateAwaitableSenderOptions): Promise<AwaitableSender> {\n    if (options && options.session && options.session.createAwaitableSender) {\n      return options.session.createAwaitableSender(options);\n    }\n    const session = await this.createSession({ abortSignal: options && options.abortSignal });\n    return session.createAwaitableSender(options);\n  }\n\n  /**\n   * Creates an amqp receiver link. It either uses the provided session or creates a new one.\n   * - **Resolves** the promise with the Sender object when rhea emits the \"receiver_open\" event.\n   * - **Rejects** the promise with an AmqpError when rhea emits the \"receiver_close\" event while\n   * trying to create an amqp session or with an AbortError if the operation was cancelled.\n   * @param {CreateReceiverOptions} options Optional parameters to create a receiver link.\n   * @return {Promise<Receiver>} Promise<Receiver>.\n   */\n  async createReceiver(options?: CreateReceiverOptions): Promise<Receiver> {\n    if (options && options.session && options.session.createReceiver) {\n      return options.session.createReceiver(options);\n    }\n    const session = await this.createSession({ abortSignal: options && options.abortSignal });\n    return session.createReceiver(options);\n  }\n\n  /**\n   * Creates an amqp sender-receiver link. It either uses the provided session or creates a new one.\n   * This method creates a sender-receiver link on the same session. It is useful for management\n   * style operations where one may want to send a request and await for response.\n   * @param {SenderOptions} senderOptions Parameters to create a sender.\n   * @param {ReceiverOptions} receiverOptions Parameters to create a receiver.\n   * @param {CreateRequestResponseLinkOptions} [options] Optional parameters to control how sender and receiver link creation.\n   * @return {Promise<ReqResLink>} Promise<ReqResLink>\n   */\n  async createRequestResponseLink(senderOptions: SenderOptions, receiverOptions: ReceiverOptions,\n    options: CreateRequestResponseLinkOptions = {}): Promise<ReqResLink> {\n    if (!senderOptions) {\n      throw new Error(`Please provide sender options.`);\n    }\n    if (!receiverOptions) {\n      throw new Error(`Please provide receiver options.`);\n    }\n    const { session: providedSession, abortSignal } = options;\n    const session = providedSession || await this.createSession({ abortSignal });\n    const [sender, receiver] = await Promise.all([\n      session.createSender({ ...senderOptions, abortSignal }),\n      session.createReceiver({ ...receiverOptions, abortSignal })\n    ]);\n    log.connection(\"[%s] Successfully created the sender '%s' and receiver '%s' on the same \" +\n      \"amqp session '%s'.\", this.id, sender.name, receiver.name, session.id);\n    return {\n      session: session,\n      sender: sender,\n      receiver: receiver\n    };\n  }\n\n  /**\n   * Adds event listeners for the possible events that can occur on the connection object and\n   * re-emits the same event back with the received arguments from rhea's event emitter.\n   * @private\n   * @returns {void} void\n   */\n  private _initializeEventListeners(): void {\n    for (const eventName of Object.keys(ConnectionEvents) as Array<keyof typeof ConnectionEvents>) {\n      this._connection.on(ConnectionEvents[eventName], (context) => {\n        const params: EmitParameters = {\n          rheaContext: context,\n          emitter: this,\n          eventName: ConnectionEvents[eventName],\n          emitterType: \"connection\",\n          connectionId: this.id\n        };\n        if (ConnectionEvents[eventName] === ConnectionEvents.protocolError) {\n          log.connection(\"[%s] ProtocolError is: %O.\", this.id, context);\n        }\n        emitEvent(params);\n      });\n    }\n\n    // Add event handlers for *_error and *_close events that can be propagated to the connection\n    // object, if they are not handled at their level. * denotes - Sender, Receiver, Session\n\n    // Sender\n    this._connection.on(SenderEvents.senderError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SenderEvents.senderError,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n    this._connection.on(SenderEvents.senderClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SenderEvents.senderClose,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n\n    // Receiver\n    this._connection.on(ReceiverEvents.receiverError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: ReceiverEvents.receiverError,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n    this._connection.on(ReceiverEvents.receiverClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: ReceiverEvents.receiverClose,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n\n    // Session\n    this._connection.on(SessionEvents.sessionError, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SessionEvents.sessionError,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n    this._connection.on(SessionEvents.sessionClose, (context) => {\n      const params: EmitParameters = {\n        rheaContext: context,\n        emitter: this,\n        eventName: SessionEvents.sessionClose,\n        emitterType: \"connection\",\n        connectionId: this.id\n      };\n      emitEvent(params);\n    });\n    if (typeof this._connection.eventNames === \"function\") {\n      log.eventHandler(\"[%s] rhea-promise 'connection' object is listening for events: %o \" +\n        \"emitted by rhea's 'connection' object.\", this.id, this._connection.eventNames());\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nimport {\n  Container as RheaContainer, ContainerOptions as ContainerOptionsBase, create_container,\n  Filter, Types, MessageUtil, Sasl\n} from \"rhea\";\nimport { EventEmitter } from \"events\";\nimport { ConnectionOptions, Connection } from './connection';\nimport { TlsOptions, Server as TlsServer, ConnectionOptions as TlsConnectionOptions } from \"tls\";\nimport { ListenOptions, Server, Socket } from \"net\";\nimport { TlsServerConnectionOptions } from \"rhea/typings/connection\";\n\n/**\n * Descibes the options that can be provided while creating the Container.\n * @interface ContainerOptions\n */\nexport interface ContainerOptions extends ContainerOptionsBase {\n  createdInstance?: RheaContainer;\n}\n\n/**\n * An AMQP container from which outgoing connections can be made and/or\n * to which incoming connections can be accepted.\n * @class Container\n */\nexport class Container extends EventEmitter {\n  /**\n   * @property {options} ContainerOptions Container options.\n   */\n  options: ContainerOptions;\n  /**\n   * @property {RheaContainer} _container The underlying container object from rhea.\n   * @private\n   */\n  private _container: RheaContainer;\n\n  constructor(options?: ContainerOptions) {\n    if (!options) options = {};\n    super();\n    if (options.createdInstance) {\n      this._container = options.createdInstance;\n      delete options.createdInstance;\n    } else {\n      this._container = create_container(options);\n    }\n\n    this.options = this._container.options;\n  }\n\n  get id(): string {\n    return this._container.id;\n  }\n\n  get filter(): Filter {\n    return this._container.filter;\n  }\n\n  get types(): Types {\n    return this._container.types;\n  }\n\n  get message(): MessageUtil {\n    return this._container.message;\n  }\n\n  get sasl(): Sasl {\n    return this._container.sasl;\n  }\n\n  get saslServerMechanisms(): any {\n    return this._container.sasl_server_mechanisms;\n  }\n\n  createConnection(options?: ConnectionOptions): Connection {\n    const rheaConnection = this._container.create_connection(options);\n    return new Connection({ rheaConnection: rheaConnection, container: this });\n  }\n\n  async connect(options?: ConnectionOptions): Promise<Connection> {\n    return this.createConnection(options).open();\n  }\n\n  listen(options: ListenOptions | TlsOptions & TlsServerConnectionOptions): Server | TlsServer {\n    return this._container.listen(options);\n  }\n\n  generateUUid(): string {\n    return this._container.generate_uuid();\n  }\n\n  stringToUuid(uuidString: string): Buffer {\n    return this._container.string_to_uuid(uuidString);\n  }\n\n  uuidToString(buffer: Buffer): string {\n    return this._container.uuid_to_string(buffer);\n  }\n\n  websocketAccept(socket: Socket, options: TlsConnectionOptions): void {\n    return this._container.websocket_accept(socket, options);\n  }\n\n  websocketConnect(impl: any): any {\n    return this._container.websocket_connect(impl);\n  }\n\n  static create(options?: ContainerOptionsBase): Container {\n    return new Container(options);\n  }\n\n  static copyFromContainerInstance(instance: RheaContainer): Container {\n    return new Container({ createdInstance: instance });\n  }\n}\n", "// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the Apache License. See License in the project root for license information.\n\nexport {\n  Delivery, Message, MessageProperties, MessageHeader, EventContext as RheaEventContext,\n  ConnectionOptions as ConnectionOptionsBase, AmqpError, Dictionary, types, message, filter, Filter,\n  uuid_to_string, generate_uuid, string_to_uuid, LinkError, ProtocolError, LinkOptions,\n  DeliveryAnnotations, MessageAnnotations, ReceiverEvents, SenderEvents, ConnectionEvents,\n  SessionEvents, ContainerOptions as ContainerOptionsBase, TerminusOptions, Types, Sasl,\n  EndpointOptions, MessageUtil, TypeError, SimpleError, Source, ConnectionError, Typed,\n  WebSocketImpl, WebSocketInstance, TargetTerminusOptions\n} from \"rhea\";\n\nexport { EventContext, OnAmqpEvent } from \"./eventContext\";\nexport { Container, ContainerOptions } from \"./container\";\nexport {\n  Connection, ReqResLink, ConnectionOptions, CreateReceiverOptions, CreateAwaitableSenderOptions, CreateSenderOptions, CreateRequestResponseLinkOptions\n} from \"./connection\";\nexport { Session } from \"./session\";\nexport { Receiver, ReceiverOptions } from \"./receiver\";\nexport { Sender, SenderOptions, SenderSendOptions } from \"./sender\";\nexport { AwaitableSenderOptions, AwaitableSender, PromiseLike, AwaitableSendOptions } from \"./awaitableSender\";\nexport { LinkCloseOptions } from \"./link\";\nexport {\n  Func, AmqpResponseStatusCode, isAmqpError, ConnectionStringParseOptions, delay, messageHeader,\n  messageProperties, parseConnectionString, ParsedOutput\n} from \"./util/utils\";\nexport {\n  InsufficientCreditError, OperationTimeoutError, SendOperationFailedError\n} from \"./errorDefinitions\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const Constants = {\n  associatedLinkName: \"associated-link-name\",\n  partitionKey: \"x-opt-partition-key\",\n  sequenceNumber: \"x-opt-sequence-number\",\n  enqueueSequenceNumber: \"x-opt-enqueue-sequence-number\",\n  enqueuedTime: \"x-opt-enqueued-time\",\n  scheduledEnqueueTime: \"x-opt-scheduled-enqueue-time\",\n  offset: \"x-opt-offset\",\n  lockedUntil: \"x-opt-locked-until\",\n  partitionIdName: \"x-opt-partition-id\",\n  publisher: \"x-opt-publisher-name\",\n  viaPartitionKey: \"x-opt-via-partition-key\",\n  deadLetterSource: \"x-opt-deadletter-source\",\n  messageState: \"x-opt-message-state\",\n  enqueuedTimeAnnotation: `amqp.annotation.x-opt-enqueued-time`,\n  offsetAnnotation: `amqp.annotation.x-opt-offset`,\n  sequenceNumberAnnotation: `amqp.annotation.x-opt-sequence-number`,\n  guidSize: 16,\n  message: \"message\",\n  error: \"error\",\n  statusCode: \"status-code\",\n  statusDescription: \"status-description\",\n  errorCondition: \"error-condition\",\n  management: \"$management\",\n  partition: \"partition\",\n  partitionId: \"partitionId\",\n  readOperation: \"READ\",\n  TLS: \"tls\",\n  TCP: \"tcp\",\n  establishConnection: \"establishConnection\",\n  defaultConsumerGroup: \"$default\",\n  eventHub: \"eventhub\",\n  cbsEndpoint: \"$cbs\",\n  cbsReplyTo: \"cbs\",\n  operationPutToken: \"put-token\",\n  aadEventHubsAudience: \"https://eventhubs.azure.net/\",\n  aadEventHubsScope: \"https://eventhubs.azure.net//.default\",\n  aadServiceBusAudience: \"https://servicebus.azure.net/\",\n  aadServiceBusScope: \"https://servicebus.azure.net//.default\",\n  maxUserAgentLength: 512,\n  vendorString: \"com.microsoft\",\n  attachEpoch: `com.microsoft:epoch`,\n  receiverIdentifierName: `com.microsoft:receiver-name`,\n  enableReceiverRuntimeMetricName: `com.microsoft:enable-receiver-runtime-metric`,\n  timespan: `com.microsoft:timespan`,\n  uri: `com.microsoft:uri`,\n  dateTimeOffset: `com.microsoft:datetime-offset`,\n  sessionFilterName: `com.microsoft:session-filter`,\n  receiverError: \"receiver_error\",\n  senderError: \"sender_error\",\n  sessionError: \"session_error\",\n  connectionError: \"connection_error\",\n  defaultOperationTimeoutInMs: 60000,\n  defaultConnectionIdleTimeoutInMs: 60000,\n  managementRequestKey: \"managementRequest\",\n  negotiateCbsKey: \"negotiateCbs\",\n  negotiateClaim: \"negotiateClaim\",\n  ensureContainerAndBlob: \"ensureContainerAndBlob\",\n  defaultPrefetchCount: 1000,\n  reconnectLimit: 100,\n  maxMessageIdLength: 128,\n  maxPartitionKeyLength: 128,\n  maxSessionIdLength: 128,\n  pathDelimiter: \"/\",\n  ruleNameMaximumLength: 50,\n  maximumSqlFilterStatementLength: 1024,\n  maximumSqlRuleActionStatementLength: 1024,\n  maxDeadLetterReasonLength: 4096,\n  // https://stackoverflow.com/questions/11526504/minimum-and-maximum-date for js\n  // However we are setting this to the TimeSpan.MaxValue of C#.\n  maxDurationValue: 922337203685477,\n  minDurationValue: -922337203685477,\n  // https://github.com/Azure/azure-amqp/blob/master/Microsoft.Azure.Amqp/Amqp/AmqpConstants.cs#L47\n  maxAbsoluteExpiryTime: new Date(\"9999-12-31T07:59:59.000Z\").getTime(),\n  maxUint32Value: 4294967295,\n  aadTokenValidityMarginInMs: 5000,\n  connectionReconnectDelay: 300,\n  defaultMaxRetries: 3,\n  defaultMaxRetriesForConnection: 150,\n  defaultDelayBetweenOperationRetriesInMs: 30000,\n  defaultMaxDelayForExponentialRetryInMs: 90000,\n  receiverSettleMode: \"receiver-settle-mode\",\n  dispositionStatus: \"disposition-status\",\n  fromSequenceNumber: \"from-sequence-number\",\n  messageCount: \"message-count\",\n  enqueuedTimeUtc: \"enqueued-time-utc\",\n  lockTokens: \"lock-tokens\",\n  messageIdMapKey: \"message-id\",\n  sequenceNumberMapKey: \"sequence-number\",\n  lockTokenMapKey: \"lock-token\",\n  sessionIdMapKey: \"session-id\",\n  sequenceNumbers: \"sequence-numbers\",\n  deadLetterReason: \"deadletter-reason\",\n  deadLetterDescription: \"deadletter-description\",\n  propertiesToModify: \"properties-to-modify\",\n  deadLetterName: \"com.microsoft:dead-letter\",\n  trackingId: \"com.microsoft:tracking-id\",\n  serverTimeout: \"com.microsoft:server-timeout\",\n  operations: {\n    putToken: \"put-token\",\n    read: \"READ\",\n    cancelScheduledMessage: \"com.microsoft:cancel-scheduled-message\",\n    scheduleMessage: \"com.microsoft:schedule-message\",\n    renewLock: \"com.microsoft:renew-lock\",\n    peekMessage: \"com.microsoft:peek-message\",\n    receiveBySequenceNumber: \"com.microsoft:receive-by-sequence-number\",\n    deleteMessages: \"com.microsoft:batch-delete-messages\",\n    updateDisposition: \"com.microsoft:update-disposition\",\n    renewSessionLock: \"com.microsoft:renew-session-lock\",\n    setSessionState: \"com.microsoft:set-session-state\",\n    getSessionState: \"com.microsoft:get-session-state\",\n    enumerateSessions: \"com.microsoft:get-message-sessions\",\n    addRule: \"com.microsoft:add-rule\",\n    removeRule: \"com.microsoft:remove-rule\",\n    enumerateRules: \"com.microsoft:enumerate-rules\",\n  },\n  descriptorCodes: {\n    ruleDescriptionList: 1335734829060,\n    sqlFilterList: 83483426822,\n    correlationFilterList: 83483426825,\n    sqlRuleActionList: 1335734829062,\n    trueFilterList: 83483426823,\n    falseFilterList: 83483426824,\n  },\n} as const;\n\n/**\n * The standard error message accompanying an AbortError.\n * @hidden\n */\nexport const StandardAbortMessage = \"The operation was aborted.\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * The \\@azure/logger configuration for this package.\n * This will output logs using the `azure:event-hubs` namespace prefix.\n */\nexport const logger = createClientLogger(\"core-amqp\");\n\n/**\n * Logs the error's stack trace to \"verbose\" if a stack trace is available.\n * @param error - Error containing a stack trace.\n * @internal\n */\nexport function logErrorStackTrace(error: unknown): void {\n  if (isObjectWithProperties(error, [\"stack\"])) {\n    logger.verbose(error.stack);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError, AbortSignalLike } from \"@azure/abort-controller\";\nimport { OperationTimeoutError } from \"rhea-promise\";\nimport { StandardAbortMessage } from \"./constants.js\";\nimport { logger } from \"../log.js\";\n\n/**\n * Describes the properties that must be provided while acquiring a lock.\n */\nexport interface AcquireLockProperties {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel lock acquisition.\n   * This only applies to the acquisition of a lock. Once the lock is acquired, the task is invoked and `acquire`\n   * can no longer be cancelled.\n   * This does not cancel running the task passed to `acquire()` if the lock has been acquired,\n   * but will prevent it from running if cancelled before the task is invoked.\n   */\n  abortSignal: AbortSignalLike | undefined;\n  /**\n   * The allowed amount of time in milliseconds to acquire a lock.\n   * If a lock isn't acquired within this time, the promise returned\n   * by `acquire()` will be rejected with an Error.\n   */\n  timeoutInMs: number | undefined;\n}\n\n/**\n * Describes the components related to a specific task.\n * @internal\n */\ninterface TaskDetails {\n  abortListener?: () => void;\n  abortSignal?: AbortSignalLike;\n  resolve: (value: unknown) => void;\n  reject: (reason: Error) => void;\n  task: (...args: any[]) => Promise<unknown>;\n  tid?: ReturnType<typeof setTimeout>;\n}\n\n/**\n * CancellableAsyncLock provides a mechanism for forcing tasks using the same\n * 'key' to be executed serially.\n *\n * Pending tasks can be manually cancelled via an abortSignal or automatically\n * cancelled by reach a provided timeout value.\n */\nexport interface CancellableAsyncLock {\n  /**\n   * Returns a promise that resolves to the value returned by the provided task function.\n   * Only 1 task can be invoked at a time for a given `key` value.\n   *\n   * An acquire call can be cancelled via an `abortSignal`.\n   * If cancelled, the promise will be rejected with an `AbortError`.\n   *\n   * `acquireTimeoutInMs` can also be provided to properties.\n   * If the timeout is reached before the provided `task` is invoked,\n   * then the promise will be rejected with an Error stating the task\n   * timed out waiting to acquire a lock.\n   *\n   * @param key - All `acquire` calls are grouped by the provided `key`.\n   * @param task - The function to invoke once the lock has been acquired.\n   * @param properties - Additional properties to control the behavior of `acquire`.\n   */\n  acquire<T = void>(\n    key: string,\n    task: (...args: any[]) => Promise<T>,\n    properties: AcquireLockProperties,\n  ): Promise<T>;\n}\n\n/**\n * This class is used to coordinate executing tasks that should not be run in parallel.\n * @internal\n */\nexport class CancellableAsyncLockImpl {\n  private _keyMap = new Map<string, TaskDetails[]>();\n  private _executionRunningSet = new Set<string>();\n  /**\n   * Returns a promise that resolves to the value returned by the provided task function.\n   * Only 1 task can be invoked at a time for a given `key` value.\n   *\n   * An acquire call can be cancelled via an `abortSignal`.\n   * If cancelled, the promise will be rejected with an `AbortError`.\n   *\n   * `acquireTimeoutInMs` can also be provided to properties.\n   * If the timeout is reached before the provided `task` is invoked,\n   * then the promise will be rejected with an Error stating the task\n   * timed out waiting to acquire a lock.\n   *\n   * @param key - All `acquire` calls are grouped by the provided `key`.\n   * @param task - The function to invoke once the lock has been acquired.\n   * @param properties - Additional properties to control the behavior of `acquire`.\n   */\n  acquire<T = void>(\n    key: string,\n    task: (...args: any[]) => Promise<T>,\n    properties: AcquireLockProperties,\n  ): Promise<T> {\n    const { abortSignal, timeoutInMs } = properties;\n    // Fast exit if the operation is already cancelled.\n    if (abortSignal?.aborted) {\n      return Promise.reject(new AbortError(StandardAbortMessage));\n    }\n\n    // Ensure we've got a task queue for the given key.\n    const taskQueue = this._keyMap.get(key) ?? [];\n    this._keyMap.set(key, taskQueue);\n\n    // This method will return a promise that will be fulfilled outside this function.\n    const { promise, rejecter, resolver } = getPromiseParts();\n\n    const taskDetails: TaskDetails = {\n      reject: rejecter,\n      resolve: resolver,\n      task,\n    };\n\n    // Handle timeouts by removing the task from the queue when hit.\n    if (typeof timeoutInMs === \"number\") {\n      const tid = setTimeout(() => {\n        this._removeTaskDetails(key, taskDetails);\n        rejecter(\n          new OperationTimeoutError(`The task timed out waiting to acquire a lock for ${key}`),\n        );\n      }, timeoutInMs);\n      taskDetails.tid = tid;\n    }\n\n    // Handle cancellation by removing the task from the queue when cancelled.\n    if (abortSignal) {\n      const abortListener = (): void => {\n        this._removeTaskDetails(key, taskDetails);\n        rejecter(new AbortError(StandardAbortMessage));\n      };\n      abortSignal.addEventListener(\"abort\", abortListener);\n      taskDetails.abortSignal = abortSignal;\n      taskDetails.abortListener = abortListener;\n    }\n\n    // Enqueue the task!\n    taskQueue.push(taskDetails);\n    logger.verbose(\n      `Called acquire() for lock \"${key}\". Lock \"${key}\" has ${taskQueue.length} pending tasks.`,\n    );\n\n    // Start a loop to iterate over the task queue.\n    // This will run asynchronously and won't allow\n    // more than 1 concurrent execution per key at a time.\n    this._execute(key);\n\n    return promise as Promise<T>;\n  }\n\n  /**\n   * Iterates over all the pending tasks for a given `key` serially.\n   *\n   * Note: If the pending tasks are already being iterated by an early\n   * _execute invocation, this returns immediately.\n   * @returns\n   */\n  private async _execute(key: string): Promise<void> {\n    // If the key already exists in the set, then exit because\n    // tasks are already being processed.\n    if (this._executionRunningSet.has(key)) {\n      return;\n    }\n\n    const taskQueue = this._keyMap.get(key);\n    // If the queue is empty, exit early!\n    if (!taskQueue || !taskQueue.length) {\n      return;\n    }\n\n    // Add the key to the set so we can tell the\n    // task queue is already being processed.\n    this._executionRunningSet.add(key);\n    while (taskQueue.length) {\n      // Remove tasks from the front of the queue.\n      // Order matters!\n      const taskDetails = taskQueue.shift();\n      if (!taskDetails) {\n        continue;\n      }\n\n      try {\n        logger.verbose(`Acquired lock for \"${key}\", invoking task.`);\n        cleanupTaskDetails(taskDetails);\n        const value = await taskDetails.task();\n        taskDetails.resolve(value);\n      } catch (err: any) {\n        taskDetails.reject(err);\n      }\n      logger.verbose(\n        `Task completed for lock \"${key}\". Lock \"${key}\" has ${taskQueue.length} pending tasks.`,\n      );\n    }\n\n    // Indicate that the task queue for the key is empty\n    // and we're done processing it.\n    this._executionRunningSet.delete(key);\n    // clean up the key map\n    this._keyMap.delete(key);\n  }\n\n  private _removeTaskDetails(key: string, taskDetails: TaskDetails): void {\n    const taskQueue = this._keyMap.get(key);\n    if (!taskQueue || !taskQueue.length) {\n      // The task is already gone from the queue, so our work here is done!\n      return;\n    }\n\n    const index = taskQueue.indexOf(taskDetails);\n    if (index !== -1) {\n      const [details] = taskQueue.splice(index, 1);\n      // Cleanup the task rejection code paths.\n      cleanupTaskDetails(details);\n    }\n  }\n}\n\n/**\n * @internal\n * Returns a promise and the promise's resolve and reject methods.\n */\nfunction getPromiseParts(): {\n  promise: Promise<unknown>;\n  resolver: (value: unknown) => void;\n  rejecter: (reason: Error) => void;\n} {\n  let resolver: (value: unknown) => void;\n  let rejecter: (reason: Error) => void;\n\n  const promise = new Promise<unknown>((resolve, reject) => {\n    resolver = resolve;\n    rejecter = reject;\n  });\n\n  return {\n    promise,\n    resolver: resolver!,\n    rejecter: rejecter!,\n  };\n}\n\n/**\n * @internal\n * Removes any abort listener or pending timeout from a task.\n */\nfunction cleanupTaskDetails(taskDetails: TaskDetails): void {\n  // Cleanup the task rejection code paths.\n  if (taskDetails.tid) clearTimeout(taskDetails.tid);\n  if (taskDetails.abortSignal && taskDetails.abortListener) {\n    taskDetails.abortSignal.removeEventListener(\"abort\", taskDetails.abortListener);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CancellableAsyncLock, CancellableAsyncLockImpl } from \"./lock.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { WebSocketImpl } from \"rhea-promise\";\nimport { delay as wrapperDelay } from \"@azure/core-util\";\n\n/**\n * @internal\n *\n * Describes the options that can be provided to create an async lock.\n */\nexport interface AsyncLockOptions {\n  /**\n   * The max timeout. Default is: 0 (never timeout).\n   */\n  timeout?: number;\n  /**\n   * Maximum pending tasks. Default is: 1000.\n   */\n  maxPending?: number;\n  /**\n   * Whether lock can reenter in the same domain.\n   * Default is: false.\n   */\n  domainReentrant?: boolean;\n  /**\n   * Your implementation of the promise. Default is: global promise.\n   */\n  Promise?: any;\n}\n\n/**\n * Options to configure the channelling of the AMQP connection over Web Sockets.\n */\nexport interface WebSocketOptions {\n  /**\n   * The WebSocket constructor used to create an AMQP connection over a WebSocket.\n   * This option should be provided in the below scenarios:\n   * - The TCP port 5671 which is that is used by the AMQP connection to Event Hubs is blocked in your environment.\n   * - Your application needs to be run behind a proxy server.\n   * - Your application needs to run in the browser and you want to provide your own choice of Websocket implementation\n   *   instead of the built-in WebSocket in the browser.\n   */\n  webSocket?: WebSocketImpl;\n  /**\n   * Options to be passed to the WebSocket constructor when the underlying `rhea` library instantiates\n   * the WebSocket.\n   */\n  webSocketConstructorOptions?: any;\n}\n\n/**\n * Defines an object with possible properties defined in T.\n */\nexport type ParsedOutput<T> = { [P in keyof T]: T[P] };\n\n/**\n * Parses the connection string and returns an object of type T.\n *\n * Connection strings have the following syntax:\n *\n * ConnectionString ::= `Part { \";\" Part } [ \";\" ] [ WhiteSpace ]`\n * Part             ::= [ PartLiteral [ \"=\" PartLiteral ] ]\n * PartLiteral      ::= [ WhiteSpace ] Literal [ WhiteSpace ]\n * Literal          ::= ? any sequence of characters except ; or = or WhiteSpace ?\n * WhiteSpace       ::= ? all whitespace characters including `\\r` and `\\n` ?\n *\n * @param connectionString - The connection string to be parsed.\n * @returns ParsedOutput<T>.\n */\nexport function parseConnectionString<T>(connectionString: string): ParsedOutput<T> {\n  const output: { [k: string]: string } = {};\n  const parts = connectionString.trim().split(\";\");\n\n  for (let part of parts) {\n    part = part.trim();\n\n    if (part === \"\") {\n      // parts can be empty\n      continue;\n    }\n\n    const splitIndex = part.indexOf(\"=\");\n    if (splitIndex === -1) {\n      throw new Error(\n        \"Connection string malformed: each part of the connection string must have an `=` assignment.\",\n      );\n    }\n\n    const key = part.substring(0, splitIndex).trim();\n    if (key === \"\") {\n      throw new Error(\"Connection string malformed: missing key for assignment\");\n    }\n\n    const value = part.substring(splitIndex + 1).trim();\n\n    output[key] = value;\n  }\n\n  return output as any;\n}\n\n/**\n * The cancellable async lock instance.\n */\nexport const defaultCancellableLock: CancellableAsyncLock = new CancellableAsyncLockImpl();\n\n/**\n * @internal\n *\n * Describes a Timeout class that can wait for the specified amount of time and then resolve/reject\n * the promise with the given value.\n */\nexport class Timeout {\n  private _timer?: ReturnType<typeof setTimeout>;\n\n  set<T>(t: number, value?: T): Promise<T> {\n    return new Promise<T>((resolve, reject) => {\n      this.clear();\n      const callback: (args: any) => void = value ? () => reject(new Error(`${value}`)) : resolve;\n      this._timer = setTimeout(callback, t);\n    });\n  }\n\n  clear(): void {\n    if (this._timer) {\n      clearTimeout(this._timer);\n    }\n  }\n\n  wrap<T>(promise: Promise<T>, t: number, value?: T): Promise<T> {\n    const wrappedPromise = this._promiseFinally(promise, () => this.clear());\n    const timer = this.set(t, value);\n    return Promise.race([wrappedPromise, timer]);\n  }\n\n  private _promiseFinally<T>(promise: Promise<T>, fn: (...args: any[]) => void): Promise<T> {\n    const success = (result: T): T => {\n      fn();\n      return result;\n    };\n    const error = (e: Error): Promise<never> => {\n      fn();\n      return Promise.reject(e);\n    };\n    return Promise.resolve(promise).then(success, error);\n  }\n\n  static set<T>(t: number, value?: T): Promise<T> {\n    return new Timeout().set(t, value);\n  }\n\n  static wrap<T>(promise: Promise<T>, t: number, value?: T): Promise<T> {\n    return new Timeout().wrap(promise, t, value);\n  }\n}\n\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param abortSignal - The abortSignal associated with containing operation.\n * @param abortErrorMsg - The abort error message associated with containing operation.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @returns - Resolved promise\n */\nexport async function delay<T>(\n  delayInMs: number,\n  abortSignal?: AbortSignalLike,\n  abortErrorMsg?: string,\n  value?: T,\n): Promise<T | void> {\n  await wrapperDelay(delayInMs, {\n    abortSignal: abortSignal,\n    abortErrorMsg: abortErrorMsg,\n  });\n  if (value !== undefined) {\n    return value;\n  }\n}\n\n/**\n * Checks if an address is localhost.\n * @param address - The address to check.\n * @returns true if the address is localhost, false otherwise.\n */\nexport function isLoopbackAddress(address: string): boolean {\n  return /^(.*:\\/\\/)?(127\\.[\\d.]+|[0:]+1|localhost)/.test(address.toLowerCase());\n}\n\n/**\n * @internal\n *\n * Generates a random number between the given interval\n * @param min - Min number of the range (inclusive).\n * @param max - Max number of the range (inclusive).\n */\nexport function randomNumberFromInterval(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * @internal\n *\n * Type declaration for a Function type where T is the input to the function and V is the output\n * of the function.\n */\nexport type Func<T, V> = (a: T) => V;\n\n/**\n * @internal\n *\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param promiseFactories - An array of promise factories(A function that return a promise)\n *\n * @param kickstart - Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n *\n * @returns A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(\n  promiseFactories: Array<any>,\n  kickstart?: unknown,\n): Promise<any> {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach((promiseFactory) => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n\n/**\n * @internal\n *\n * Determines whether the given connection string is an iothub connection string.\n * @param connectionString - The connection string.\n * @returns boolean.\n */\nexport function isIotHubConnectionString(connectionString: string): boolean {\n  connectionString = String(connectionString);\n\n  let result: boolean = false;\n  const model: any = parseConnectionString<any>(connectionString);\n  if (model && model.HostName && model.SharedAccessKey && model.SharedAccessKeyName) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * @internal\n */\nexport function isString(s: unknown): s is string {\n  return typeof s === \"string\";\n}\n\n/**\n * @internal\n */\nexport function isNumber(n: unknown): n is number {\n  return typeof n === \"number\";\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\nimport { AmqpError, AmqpResponseStatusCode, isAmqpError as rheaIsAmqpError } from \"rhea-promise\";\nimport { isDefined, isError, isNodeLike, isObjectWithProperties } from \"@azure/core-util\";\nimport { isNumber, isString } from \"./util/utils.js\";\n\n/**\n * Maps the conditions to the numeric AMQP Response status codes.\n * @internal\n */\nexport enum ConditionStatusMapper {\n  \"com.microsoft:timeout\" = AmqpResponseStatusCode.RequestTimeout,\n  \"amqp:not-found\" = AmqpResponseStatusCode.NotFound,\n  \"amqp:not-implemented\" = AmqpResponseStatusCode.NotImplemented,\n  \"com.microsoft:entity-already-exists\" = AmqpResponseStatusCode.Conflict,\n  \"com.microsoft:message-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:session-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:no-matching-subscription\" = AmqpResponseStatusCode.InternalServerError,\n  \"amqp:link:message-size-exceeded\" = AmqpResponseStatusCode.Forbidden,\n  \"com.microsoft:server-busy\" = AmqpResponseStatusCode.ServiceUnavailable,\n  \"com.microsoft:argument-error\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:argument-out-of-range\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:store-lock-lost\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:session-cannot-be-locked\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:partition-not-owned\" = AmqpResponseStatusCode.Gone,\n  \"com.microsoft:entity-disabled\" = AmqpResponseStatusCode.BadRequest,\n  \"com.microsoft:publisher-revoked\" = AmqpResponseStatusCode.Unauthorized,\n  \"amqp:link:stolen\" = AmqpResponseStatusCode.Gone,\n  \"amqp:not-allowed\" = AmqpResponseStatusCode.BadRequest,\n  \"amqp:unauthorized-access\" = AmqpResponseStatusCode.Unauthorized,\n  \"amqp:resource-limit-exceeded\" = AmqpResponseStatusCode.Forbidden,\n}\n\n/**\n * Maps the amqp error conditions to the Error names.\n */\nexport enum ConditionErrorNameMapper {\n  /**\n   * Error is thrown when the address is already in use.\n   */\n  \"com.microsoft:address-already-in-use\" = \"AddressAlreadyInUseError\",\n  /**\n   * Error is thrown when the store lock is lost.\n   */\n  \"com.microsoft:store-lock-lost\" = \"StoreLockLostError\",\n  /**\n   * Error is thrown when a matching subscription is not found.\n   */\n  \"com.microsoft:no-matching-subscription\" = \"NoMatchingSubscriptionError\",\n  /**\n   * Error is thrown when an attempt is made to access a partition that is not owned by the\n   * requesting entity.\n   */\n  \"com.microsoft:partition-not-owned\" = \"PartitionNotOwnedError\",\n  /**\n   * Error is thrown when access to publisher has been revoked.\n   */\n  \"com.microsoft:publisher-revoked\" = \"PublisherRevokedError\",\n  /**\n   * Error is thrown when an attempt is made to create an entity that already exists.\n   */\n  \"com.microsoft:entity-already-exists\" = \"MessagingEntityAlreadyExistsError\",\n  /**\n   * Error is thrown when trying to access/connect to a disabled messaging entity.\n   */\n  \"com.microsoft:entity-disabled\" = \"MessagingEntityDisabledError\",\n  /**\n   * Error is thrown when the lock on the message is lost.\n   */\n  \"com.microsoft:message-lock-lost\" = \"MessageLockLostError\",\n  /**\n   * Error is thrown when the lock on the Azure ServiceBus session is lost.\n   */\n  \"com.microsoft:session-lock-lost\" = \"SessionLockLostError\",\n  /**\n   * Error is thrown when the Azure ServiceBus session cannot be locked.\n   */\n  \"com.microsoft:session-cannot-be-locked\" = \"SessionCannotBeLockedError\",\n  /**\n   * Error is thrown when an internal server error occurred. You may have found a bug?\n   */\n  \"amqp:internal-error\" = \"InternalServerError\", // Retryable\n  /**\n   * Error for signaling general communication errors related to messaging operations.\n   */\n  \"amqp:not-found\" = \"ServiceCommunicationError\",\n  /**\n   * Error is thrown when the message is not found.\n   */\n  \"com.microsoft:message-not-found\" = \"MessageNotFoundError\",\n  /**\n   * Error is thrown when relay is not found.\n   */\n  \"com.microsoft:relay-not-found\" = \"RelayNotFoundError\",\n  /**\n   * Error is thrown when a feature is not implemented yet but the placeholder is present.\n   */\n  \"amqp:not-implemented\" = \"NotImplementedError\",\n  /**\n   * Error is thrown when an operation is attempted but is not allowed.\n   */\n  \"amqp:not-allowed\" = \"InvalidOperationError\",\n  /**\n   * Error is thrown the the Azure EventHub/ServiceBus quota has been exceeded.\n   * Quotas are reset periodically, this operation will have to wait until then.\n   * The messaging entity has reached its maximum allowable size.\n   * This can happen if the maximum number of receivers (which is 5) has already\n   * been opened on a per-consumer group level.\n   */\n  \"amqp:resource-limit-exceeded\" = \"QuotaExceededError\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  \"amqp:unauthorized-access\" = \"UnauthorizedError\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  \"com.microsoft:auth-failed\" = \"UnauthorizedError\",\n  /**\n   * Error is thrown when the service is unavailable. The operation should be retried.\n   */\n  \"com.microsoft:timeout\" = \"ServiceUnavailableError\", // Retryable\n  /**\n   * Error is thrown when no new messages are received for the specified time.\n   */\n  \"com.microsoft:message-wait-timeout\" = \"MessageWaitTimeout\",\n  /**\n   * Error is thrown when an argument has a value that is out of the admissible range.\n   */\n  \"com.microsoft:argument-out-of-range\" = \"ArgumentOutOfRangeError\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  \"amqp:precondition-failed\" = \"PreconditionFailedError\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  \"com.microsoft:precondition-failed\" = \"PreconditionFailedError\",\n  /**\n   * Error is thrown when data could not be decoded.\n   */\n  \"amqp:decode-error\" = \"DecodeError\",\n  /**\n   * Error is thrown when an invalid field was passed in a frame body, and the operation could not proceed.\n   */\n  \"amqp:invalid-field\" = \"InvalidFieldError\",\n  /**\n   * Error is thrown when the client attempted to work with a server entity to which it\n   * has no access because another client is working with it.\n   */\n  \"amqp:resource-locked\" = \"ResourceLockedError\",\n  /**\n   * Error is thrown when a server entity the client is working with has been deleted.\n   */\n  \"amqp:resource-deleted\" = \"ResourceDeletedError\",\n  /**\n   * Error is thrown when the peer sent a frame that is not permitted in the current state.\n   */\n  \"amqp:illegal-state\" = \"IllegalStateError\",\n  /**\n   * Error is thrown when the peer cannot send a frame because the smallest encoding of\n   * the performative with the currently valid values would be too large to fit within\n   * a frame of the agreed maximum frame size.\n   */\n  \"amqp:frame-size-too-small\" = \"FrameSizeTooSmallError\",\n  /**\n   * Error is thrown when an operator intervened to detach for some reason.\n   */\n  \"amqp:link:detach-forced\" = \"DetachForcedError\", // Retryable\n  /**\n   * Error is thrown when the peer sent more message transfers than currently allowed on the link.\n   */\n  \"amqp:link:transfer-limit-exceeded\" = \"TransferLimitExceededError\", // Retryable\n  /**\n   * Error is thrown when the message sent is too large: the maximum size is 256Kb.\n   */\n  \"amqp:link:message-size-exceeded\" = \"MessageTooLargeError\",\n  /**\n   * Error is thrown when the address provided cannot be resolved to a terminus at the current container.\n   */\n  \"amqp:link:redirect\" = \"LinkRedirectError\",\n  /**\n   * Error is thrown when two or more instances connect to the same partition\n   * with different epoch values.\n   */\n  \"amqp:link:stolen\" = \"ReceiverDisconnectedError\",\n  /**\n   * Error is thrown when the peer violated incoming window for the session.\n   */\n  \"amqp:session:window-violation\" = \"SessionWindowViolationError\",\n  /**\n   * Error is thrown when input was received for a link that was detached with an error.\n   */\n  \"amqp:session:errant-link\" = \"ErrantLinkError\",\n  /**\n   * Error is thrown when an attach was received using a handle that is already in use for an attached link.\n   */\n  \"amqp:session:handle-in-use\" = \"HandleInUseError\",\n  /**\n   * Error is thrown when a frame (other than attach) was received referencing a handle which is not\n   * currently in use of an attached link.\n   */\n  \"amqp:session:unattached-handle\" = \"UnattachedHandleError\",\n  /**\n   * Error is thrown when an operator intervened to close the connection for some reason.\n   */\n  \"amqp:connection:forced\" = \"ConnectionForcedError\", // Retryable\n  /**\n   * Error is thrown when a valid frame header cannot be formed from the incoming byte stream.\n   */\n  \"amqp:connection:framing-error\" = \"FramingError\",\n  /**\n   * Error is thrown when the container is no longer available on the current connection.\n   */\n  \"amqp:connection:redirect\" = \"ConnectionRedirectError\",\n  /**\n   * Error is thrown when the server is busy. Callers should wait a while and retry the operation.\n   */\n  \"com.microsoft:server-busy\" = \"ServerBusyError\", // Retryable\n  /**\n   * Error is thrown when an incorrect argument was received.\n   */\n  \"com.microsoft:argument-error\" = \"ArgumentError\",\n  /**\n   * Error is thrown when server cancels the operation due to an internal issue.\n   */\n  \"com.microsoft:operation-cancelled\" = \"OperationCancelledError\", // Retryable\n  /**\n   * Error is thrown when the client sender does not have enough link credits to send the message.\n   */\n  \"client.sender:not-enough-link-credit\" = \"SenderBusyError\", // Retryable\n  /**\n   * Error is thrown when the client sender's link isn't ready\n   */\n  \"client.sender:link-not-ready\" = \"SenderNotReadyError\", // Retryable\n\n  /**\n   * Error is thrown when a low level system error is thrown by node.js.\n   * {@link https://nodejs.org/dist/latest-v8.x/docs/api/all.html#errors_class_system_error}\n   */\n  \"system:error\" = \"SystemError\",\n}\n\n/**\n * Maps the Error names to the amqp error conditions.\n */\nexport enum ErrorNameConditionMapper {\n  /**\n   * Error is thrown when the address is already in use.\n   */\n  AddressAlreadyInUseError = \"com.microsoft:address-already-in-use\",\n  /**\n   * Error is thrown when the store lock is lost.\n   */\n  StoreLockLostError = \"com.microsoft:store-lock-lost\",\n  /**\n   * Error is thrown when a matching subscription is not found.\n   */\n  NoMatchingSubscriptionError = \"com.microsoft:no-matching-subscription\",\n  /**\n   * Error is thrown when an attempt is made to access a partition that is not owned by the\n   * requesting entity.\n   */\n  PartitionNotOwnedError = \"com.microsoft:partition-not-owned\",\n  /**\n   * Error is thrown when access to publisher has been revoked.\n   */\n  PublisherRevokedError = \"com.microsoft:publisher-revoked\",\n  /**\n   * Error is thrown when an attempt is made to create an entity that already exists.\n   */\n  MessagingEntityAlreadyExistsError = \"com.microsoft:entity-already-exists\",\n  /**\n   * Error is thrown when trying to access/connect to a disabled messaging entity.\n   */\n  MessagingEntityDisabledError = \"com.microsoft:entity-disabled\",\n  /**\n   * Error is thrown when the lock on the message is lost.\n   */\n  MessageLockLostError = \"com.microsoft:message-lock-lost\",\n  /**\n   * Error is thrown when the lock on the Azure ServiceBus session is lost.\n   */\n  SessionLockLostError = \"com.microsoft:session-lock-lost\",\n  /**\n   * Error is thrown when the Azure ServiceBus session cannot be locked.\n   */\n  SessionCannotBeLockedError = \"com.microsoft:session-cannot-be-locked\",\n  /**\n   * Error is thrown when an internal server error occurred. You may have found a bug?\n   */\n  InternalServerError = \"amqp:internal-error\", // Retryable\n  /**\n   * Error for signaling general communication errors related to messaging operations.\n   */\n  ServiceCommunicationError = \"amqp:not-found\",\n  /**\n   * Error is thrown when message is not found.\n   */\n  MessageNotFoundError = \"com.microsoft:message-not-found\",\n  /**\n   * Error is thrown when relay is not found.\n   */\n  RelayNotFoundError = \"com.microsoft:relay-not-found\",\n  /**\n   * Error is thrown when a feature is not implemented yet but the placeholder is present.\n   */\n  NotImplementedError = \"amqp:not-implemented\",\n  /**\n   * Error is thrown when an operation is attempted but is not allowed.\n   */\n  InvalidOperationError = \"amqp:not-allowed\",\n  /**\n   * Error is thrown the the Azure EventHub/ServiceBus quota has been exceeded.\n   * Quotas are reset periodically, this operation will have to wait until then.\n   * The messaging entity has reached its maximum allowable size.\n   * This can happen if the maximum number of receivers (which is 5) has already\n   * been opened on a per-consumer group level.\n   */\n  QuotaExceededError = \"amqp:resource-limit-exceeded\",\n  /**\n   * Error is thrown when the connection parameters are wrong and the server refused the connection.\n   */\n  UnauthorizedError = \"amqp:unauthorized-access\",\n  /**\n   * Error is thrown when the service is unavailable. The operation should be retried.\n   */\n  ServiceUnavailableError = \"com.microsoft:timeout\", // Retryable\n  /**\n   * Error is thrown when no new messages are received for the specified time.\n   */\n  MessageWaitTimeout = \"com.microsoft:message-wait-timeout\",\n  /**\n   * Error is thrown when an argument has a value that is out of the admissible range.\n   */\n  ArgumentOutOfRangeError = \"com.microsoft:argument-out-of-range\",\n  /**\n   * Error is thrown when a condition that should have been met in order to execute an operation was not.\n   */\n  PreconditionFailedError = \"amqp:precondition-failed\",\n  /**\n   * Error is thrown when data could not be decoded.\n   */\n  DecodeError = \"amqp:decode-error\",\n  /**\n   * Error is thrown when an invalid field was passed in a frame body, and the operation could not proceed.\n   */\n  InvalidFieldError = \"amqp:invalid-field\",\n  /**\n   * Error is thrown when the client attempted to work with a server entity to which it\n   * has no access because another client is working with it.\n   */\n  ResourceLockedError = \"amqp:resource-locked\",\n  /**\n   * Error is thrown when a server entity the client is working with has been deleted.\n   */\n  ResourceDeletedError = \"amqp:resource-deleted\",\n  /**\n   * Error is thrown when the peer sent a frame that is not permitted in the current state.\n   */\n  IllegalStateError = \"amqp:illegal-state\",\n  /**\n   * Error is thrown when the peer cannot send a frame because the smallest encoding of\n   * the performative with the currently valid values would be too large to fit within\n   * a frame of the agreed maximum frame size.\n   */\n  FrameSizeTooSmallError = \"amqp:frame-size-too-small\",\n  /**\n   * Error is thrown when an operator intervened to detach for some reason.\n   */\n  DetachForcedError = \"amqp:link:detach-forced\", // Retryable\n  /**\n   * Error is thrown when the peer sent more message transfers than currently allowed on the link.\n   */\n  TransferLimitExceededError = \"amqp:link:transfer-limit-exceeded\", // Retryable\n  /**\n   * Error is thrown when the message sent is too large: the maximum size is 256Kb.\n   */\n  MessageTooLargeError = \"amqp:link:message-size-exceeded\",\n  /**\n   * Error is thrown when the address provided cannot be resolved to a terminus at the current container.\n   */\n  LinkRedirectError = \"amqp:link:redirect\",\n  /**\n   * Error is thrown when two or more instances connect to the same partition\n   * with different epoch values.\n   */\n  ReceiverDisconnectedError = \"amqp:link:stolen\",\n  /**\n   * Error is thrown when the peer violated incoming window for the session.\n   */\n  SessionWindowViolationError = \"amqp:session:window-violation\",\n  /**\n   * Error is thrown when input was received for a link that was detached with an error.\n   */\n  ErrantLinkError = \"amqp:session:errant-link\",\n  /**\n   * Error is thrown when an attach was received using a handle that is already in use for an attached link.\n   */\n  HandleInUseError = \"amqp:session:handle-in-use\",\n  /**\n   * Error is thrown when a frame (other than attach) was received referencing a handle which is not\n   * currently in use of an attached link.\n   */\n  UnattachedHandleError = \"amqp:session:unattached-handle\",\n  /**\n   * Error is thrown when an operator intervened to close the connection for some reason.\n   */\n  ConnectionForcedError = \"amqp:connection:forced\", // Retryable\n  /**\n   * Error is thrown when a valid frame header cannot be formed from the incoming byte stream.\n   */\n  FramingError = \"amqp:connection:framing-error\",\n  /**\n   * Error is thrown when the container is no longer available on the current connection.\n   */\n  ConnectionRedirectError = \"amqp:connection:redirect\",\n  /**\n   * Error is thrown when the server is busy. Callers should wait a while and retry the operation.\n   */\n  ServerBusyError = \"com.microsoft:server-busy\", // Retryable\n  /**\n   * Error is thrown when an incorrect argument was received.\n   */\n  ArgumentError = \"com.microsoft:argument-error\",\n  /**\n   * Error is thrown when server cancels the operation due to an internal issue.\n   */\n  OperationCancelledError = \"com.microsoft:operation-cancelled\", // Retryable\n  /**\n   * Error is thrown when the client sender does not have enough link credits to send the message.\n   */\n  SenderBusyError = \"client.sender:not-enough-link-credit\", // Retryable\n  /**\n   * Error is thrown when the client sender's link isn't ready\n   */\n  SenderNotReadyError = \"client.sender:link-not-ready\", // Retryable\n  /**\n   * Error is thrown when a low level system error is thrown by node.js.\n   * {@link https://nodejs.org/api/errors.html#errors_class_systemerror}\n   */\n  SystemError = \"system:error\",\n}\n\n/**\n * Describes the fields on a Node.js SystemError.\n * Omits fields that are not related to network calls (e.g. file system calls).\n * See https://nodejs.org/dist/latest-v12.x/docs/api/errors.html#errors_class_systemerror\n */\nexport interface NetworkSystemError {\n  address?: string;\n  code: string;\n  errno: string | number;\n  info?: any;\n  message: string;\n  name: string;\n  port?: number;\n  stack: string;\n  syscall: string;\n}\n\n/**\n * @internal\n */\nconst systemErrorFieldsToCopy: (keyof Omit<NetworkSystemError, \"name\" | \"message\">)[] = [\n  \"address\",\n  \"code\",\n  \"errno\",\n  \"info\",\n  \"port\",\n  \"stack\",\n  \"syscall\",\n];\n\n/**\n * Determines if an error is a MessagingError.\n *\n * @param error - An error that can either be an Error or a MessagingError.\n */\nexport function isMessagingError(error: Error | MessagingError): error is MessagingError {\n  return error.name === \"MessagingError\";\n}\n\n/**\n * Describes the base class for Messaging Error.\n */\nexport class MessagingError extends Error {\n  /**\n   * Address to which the network connection failed.\n   * Only present if the `MessagingError` was instantiated with a Node.js `SystemError`.\n   */\n  address?: string;\n  /**\n   * A string label that identifies the error.\n   */\n  code?: string;\n  /**\n   * System-provided error number.\n   * Only present if the `MessagingError` was instantiated with a Node.js `SystemError`.\n   */\n  errno?: number | string;\n  /**\n   * The error name. Default value: \"MessagingError\".\n   */\n  name: string = \"MessagingError\";\n  /**\n   * The unavailable network connection port.\n   * Only present if the `MessagingError` was instantiated with a Node.js `SystemError`.\n   */\n  port?: number;\n  /**\n   * Name of the system call that triggered the error.\n   * Only present if the `MessagingError` was instantiated with a Node.js `SystemError`.\n   */\n  syscall?: string;\n  /**\n   *\n   * Describes whether the error is retryable. Default: true.\n   */\n  retryable: boolean = true;\n  /**\n   * Extra details about the error.\n   */\n  info?: any;\n  /**\n   * @param message - The error message that provides more information about the error.\n   * @param originalError - An error whose properties will be copied to the MessagingError if the\n   * property matches one found on the Node.js `SystemError`.\n   */\n  constructor(message: string, originalError?: Error) {\n    super(message);\n\n    if (!originalError) {\n      return;\n    }\n\n    // copy properties from system error\n    for (const propName of systemErrorFieldsToCopy) {\n      if ((originalError as NetworkSystemError)[propName] != undefined) {\n        this[propName] = (originalError as NetworkSystemError)[propName];\n      }\n    }\n  }\n}\n\n/**\n * Provides a list of retryable AMQP errors.\n * \"InternalServerError\", \"ServerBusyError\", \"ServiceUnavailableError\", \"OperationCancelledError\",\n * \"SenderBusyError\", \"SenderNotReadyError\", \"MessagingError\", \"DetachForcedError\", \"ConnectionForcedError\",\n * \"TransferLimitExceededError\"\n */\nexport const retryableErrors: string[] = [\n  \"InternalServerError\",\n  \"ServerBusyError\",\n  \"ServiceUnavailableError\",\n  \"OperationCancelledError\",\n\n  // The service may throw UnauthorizedError if credentials have been rotated.\n  // Attempt to retry in case the user has also rotated their credentials.\n  \"UnauthorizedError\",\n\n  // OperationTimeoutError occurs when the service fails to respond within a given timeframe.\n  // Since reasons for such failures can be transient, this is treated as a retryable error.\n  \"OperationTimeoutError\",\n\n  \"SenderBusyError\",\n  \"SenderNotReadyError\",\n  \"MessagingError\",\n  \"DetachForcedError\",\n  \"ConnectionForcedError\",\n  \"TransferLimitExceededError\",\n\n  // InsufficientCreditError occurs when the number of credits available on Rhea link is insufficient.\n  // Since reasons for such shortage can be transient such as for pending delivery of messages, this is treated as a retryable error.\n  \"InsufficientCreditError\",\n];\n\n/**\n * Maps some SystemErrors to amqp error conditions\n */\nexport enum SystemErrorConditionMapper {\n  /* eslint-disable @typescript-eslint/no-duplicate-enum-values */\n  ENOTFOUND = \"amqp:not-found\",\n  EBUSY = \"com.microsoft:server-busy\",\n  ECONNREFUSED = \"amqp:connection:forced\",\n  ETIMEDOUT = \"com.microsoft:timeout\",\n  ECONNRESET = \"com.microsoft:timeout\",\n  ENETDOWN = \"com.microsoft:timeout\",\n  EHOSTDOWN = \"com.microsoft:timeout\",\n  ENETRESET = \"com.microsoft:timeout\",\n  ENETUNREACH = \"com.microsoft:timeout\",\n  ENONET = \"com.microsoft:timeout\",\n  /* eslint-enable @typescript-eslint/no-duplicate-enum-values */\n}\n\n/**\n * Checks whether the provided error is a node.js SystemError.\n * @param err - An object that may contain error information.\n */\nexport function isSystemError(err: unknown): err is NetworkSystemError {\n  if (!isObjectWithProperties(err, [\"code\", \"syscall\", \"errno\"])) {\n    return false;\n  }\n\n  if (!isString(err.code) || !isString(err.syscall)) {\n    return false;\n  }\n\n  if (!isString(err.errno) && !isNumber(err.errno)) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * @internal\n * Since browser doesn't differentiate between the various kinds of service communication errors,\n * this utility is used to look at the error target to identify such category of errors.\n * For more information refer to - https://html.spec.whatwg.org/multipage/comms.html#feedback-from-the-protocol\n * @param err - object that may contain error information\n */\nfunction isBrowserWebsocketError(err: any): boolean {\n  let result: boolean = false;\n  if (\n    !isNodeLike &&\n    self &&\n    err.type === \"error\" &&\n    err.target instanceof (self as any).WebSocket\n  ) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * @internal\n * Checks whether a object is an ErrorEvent or not. https://html.spec.whatwg.org/multipage/webappapis.html#errorevent\n * @param err - object that may contain error information\n */\nfunction isErrorEvent(err: any): err is { message: string; error: any } {\n  return typeof err.error === \"object\" && typeof err.message === \"string\";\n}\n\n/**\n * @internal\n */\nconst rheaPromiseErrors = [\n  // OperationTimeoutError occurs when the service fails to respond within a given timeframe.\n  \"OperationTimeoutError\",\n\n  // InsufficientCreditError occurs when the number of credits available on Rhea link is insufficient.\n  \"InsufficientCreditError\",\n\n  // Defines the error that occurs when the Sender fails to send a message.\n  \"SendOperationFailedError\",\n];\n\n/**\n * Translates the AMQP error received at the protocol layer or a SystemError into a MessagingError.\n * All other errors are returned unaltered.\n *\n * @param err - The amqp error that was received.\n * @returns MessagingError object.\n */\nexport function translate(err: unknown): MessagingError | Error {\n  if (!isDefined(err)) {\n    return new Error(`Unknown error encountered.`);\n  } else if (typeof err !== \"object\") {\n    // The error is a scalar type, make it the message of an actual error.\n    return new Error(String(err));\n  }\n\n  const errObj = isErrorEvent(err) ? err.error : err;\n\n  // Built-in errors like TypeError and RangeError should not be retryable as these indicate issues\n  // with user input and not an issue with the Messaging process.\n  if (errObj instanceof TypeError || errObj instanceof RangeError) {\n    return errObj;\n  }\n\n  if (isAmqpError(errObj)) {\n    // translate\n    const condition = errObj.condition;\n    const description = errObj.description!;\n    const error = new MessagingError(description);\n    if ((errObj as any).stack) error.stack = (errObj as any).stack;\n    error.info = errObj.info;\n    if (condition) {\n      error.code = ConditionErrorNameMapper[condition as keyof typeof ConditionErrorNameMapper];\n    }\n    if (\n      description &&\n      (description.includes(\"status-code: 404\") ||\n        description.match(/The messaging entity .* could not be found.*/i) !== null)\n    ) {\n      error.code = \"MessagingEntityNotFoundError\";\n    }\n    if (error.code && retryableErrors.indexOf(error.code) === -1) {\n      // not found\n      error.retryable = false;\n    }\n    return error;\n  }\n\n  if (errObj instanceof Error && errObj.name === \"MessagingError\") {\n    // already translated\n    return errObj;\n  }\n\n  if (isSystemError(errObj)) {\n    // translate\n    const condition = errObj.code;\n    const description = errObj.message;\n    const error = new MessagingError(description, errObj);\n    let errorType = \"SystemError\";\n    if (condition) {\n      const amqpErrorCondition =\n        SystemErrorConditionMapper[condition as keyof typeof SystemErrorConditionMapper];\n      errorType =\n        ConditionErrorNameMapper[amqpErrorCondition as keyof typeof ConditionErrorNameMapper];\n    }\n    if (retryableErrors.indexOf(errorType) === -1) {\n      // not found\n      error.retryable = false;\n    }\n    return error;\n  }\n\n  if (isBrowserWebsocketError(errObj)) {\n    // Translate browser communication errors during opening handshake to generic ServiceCommunicationError\n    const error = new MessagingError(\"Websocket connection failed.\");\n    error.code = ConditionErrorNameMapper[ErrorNameConditionMapper.ServiceCommunicationError];\n    error.retryable = false;\n    return error;\n  }\n\n  // Some errors come from rhea-promise and need to be converted to MessagingError.\n  // A subset of these are also retryable.\n  if (isError(errObj) && rheaPromiseErrors.indexOf(errObj.name) !== -1) {\n    const error = new MessagingError(errObj.message, errObj);\n    error.code = errObj.name;\n    if (error.code && retryableErrors.indexOf(error.code) === -1) {\n      // not found\n      error.retryable = false;\n    }\n    return error;\n  }\n\n  return isError(errObj) ? errObj : new Error(String(errObj));\n}\n\n/**\n * @internal\n */\nfunction isAmqpError(error: any): error is AmqpError {\n  return rheaIsAmqpError(error);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError, AbortSignalLike } from \"@azure/abort-controller\";\nimport { ConditionStatusMapper, translate } from \"./errors.js\";\nimport {\n  Connection,\n  EventContext,\n  Receiver,\n  ReceiverEvents,\n  ReceiverOptions,\n  ReqResLink,\n  Message as RheaMessage,\n  Sender,\n  SenderEvents,\n  SenderOptions,\n  Session,\n  generate_uuid,\n} from \"rhea-promise\";\nimport { Constants, StandardAbortMessage } from \"./util/constants.js\";\nimport { logErrorStackTrace, logger } from \"./log.js\";\nimport { isDefined } from \"@azure/core-util\";\n\n/**\n * Describes the options that can be specified while sending a request.\n */\nexport interface SendRequestOptions {\n  /**\n   * Cancels the operation.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Max time to wait for the operation to complete.\n   * Default: `60000 milliseconds`.\n   */\n  timeoutInMs?: number;\n  /**\n   * Name of the request being performed.\n   */\n  requestName?: string;\n}\n\n/**\n * @internal\n */\nexport interface DeferredPromiseWithCallback {\n  resolve: (value?: any) => void;\n  reject: (reason?: any) => void;\n  /**\n   * To be called before resolving or rejecting the deferred promise\n   */\n  cleanupBeforeResolveOrReject: () => void;\n}\n\n/**\n * Describes an amqp request(sender)-response(receiver) link that is created over an amqp session.\n */\nexport class RequestResponseLink implements ReqResLink {\n  /**\n   * @param session - The amqp session.\n   * @param sender - The amqp sender link.\n   * @param receiver - The amqp receiver link.\n   */\n  constructor(\n    public session: Session,\n    public sender: Sender,\n    public receiver: Receiver,\n  ) {\n    this.session = session;\n    this.sender = sender;\n    this.receiver = receiver;\n    this.receiver.on(ReceiverEvents.message, (context) => {\n      onMessageReceived(context, this.connection.id, this._responsesMap);\n    });\n    this.sender.on(SenderEvents.senderError, (context) => {\n      onSenderError(context, this.connection.id, this._responsesMap);\n    });\n  }\n\n  /**\n   * Maintains a map of responses that\n   * are being actively returned. It acts as a store for correlating the responses received for\n   * the send requests.\n   */\n  private _responsesMap: Map<string, DeferredPromiseWithCallback> = new Map<\n    string,\n    DeferredPromiseWithCallback\n  >();\n\n  /**\n   * Provides the underlying amqp connection object.\n   * @returns Connection.\n   */\n  get connection(): Connection {\n    return this.session.connection;\n  }\n\n  /**\n   * Indicates whether the session and the sender and receiver links are all open or closed.\n   * @returns boolean - `true` - `open`, `false` - `closed`.\n   */\n  isOpen(): boolean {\n    return this.session.isOpen() && this.sender.isOpen() && this.receiver.isOpen();\n  }\n\n  /**\n   * Sends the given request message and returns the received response. If the operation is not\n   * completed in the provided timeout in milliseconds `default: 60000`, then `OperationTimeoutError` is thrown.\n   *\n   * @param request - The AMQP (request) message.\n   * @param options - Options that can be provided while sending a request.\n   * @returns Promise<Message> The AMQP (response) message.\n   */\n  sendRequest(request: RheaMessage, options: SendRequestOptions = {}): Promise<RheaMessage> {\n    const timeoutInMs = options.timeoutInMs || Constants.defaultOperationTimeoutInMs;\n\n    const aborter: AbortSignalLike | undefined = options.abortSignal;\n\n    // If message_id is not already set on the request, set it to a unique value\n    // This helps in determining the right response for current request among multiple incoming messages\n    if (!request.message_id) {\n      request.message_id = generate_uuid();\n    }\n\n    return new Promise<RheaMessage>((resolve: any, reject: any) => {\n      let timer: ReturnType<typeof setTimeout> | undefined = undefined;\n\n      const rejectOnAbort = (): void => {\n        this._responsesMap.delete(request.message_id as string);\n        const address = this.receiver.address || \"address\";\n        const requestName = options.requestName;\n        const desc: string =\n          `[${this.connection.id}] The request \"${requestName}\" ` +\n          `to \"${address}\" has been cancelled by the user.`;\n        // Cancellation is a user-intended action, so log to info instead of warning.\n        logger.info(desc);\n        const error = new AbortError(StandardAbortMessage);\n\n        reject(error);\n      };\n\n      const onAbort = (): void => {\n        // safe to clear the timeout if it hasn't already occurred.\n        if (isDefined(timer)) {\n          clearTimeout(timer);\n        }\n        aborter!.removeEventListener(\"abort\", onAbort);\n\n        rejectOnAbort();\n      };\n\n      if (aborter) {\n        // the aborter may have been triggered between request attempts\n        // so check if it was triggered and reject if needed.\n        if (aborter.aborted) {\n          return rejectOnAbort();\n        }\n        aborter.addEventListener(\"abort\", onAbort);\n      }\n\n      timer = setTimeout(() => {\n        this._responsesMap.delete(request.message_id as string);\n        if (aborter) {\n          aborter.removeEventListener(\"abort\", onAbort);\n        }\n        const address = this.receiver?.address || \"address\";\n        const desc: string =\n          `The request with message_id \"${request.message_id}\" to \"${address}\" ` +\n          `endpoint timed out. Please try again later.`;\n        const e: Error = {\n          name: \"OperationTimeoutError\",\n          message: desc,\n        };\n        return reject(translate(e));\n      }, timeoutInMs);\n\n      this._responsesMap.set(request.message_id as string, {\n        resolve: resolve,\n        reject: reject,\n        cleanupBeforeResolveOrReject: () => {\n          if (aborter) aborter.removeEventListener(\"abort\", onAbort);\n          if (isDefined(timer)) {\n            clearTimeout(timer);\n          }\n        },\n      });\n\n      logger.verbose(\n        \"[%s] %s request sent: %O\",\n        this.connection.id,\n        request.to || \"$management\",\n        request,\n      );\n      this.sender.send(request);\n    });\n  }\n\n  /**\n   * Closes the sender, receiver link and the underlying session.\n   * @returns Promise<void>\n   */\n  async close(): Promise<void> {\n    await this.sender.close({ closeSession: false });\n    await this.receiver.close({ closeSession: false });\n    await this.session.close();\n  }\n\n  /**\n   * Removes the sender, receiver link and it's underlying session.\n   * @returns void\n   */\n  remove(): void {\n    this.sender.remove();\n    this.receiver.remove();\n    this.session.remove();\n  }\n\n  /**\n   * Creates an amqp request/response link.\n   *\n   * @param connection - The amqp connection.\n   * @param senderOptions - Options that must be provided to create the sender link.\n   * @param receiverOptions - Options that must be provided to create the receiver link.\n   * @param createOptions - Optional parameters that can be used to affect this method's behavior.\n   *    For example, `abortSignal` can be passed to allow cancelling an in-progress `create` invocation.\n   * @returns Promise<RequestResponseLink>\n   */\n  static async create(\n    connection: Connection,\n    senderOptions: SenderOptions,\n    receiverOptions: ReceiverOptions,\n    createOptions: { abortSignal?: AbortSignalLike } = {},\n  ): Promise<RequestResponseLink> {\n    const { abortSignal } = createOptions;\n    const session = await connection.createSession({ abortSignal });\n    const sender = await session.createSender({ ...senderOptions, abortSignal });\n    const receiver = await session.createReceiver({ ...receiverOptions, abortSignal });\n    logger.verbose(\n      \"[%s] Successfully created the sender and receiver links on the same session.\",\n      connection.id,\n    );\n    return new RequestResponseLink(session, sender, receiver);\n  }\n}\n/**\n * @internal\n *\n * Type used in getCodeDescriptionAndError to get the normalized info from the responses emitted by EventHubs and ServiceBus.\n */\ntype NormalizedInfo = {\n  statusCode: number;\n  statusDescription: string;\n  errorCondition: string;\n};\n\n/**\n * @internal\n *\n * Handle different variations of property names in responses emitted by EventHubs and ServiceBus.\n */\nexport const getCodeDescriptionAndError = (\n  props: { [key: string]: string | number | undefined } = {},\n): NormalizedInfo => {\n  return {\n    statusCode: (props[Constants.statusCode] || props.statusCode) as number,\n    statusDescription: (props[Constants.statusDescription] || props.statusDescription) as string,\n    errorCondition: (props[Constants.errorCondition] || props.errorCondition) as string,\n  };\n};\n\n/**\n * This is used as the onMessage handler for the \"message\" event on the receiver.\n *\n * (This is inspired from the message settlement sequence in service-bus SDK which\n * relies on a single listener for settled event for all the messages.)\n * The sequence is as follows:\n * 1. User calls `await RequestResponseLink.sendRequest()`\n * 2. This creates a `Promise` that gets stored in the _responsesMap\n * 3. When the service acknowledges the response, this method gets called for that request.\n * 4. We resolve() the promise from the _responsesMap with the message.\n * 5. User's code after the sendRequest continues.\n *\n * @internal\n */\nexport function onMessageReceived(\n  context: Pick<EventContext, \"message\">,\n  connectionId: string,\n  responsesMap: Map<string, DeferredPromiseWithCallback>,\n): void {\n  const message = context.message;\n  if (!message) {\n    logger.verbose(\n      `[${connectionId}] \"message\" property on the EventContext is \"undefined\" which is unexpected, ` +\n        `returning from the \"onMessageReceived\" handler without resolving or rejecting the promise ` +\n        `upon encountering the message event.`,\n    );\n    return;\n  }\n\n  const responseCorrelationId = message.correlation_id;\n  if (!responsesMap.has(responseCorrelationId as string)) {\n    logger.verbose(\n      `[${connectionId}] correlationId \"${responseCorrelationId}\" property on the response does not match with ` +\n        `any of the \"request-id\"s in the map, returning from the \"onMessageReceived\" handler without resolving ` +\n        `or rejecting the promise upon encountering the message event.`,\n    );\n    return;\n  }\n\n  const promise = responsesMap.get(responseCorrelationId as string) as DeferredPromiseWithCallback;\n  promise.cleanupBeforeResolveOrReject();\n\n  const deleteResult = responsesMap.delete(responseCorrelationId as string);\n  logger.verbose(\n    `[${connectionId}] Successfully deleted the response with id ${responseCorrelationId} from the map. ` +\n      `Delete result - ${deleteResult}`,\n  );\n\n  const info = getCodeDescriptionAndError(message.application_properties);\n  let error;\n  if (!info.statusCode) {\n    error = new Error(\n      `[${connectionId}] No statusCode in the \"application_properties\" in the returned response with correlation-id: ${responseCorrelationId}`,\n    );\n  }\n  if (info.statusCode > 199 && info.statusCode < 300) {\n    logger.verbose(\n      `[${connectionId}] Resolving the response with correlation-id: ${responseCorrelationId}`,\n    );\n    return promise.resolve(message);\n  }\n  if (!error) {\n    const condition =\n      info.errorCondition || ConditionStatusMapper[info.statusCode] || \"amqp:internal-error\";\n    error = translate({\n      condition: condition,\n      description: info.statusDescription,\n    });\n    logger.warning(`${error?.name}: ${error?.message}`);\n  }\n  logErrorStackTrace(error);\n  return promise.reject(error);\n}\n\nfunction onSenderError(\n  context: Pick<EventContext, \"sender\">,\n  connectionId: string,\n  responsesMap: Map<string, DeferredPromiseWithCallback>,\n): void {\n  if (context.sender) {\n    for (const [key, promise] of responsesMap.entries()) {\n      logger.verbose(\n        `[${connectionId}] Sender closed due to error when sending request with message_id \"${key}\"`,\n      );\n      promise.cleanupBeforeResolveOrReject();\n      promise.reject(context.sender.error);\n    }\n    responsesMap.clear();\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CONNREFUSED, TIMEOUT, resolve as dnsResolve } from \"node:dns\";\nimport { logger } from \"../log.js\";\n\n/**\n * Checks whether a network connection is detected.\n * @internal\n */\nexport function checkNetworkConnection(host: string): Promise<boolean> {\n  return new Promise((resolve) => {\n    logger.verbose(\"Calling dns.resolve to determine network connection status.\");\n    dnsResolve(host, function (err: any): void {\n      if (err) {\n        logger.verbose(\n          \"Error thrown from dns.resolve in network connection check: '%s', %O\",\n          err.code || err.name,\n          err,\n        );\n        // List of possible DNS error codes: https://nodejs.org/dist/latest-v12.x/docs/api/dns.html#dns_error_codes\n        // We only resolve with `false` when dnsResolve fails with an error we expect to see when the network is down.\n        if (err.code === CONNREFUSED || err.code === TIMEOUT) {\n          return resolve(false);\n        }\n      } else {\n        logger.verbose(\"Successfully resolved host via dns.resolve in network connection check.\");\n      }\n\n      return resolve(true);\n    });\n  });\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\nimport { MessagingError, translate } from \"./errors.js\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { Constants } from \"./util/constants.js\";\nimport { checkNetworkConnection } from \"./util/checkNetworkConnection.js\";\nimport { delay } from \"@azure/core-util\";\nimport { logger } from \"./log.js\";\n\n/**\n * Determines whether the object is a Delivery object.\n * @internal\n */\nfunction isDelivery(obj: any): boolean {\n  let result: boolean = false;\n  if (\n    obj &&\n    typeof obj.id === \"number\" &&\n    typeof obj.settled === \"boolean\" &&\n    typeof obj.remote_settled === \"boolean\" &&\n    typeof obj.format === \"number\"\n  ) {\n    result = true;\n  }\n  return result;\n}\n\n/**\n * Describes the Retry Mode type\n */\nexport enum RetryMode {\n  Exponential,\n  Fixed,\n}\n\n/**\n * Describes the retry operation type.\n */\nexport enum RetryOperationType {\n  cbsAuth = \"cbsAuth\",\n  connection = \"connection\",\n  management = \"management\",\n  receiverLink = \"receiverLink\",\n  senderLink = \"senderLink\",\n  sendMessage = \"sendMessage\",\n  receiveMessage = \"receiveMessage\",\n  session = \"session\",\n  messageSettlement = \"settlement\",\n}\n\n/**\n * Retry policy options that determine the mode, number of retries, retry interval etc.\n */\nexport interface RetryOptions {\n  /**\n   * Number of times the operation needs to be retried in case\n   * of retryable error. Default: 3.\n   */\n  maxRetries?: number;\n  /**\n   * Amount of time to wait in milliseconds before making the\n   * next attempt. Default: `30000 milliseconds`.\n   * When `mode` option is set to `Exponential`,\n   * this is used to compute the exponentially increasing delays between retries.\n   */\n  retryDelayInMs?: number;\n  /**\n   * Number of milliseconds to wait before declaring that current attempt has timed out which will trigger a retry\n   * A minimum value of `60000` milliseconds will be used if a value not greater than this is provided.\n   */\n  timeoutInMs?: number;\n  /**\n   * Denotes which retry mode to apply. If undefined, defaults to `Fixed`\n   */\n  mode?: RetryMode;\n  /**\n   * Denotes the maximum delay between retries\n   * that the retry attempts will be capped at. Applicable only when performing exponential retry.\n   */\n  maxRetryDelayInMs?: number;\n}\n\n/**\n * Describes the parameters that need to be configured for the retry operation.\n */\nexport interface RetryConfig<T> {\n  /**\n   * The operation that needs to be retried.\n   */\n  operation: () => Promise<T>;\n  /**\n   * The connection identifier. Used in logging information.\n   * Extremely useful when multiple connections are logged in the same file.\n   */\n  connectionId: string;\n  /**\n   * The name/type of operation to be performed.\n   * Extremely useful in providing better debug logs.\n   */\n  operationType: RetryOperationType;\n  /**\n   * The host \"<yournamespace>.servicebus.windows.net\".\n   * Used to check network connectivity.\n   */\n  connectionHost?: string;\n  /**\n   * The retry related options associated with given operation execution.\n   */\n  retryOptions?: RetryOptions;\n  /**\n   * The `AbortSignal` associated with the operation being retried on.\n   * If this signal is fired during the wait time between retries, then the `retry()` method will ensure that the wait is abandoned and the retry process gets cancelled. If this signal is fired when the operation is in progress, then the operation is expected to react to it.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Validates the retry config.\n * @internal\n */\nfunction validateRetryConfig<T>(config: RetryConfig<T>): void {\n  if (!config.operation) {\n    throw new TypeError(\"Missing 'operation' in retry configuration\");\n  }\n\n  if (!config.connectionId) {\n    throw new TypeError(\"Missing 'connectionId' in retry configuration\");\n  }\n\n  if (!config.operationType) {\n    throw new TypeError(\"Missing 'operationType' in retry configuration\");\n  }\n}\n\n/**\n * Calculates delay between retries, in milliseconds.\n * @internal\n */\nfunction calculateDelay(\n  attemptCount: number,\n  retryDelayInMs: number,\n  maxRetryDelayInMs: number,\n  mode: RetryMode,\n): number {\n  if (mode === RetryMode.Exponential) {\n    const boundedRandDelta =\n      retryDelayInMs * 0.8 +\n      Math.floor(Math.random() * (retryDelayInMs * 1.2 - retryDelayInMs * 0.8));\n\n    const incrementDelta = boundedRandDelta * (Math.pow(2, attemptCount) - 1);\n    return Math.min(incrementDelta, maxRetryDelayInMs);\n  }\n\n  return retryDelayInMs;\n}\n\n/**\n * Every operation is attempted at least once. Additional attempts are made if the previous attempt failed\n * with a retryable error. The number of additional attempts is governed by the `maxRetries` property provided\n * on the `RetryConfig` argument.\n *\n * If `mode` option is set to `Fixed`, then the retries are made on the\n * given operation for a specified number of times, with a fixed delay in between each retry each time.\n *\n * If `mode` option is set to `Exponential`, then the delay between retries is adjusted to increase\n * exponentially with each attempt using back-off factor of power 2.\n *\n * @param config - Parameters to configure retry operation\n *\n * @returns Promise<T>.\n */\nexport async function retry<T>(config: RetryConfig<T>): Promise<T> {\n  validateRetryConfig(config);\n  const updatedConfig = { ...config };\n  if (!updatedConfig.retryOptions) {\n    updatedConfig.retryOptions = {};\n  }\n  if (\n    updatedConfig.retryOptions.maxRetries == undefined ||\n    updatedConfig.retryOptions.maxRetries < 0\n  ) {\n    updatedConfig.retryOptions.maxRetries = Constants.defaultMaxRetries;\n  }\n  if (\n    updatedConfig.retryOptions.retryDelayInMs == undefined ||\n    updatedConfig.retryOptions.retryDelayInMs < 0\n  ) {\n    updatedConfig.retryOptions.retryDelayInMs = Constants.defaultDelayBetweenOperationRetriesInMs;\n  }\n  if (\n    updatedConfig.retryOptions.maxRetryDelayInMs == undefined ||\n    updatedConfig.retryOptions.maxRetryDelayInMs < 0\n  ) {\n    updatedConfig.retryOptions.maxRetryDelayInMs = Constants.defaultMaxDelayForExponentialRetryInMs;\n  }\n  if (updatedConfig.retryOptions.mode == undefined) {\n    updatedConfig.retryOptions.mode = RetryMode.Fixed;\n  }\n  const errors: (MessagingError | Error)[] = [];\n  let result: any;\n  let success = false;\n  const totalNumberOfAttempts = updatedConfig.retryOptions.maxRetries + 1;\n  for (let i = 1; i <= totalNumberOfAttempts; i++) {\n    logger.verbose(\n      \"[%s] Attempt number for '%s': %d.\",\n      updatedConfig.connectionId,\n      updatedConfig.operationType,\n      i,\n    );\n    try {\n      result = await updatedConfig.operation();\n      success = true;\n      logger.verbose(\n        \"[%s] Success for '%s', after attempt number: %d.\",\n        updatedConfig.connectionId,\n        updatedConfig.operationType,\n        i,\n      );\n      if (result && !isDelivery(result)) {\n        logger.verbose(\n          \"[%s] Success result for '%s': %O\",\n          updatedConfig.connectionId,\n          updatedConfig.operationType,\n          result,\n        );\n      }\n      break;\n    } catch (_err) {\n      const err = translate(_err);\n\n      if (\n        !(err as any).retryable &&\n        err.name === \"ServiceCommunicationError\" &&\n        updatedConfig.connectionHost\n      ) {\n        const isConnected = await checkNetworkConnection(updatedConfig.connectionHost);\n        if (!isConnected) {\n          err.name = \"ConnectionLostError\";\n          (err as any).retryable = true;\n        }\n      }\n      logger.verbose(\n        \"[%s] Error occurred for '%s' in attempt number %d: %O\",\n        updatedConfig.connectionId,\n        updatedConfig.operationType,\n        i,\n        err,\n      );\n\n      errors.push(err);\n      if ((errors[errors?.length - 1] as MessagingError).retryable && totalNumberOfAttempts > i) {\n        const targetDelayInMs = calculateDelay(\n          i,\n          updatedConfig.retryOptions.retryDelayInMs,\n          updatedConfig.retryOptions.maxRetryDelayInMs,\n          updatedConfig.retryOptions.mode,\n        );\n        logger.verbose(\n          \"[%s] Sleeping for %d milliseconds for '%s'.\",\n          updatedConfig.connectionId,\n          targetDelayInMs,\n          updatedConfig.operationType,\n        );\n        await delay(targetDelayInMs, {\n          abortSignal: updatedConfig.abortSignal,\n          abortErrorMsg: `The retry operation has been cancelled by the user.`,\n        });\n\n        continue;\n      } else {\n        break;\n      }\n    }\n  }\n  if (success) {\n    return result;\n  } else {\n    throw compileErrors(errors);\n  }\n}\n\nfunction compileErrors(errors: (MessagingError | Error)[]): MessagingError | Error {\n  if (!errors.length) {\n    throw new RangeError(\"Error array is empty\");\n  }\n  let i = 0;\n  const str = errors.map((error) => `Error ${i++}: ${error}`).join(\"\\n\\n\");\n  const lastError = errors[errors.length - 1];\n  lastError.message = str;\n  return lastError;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Describes the type of supported tokens.\n */\nexport enum TokenType {\n  /**\n   * The \"jwt\" token type. Used with AADTokenCredential.\n   */\n  CbsTokenTypeJwt = \"jwt\",\n  /**\n   * The sas token type. Used with SharedKeyCredential.\n   */\n  CbsTokenTypeSas = \"servicebus.windows.net:sastoken\",\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { WebSocketImpl } from \"rhea-promise\";\nimport { isDefined } from \"@azure/core-util\";\nimport { parseConnectionString } from \"../util/utils.js\";\n\n/**\n * Describes the options that can be provided while creating a connection config.\n */\nexport interface ConnectionConfigOptions {\n  /**\n   * Indicates whether the entity path is required in the\n   * connection config.\n   */\n  isEntityPathRequired?: boolean;\n}\n\n/**\n * Describes the connection config object that is created after parsing an EventHub or ServiceBus\n * connection string.\n */\nexport interface ConnectionConfig {\n  /**\n   * The service bus endpoint\n   * \"sb://<yournamespace>.servicebus.windows.net/\".\n   */\n  endpoint: string;\n  /**\n   * The DNS hostname or IP address of the service.\n   * Typically of the form \"<yournamespace>.servicebus.windows.net\" unless connecting\n   * to the service through an intermediary.\n   */\n  host: string;\n  /**\n   * The fully qualified name of the host to connect to.\n   * This field can be used by AMQP proxies to determine the correct back-end service to\n   * connect the client to.\n   * Typically of the form \"<yournamespace>.servicebus.windows.net\".\n   */\n  amqpHostname?: string;\n  /**\n   * The port number.\n   */\n  port?: number;\n  /**\n   * The connection string.\n   */\n  connectionString: string;\n  /**\n   * The name/path of the entity (hub/queue/topic name) to which the\n   * connection needs to happen.\n   */\n  entityPath?: string;\n  /**\n   * The name of the access key.\n   */\n  sharedAccessKeyName: string;\n  /**\n   * The secret value of the access key.\n   */\n  sharedAccessKey: string;\n\n  /**\n   * The WebSocket constructor used to create an AMQP connection\n   * over a WebSocket. In browsers, the built-in WebSocket will be  used by default. In Node, a\n   * TCP socket will be used if a WebSocket constructor is not provided.\n   */\n  webSocket?: WebSocketImpl;\n\n  /**\n   * The path for the endpoint that accepts an AMQP\n   * connection over WebSockets.\n   */\n  webSocketEndpointPath?: string;\n\n  /**\n   * Options to be passed to the WebSocket constructor\n   */\n  webSocketConstructorOptions?: any;\n  /**\n   * This should be true only if the connection string contains the slug \";UseDevelopmentEmulator=true\"\n   * and the endpoint is a loopback address.\n   */\n  useDevelopmentEmulator?: boolean;\n}\n\nfunction getHost(endpoint: string): string {\n  const matches = /.*:\\/\\/([^/]*)/.exec(endpoint);\n  const match = matches?.[1];\n  return !match ? endpoint : match;\n}\n\n/**\n * Describes the ConnectionConfig module\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.\nexport const ConnectionConfig = {\n  /**\n   * Creates the connection config.\n   * @param connectionString - The connection string for a given service like\n   * EventHub/ServiceBus.\n   * @param path - The name/path of the entity (hub name) to which the\n   * connection needs to happen. This will override the EntityPath in the connectionString\n   * if present.\n   * @returns ConnectionConfig\n   */\n  create(connectionString: string, path?: string): ConnectionConfig {\n    connectionString = String(connectionString);\n\n    const parsedCS = parseConnectionString<{\n      Endpoint: string;\n      SharedAccessKeyName: string;\n      SharedAccessKey: string;\n      EntityPath?: string;\n      UseDevelopmentEmulator?: string;\n    }>(connectionString);\n    if (!parsedCS.Endpoint) {\n      throw new TypeError(\"Missing Endpoint in Connection String.\");\n    }\n\n    if (!parsedCS.Endpoint.endsWith(\"/\")) parsedCS.Endpoint += \"/\";\n\n    const result: ConnectionConfig = {\n      connectionString: connectionString,\n      endpoint: parsedCS.Endpoint,\n      host: getHost(parsedCS.Endpoint),\n      sharedAccessKeyName: parsedCS.SharedAccessKeyName,\n      sharedAccessKey: parsedCS.SharedAccessKey,\n      useDevelopmentEmulator: parsedCS.UseDevelopmentEmulator === \"true\",\n    };\n\n    if (path || parsedCS.EntityPath) {\n      result.entityPath = path || parsedCS.EntityPath;\n    }\n    return result;\n  },\n\n  /**\n   * Validates the properties of connection config.\n   * @param config - The connection config to be validated.\n   * @returns void\n   */\n  validate(config: ConnectionConfig, options?: ConnectionConfigOptions): void {\n    if (!options) options = {};\n\n    if (!config) {\n      throw new TypeError(\"Missing configuration\");\n    }\n\n    if (!config.endpoint) {\n      throw new TypeError(\"Missing 'endpoint' in configuration\");\n    }\n    config.endpoint = String(config.endpoint);\n\n    if (!config.host) {\n      throw new TypeError(\"Missing 'host' in configuration\");\n    }\n    config.host = String(config.host);\n\n    if (options.isEntityPathRequired && !config.entityPath) {\n      throw new TypeError(\"Missing 'entityPath' in configuration\");\n    }\n    if (isDefined(config.entityPath)) {\n      config.entityPath = String(config.entityPath);\n    }\n\n    if (!isSharedAccessSignature(config.connectionString)) {\n      if (!config.sharedAccessKeyName) {\n        throw new TypeError(\"Missing 'sharedAccessKeyName' in configuration\");\n      }\n      config.sharedAccessKeyName = String(config.sharedAccessKeyName);\n\n      if (!config.sharedAccessKey) {\n        throw new TypeError(\"Missing 'sharedAccessKey' in configuration\");\n      }\n      config.sharedAccessKey = String(config.sharedAccessKey);\n    }\n  },\n};\n\n/**\n * @internal\n */\nexport function isSharedAccessSignature(connectionString: string): boolean {\n  return connectionString.match(/;{0,1}SharedAccessSignature=SharedAccessSignature /) != null;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError, AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  Connection,\n  EventContext,\n  ReceiverEvents,\n  ReceiverOptions,\n  Message as RheaMessage,\n  SenderEvents,\n  SenderOptions,\n  generate_uuid,\n} from \"rhea-promise\";\nimport { logErrorStackTrace, logger } from \"./log.js\";\nimport { Constants } from \"./util/constants.js\";\nimport { RequestResponseLink } from \"./requestResponseLink.js\";\nimport { StandardAbortMessage } from \"./util/constants.js\";\nimport { TokenType } from \"./auth/token.js\";\nimport { defaultCancellableLock } from \"./util/utils.js\";\nimport { isError } from \"@azure/core-util\";\nimport { translate } from \"./errors.js\";\n\n/**\n * Describes the CBS Response.\n */\nexport interface CbsResponse {\n  correlationId: string;\n  statusCode: string;\n  statusDescription: string;\n}\n\n/**\n * Describes the EventHub/ServiceBus Cbs client that talks to the $cbs endpoint over AMQP connection.\n */\nexport class CbsClient {\n  /**\n   * CBS endpoint - \"$cbs\"\n   */\n  readonly endpoint: string = Constants.cbsEndpoint;\n  /**\n   * CBS replyTo - The receiver link name that the service should reply to.\n   */\n  readonly replyTo: string = `${Constants.cbsReplyTo}-${generate_uuid()}`;\n  /**\n   * The unique lock name per $cbs session per connection that is used to\n   * acquire the lock for establishing a cbs session if one does not exist for an amqp connection.\n   */\n  readonly cbsLock: string = `${Constants.negotiateCbsKey}-${generate_uuid()}`;\n  /**\n   * The unique lock name per connection that is used to\n   * acquire the lock for establishing an amqp connection if one does not exist.\n   */\n  readonly connectionLock: string;\n  /**\n   * The AMQP connection.\n   */\n  connection: Connection;\n\n  /**\n   * CBS sender, receiver on the same session.\n   */\n  private _cbsSenderReceiverLink?: RequestResponseLink;\n\n  /**\n   * @param connection - The AMQP connection.\n   * @param connectionLock - A unique string (usually a guid) per connection.\n   */\n  constructor(connection: Connection, connectionLock: string) {\n    this.connection = connection;\n    this.connectionLock = connectionLock;\n  }\n\n  /**\n   * Creates a singleton instance of the CBS session if it hasn't been initialized previously on\n   * the given connection.\n   * @param options - Optional parameters that can be used to affect this method's behavior.\n   *    For example, `abortSignal` can be passed to allow cancelling an in-progress `init` invocation.\n   * @returns Promise<void>.\n   */\n  async init(options: { abortSignal?: AbortSignalLike; timeoutInMs?: number } = {}): Promise<void> {\n    const { abortSignal, timeoutInMs } = options;\n\n    try {\n      if (abortSignal?.aborted) {\n        throw new AbortError(StandardAbortMessage);\n      }\n\n      // Acquire the lock and establish an amqp connection if it does not exist.\n      if (!this.connection.isOpen()) {\n        logger.verbose(\"The CBS client is trying to establish an AMQP connection.\");\n        await defaultCancellableLock.acquire(\n          this.connectionLock,\n          () => {\n            return this.connection.open({ abortSignal });\n          },\n          { abortSignal: abortSignal, timeoutInMs: timeoutInMs },\n        );\n      }\n\n      if (!this.isOpen()) {\n        const rxOpt: ReceiverOptions = {\n          source: {\n            address: this.endpoint,\n          },\n          name: this.replyTo,\n          onSessionError: (context: EventContext) => {\n            const id = context.connection.options.id;\n            const ehError = translate(context.session!.error!);\n            logger.verbose(\n              \"[%s] An error occurred on the session for request/response links \" + \"for $cbs: %O\",\n              id,\n              ehError,\n            );\n          },\n        };\n        const srOpt: SenderOptions = { target: { address: this.endpoint } };\n        logger.verbose(\n          \"[%s] Creating sender/receiver links on a session for $cbs endpoint.\",\n          this.connection.id,\n        );\n        this._cbsSenderReceiverLink = await RequestResponseLink.create(\n          this.connection,\n          srOpt,\n          rxOpt,\n          { abortSignal },\n        );\n        this._cbsSenderReceiverLink.sender.on(SenderEvents.senderError, (context: EventContext) => {\n          const id = context.connection.options.id;\n          const ehError = translate(context.sender!.error!);\n          logger.verbose(\"[%s] An error occurred on the cbs sender link.. %O\", id, ehError);\n        });\n        this._cbsSenderReceiverLink.receiver.on(\n          ReceiverEvents.receiverError,\n          (context: EventContext) => {\n            const id = context.connection.options.id;\n            const ehError = translate(context.receiver!.error!);\n            logger.verbose(\"[%s] An error occurred on the cbs receiver link.. %O\", id, ehError);\n          },\n        );\n        logger.verbose(\n          \"[%s] Successfully created the cbs sender '%s' and receiver '%s' \" +\n            \"links over cbs session.\",\n          this.connection.id,\n          this._cbsSenderReceiverLink.sender.name,\n          this._cbsSenderReceiverLink.receiver.name,\n        );\n      } else {\n        logger.verbose(\n          \"[%s] CBS session is already present. Reusing the cbs sender '%s' \" +\n            \"and receiver '%s' links over cbs session.\",\n          this.connection.id,\n          this._cbsSenderReceiverLink!.sender.name,\n          this._cbsSenderReceiverLink!.receiver.name,\n        );\n      }\n    } catch (err) {\n      const translatedError = translate(err);\n      logger.warning(\n        \"[%s] An error occurred while establishing the cbs links: %s\",\n        this.connection.id,\n        `${translatedError?.name}: ${translatedError?.message}`,\n      );\n      logErrorStackTrace(translatedError);\n      throw translatedError;\n    }\n  }\n\n  /**\n   * Negotiates the CBS claim with the EventHub/ServiceBus Service.\n   * @param audience - The entity token audience for which the token is requested in one\n   * of the following forms:\n   *\n   * - **ServiceBus**\n   *    - **Sender**\n   *        - `\"sb://<yournamespace>.servicebus.windows.net/<queue-name>\"`\n   *        - `\"sb://<yournamespace>.servicebus.windows.net/<topic-name>\"`\n   *\n   *    - **Receiver**\n   *         - `\"sb://<yournamespace>.servicebus.windows.net/<queue-name>\"`\n   *         - `\"sb://<yournamespace>.servicebus.windows.net/<topic-name>\"`\n   *\n   *    - **ManagementClient**\n   *         - `\"sb://<your-namespace>.servicebus.windows.net/<queue-name>/$management\"`.\n   *         - `\"sb://<your-namespace>.servicebus.windows.net/<topic-name>/$management\"`.\n   *\n   * - **EventHubs**\n   *     - **Sender**\n   *          - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>\"`\n   *          - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>\"`.\n   *\n   *     - **Receiver**\n   *         - `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`.\n   *\n   *     - **ManagementClient**\n   *         - `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/$management\"`.\n   * @param token - The token that needs to be sent in the put-token request.\n   * @param tokenType - The type of token being used. For example, 'jwt' or 'servicebus.windows.net:sastoken'.\n   * @param options - Optional parameters that can be used to affect this method's behavior.\n   *    For example, `abortSignal` can be passed to allow cancelling an in-progress `negotiateClaim` invocation.\n   * @returns A Promise that resolves when $cbs authentication is successful\n   * and rejects when an error occurs during $cbs authentication.\n   */\n  async negotiateClaim(\n    audience: string,\n    token: string,\n    tokenType: TokenType,\n    options: { abortSignal?: AbortSignalLike; timeoutInMs?: number } = {},\n  ): Promise<CbsResponse> {\n    const { abortSignal, timeoutInMs } = options;\n    try {\n      if (abortSignal?.aborted) {\n        throw new AbortError(StandardAbortMessage);\n      }\n\n      if (!this._cbsSenderReceiverLink) {\n        throw new Error(\"Attempted to negotiate a claim but the CBS link does not exist.\");\n      }\n\n      const request: RheaMessage = {\n        body: token,\n        message_id: generate_uuid(),\n        reply_to: this.replyTo,\n        to: this.endpoint,\n        application_properties: {\n          operation: Constants.operationPutToken,\n          name: audience,\n          type: tokenType,\n        },\n      };\n      const responseMessage = await this._cbsSenderReceiverLink.sendRequest(request, {\n        abortSignal,\n        timeoutInMs,\n        requestName: \"negotiateClaim\",\n      });\n      logger.verbose(\"[%s] The CBS response is: %O\", this.connection.id, responseMessage);\n      return this._fromRheaMessageResponse(responseMessage);\n    } catch (err) {\n      logger.warning(\n        \"[%s] An error occurred while negotiating the cbs claim: %s\",\n        this.connection.id,\n        isError(err) ? `${err.name}: ${err.message}` : String(err),\n      );\n      logErrorStackTrace(err);\n      throw err;\n    }\n  }\n\n  /**\n   * Closes the AMQP cbs session to the EventHub/ServiceBus for this client,\n   * returning a promise that will be resolved when disconnection is completed.\n   * @returns\n   */\n  async close(): Promise<void> {\n    try {\n      if (this.isOpen()) {\n        const cbsLink = this._cbsSenderReceiverLink;\n        this._cbsSenderReceiverLink = undefined;\n        await cbsLink!.close();\n        logger.verbose(\"[%s] Successfully closed the cbs session.\", this.connection.id);\n      }\n    } catch (err) {\n      const msg = `An error occurred while closing the cbs link: ${\n        isError(err) && err.stack ? err.stack : JSON.stringify(err)\n      }.`;\n      logger.verbose(\"[%s] %s\", this.connection.id, msg);\n      throw new Error(msg);\n    }\n  }\n\n  /**\n   * Removes the AMQP cbs session to the EventHub/ServiceBus for this client,\n   * @returns void\n   */\n  remove(): void {\n    try {\n      if (this._cbsSenderReceiverLink) {\n        const cbsLink = this._cbsSenderReceiverLink;\n        this._cbsSenderReceiverLink = undefined;\n        cbsLink!.remove();\n        logger.verbose(\"[%s] Successfully removed the cbs session.\", this.connection.id);\n      }\n    } catch (err) {\n      const msg = `An error occurred while removing the cbs link: ${\n        isError(err) && err.stack ? err.stack : JSON.stringify(err)\n      }.`;\n      logger.verbose(\"[%s] %s\", this.connection.id, msg);\n      throw new Error(msg);\n    }\n  }\n\n  /**\n   * Indicates whether the cbs sender receiver link is open or closed.\n   * @returns `true` open, `false` closed.\n   */\n  public isOpen(): boolean {\n    return Boolean(this._cbsSenderReceiverLink?.isOpen());\n  }\n\n  private _fromRheaMessageResponse(msg: RheaMessage): CbsResponse {\n    const cbsResponse = {\n      correlationId: msg.correlation_id! as string,\n      statusCode: msg.application_properties ? msg.application_properties[\"status-code\"] : \"\",\n      statusDescription: msg.application_properties\n        ? msg.application_properties[\"status-description\"]\n        : \"\",\n    };\n    logger.verbose(\"[%s] The deserialized CBS response is: %o\", this.connection.id, cbsResponse);\n    return cbsResponse;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\nimport { MessageHeader as RheaMessageHeader } from \"rhea-promise\";\nimport { logger } from \"./log.js\";\n\n/**\n * Describes the defined set of standard header properties of the message.\n */\nexport interface AmqpMessageHeader {\n  /**\n   * If this value is true, then this message has not been\n   * acquired by any other link. If this value is false, then this message MAY have previously\n   * been acquired by another link or links.\n   */\n  firstAcquirer?: boolean;\n  /**\n   * The number of prior unsuccessful delivery attempts.\n   */\n  deliveryCount?: number;\n  /**\n   * time to live in ms.\n   */\n  timeToLive?: number;\n  /**\n   * Specifies durability requirements.\n   */\n  durable?: boolean;\n  /**\n   * The relative message priority. Higher numbers indicate higher\n   * priority messages.\n   */\n  priority?: number;\n}\n\n/**\n * Describes the operations that can be performed on the message header.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.\nexport const AmqpMessageHeader = {\n  /**\n   * Converts MessageHeader to RheaMessageHeader.\n   *\n   * @param props - Message header.\n   * @returns RheaMessageHeader\n   */\n  toRheaMessageHeader(props: AmqpMessageHeader): RheaMessageHeader {\n    const amqpHeader: RheaMessageHeader = {};\n    if (props.deliveryCount != undefined) {\n      amqpHeader.delivery_count = props.deliveryCount;\n    }\n    if (props.durable != undefined) amqpHeader.durable = props.durable;\n    if (props.firstAcquirer != undefined) {\n      amqpHeader.first_acquirer = props.firstAcquirer;\n    }\n    if (props.priority != undefined) {\n      amqpHeader.priority = props.priority;\n    }\n    if (props.timeToLive != undefined) {\n      amqpHeader.ttl = props.timeToLive;\n    }\n    logger.verbose(\"To RheaMessageHeader: %O\", amqpHeader);\n    return amqpHeader;\n  },\n\n  /**\n   * Converts RheaMessageHeader to MessageHeader.\n   *\n   * @param props - Amqp Message Header\n   * @returns MessageHeader.\n   */\n  fromRheaMessageHeader(props: RheaMessageHeader): AmqpMessageHeader {\n    const msgHeader: AmqpMessageHeader = {};\n    if (props.delivery_count != undefined) {\n      msgHeader.deliveryCount = props.delivery_count;\n    }\n    if (props.durable != undefined) {\n      msgHeader.durable = props.durable;\n    }\n    if (props.first_acquirer != undefined) {\n      msgHeader.firstAcquirer = props.first_acquirer;\n    }\n    if (props.priority != undefined) {\n      msgHeader.priority = props.priority;\n    }\n    if (props.ttl != undefined) {\n      msgHeader.timeToLive = props.ttl;\n    }\n    logger.verbose(\"From RheaMessageHeader: %O\", msgHeader);\n    return msgHeader;\n  },\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\nimport { MessageProperties as RheaMessageProperties } from \"rhea-promise\";\nimport { logger } from \"./log.js\";\n\n/**\n * Describes the defined set of standard properties of the message.\n */\nexport interface AmqpMessageProperties {\n  /**\n   * The application message identifier that uniquely identifies a message.\n   * The user is responsible for making sure that this is unique in the given context. Guids usually make a good fit.\n   */\n  messageId?: string | number | Buffer;\n  /**\n   * The address of the node to send replies to.\n   */\n  replyTo?: string;\n  /**\n   * The address of the node the message is destined for.\n   */\n  to?: string;\n  /**\n   * The id that can be used to mark or identify messages between clients.\n   */\n  correlationId?: string | number | Buffer;\n  /**\n   * MIME type for the message.\n   */\n  contentType?: string;\n  /**\n   * The content-encoding property is used as a modifier to the content-type.\n   * When present, its value indicates what additional content encodings have been applied to the application-data.\n   */\n  contentEncoding?: string;\n  /**\n   * The time when this message is considered expired.\n   */\n  absoluteExpiryTime?: number;\n  /**\n   * The time this message was created.\n   */\n  creationTime?: number;\n  /**\n   * The group this message belongs to.\n   */\n  groupId?: string;\n  /**\n   * The sequence number of this message with its group.\n   */\n  groupSequence?: number;\n  /**\n   * The group the reply message belongs to.\n   */\n  replyToGroupId?: string;\n  /**\n   * A common field for summary information about the message\n   * content and purpose.\n   */\n  subject?: string;\n  // /**\n  //  * The identity of the user responsible for producing the message.\n  //  */\n  // userId?: string;\n}\n\n/**\n * Describes the operations that can be performed on the amqp message properties.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.\nexport const AmqpMessageProperties = {\n  /**\n   * Converts MessageProperties to RheaMessageProperties.\n   * @param props - Message properties.\n   * @returns RheaMessageProperties.\n   */\n  toRheaMessageProperties(props: AmqpMessageProperties): RheaMessageProperties {\n    const amqpProperties: RheaMessageProperties = {};\n    if (props.absoluteExpiryTime != undefined) {\n      amqpProperties.absolute_expiry_time = new Date(props.absoluteExpiryTime);\n    }\n    if (props.contentEncoding != undefined) {\n      amqpProperties.content_encoding = props.contentEncoding;\n    }\n    if (props.contentType != undefined) {\n      amqpProperties.content_type = props.contentType;\n    }\n    if (props.correlationId != undefined) {\n      amqpProperties.correlation_id = props.correlationId;\n    }\n    if (props.creationTime != undefined) {\n      amqpProperties.creation_time = new Date(props.creationTime);\n    }\n    if (props.groupId != undefined) {\n      amqpProperties.group_id = props.groupId;\n    }\n    if (props.groupSequence != undefined) {\n      amqpProperties.group_sequence = props.groupSequence;\n    }\n    if (props.messageId != undefined) {\n      amqpProperties.message_id = props.messageId;\n    }\n    if (props.replyTo != undefined) {\n      amqpProperties.reply_to = props.replyTo;\n    }\n    if (props.replyToGroupId != undefined) {\n      amqpProperties.reply_to_group_id = props.replyToGroupId;\n    }\n    if (props.subject != undefined) {\n      amqpProperties.subject = props.subject;\n    }\n    if (props.to != undefined) {\n      amqpProperties.to = props.to;\n    }\n    // if (props.userId != undefined) {\n    //   amqpProperties.user_id = props.userId;\n    // }\n\n    logger.verbose(\"To RheaMessageProperties: %O\", amqpProperties);\n    return amqpProperties;\n  },\n\n  /**\n   * Converts RheaMessageProperties to MessageProperties.\n   * @param props - Amqp message properties.\n   * @returns MessageProperties.\n   */\n  fromRheaMessageProperties(props: RheaMessageProperties): AmqpMessageProperties {\n    const msgProperties: AmqpMessageProperties = {};\n    if (props.absolute_expiry_time != undefined) {\n      msgProperties.absoluteExpiryTime = props.absolute_expiry_time.getTime();\n    }\n    if (props.content_encoding != undefined) {\n      msgProperties.contentEncoding = props.content_encoding;\n    }\n    if (props.content_type != undefined) {\n      msgProperties.contentType = props.content_type;\n    }\n    if (props.correlation_id != undefined) {\n      msgProperties.correlationId = props.correlation_id;\n    }\n    if (props.creation_time != undefined) {\n      msgProperties.creationTime = props.creation_time.getTime();\n    }\n    if (props.group_id != undefined) {\n      msgProperties.groupId = props.group_id;\n    }\n    if (props.group_sequence != undefined) {\n      msgProperties.groupSequence = props.group_sequence;\n    }\n    if (props.message_id != undefined) {\n      msgProperties.messageId = props.message_id;\n    }\n    if (props.reply_to != undefined) {\n      msgProperties.replyTo = props.reply_to;\n    }\n    if (props.reply_to_group_id != undefined) {\n      msgProperties.replyToGroupId = props.reply_to_group_id;\n    }\n    if (props.subject != undefined) {\n      msgProperties.subject = props.subject;\n    }\n    if (props.to != undefined) {\n      msgProperties.to = props.to;\n    }\n    // if (props.user_id != undefined) {\n    //   msgProperties.userId = props.user_id;\n    // }\n\n    logger.verbose(\"From RheaMessageProperties: %O\", msgProperties);\n    return msgProperties;\n  },\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as os from \"node:os\";\n\n/**\n * Returns information about the platform this function is being run on.\n * @internal\n */\nexport function getPlatformInfo(): string {\n  return `(${os.arch()}-${os.type()}-${os.release()})`;\n}\n\n/**\n * Returns information about Node.js this function is being run on.\n * @internal\n */\nexport function getFrameworkInfo(): string {\n  return `Node/${process.version}`;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AwaitableSender,\n  Connection,\n  type ConnectionOptions,\n  type CreateAwaitableSenderOptions,\n  type CreateReceiverOptions,\n  type CreateSenderOptions,\n  Receiver,\n  Sender,\n  generate_uuid,\n} from \"rhea-promise\";\nimport { getFrameworkInfo, getPlatformInfo } from \"./util/runtimeInfo.js\";\nimport { CbsClient } from \"./cbs.js\";\nimport { ConnectionConfig } from \"./connectionConfig/connectionConfig.js\";\nimport { Constants } from \"./util/constants.js\";\nimport { isNodeLike } from \"@azure/core-util\";\n\n/**\n * Provides contextual information like the underlying amqp connection, cbs session, tokenProvider,\n * Connection config, data transformer, etc.\n */\nexport interface ConnectionContextBase {\n  /**\n   * The EventHub connection config that is created after\n   * parsing the connection string.\n   */\n  readonly config: ConnectionConfig;\n  /**\n   * The unique lock name per connection that is used to\n   * acquire the lock for establishing an amqp connection per client if one does not exist.\n   */\n  connectionLock: string;\n  /**\n   * The unique lock name per connection that is used to\n   * acquire the lock for negotiating cbs claim by an entity on that connection.\n   */\n  negotiateClaimLock: string;\n  /**\n   * The underlying AMQP connection.\n   */\n  connection: Connection;\n  /**\n   * The amqp connection id that uniquely identifies the\n   * connection within a process.\n   */\n  connectionId: string;\n  /**\n   * Indicates whether the close() method was\n   * called on the connection object.\n   */\n  wasConnectionCloseCalled: boolean;\n  /**\n   * A reference to the cbs session ($cbs endpoint) on the\n   * underlying AMQP connection for the EventHub Client.\n   */\n  cbsSession: CbsClient;\n  /**\n   * Updates the context to use a new underlying AMQP connection and new cbs session.\n   */\n  refreshConnection: () => void;\n}\n\n/**\n * Defines the properties that need to be set while establishing the AMQP connection.\n */\nexport interface ConnectionProperties {\n  /**\n   * The name of the product that will be populated as the AMQP\n   * connection property. Example: \"MSJSClient\".\n   */\n  product: string;\n  /**\n   * The version of the package/sdk that is making the AMQP connection.\n   */\n  version: string;\n  /**\n   * The userAgent that needs to be set as the AMQP connection\n   * property. Example: `\"/js-service-bus\"` or `\"/js-event-hubs,/js-event-processor-host=1.0.0\"`.\n   */\n  userAgent: string;\n}\n\n/**\n * Describes the parameters that can be provided to create the base connection context.\n */\nexport interface CreateConnectionContextBaseParameters {\n  /**\n   * The connection config that is created by parsing the\n   * connection string.\n   */\n  config: ConnectionConfig;\n  /**\n   * Properties to be provided while creating\n   * the AMQP connection.\n   */\n  connectionProperties: ConnectionProperties;\n  /**\n   * Determines whether entity path should be a part of\n   * the connection config. If `true` it must be present, `false` otherwise. Default value false.\n   */\n  isEntityPathRequired?: boolean;\n  /**\n   * The duration in which the promise should\n   * complete (resolve/reject). If it is not completed, then the Promise will be rejected after\n   * timeout occurs. Default: `60000 milliseconds`.\n   */\n  operationTimeoutInMs?: number;\n}\n\nconst maxListenerLimit = 1000;\n\nclass CoreAmqpConnection extends Connection {\n  /**\n   * Creates an amqp sender link. Max listener limit on the sender is set to 1000 because the\n   * default value of 10 in NodeJS is too low.\n   * @param options - Optional parameters to create a sender link.\n   * @returns Promise<Sender>.\n   */\n  async createSender(options?: CreateSenderOptions): Promise<Sender> {\n    const sender = await super.createSender(options);\n    sender.setMaxListeners(maxListenerLimit);\n    return sender;\n  }\n\n  /**\n   * Creates an awaitable amqp sender. Max listener limit on the sender is set to 1000 because the\n   * default value of 10 in NodeJS is too low.\n   * @param options - Optional parameters to create an awaitable sender link.\n   * - If `onError` and `onSessionError` handlers are not provided then the `AwaitableSender` will\n   * clear the timer and reject the Promise for all the entries of inflight send operation in its\n   * `deliveryDispositionMap`.\n   * - If the user is handling the reconnection of sender link or the underlying connection in it's\n   * app, then the `onError` and `onSessionError` handlers must be provided by the user and (s)he\n   * shall be responsible of clearing the `deliveryDispositionMap` of inflight `send()` operation.\n   *\n   * @returns Promise<AwaitableSender>.\n   */\n  async createAwaitableSender(options?: CreateAwaitableSenderOptions): Promise<AwaitableSender> {\n    const sender = await super.createAwaitableSender(options);\n    sender.setMaxListeners(maxListenerLimit);\n    return sender;\n  }\n\n  /**\n   * Creates an amqp receiver link. Max listener limit on the sender is set to 1000 because the\n   * default value of 10 in NodeJS is too low.\n   * @param options - Optional parameters to create a receiver link.\n   * @returns Promise<Receiver>.\n   */\n  async createReceiver(options?: CreateReceiverOptions): Promise<Receiver> {\n    const receiver = await super.createReceiver(options);\n    receiver.setMaxListeners(maxListenerLimit);\n    return receiver;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.\nexport const ConnectionContextBase = {\n  /**\n   * Creates the base connection context.\n   * @param parameters - Parameters to be provided to create\n   * the base connection context.\n   */\n  create(parameters: CreateConnectionContextBaseParameters): ConnectionContextBase {\n    ConnectionConfig.validate(parameters.config, {\n      isEntityPathRequired: parameters.isEntityPathRequired || false,\n    });\n    const userAgent = parameters.connectionProperties.userAgent;\n    if (userAgent.length > Constants.maxUserAgentLength) {\n      throw new Error(\n        `The user-agent string cannot be more than ${Constants.maxUserAgentLength} characters in length.` +\n          `The given user-agent string is: ${userAgent} with length: ${userAgent.length}`,\n      );\n    }\n\n    const connectionOptions: ConnectionOptions = {\n      transport: (parameters.config.useDevelopmentEmulator ? Constants.TCP : Constants.TLS) as any,\n      host: parameters.config.host,\n      hostname: parameters.config.amqpHostname ?? parameters.config.host,\n      username: parameters.config.sharedAccessKeyName,\n      port: parameters.config.port ?? (parameters.config.useDevelopmentEmulator ? 5672 : 5671),\n      reconnect: false,\n      properties: {\n        product: parameters.connectionProperties.product,\n        version: parameters.connectionProperties.version,\n        \"user-agent\": userAgent,\n        platform: getPlatformInfo(),\n        framework: getFrameworkInfo(),\n      },\n      idle_time_out: Constants.defaultConnectionIdleTimeoutInMs,\n      operationTimeoutInSeconds: parameters.operationTimeoutInMs\n        ? parameters.operationTimeoutInMs / 1000\n        : undefined,\n    };\n\n    if (\n      parameters.config.webSocket ||\n      (!isNodeLike && typeof self !== \"undefined\" && (self as any).WebSocket)\n    ) {\n      const socket = parameters.config.webSocket || (self as any).WebSocket;\n      const host = parameters.config.host;\n      const endpoint = parameters.config.webSocketEndpointPath || \"\";\n      const socketOptions = parameters.config.webSocketConstructorOptions || {};\n      const port = parameters.config.port ?? 443;\n\n      connectionOptions.webSocketOptions = {\n        webSocket: socket,\n        url: `wss://${host}:${port}/${endpoint}`,\n        protocol: [\"AMQPWSB10\"],\n        options: socketOptions,\n      };\n    }\n\n    const connection = new CoreAmqpConnection(connectionOptions);\n    const connectionLock = `${Constants.establishConnection}-${generate_uuid()}`;\n    const connectionContextBase: ConnectionContextBase = {\n      wasConnectionCloseCalled: false,\n      connectionLock: connectionLock,\n      negotiateClaimLock: `${Constants.negotiateClaim}-${generate_uuid()}`,\n      connection: connection,\n      connectionId: connection.id,\n      cbsSession: new CbsClient(connection, connectionLock),\n      config: parameters.config,\n      refreshConnection() {\n        const newConnection = new CoreAmqpConnection(connectionOptions);\n        const newConnectionLock = `${Constants.establishConnection}-${generate_uuid()}`;\n        this.wasConnectionCloseCalled = false;\n        this.connectionLock = newConnectionLock;\n        this.negotiateClaimLock = `${Constants.negotiateClaim} - ${generate_uuid()}`;\n        this.connection = newConnection;\n        this.connectionId = newConnection.id;\n        this.cbsSession = new CbsClient(newConnection, newConnectionLock);\n      },\n    };\n\n    return connectionContextBase;\n  },\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\nimport { AmqpMessageHeader } from \"./messageHeader.js\";\nimport { AmqpMessageProperties } from \"./messageProperties.js\";\nimport { Message as RheaMessage } from \"rhea-promise\";\nimport { Constants } from \"./util/constants.js\";\n\n/**\n * Describes the AmqpAnnotatedMessage, part of the ServiceBusReceivedMessage(as `amqpAnnotatedMessage` property).\n */\nexport interface AmqpAnnotatedMessage {\n  /**\n   * Describes the defined set of standard header properties of the message.\n   */\n  header?: AmqpMessageHeader;\n  /**\n   * Describes set of footer properties of the message.\n   */\n  footer?: { [key: string]: any };\n  /**\n   * A dictionary containing message attributes that will be held in the message header\n   */\n  messageAnnotations?: { [key: string]: any };\n  /**\n   * A dictionary used for delivery-specific\n   * non-standard properties at the head of the message.\n   */\n  deliveryAnnotations?: { [key: string]: any };\n  /**\n   * A dictionary containing application specific message properties.\n   */\n  applicationProperties?: { [key: string]: any };\n  /**\n   *  Describes the defined set of standard properties of the message.\n   */\n  properties?: AmqpMessageProperties;\n  /**\n   * The message body.\n   */\n  body: any;\n  /**\n   * The AMQP section where the data was decoded from.\n   */\n  bodyType?: \"data\" | \"sequence\" | \"value\";\n}\n\n/**\n * Describes the operations that can be performed on(or to get) the AmqpAnnotatedMessage.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.\nexport const AmqpAnnotatedMessage = {\n  /**\n   * Takes RheaMessage(`Message` type from \"rhea\") and returns it in the AmqpAnnotatedMessage format.\n   */\n  fromRheaMessage(msg: RheaMessage): AmqpAnnotatedMessage {\n    const amqpMsg = {\n      header: AmqpMessageHeader.fromRheaMessageHeader(msg),\n      footer: (msg as any).footer,\n      messageAnnotations: msg.message_annotations,\n      deliveryAnnotations: msg.delivery_annotations,\n      applicationProperties: msg.application_properties,\n      properties: AmqpMessageProperties.fromRheaMessageProperties(msg),\n      body: msg.body,\n    };\n    if (msg.absolute_expiry_time) {\n      const absoluteExpiryTime = msg.absolute_expiry_time.getTime();\n      amqpMsg.properties.absoluteExpiryTime = Math.min(\n        absoluteExpiryTime,\n        Constants.maxAbsoluteExpiryTime,\n      );\n\n      // The TTL from the header can be at most approximately 49 days (uint32\n      // max value milliseconds) due to the AMQP spec. In order to allow for\n      // larger TTLs set by the user, we take the difference of the\n      // absolute_expiry_time and the creation_time (if both are set). If either of\n      // those properties is not set, we fall back to the TTL from the header.\n      if (msg.creation_time) {\n        amqpMsg.header.timeToLive =\n          amqpMsg.properties.absoluteExpiryTime - msg.creation_time.getTime();\n      }\n    }\n\n    return amqpMsg;\n  },\n  /**\n   * Takes AmqpAnnotatedMessage and returns it in the RheaMessage(`Message` type from \"rhea\") format.\n   */\n  toRheaMessage(msg: AmqpAnnotatedMessage): RheaMessage {\n    const rhMsg = {\n      ...AmqpMessageProperties.toRheaMessageProperties(msg.properties || {}),\n      ...AmqpMessageHeader.toRheaMessageHeader(msg.header || {}),\n      body: msg.body,\n      message_annotations: msg.messageAnnotations,\n      delivery_annotations: msg.deliveryAnnotations,\n      application_properties: msg.applicationProperties,\n      footer: msg.footer,\n    };\n\n    // There is a loss of fidelity in the TTL header if larger than uint32 max value. As a workaround\n    // we set the absolute_expiry_time and creation_time on the message based on the TTL. These\n    // values are then used to reconstruct the accurate TTL for received messages.\n    if (msg.header?.timeToLive) {\n      const ttl = msg.header.timeToLive;\n      rhMsg.ttl = Math.min(ttl, Constants.maxUint32Value);\n      rhMsg.creation_time = rhMsg.creation_time ?? new Date();\n      rhMsg.absolute_expiry_time = new Date(\n        Math.min(rhMsg.creation_time.getTime() + ttl, Constants.maxAbsoluteExpiryTime),\n      );\n    }\n\n    return rhMsg;\n  },\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { KeyCredential } from \"./keyCredential.js\";\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential implements KeyCredential {\n  private _key: string;\n\n  /**\n   * The value of the key to be used in authentication\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key: string) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  public update(newKey: string): void {\n    this._key = newKey;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * Represents a credential defined by a static API key.\n */\nexport interface KeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n}\n\n/**\n * Tests an object to determine whether it implements KeyCredential.\n *\n * @param credential - The assumed KeyCredential to be tested.\n */\nexport function isKeyCredential(credential: unknown): credential is KeyCredential {\n  return isObjectWithProperties(credential, [\"key\"]) && typeof credential.key === \"string\";\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * Represents a credential defined by a static API name and key.\n */\nexport interface NamedKeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n  /**\n   * The value of the API name represented as a string.\n   */\n  readonly name: string;\n}\n\n/**\n * A static name/key-based credential that supports updating\n * the underlying name and key values.\n */\nexport class AzureNamedKeyCredential implements NamedKeyCredential {\n  private _key: string;\n  private _name: string;\n\n  /**\n   * The value of the key to be used in authentication.\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * The value of the name to be used in authentication.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Create an instance of an AzureNamedKeyCredential for use\n   * with a service client.\n   *\n   * @param name - The initial value of the name to use in authentication.\n   * @param key - The initial value of the key to use in authentication.\n   */\n  constructor(name: string, key: string) {\n    if (!name || !key) {\n      throw new TypeError(\"name and key must be non-empty strings\");\n    }\n\n    this._name = name;\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newName - The new name value to be used.\n   * @param newKey - The new key value to be used.\n   */\n  public update(newName: string, newKey: string): void {\n    if (!newName || !newKey) {\n      throw new TypeError(\"newName and newKey must be non-empty strings\");\n    }\n\n    this._name = newName;\n    this._key = newKey;\n  }\n}\n\n/**\n * Tests an object to determine whether it implements NamedKeyCredential.\n *\n * @param credential - The assumed NamedKeyCredential to be tested.\n */\nexport function isNamedKeyCredential(credential: unknown): credential is NamedKeyCredential {\n  return (\n    isObjectWithProperties(credential, [\"name\", \"key\"]) &&\n    typeof credential.key === \"string\" &&\n    typeof credential.name === \"string\"\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * Represents a credential defined by a static shared access signature.\n */\nexport interface SASCredential {\n  /**\n   * The value of the shared access signature represented as a string\n   */\n  readonly signature: string;\n}\n\n/**\n * A static-signature-based credential that supports updating\n * the underlying signature value.\n */\nexport class AzureSASCredential implements SASCredential {\n  private _signature: string;\n\n  /**\n   * The value of the shared access signature to be used in authentication\n   */\n  public get signature(): string {\n    return this._signature;\n  }\n\n  /**\n   * Create an instance of an AzureSASCredential for use\n   * with a service client.\n   *\n   * @param signature - The initial value of the shared access signature to use in authentication\n   */\n  constructor(signature: string) {\n    if (!signature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = signature;\n  }\n\n  /**\n   * Change the value of the signature.\n   *\n   * Updates will take effect upon the next request after\n   * updating the signature value.\n   *\n   * @param newSignature - The new shared access signature value to be used\n   */\n  public update(newSignature: string): void {\n    if (!newSignature) {\n      throw new Error(\"shared access signature must be a non-empty string\");\n    }\n\n    this._signature = newSignature;\n  }\n}\n\n/**\n * Tests an object to determine whether it implements SASCredential.\n *\n * @param credential - The assumed SASCredential to be tested.\n */\nexport function isSASCredential(credential: unknown): credential is SASCredential {\n  return (\n    isObjectWithProperties(credential, [\"signature\"]) && typeof credential.signature === \"string\"\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { TracingContext } from \"./tracing.js\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * This method is called automatically by Azure SDK client libraries. You may call this method\n   * directly, but you must also handle token caching and token refreshing.\n   *\n   * @param scopes - The list of scopes for which the token will have access.\n   * @param options - The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * Tracing Context for the current request.\n     */\n    tracingContext?: TracingContext;\n  };\n  /**\n   * Claim details to perform the Continuous Access Evaluation authentication flow\n   */\n  claims?: string;\n  /**\n   * Indicates whether to enable the Continuous Access Evaluation authentication flow\n   */\n  enableCae?: boolean;\n  /**\n   * Allows specifying a tenantId. Useful to handle challenges that provide tenant Id hints.\n   */\n  tenantId?: string;\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: unknown): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  const castCredential = credential as {\n    getToken: unknown;\n    signRequest: unknown;\n  };\n  return (\n    castCredential &&\n    typeof castCredential.getToken === \"function\" &&\n    (castCredential.signRequest === undefined || castCredential.getToken.length > 0)\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport { AzureKeyCredential } from \"./azureKeyCredential.js\";\nexport { KeyCredential, isKeyCredential } from \"./keyCredential.js\";\nexport {\n  AzureNamedKeyCredential,\n  NamedKeyCredential,\n  isNamedKeyCredential,\n} from \"./azureNamedKeyCredential.js\";\nexport { AzureSASCredential, SASCredential, isSASCredential } from \"./azureSASCredential.js\";\n\nexport {\n  TokenCredential,\n  GetTokenOptions,\n  AccessToken,\n  isTokenCredential,\n} from \"./tokenCredential.js\";\n\nexport { TracingContext } from \"./tracing.js\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHmac } from \"node:crypto\";\n\nexport async function signString(key: string, toSign: string): Promise<string> {\n  const hmac = createHmac(\"sha256\", key).update(toSign).digest(\"base64\");\n  return encodeURIComponent(hmac);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AccessToken,\n  NamedKeyCredential,\n  SASCredential,\n  isNamedKeyCredential,\n  isSASCredential,\n} from \"@azure/core-auth\";\nimport { signString } from \"../util/hmacSha256.js\";\n\n/**\n * A SasTokenProvider provides an alternative to TokenCredential for providing an `AccessToken`.\n * @hidden\n */\nexport interface SasTokenProvider {\n  /**\n   * Property used to distinguish SasTokenProvider from TokenCredential.\n   */\n  isSasTokenProvider: true;\n  /**\n   * Gets the token provided by this provider.\n   *\n   * This method is called automatically by Azure SDK client libraries.\n   *\n   * @param audience - The audience for which the token is desired.\n   */\n  getToken(audience: string): Promise<AccessToken>;\n}\n\n/**\n * Creates a token provider from the provided shared access data.\n * @param data - The sharedAccessKeyName/sharedAccessKey pair or the sharedAccessSignature.\n * @hidden\n */\nexport function createSasTokenProvider(\n  data:\n    | { sharedAccessKeyName: string; sharedAccessKey: string }\n    | { sharedAccessSignature: string }\n    | NamedKeyCredential\n    | SASCredential,\n): SasTokenProvider {\n  if (isNamedKeyCredential(data) || isSASCredential(data)) {\n    return new SasTokenProviderImpl(data);\n  } else if (\"sharedAccessKeyName\" in data && \"sharedAccessKey\" in data) {\n    return new SasTokenProviderImpl({ name: data.sharedAccessKeyName, key: data.sharedAccessKey });\n  } else {\n    return new SasTokenProviderImpl({ signature: data.sharedAccessSignature });\n  }\n}\n\n/**\n * A TokenProvider that generates a Sas token:\n * `SharedAccessSignature sr=<resource>&sig=<signature>&se=<expiry>&skn=<keyname>`\n *\n * @internal\n */\nexport class SasTokenProviderImpl implements SasTokenProvider {\n  /**\n   * Property used to distinguish TokenProvider from TokenCredential.\n   */\n  get isSasTokenProvider(): true {\n    return true;\n  }\n\n  /**\n   * The SASCredential containing the key name and secret key value.\n   */\n  private _credential: SASCredential | NamedKeyCredential;\n\n  /**\n   * Initializes a new instance of SasTokenProvider\n   * @param credential - The source `NamedKeyCredential` or `SASCredential`.\n   */\n  constructor(credential: SASCredential | NamedKeyCredential) {\n    this._credential = credential;\n  }\n\n  /**\n   * Gets the sas token for the specified audience\n   * @param audience - The audience for which the token is desired.\n   */\n  async getToken(audience: string): Promise<AccessToken> {\n    if (isNamedKeyCredential(this._credential)) {\n      return createToken(\n        this._credential.name,\n        this._credential.key,\n        Math.floor(Date.now() / 1000) + 3600,\n        audience,\n      );\n    } else {\n      return {\n        token: this._credential.signature,\n        expiresOnTimestamp: 0,\n      };\n    }\n  }\n}\n\n/**\n * Creates the sas token based on the provided information.\n * @param keyName - The shared access key name.\n * @param key - The shared access key.\n * @param expiry - The time period in unix time after which the token will expire.\n * @param audience - The audience for which the token is desired.\n * @internal\n */\nasync function createToken(\n  keyName: string,\n  key: string,\n  expiry: number,\n  audience: string,\n): Promise<AccessToken> {\n  audience = encodeURIComponent(audience);\n  keyName = encodeURIComponent(keyName);\n  const stringToSign = audience + \"\\n\" + expiry;\n\n  const sig = await signString(key, stringToSign);\n  return {\n    token: `SharedAccessSignature sr=${audience}&sig=${sig}&se=${expiry}&skn=${keyName}`,\n    expiresOnTimestamp: expiry,\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SasTokenProvider } from \"../auth/tokenProvider.js\";\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * Typeguard that checks if the input is a SasTokenProvider.\n * @param thing - Any object.\n * @hidden\n */\nexport function isSasTokenProvider(thing: unknown): thing is SasTokenProvider {\n  return isObjectWithProperties(thing, [\"isSasTokenProvider\"]) && thing.isSasTokenProvider === true;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SasTokenProvider, createSasTokenProvider } from \"./auth/tokenProvider.js\";\nimport { isSasTokenProvider } from \"./util/typeGuards.js\";\n\nexport { SasTokenProvider, createSasTokenProvider, isSasTokenProvider };\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/// <reference lib=\"es2020\" />\n\nexport { RequestResponseLink, SendRequestOptions } from \"./requestResponseLink.js\";\nexport { retry, RetryOptions, RetryConfig, RetryOperationType, RetryMode } from \"./retry.js\";\nexport { TokenType } from \"./auth/token.js\";\nexport { ConnectionConfig, ConnectionConfigOptions } from \"./connectionConfig/connectionConfig.js\";\nexport { CbsClient, CbsResponse } from \"./cbs.js\";\nexport { Constants, StandardAbortMessage } from \"./util/constants.js\";\nexport { AmqpMessageHeader } from \"./messageHeader.js\";\nexport { AmqpMessageProperties } from \"./messageProperties.js\";\nexport {\n  ConnectionContextBase,\n  ConnectionProperties,\n  CreateConnectionContextBaseParameters,\n} from \"./ConnectionContextBase.js\";\nexport {\n  MessagingError,\n  isMessagingError,\n  ErrorNameConditionMapper,\n  ConditionErrorNameMapper,\n  translate,\n  retryableErrors,\n  isSystemError,\n  SystemErrorConditionMapper,\n  NetworkSystemError,\n} from \"./errors.js\";\nexport {\n  delay,\n  parseConnectionString,\n  defaultCancellableLock,\n  ParsedOutput,\n  WebSocketOptions,\n} from \"./util/utils.js\";\nexport { AmqpAnnotatedMessage } from \"./amqpAnnotatedMessage.js\";\nexport { logger } from \"./log.js\";\nexport * from \"./internals.js\";\nexport { AcquireLockProperties, CancellableAsyncLock } from \"./util/lock.js\";\n", "/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TracingContext, TracingSpan } from \"./interfaces.js\";\n\n/** @internal */\nexport const knownContextKeys = {\n  span: Symbol.for(\"@azure/core-tracing span\"),\n  namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options: CreateTracingContextOptions = {}): TracingContext {\n  let context: TracingContext = new TracingContextImpl(options.parentContext);\n  if (options.span) {\n    context = context.setValue(knownContextKeys.span, options.span);\n  }\n  if (options.namespace) {\n    context = context.setValue(knownContextKeys.namespace, options.namespace);\n  }\n  return context;\n}\n\n/** @internal */\nexport class TracingContextImpl implements TracingContext {\n  private _contextMap: Map<symbol, unknown>;\n  constructor(initialContext?: TracingContext) {\n    this._contextMap =\n      initialContext instanceof TracingContextImpl\n        ? new Map<symbol, unknown>(initialContext._contextMap)\n        : new Map();\n  }\n\n  setValue(key: symbol, value: unknown): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.set(key, value);\n    return newContext;\n  }\n\n  getValue(key: symbol): unknown {\n    return this._contextMap.get(key);\n  }\n\n  deleteValue(key: symbol): TracingContext {\n    const newContext = new TracingContextImpl(this);\n    newContext._contextMap.delete(key);\n    return newContext;\n  }\n}\n\n/**\n * Represents a set of items that can be set when creating a new {@link TracingContext}.\n */\nexport interface CreateTracingContextOptions {\n  /** The {@link parentContext} - the newly created context will contain all the values of the parent context unless overridden. */\n  parentContext?: TracingContext;\n  /** An initial span to set on the context. */\n  span?: TracingSpan;\n  /** The namespace to set on any child spans. */\n  namespace?: string;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @internal\n *\n * Holds the singleton instrumenter, to be shared across CJS and ESM imports.\n */\nexport const state = {\n  instrumenterImplementation: undefined,\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  Instrumenter,\n  InstrumenterSpanOptions,\n  TracingContext,\n  TracingSpan,\n} from \"./interfaces.js\";\n\nimport { createTracingContext } from \"./tracingContext.js\";\nimport { state } from \"./state.js\";\n\nexport function createDefaultTracingSpan(): TracingSpan {\n  return {\n    end: () => {\n      // noop\n    },\n    isRecording: () => false,\n    recordException: () => {\n      // noop\n    },\n    setAttribute: () => {\n      // noop\n    },\n    setStatus: () => {\n      // noop\n    },\n  };\n}\n\nexport function createDefaultInstrumenter(): Instrumenter {\n  return {\n    createRequestHeaders: (): Record<string, string> => {\n      return {};\n    },\n    parseTraceparentHeader: (): TracingContext | undefined => {\n      return undefined;\n    },\n    startSpan: (\n      _name: string,\n      spanOptions: InstrumenterSpanOptions,\n    ): { span: TracingSpan; tracingContext: TracingContext } => {\n      return {\n        span: createDefaultTracingSpan(),\n        tracingContext: createTracingContext({ parentContext: spanOptions.tracingContext }),\n      };\n    },\n    withContext<\n      CallbackArgs extends unknown[],\n      Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n    >(\n      _context: TracingContext,\n      callback: Callback,\n      ...callbackArgs: CallbackArgs\n    ): ReturnType<Callback> {\n      return callback(...callbackArgs);\n    },\n  };\n}\n\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nexport function useInstrumenter(instrumenter: Instrumenter): void {\n  state.instrumenterImplementation = instrumenter;\n}\n\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nexport function getInstrumenter(): Instrumenter {\n  if (!state.instrumenterImplementation) {\n    state.instrumenterImplementation = createDefaultInstrumenter();\n  }\n  return state.instrumenterImplementation;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  OperationTracingOptions,\n  OptionsWithTracingContext,\n  Resolved,\n  TracingClient,\n  TracingClientOptions,\n  TracingContext,\n  TracingSpan,\n  TracingSpanOptions,\n} from \"./interfaces.js\";\nimport { getInstrumenter } from \"./instrumenter.js\";\nimport { knownContextKeys } from \"./tracingContext.js\";\n\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nexport function createTracingClient(options: TracingClientOptions): TracingClient {\n  const { namespace, packageName, packageVersion } = options;\n\n  function startSpan<Options extends { tracingOptions?: OperationTracingOptions }>(\n    name: string,\n    operationOptions?: Options,\n    spanOptions?: TracingSpanOptions,\n  ): {\n    span: TracingSpan;\n    updatedOptions: OptionsWithTracingContext<Options>;\n  } {\n    const startSpanResult = getInstrumenter().startSpan(name, {\n      ...spanOptions,\n      packageName: packageName,\n      packageVersion: packageVersion,\n      tracingContext: operationOptions?.tracingOptions?.tracingContext,\n    });\n    let tracingContext = startSpanResult.tracingContext;\n    const span = startSpanResult.span;\n    if (!tracingContext.getValue(knownContextKeys.namespace)) {\n      tracingContext = tracingContext.setValue(knownContextKeys.namespace, namespace);\n    }\n    span.setAttribute(\"az.namespace\", tracingContext.getValue(knownContextKeys.namespace));\n    const updatedOptions: OptionsWithTracingContext<Options> = Object.assign({}, operationOptions, {\n      tracingOptions: { ...operationOptions?.tracingOptions, tracingContext },\n    });\n\n    return {\n      span,\n      updatedOptions,\n    };\n  }\n\n  async function withSpan<\n    Options extends { tracingOptions?: OperationTracingOptions },\n    Callback extends (\n      updatedOptions: Options,\n      span: Omit<TracingSpan, \"end\">,\n    ) => ReturnType<Callback>,\n  >(\n    name: string,\n    operationOptions: Options,\n    callback: Callback,\n    spanOptions?: TracingSpanOptions,\n  ): Promise<Resolved<ReturnType<Callback>>> {\n    const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n    try {\n      const result = await withContext(updatedOptions.tracingOptions.tracingContext, () =>\n        Promise.resolve(callback(updatedOptions, span)),\n      );\n      span.setStatus({ status: \"success\" });\n      return result as ReturnType<typeof withSpan>;\n    } catch (err: any) {\n      span.setStatus({ status: \"error\", error: err });\n      throw err;\n    } finally {\n      span.end();\n    }\n  }\n\n  function withContext<\n    CallbackArgs extends unknown[],\n    Callback extends (...args: CallbackArgs) => ReturnType<Callback>,\n  >(\n    context: TracingContext,\n    callback: Callback,\n    ...callbackArgs: CallbackArgs\n  ): ReturnType<Callback> {\n    return getInstrumenter().withContext(context, callback, ...callbackArgs);\n  }\n\n  /**\n   * Parses a traceparent header value into a span identifier.\n   *\n   * @param traceparentHeader - The traceparent header to parse.\n   * @returns An implementation-specific identifier for the span.\n   */\n  function parseTraceparentHeader(traceparentHeader: string): TracingContext | undefined {\n    return getInstrumenter().parseTraceparentHeader(traceparentHeader);\n  }\n\n  /**\n   * Creates a set of request headers to propagate tracing information to a backend.\n   *\n   * @param tracingContext - The context containing the span to serialize.\n   * @returns The set of headers to add to a request.\n   */\n  function createRequestHeaders(tracingContext?: TracingContext): Record<string, string> {\n    return getInstrumenter().createRequestHeaders(tracingContext);\n  }\n\n  return {\n    startSpan,\n    withSpan,\n    withContext,\n    parseTraceparentHeader,\n    createRequestHeaders,\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport {\n  Instrumenter,\n  InstrumenterSpanOptions,\n  OperationTracingOptions,\n  OptionsWithTracingContext,\n  Resolved,\n  SpanStatus,\n  SpanStatusError,\n  SpanStatusSuccess,\n  TracingClient,\n  TracingClientOptions,\n  TracingContext,\n  TracingSpan,\n  TracingSpanKind,\n  TracingSpanLink,\n  TracingSpanOptions,\n} from \"./interfaces.js\";\nexport { useInstrumenter } from \"./instrumenter.js\";\nexport { createTracingClient } from \"./tracingClient.js\";\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AzureLogger, AzureLogLevel, createClientLogger, Debugger } from \"@azure/logger\";\nimport { isObjectWithProperties } from \"@azure/core-util\";\n\n/**\n * The `@azure/logger` configuration for this package.\n * This will output logs using the `azure:event-hubs` namespace prefix.\n */\nexport const logger = createClientLogger(\"event-hubs\");\n\n/**\n * Logs the error's stack trace to \"verbose\" if a stack trace is available.\n * @param error - Error containing a stack trace.\n * @internal\n */\nexport function logErrorStackTrace(error: unknown): void {\n  if (isObjectWithProperties(error, [\"stack\"])) {\n    logger.verbose(error.stack);\n  }\n}\n\n/**\n * @internal\n */\nexport function createReceiverLogPrefix(\n  consumerId: string,\n  connectionId: string,\n  partitionId: string,\n): string {\n  return `[${connectionId}] Receiver P${partitionId}-${consumerId}`;\n}\n\n/**\n * @internal\n */\nexport function createSenderLogPrefix(senderId: string, connectionId: string): string {\n  return `[${connectionId}] Sender ${senderId}`;\n}\n\n/**\n * @internal\n */\nexport function createManagementLogPrefix(connectionId: string): string {\n  return `[${connectionId}] Management`;\n}\n\n/**\n * @internal\n */\nexport type SimpleLogger = {\n  [Property in keyof AzureLogger]: Debugger[\"log\"];\n};\n\nfunction createLogFunction(\n  azureLogger: AzureLogger,\n  prefix: string,\n  level: AzureLogLevel,\n): (arg: any, ...args: any[]) => void {\n  return (arg: any, ...args: any[]) =>\n    azureLogger[level](\n      ...(typeof arg === \"string\" ? [`${prefix}: ${arg}`] : [prefix, arg]),\n      ...args,\n    );\n}\n\n/**\n * @internal\n */\nexport function createSimpleLogger(azureLogger: AzureLogger, prefix: string): SimpleLogger {\n  return {\n    info: createLogFunction(azureLogger, prefix, \"info\"),\n    error: createLogFunction(azureLogger, prefix, \"error\"),\n    verbose: createLogFunction(azureLogger, prefix, \"verbose\"),\n    warning: createLogFunction(azureLogger, prefix, \"warning\"),\n  };\n}\n\n/** @internal */\nexport function logObj(obj: unknown): void {\n  JSON.stringify(obj, undefined, 2);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BasicPartitionProperties,\n  PartitionContext,\n  SubscriptionEventHandlers,\n} from \"./eventHubConsumerClientModels\";\nimport { CheckpointStore } from \"./eventProcessor\";\nimport { CloseReason } from \"./models/public\";\nimport { LastEnqueuedEventProperties } from \"./partitionReceiver\";\nimport { ReceivedEventData } from \"./eventData\";\nimport { logger } from \"./logger\";\n\n/**\n * A checkpoint is meant to represent the last successfully processed event by the user from a particular\n * partition of a consumer group in an Event Hub instance.\n *\n * When the `updateCheckpoint()` method on the `PartitionProcessor` class is called by the user, a\n * `Checkpoint` is created internally. It is then stored in the storage solution implemented by the\n * `CheckpointManager` chosen by the user when creating an `EventProcessor`.\n *\n * Users are never expected to interact with `Checkpoint` directly. This interface exists to support the\n * internal workings of `EventProcessor` and `CheckpointManager`.\n **/\nexport interface Checkpoint {\n  /**\n   * The fully qualified Event Hubs namespace. This is likely to be similar to\n   * <yournamespace>.servicebus.windows.net\n   */\n  fullyQualifiedNamespace: string;\n  /**\n   * The event hub name\n   */\n  eventHubName: string;\n  /**\n   * The consumer group name\n   */\n  consumerGroup: string;\n  /**\n   * The identifier of the Event Hub partition\n   */\n  partitionId: string;\n  /**\n   * The sequence number of the event\n   */\n  sequenceNumber: number;\n  /**\n   * The offset of the event.\n   */\n  offset: number;\n}\n\n/**\n * The `PartitionProcessor` is responsible for processing events received from Event Hubs when using `EventProcessor`\n *\n * The EventProcessor creates a new instance of the PartitionProcessor for each partition of the event hub it starts processing. When you extend the `PartitionProcessor` in order to customize it as you see fit,\n * - Override the `processEvents()` method to add the code to process the received events. This is also a good place to update the checkpoints using the `updateCheckpoint()` method\n * - Optionally override the `processError()` method to handle any error that might have occurred when processing the events.\n * - Optionally override the `initialize()` method to implement any set up related tasks you would want to carry out before starting to receive events from the partition\n * - Optionally override the `close()` method to implement any tear down or clean up tasks you would want to carry out.\n * @internal\n */\nexport class PartitionProcessor implements PartitionContext {\n  private _lastEnqueuedEventProperties?: LastEnqueuedEventProperties;\n\n  constructor(\n    private _eventHandlers: SubscriptionEventHandlers,\n    private _checkpointStore: CheckpointStore,\n    private _context: BasicPartitionProperties & {\n      eventProcessorId: string;\n    },\n  ) {}\n\n  /**\n   * Information on the last enqueued event in the partition that is being processed.\n   * This property is updated by the `EventProcessor` if the `trackLastEnqueuedEventProperties` option is set to true\n   * when creating an instance of EventProcessor\n   * @readonly\n   */\n  public get lastEnqueuedEventProperties(): LastEnqueuedEventProperties {\n    return this._lastEnqueuedEventProperties!;\n  }\n\n  /**\n   * Information on the last enqueued event in the partition that is being processed.\n   * This property is updated by the `EventProcessor` if the `trackLastEnqueuedEventProperties` option is set to true\n   * when creating an instance of EventProcessor\n   */\n  public set lastEnqueuedEventProperties(properties: LastEnqueuedEventProperties) {\n    this._lastEnqueuedEventProperties = properties;\n  }\n\n  /**\n   * The fully qualified namespace from where the current partition is being processed. It is set by the `EventProcessor`\n   * @readonly\n   */\n  public get fullyQualifiedNamespace(): string {\n    return this._context.fullyQualifiedNamespace;\n  }\n\n  /**\n   * The name of the consumer group from where the current partition is being processed. It is set by the `EventProcessor`\n   * @readonly\n   */\n  public get consumerGroup(): string {\n    return this._context.consumerGroup!;\n  }\n\n  /**\n   * The name of the event hub to which the current partition belongs. It is set by the `EventProcessor`\n   * @readonly\n   */\n  public get eventHubName(): string {\n    return this._context.eventHubName;\n  }\n\n  /**\n   * The identifier of the Event Hub partition that is being processed. It is set by the `EventProcessor`\n   * @readonly\n   */\n  public get partitionId(): string {\n    return this._context.partitionId;\n  }\n\n  /**\n   * The unique identifier of the `EventProcessor` that has spawned the current instance of `PartitionProcessor`. This is set by the `EventProcessor`\n   */\n  public get eventProcessorId(): string {\n    return this._context.eventProcessorId;\n  }\n\n  /**\n   * This method is called when the `EventProcessor` takes ownership of a new partition and before any\n   * events are received.\n   */\n  async initialize(): Promise<void> {\n    return this._eventHandlers.processInitialize?.(this);\n  }\n\n  /**\n   * This method is called before the partition processor is closed by the EventProcessor.\n   *\n   * @param reason - The reason for closing this partition processor.\n   */\n  async close(reason: CloseReason): Promise<void> {\n    if (this._eventHandlers.processClose) {\n      await this._eventHandlers.processClose(reason, this);\n    }\n  }\n\n  /**\n   * This method is called when new events are received.\n   *\n   * This is also a good place to update checkpoints as appropriate.\n   *\n   * @param event - The received events to be processed.\n   */\n  async processEvents(events: ReceivedEventData[]): Promise<void> {\n    await this._eventHandlers.processEvents(events, this);\n  }\n\n  /**\n   * This method is called when an error occurs while receiving events from Event Hubs.\n   *\n   * @param error - The error to be processed.\n   */\n  async processError(error: Error): Promise<void> {\n    if (this._eventHandlers.processError) {\n      try {\n        await this._eventHandlers.processError(error, this);\n      } catch (err: any) {\n        logger.verbose(`Error thrown from user's processError handler : ${err}`);\n      }\n    }\n  }\n\n  /**\n   * Updates the checkpoint using the event data.\n   *\n   * A checkpoint is meant to represent the last successfully processed event by the user from a particular\n   * partition of a consumer group in an Event Hub instance.\n   *\n   * @param eventData - The event that you want to update the checkpoint with.\n   */\n  public async updateCheckpoint(eventData: ReceivedEventData): Promise<void> {\n    const checkpoint: Checkpoint = {\n      fullyQualifiedNamespace: this._context.fullyQualifiedNamespace,\n      eventHubName: this._context.eventHubName,\n      consumerGroup: this._context.consumerGroup,\n      partitionId: this._context.partitionId,\n      sequenceNumber: eventData.sequenceNumber,\n      offset: eventData.offset,\n    };\n\n    await this._checkpointStore!.updateCheckpoint(checkpoint);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Constants, ErrorNameConditionMapper, translate } from \"@azure/core-amqp\";\nimport { isDefined, objectHasProperty } from \"@azure/core-util\";\n\n/**\n * Represents the position of an event in an Event Hub partition, typically used when calling the `subscribe()`\n * method on an `EventHubConsumerClient` to specify the position in the partition to begin receiving events from.\n *\n * To get an EventPosition representing the start or end of the stream, use the constants\n * `earliestEventPosition` and `latestEventPosition` respectively.\n *\n */\nexport interface EventPosition {\n  /**\n   * The offset of the event identified by this position.\n   * Expected to be undefined if the position is just created from a sequence number or an enqueued time.\n   *\n   * The offset is the relative position for an event in the context of the partition.\n   * The offset should not be considered a stable value.\n   * The same offset may refer to a different event as events reach the age limit for\n   * retention and are no longer visible within the partition.\n   */\n  offset?: number | \"@latest\";\n  /**\n   * Indicates if the specified offset is inclusive of the event which it identifies.\n   * This information is only relevent if the event position was identified by an offset or sequence number.\n   * Default value: `false`.\n   */\n  isInclusive?: boolean;\n  /**\n   * The enqueued time in UTC of the event identified by this position.\n   * When provided as a number this value is the number of milliseconds since the Unix Epoch.\n   * Expected to be undefined if the position is just created from a sequence number or an offset.\n   */\n  enqueuedOn?: Date | number;\n\n  /**\n   * The sequence number of the event identified by this position.\n   * Expected to be undefined if the position is just created from an offset or enqueued time.\n   */\n  sequenceNumber?: number;\n}\n\n/**\n * @internal\n * Gets the expression to be set as the filter clause when creating the receiver\n * @returns filterExpression\n */\nexport function getEventPositionFilter(eventPosition: EventPosition): string {\n  let result;\n  // order of preference\n  if (isDefined(eventPosition.offset)) {\n    result = eventPosition.isInclusive\n      ? `${Constants.offsetAnnotation} >= '${eventPosition.offset}'`\n      : `${Constants.offsetAnnotation} > '${eventPosition.offset}'`;\n  } else if (isDefined(eventPosition.sequenceNumber)) {\n    result = eventPosition.isInclusive\n      ? `${Constants.sequenceNumberAnnotation} >= '${eventPosition.sequenceNumber}'`\n      : `${Constants.sequenceNumberAnnotation} > '${eventPosition.sequenceNumber}'`;\n  } else if (isDefined(eventPosition.enqueuedOn)) {\n    const time =\n      eventPosition.enqueuedOn instanceof Date\n        ? eventPosition.enqueuedOn.getTime()\n        : eventPosition.enqueuedOn;\n    result = `${Constants.enqueuedTimeAnnotation} > '${time}'`;\n  }\n\n  if (!result) {\n    throw translate({\n      condition: ErrorNameConditionMapper.ArgumentError,\n      description: \"No starting position was set in the EventPosition.\",\n    });\n  }\n  return result;\n}\n\n/**\n * @internal\n */\nexport function isLatestPosition(eventPosition: EventPosition): boolean {\n  if (eventPosition.offset === \"@latest\") {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Gets the `EventPosition` corresponding to the location of the the first event present in the partition.\n * Pass this position to the `EventHubConsumerClient.subscribe()` method to begin receiving events from the\n * first event in the partition which has not expired due to the retention policy.\n */\nexport const earliestEventPosition: EventPosition = {\n  offset: -1,\n};\n\n/**\n * Gets the `EventPosition` corresponding to the end of the partition.\n * Pass this position to the `EventHubConsumerClient.subscribe()` method to begin receiving events from the\n * event that is enqueued right after the method call.\n * @returns EventPosition\n */\nexport const latestEventPosition: EventPosition = {\n  offset: \"@latest\",\n};\n\n/**\n * @internal\n */\nexport function validateEventPositions(\n  position: EventPosition | { [partitionId: string]: EventPosition },\n): void {\n  if (!isDefined(position)) {\n    return;\n  }\n\n  const keys = Object.keys(position);\n\n  if (!keys.length) {\n    throw new TypeError(\n      \"Invalid value for EventPosition found. Pass an object with either of offset, sequenceNumber or enqueuedOn properties set.\",\n    );\n  }\n\n  if (isEventPosition(position)) {\n    validateEventPosition(position);\n    return;\n  }\n\n  const positions = position as { [partitionId: string]: EventPosition };\n  for (let i = 0; i < keys.length; i++) {\n    if (Object.prototype.hasOwnProperty.call(positions, keys[i])) {\n      validateEventPosition(positions[keys[i]]);\n    }\n  }\n}\n\n/**\n * Determines whether a position is an EventPosition.\n * Does not validate that the position is allowed.\n * @internal\n */\nexport function isEventPosition(position: unknown): position is EventPosition {\n  if (!position) {\n    return false;\n  }\n\n  if (objectHasProperty(position, \"offset\") && isDefined(position.offset)) {\n    return true;\n  }\n\n  if (objectHasProperty(position, \"sequenceNumber\") && isDefined(position.sequenceNumber)) {\n    return true;\n  }\n\n  if (objectHasProperty(position, \"enqueuedOn\") && isDefined(position.enqueuedOn)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction validateEventPosition(position: EventPosition): void {\n  if (!isDefined(position)) {\n    return;\n  }\n  const offsetPresent = isDefined(position.offset);\n  const sequenceNumberPresent = isDefined(position.sequenceNumber);\n  const enqueuedOnPresent = isDefined(position.enqueuedOn);\n\n  if (\n    (offsetPresent && sequenceNumberPresent) ||\n    (offsetPresent && enqueuedOnPresent) ||\n    (enqueuedOnPresent && sequenceNumberPresent)\n  ) {\n    throw new TypeError(\n      \"Invalid value for EventPosition found. Set only one of offset, sequenceNumber or enqueuedOn properties.\",\n    );\n  }\n\n  if (!offsetPresent && !enqueuedOnPresent && !sequenceNumberPresent) {\n    throw new TypeError(\n      \"Invalid value for EventPosition found. Pass an object with either of offset, sequenceNumber or enqueuedOn properties set.\",\n    );\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RetryOptions, WebSocketOptions } from \"@azure/core-amqp\";\nimport { OperationOptions } from \"../util/operationOptions\";\n\n/**\n * The set of options to configure the behavior of `getEventHubProperties`.\n * - `abortSignal`  : An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n * - `parentSpan` : The `Span` or `SpanContext` to use as the `parent` of the span created while calling this operation.\n */\nexport interface GetEventHubPropertiesOptions extends OperationOptions {}\n\n/**\n * The set of options to configure the behavior of `getPartitionProperties`.\n * - `abortSignal`  : An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n * - `parentSpan` : The `Span` or `SpanContext` to use as the `parent` of the span created while calling this operation.\n */\nexport interface GetPartitionPropertiesOptions extends OperationOptions {}\n\n/**\n * The set of options to configure the behavior of `getPartitionIds`.\n * - `abortSignal`  : An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n * - `parentSpan` : The `Span` or `SpanContext` to use as the `parent` of the span created while calling this operation.\n */\nexport interface GetPartitionIdsOptions extends OperationOptions {}\n\n/**\n * Options to configure the `sendBatch` method on the `EventHubProducerClient`\n * when sending an array of events.\n * If `partitionId` is set, `partitionKey` must not be set and vice versa.\n *\n * - `partitionId`  : The partition this batch will be sent to.\n * - `partitionKey` : A value that is hashed to produce a partition assignment.\n * - `abortSignal`  : A signal used to cancel the send operation.\n */\nexport interface SendBatchOptions extends OperationOptions {\n  /**\n   * The partition this batch will be sent to.\n   * If this value is set then partitionKey can not be set.\n   */\n  partitionId?: string;\n  /**\n   * A value that is hashed to produce a partition assignment.\n   * It guarantees that messages with the same partitionKey end up in the same partition.\n   * Specifying this will throw an error if the producer was created using a `partitionId`.\n   */\n  partitionKey?: string;\n}\n\n/**\n * The set of options to configure the `send` operation on the `EventHubProducer`.\n * - `partitionKey` : A value that is hashed to produce a partition assignment.\n * - `abortSignal`  : A signal used to cancel the send operation.\n *\n * Example usage:\n * ```js\n * {\n *     partitionKey: 'foo'\n * }\n * ```\n *\n * @internal\n */\nexport interface SendOptions extends OperationOptions {\n  /**\n   * A value that is hashed to produce a partition assignment.\n   * It guarantees that messages with the same partitionKey end up in the same partition.\n   * Specifying this will throw an error if the producer was created using a `partitionId`.\n   */\n  partitionKey?: string;\n}\n\n/**\n * An enum representing the different reasons for an `EventHubConsumerClient` to stop processing\n * events from a partition in a consumer group of an Event Hub.\n */\nexport enum CloseReason {\n  /**\n   * Ownership of the partition was lost or transitioned to a new processor instance.\n   */\n  OwnershipLost = \"OwnershipLost\",\n  /**\n   * The EventProcessor was shutdown.\n   */\n  Shutdown = \"Shutdown\",\n}\n\n/**\n * Describes the options that can be provided while creating the EventHubClient.\n * - `userAgent`        : A string to append to the built in user agent string that is passed as a connection property\n * to the service.\n * - `webSocketOptions` : Options to configure the channelling of the AMQP connection over Web Sockets.\n *    - `websocket`     : The WebSocket constructor used to create an AMQP connection if you choose to make the connection\n * over a WebSocket.\n *    - `webSocketConstructorOptions` : Options to pass to the Websocket constructor when you choose to make the connection\n * over a WebSocket.\n * - `retryOptions`     : The retry options for all the operations on the client/producer/consumer.\n *    - `maxRetries` : The number of times the operation can be retried in case of a retryable error.\n *    - `maxRetryDelayInMs`: The maximum delay between retries. Applicable only when performing exponential retries.\n *    - `mode`: Which retry mode to apply, specified by the `RetryMode` enum. Options are `Exponential` and `Fixed`. Defaults to `Fixed`.\n *    - `retryDelayInMs`: Amount of time to wait in milliseconds before making the next attempt. When `mode` is set to `Exponential`,\n *       this is used to compute the exponentially increasing delays between retries. Default: 30000 milliseconds.\n *    - `timeoutInMs`: Amount of time in milliseconds to wait before the operation times out. This will trigger a retry if there are any\n *       retry attempts remaining. Default value: 60000 milliseconds.\n *\n * A simple usage can be `{ \"maxRetries\": 4 }`.\n *\n * Example usage:\n * ```js\n * {\n *     retryOptions: {\n *         maxRetries: 4\n *     }\n * }\n * ```\n */\nexport interface EventHubClientOptions {\n  /**\n   * A custom endpoint to use when connecting to the Event Hubs service.\n   * This can be useful when your network does not allow connecting to the\n   * standard Azure Event Hubs endpoint address, but does allow connecting\n   * through an intermediary.\n   *\n   * Example: \"https://my.custom.endpoint:100/\"\n   */\n  customEndpointAddress?: string;\n  /**\n   * Options to configure the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   *\n   */\n  retryOptions?: RetryOptions;\n  /**\n   * Options to configure the channelling of the AMQP connection over Web Sockets.\n   */\n  webSocketOptions?: WebSocketOptions;\n  /**\n   * Value that is appended to the built in user agent string that is passed to the Event Hubs service.\n   */\n  userAgent?: string;\n  /**\n   * A unique name used to identify the client.  If not provided, a GUID will be used as the identifier\n   */\n  identifier?: string;\n}\n\n/**\n * Describes the options that can be provided while creating the EventHubConsumerClient.\n * - `loadBalancingOptions`: Options to tune how the EventHubConsumerClient claims partitions.\n * - `userAgent`        : A string to append to the built in user agent string that is passed as a connection property\n * to the service.\n * - `webSocketOptions` : Options to configure the channelling of the AMQP connection over Web Sockets.\n *    - `websocket`     : The WebSocket constructor used to create an AMQP connection if you choose to make the connection\n * over a WebSocket.\n *    - `webSocketConstructorOptions` : Options to pass to the Websocket constructor when you choose to make the connection\n * over a WebSocket.\n * - `retryOptions`     : The retry options for all the operations on the client/producer/consumer.\n *    - `maxRetries` : The number of times the operation can be retried in case of a retryable error.\n *    - `maxRetryDelayInMs`: The maximum delay between retries. Applicable only when performing exponential retries.\n *    - `mode`: Which retry mode to apply, specified by the `RetryMode` enum. Options are `Exponential` and `Fixed`. Defaults to `Fixed`.\n *    - `retryDelayInMs`: Amount of time to wait in milliseconds before making the next attempt. When `mode` is set to `Exponential`,\n *       this is used to compute the exponentially increasing delays between retries. Default: 30000 milliseconds.\n *    - `timeoutInMs`: Amount of time in milliseconds to wait before the operation times out. This will trigger a retry if there are any\n *       retry attempts remaining. Default value: 60000 milliseconds.\n *\n * A simple usage can be `{ \"maxRetries\": 4 }`.\n *\n * Example usage:\n * ```js\n * {\n *     retryOptions: {\n *         maxRetries: 4\n *     }\n * }\n * ```\n */\nexport interface EventHubConsumerClientOptions extends EventHubClientOptions {\n  /**\n   * Options to tune how the EventHubConsumerClient claims partitions.\n   */\n  loadBalancingOptions?: LoadBalancingOptions;\n}\n\n/**\n * An options bag to configure load balancing settings.\n */\nexport interface LoadBalancingOptions {\n  /**\n   * Whether to apply a greedy or a more balanced approach when\n   * claiming partitions.\n   *\n   * - balanced: The `EventHubConsumerClient` will take a measured approach to\n   * requesting partition ownership when balancing work with other clients,\n   * slowly claiming partitions until a stabilized distribution is achieved.\n   *\n   * - greedy: The `EventHubConsumerClient` will attempt to claim ownership\n   * of its fair share of partitions aggressively when balancing work with\n   * other clients.\n   *\n   * This option is ignored when either:\n   *   - `CheckpointStore` is __not__ provided to the `EventHubConsumerClient`.\n   *   - `subscribe()` is called for a single partition.\n   * Default: balanced\n   */\n  strategy?: \"balanced\" | \"greedy\";\n  /**\n   * The length of time between attempts to claim partitions.\n   * Default: 10000\n   */\n  updateIntervalInMs?: number;\n  /**\n   * The length of time a partition claim is valid.\n   * Default: 60000\n   */\n  partitionOwnershipExpirationIntervalInMs?: number;\n}\n\n/**\n * Options to configure the `createBatch` method on the `EventHubProducerClient`.\n * - `partitionKey`  : A value that is hashed to produce a partition assignment.\n * - `maxSizeInBytes`: The upper limit for the size of batch.\n * - `abortSignal`   : A signal the request to cancel the send operation.\n *\n * Example usage:\n * ```js\n * {\n *     partitionKey: 'foo',\n *     maxSizeInBytes: 1024 * 1024 // 1 MB\n * }\n * ```\n */\nexport interface CreateBatchOptions extends OperationOptions {\n  /**\n   * A value that is hashed to produce a partition assignment. It guarantees that messages\n   * with the same partitionKey end up in the same partition.\n   * If this value is set then partitionId can not be set.\n   */\n  partitionKey?: string;\n  /**\n   * The partition this batch will be sent to.\n   * If this value is set then partitionKey can not be set.\n   */\n  partitionId?: string;\n  /**\n   * The upper limit for the size of batch. The `tryAdd` function will return `false` after this limit is reached.\n   */\n  maxSizeInBytes?: number;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { logErrorStackTrace, logger } from \"./logger\";\nimport { Buffer } from \"buffer\";\nimport isBuffer from \"is-buffer\";\nimport { message } from \"rhea-promise\";\n\n/**\n * The allowed AMQP message body types.\n * @internal\n */\nexport type BodyTypes = \"data\" | \"value\" | \"sequence\";\n\n/** @internal */\nexport const dataSectionTypeCode = 0x75 as const;\n/** @internal */\nexport const sequenceSectionTypeCode = 0x76 as const;\n/** @internal */\nexport const valueSectionTypeCode = 0x77 as const;\n\n/**\n * The default data transformer that will be used by the Azure SDK.\n * @internal\n */\nexport const defaultDataTransformer = {\n  /**\n   * A function that takes the body property from an EventData object\n   * and returns an encoded body (some form of AMQP type).\n   *\n   * @param body - The AMQP message body\n   * @param bodyType - The AMQP section to story the body in.\n   * @returns The encoded AMQP message body as an AMQP Data/Sequence/Value section.\n   */\n  encode(body: unknown, bodyType: BodyTypes): any {\n    let result: any;\n    // string, undefined, null, boolean, array, object, number should end up here\n    // coercing undefined to null as that will ensure that null value will be given to the\n    // customer on receive.\n    if (body === undefined) body = null;\n\n    if (bodyType === \"value\") {\n      // TODO: Expose value_section from `rhea` similar to the data_section and sequence_section.\n      // Right now there isn't a way to create a value section officially.\n      result = message.data_section(body);\n      result.typecode = valueSectionTypeCode;\n    } else if (bodyType === \"sequence\") {\n      result = message.sequence_section(body);\n    } else if (isBuffer(body) || body instanceof Uint8Array) {\n      result = message.data_section(body);\n    } else if (body === null && bodyType === \"data\") {\n      result = message.data_section(null);\n    } else {\n      try {\n        const bodyStr = JSON.stringify(body);\n        result = message.data_section(Buffer.from(bodyStr, \"utf8\"));\n      } catch (err: any) {\n        const msg =\n          `An error occurred while executing JSON.stringify() on the given body ` +\n          body +\n          `${err ? err.stack : JSON.stringify(err)}`;\n        logger.warning(\"[encode] \" + msg);\n        logErrorStackTrace(err);\n        throw new Error(msg);\n      }\n    }\n    return result;\n  },\n\n  /**\n   * A function that takes the body property from an AMQP message, which can come from either\n   * the 'data', 'value' or 'sequence' sections of an AMQP message.\n   *\n   * If the body is not a JSON string the the raw contents will be returned, along with the bodyType\n   * indicating which part of the AMQP message the body was decoded from.\n   *\n   * @param body - The AMQP message body as received from rhea.\n   * @param skipParsingBodyAsJson - Boolean to skip running JSON.parse() on message body when body type is `content`.\n   * @returns The decoded/raw body and the body type.\n   */\n  decode(\n    body: unknown | RheaAmqpSection,\n    skipParsingBodyAsJson: boolean,\n  ): { body: unknown; bodyType: BodyTypes } {\n    try {\n      if (isRheaAmqpSection(body)) {\n        switch (body.typecode) {\n          case dataSectionTypeCode:\n            return {\n              body: skipParsingBodyAsJson ? body.content : tryToJsonDecode(body.content),\n              bodyType: \"data\",\n            };\n          case sequenceSectionTypeCode:\n            return { body: body.content, bodyType: \"sequence\" };\n          case valueSectionTypeCode:\n            return { body: body.content, bodyType: \"value\" };\n        }\n      } else {\n        if (isBuffer(body)) {\n          return { body: skipParsingBodyAsJson ? body : tryToJsonDecode(body), bodyType: \"data\" };\n        }\n\n        return { body, bodyType: \"value\" };\n      }\n    } catch (err: any) {\n      logger.verbose(\n        \"[decode] An error occurred while decoding the received message body. The error is: %O\",\n        err,\n      );\n      throw err;\n    }\n  },\n};\n\n/**\n * Attempts to decode 'body' as a JSON string. If it fails it returns body\n * verbatim.\n *\n * @param body - An AMQP message body.\n * @returns A JSON decoded object, or body if body was not a JSON string.\n *\n * @internal\n */\nfunction tryToJsonDecode(body: unknown): unknown {\n  let processedBody: any = body;\n  try {\n    // Trying to stringify and JSON.parse() anything else will fail flat and we shall return\n    // the original type back\n    const bodyStr: string = processedBody.toString(\"utf8\");\n    processedBody = JSON.parse(bodyStr);\n  } catch (err: any) {\n    logger.verbose(\n      \"[decode] An error occurred while trying JSON.parse() on the received body. The error is %O\",\n      err,\n    );\n  }\n  return processedBody;\n}\n\n/**\n * Mirror of the internal Section interface in rhea.\n *\n * @internal\n */\nexport interface RheaAmqpSection {\n  typecode:\n    | typeof dataSectionTypeCode\n    | typeof sequenceSectionTypeCode\n    | typeof valueSectionTypeCode;\n  content: any;\n}\n\n/** @internal */\nexport function isRheaAmqpSection(\n  possibleSection: any | RheaAmqpSection,\n): possibleSection is RheaAmqpSection {\n  return (\n    possibleSection != null &&\n    typeof possibleSection.typecode === \"number\" &&\n    (possibleSection.typecode === dataSectionTypeCode ||\n      possibleSection.typecode === valueSectionTypeCode ||\n      possibleSection.typecode === sequenceSectionTypeCode)\n  );\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @internal\n */\nexport const packageJsonInfo = {\n  name: \"@azure/event-hubs\",\n  version: \"5.12.0\",\n};\n\n/**\n * @internal\n */\nexport const idempotentProducerAmqpPropertyNames = {\n  capability: \"com.microsoft:idempotent-producer\",\n  epoch: \"com.microsoft:producer-epoch\",\n  producerId: \"com.microsoft:producer-id\",\n  producerSequenceNumber: \"com.microsoft:producer-sequence-number\",\n} as const;\n\n/** @internal */\nexport const receiverIdPropertyName = \"com.microsoft:receiver-name\";\n\n/**\n * @internal\n */\nexport const PENDING_PUBLISH_SEQ_NUM_SYMBOL = Symbol.for(\n  \"@azure/event-hubs.pendingPublishSequenceNumber\",\n);\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AmqpAnnotatedMessage, Constants } from \"@azure/core-amqp\";\nimport { BodyTypes, defaultDataTransformer } from \"./dataTransformer\";\nimport {\n  DeliveryAnnotations,\n  MessageAnnotations,\n  Message as RheaMessage,\n  types,\n} from \"rhea-promise\";\nimport { isDefined, isObjectWithProperties, objectHasProperty } from \"@azure/core-util\";\nimport {\n  idempotentProducerAmqpPropertyNames,\n  PENDING_PUBLISH_SEQ_NUM_SYMBOL,\n} from \"./util/constants\";\n\n/**\n * Describes the delivery annotations.\n * @internal\n */\nexport interface EventHubDeliveryAnnotations extends DeliveryAnnotations {\n  /**\n   * The offset of the last event.\n   */\n  last_enqueued_offset?: string;\n  /**\n   * The sequence number of the last event.\n   */\n  last_enqueued_sequence_number?: number;\n  /**\n   * The enqueued time of the last event.\n   */\n  last_enqueued_time_utc?: number;\n  /**\n   * The retrieval time of the last event.\n   */\n  runtime_info_retrieval_time_utc?: number;\n  /**\n   * Any unknown delivery annotations.\n   */\n  [x: string]: any;\n}\n\n/**\n * Map containing message attributes that will be held in the message header.\n * @internal\n */\nexport interface EventHubMessageAnnotations extends MessageAnnotations {\n  /**\n   * Annotation for the partition key set for the event.\n   */\n  \"x-opt-partition-key\"?: string | null;\n  /**\n   * Annotation for the sequence number of the event.\n   */\n  \"x-opt-sequence-number\"?: number;\n  /**\n   * Annotation for the enqueued time of the event.\n   */\n  \"x-opt-enqueued-time\"?: number;\n  /**\n   * Annotation for the offset of the event.\n   */\n  \"x-opt-offset\"?: string;\n  /**\n   * Any other annotation that can be added to the message.\n   */\n  [x: string]: any;\n}\n\n/**\n * Describes the structure of an event to be sent or received from the EventHub.\n * @internal\n */\nexport interface EventDataInternal {\n  /**\n   * The message body that needs to be sent or is received.\n   */\n  body: any;\n  /**\n   * The enqueued time of the event.\n   */\n  enqueuedTimeUtc?: Date;\n  /**\n   * If specified EventHub will hash this to a partitionId.\n   * It guarantees that messages end up in a specific partition on the event hub.\n   */\n  partitionKey?: string | null;\n  /**\n   * The offset of the event.\n   */\n  offset?: number;\n  /**\n   * The sequence number of the event.\n   */\n  sequenceNumber?: number;\n  /**\n   * The application specific properties.\n   */\n  properties?: { [property: string]: any };\n  /**\n   * The last sequence number of the event within the partition stream of the Event Hub.\n   */\n  lastSequenceNumber?: number;\n  /**\n   * The offset of the last enqueued event.\n   */\n  lastEnqueuedOffset?: string;\n  /**\n   * The enqueued UTC time of the last event.\n   */\n  lastEnqueuedTime?: Date;\n  /**\n   * The time when the runtime info was retrieved\n   */\n  retrievalTime?: Date;\n  /**\n   * The properties set by the service.\n   */\n  systemProperties?: { [property: string]: any };\n  /**\n   * The content type of the message. Optionally describes\n   * the payload of the message, with a descriptor following the format of RFC2045, Section 5, for\n   * example \"application/json\".\n   */\n  contentType?: string;\n\n  /**\n   * The correlation identifier that allows an\n   * application to specify a context for the message for the purposes of correlation, for example\n   * reflecting the MessageId of a message that is being replied to.\n   */\n  correlationId?: string | number | Buffer;\n\n  /**\n   * The message identifier is an\n   * application-defined value that uniquely identifies the message and its payload.\n   *\n   * Note: Numbers that are not whole integers are not allowed.\n   */\n  messageId?: string | number | Buffer;\n  /**\n   * Returns the underlying raw amqp message.\n   */\n  getRawAmqpMessage(): AmqpAnnotatedMessage;\n  /**\n   * The pending publish sequence number, set while the event\n   * is being published with idempotent partitions enabled.\n   */\n  [PENDING_PUBLISH_SEQ_NUM_SYMBOL]?: number;\n  /**\n   * The sequence number the event was published with\n   * when idempotent partitions are enabled.\n   */\n  _publishedSequenceNumber?: number;\n}\n\nconst messagePropertiesMap = {\n  message_id: \"messageId\",\n  user_id: \"userId\",\n  to: \"to\",\n  subject: \"subject\",\n  reply_to: \"replyTo\",\n  correlation_id: \"correlationId\",\n  content_type: \"contentType\",\n  content_encoding: \"contentEncoding\",\n  absolute_expiry_time: \"absoluteExpiryTime\",\n  creation_time: \"creationTime\",\n  group_id: \"groupId\",\n  group_sequence: \"groupSequence\",\n  reply_to_group_id: \"replyToGroupId\",\n} as const;\n\n/**\n * Converts the AMQP message to an EventData.\n * @param msg - The AMQP message that needs to be converted to EventData.\n * @param skipParsingBodyAsJson - Boolean to skip running JSON.parse() on message body when body type is `content`.\n * @internal\n */\nexport function fromRheaMessage(\n  msg: RheaMessage,\n  skipParsingBodyAsJson: boolean,\n): EventDataInternal {\n  const rawMessage = AmqpAnnotatedMessage.fromRheaMessage(msg);\n  const { body, bodyType } = defaultDataTransformer.decode(msg.body, skipParsingBodyAsJson);\n  rawMessage.bodyType = bodyType;\n\n  const data: EventDataInternal = {\n    body,\n    getRawAmqpMessage() {\n      return rawMessage;\n    },\n  };\n\n  if (msg.message_annotations) {\n    for (const annotationKey of Object.keys(msg.message_annotations)) {\n      switch (annotationKey) {\n        case Constants.partitionKey:\n          data.partitionKey = msg.message_annotations[annotationKey];\n          break;\n        case Constants.sequenceNumber:\n          data.sequenceNumber = msg.message_annotations[annotationKey];\n          break;\n        case Constants.enqueuedTime:\n          data.enqueuedTimeUtc = new Date(msg.message_annotations[annotationKey]);\n          break;\n        case Constants.offset:\n          data.offset = msg.message_annotations[annotationKey];\n          break;\n        default:\n          if (!data.systemProperties) {\n            data.systemProperties = {};\n          }\n          data.systemProperties[annotationKey] = convertDatesToNumbers(\n            msg.message_annotations[annotationKey],\n          );\n          break;\n      }\n    }\n  }\n  if (msg.application_properties) {\n    data.properties = convertDatesToNumbers(msg.application_properties);\n  }\n  if (msg.delivery_annotations) {\n    data.lastEnqueuedOffset = msg.delivery_annotations.last_enqueued_offset;\n    data.lastSequenceNumber = msg.delivery_annotations.last_enqueued_sequence_number;\n    data.lastEnqueuedTime = new Date(msg.delivery_annotations.last_enqueued_time_utc as number);\n    data.retrievalTime = new Date(\n      msg.delivery_annotations.runtime_info_retrieval_time_utc as number,\n    );\n  }\n\n  const messageProperties = Object.keys(messagePropertiesMap) as Array<\n    keyof typeof messagePropertiesMap\n  >;\n  for (const messageProperty of messageProperties) {\n    if (!data.systemProperties) {\n      data.systemProperties = {};\n    }\n    if (msg[messageProperty] != null) {\n      data.systemProperties[messagePropertiesMap[messageProperty]] = convertDatesToNumbers(\n        msg[messageProperty],\n      );\n    }\n  }\n\n  if (msg.content_type != null) {\n    data.contentType = msg.content_type;\n  }\n  if (msg.correlation_id != null) {\n    data.correlationId = msg.correlation_id;\n  }\n  if (msg.message_id != null) {\n    data.messageId = msg.message_id;\n  }\n\n  return data;\n}\n\n/**\n * Converts an EventData object to an AMQP message.\n * @param data - The EventData object that needs to be converted to an AMQP message.\n * @param partitionKey - An optional key to determine the partition that this event should land in.\n * @internal\n */\nexport function toRheaMessage(\n  data: EventData | AmqpAnnotatedMessage,\n  partitionKey?: string,\n): RheaMessage {\n  let rheaMessage: RheaMessage;\n  if (isAmqpAnnotatedMessage(data)) {\n    rheaMessage = {\n      ...AmqpAnnotatedMessage.toRheaMessage(data),\n      body: defaultDataTransformer.encode(data.body, data.bodyType ?? \"data\"),\n    };\n  } else {\n    let bodyType: BodyTypes = \"data\";\n    if (typeof (data as EventDataInternal).getRawAmqpMessage === \"function\") {\n      /*\n        If the event is being round-tripped, then we respect the `bodyType` of the\n        underlying AMQP message.\n      */\n      bodyType = (data as EventDataInternal).getRawAmqpMessage().bodyType ?? \"data\";\n    }\n\n    rheaMessage = {\n      body: defaultDataTransformer.encode(data.body, bodyType),\n    };\n    // As per the AMQP 1.0 spec If the message-annotations or delivery-annotations section is omitted,\n    // it is equivalent to a message-annotations section containing anempty map of annotations.\n    rheaMessage.message_annotations = {};\n\n    if (data.properties) {\n      rheaMessage.application_properties = data.properties;\n    }\n\n    if (isDefined(partitionKey)) {\n      rheaMessage.message_annotations[Constants.partitionKey] = partitionKey;\n      // Event Hub service cannot route messages to a specific partition based on the partition key\n      // if AMQP message header is an empty object. Hence we make sure that header is always present\n      // with atleast one property. Setting durable to true, helps us achieve that.\n      rheaMessage.durable = true;\n    }\n\n    if (data.contentType != null) {\n      rheaMessage.content_type = data.contentType;\n    }\n    if (data.correlationId != null) {\n      rheaMessage.correlation_id = data.correlationId;\n    }\n    if (data.messageId != null) {\n      if (\n        typeof data.messageId === \"string\" &&\n        data.messageId.length > Constants.maxMessageIdLength\n      ) {\n        throw new Error(\n          `Length of 'messageId' property on the event cannot be greater than ${Constants.maxMessageIdLength} characters.`,\n        );\n      }\n      rheaMessage.message_id = data.messageId;\n    }\n  }\n\n  return rheaMessage;\n}\n\n/**\n * The interface that describes the data to be sent to Event Hub.\n * Use this as a reference when creating the object to be sent when using the `EventHubProducerClient`.\n * For example, `{ body: \"your-data\" }` or\n * ```\n * {\n *    body: \"your-data\",\n *    properties: {\n *       propertyName: \"property value\"\n *    }\n * }\n * ```\n */\nexport interface EventData {\n  /**\n   * The message body that needs to be sent.\n   * If the application reading the events is not using this SDK,\n   * convert your body payload to a byte array or Buffer for better\n   * cross-language compatibility.\n   */\n  body: any;\n\n  /**\n   * The content type of the message. Optionally describes\n   * the payload of the message, with a descriptor following the format of RFC2045, Section 5, for\n   * example \"application/json\".\n   */\n  contentType?: string;\n\n  /**\n   * The correlation identifier that allows an\n   * application to specify a context for the message for the purposes of correlation, for example\n   * reflecting the MessageId of a message that is being replied to.\n   */\n  correlationId?: string | number | Buffer;\n\n  /**\n   * The message identifier is an\n   * application-defined value that uniquely identifies the message and its payload.\n   *\n   * Note: Numbers that are not whole integers are not allowed.\n   */\n  messageId?: string | number | Buffer;\n\n  /**\n   * Set of key value pairs that can be used to set properties specific to user application.\n   */\n  properties?: {\n    [key: string]: any;\n  };\n}\n\n/**\n * The interface that describes the structure of the event received from Event Hub.\n * Use this as a reference when creating the `processEvents` function to process the events\n * recieved from an Event Hub when using the `EventHubConsumerClient`.\n */\nexport interface ReceivedEventData {\n  /**\n   * The message body that needs to be sent or is received.\n   */\n  body: any;\n  /**\n   * The application specific properties.\n   */\n  properties?: {\n    [key: string]: any;\n  };\n  /**\n   * The enqueued time of the event.\n   */\n  enqueuedTimeUtc: Date;\n  /**\n   * When specified Event Hub will hash this to a partitionId.\n   * It guarantees that messages end up in a specific partition on the event hub.\n   */\n  partitionKey: string | null;\n  /**\n   * The offset of the event.\n   */\n  offset: number;\n  /**\n   * The sequence number of the event.\n   */\n  sequenceNumber: number;\n  /**\n   * The properties set by the service.\n   */\n  systemProperties?: {\n    [key: string]: any;\n  };\n\n  /**\n   * The content type of the message. Optionally describes\n   * the payload of the message, with a descriptor following the format of RFC2045, Section 5, for\n   * example \"application/json\".\n   */\n  contentType?: string;\n\n  /**\n   * The correlation identifier that allows an\n   * application to specify a context for the message for the purposes of correlation, for example\n   * reflecting the MessageId of a message that is being replied to.\n   */\n  correlationId?: string | number | Buffer;\n\n  /**\n   * The message identifier is an\n   * application-defined value that uniquely identifies the message and its payload.\n   */\n  messageId?: string | number | Buffer;\n\n  /**\n   * Returns the underlying raw amqp message.\n   */\n  getRawAmqpMessage(): AmqpAnnotatedMessage;\n}\n\n/**\n * @internal\n */\nexport function isAmqpAnnotatedMessage(possible: unknown): possible is AmqpAnnotatedMessage {\n  return (\n    isObjectWithProperties(possible, [\"body\", \"bodyType\"]) &&\n    !objectHasProperty(possible, \"getRawAmqpMessage\")\n  );\n}\n\n/**\n * Converts any Date objects into a number representing date.getTime().\n * Recursively checks for any Date objects in arrays and objects.\n * @internal\n */\nfunction convertDatesToNumbers<T = unknown>(thing: T): T {\n  // fast exit\n  if (!isDefined(thing)) return thing;\n\n  // When 'thing' is a Date, return the number representation\n  if (\n    typeof thing === \"object\" &&\n    objectHasProperty(thing, \"getTime\") &&\n    typeof thing.getTime === \"function\"\n  ) {\n    return thing.getTime();\n  }\n\n  /*\n    Examples:\n    [0, 'foo', new Date(), { nested: new Date()}]\n  */\n  if (Array.isArray(thing)) {\n    return thing.map(convertDatesToNumbers) as unknown as T;\n  }\n\n  /*\n    Examples:\n    { foo: new Date(), children: { nested: new Date() }}\n  */\n  if (typeof thing === \"object\" && isDefined<object>(thing)) {\n    const thingShallowCopy = { ...thing };\n    for (const key of Object.keys(thingShallowCopy)) {\n      (thingShallowCopy as any)[key] = convertDatesToNumbers((thingShallowCopy as any)[key]);\n    }\n    return thingShallowCopy;\n  }\n\n  return thing;\n}\n\n/**\n * @internal\n */\nexport interface PopulateIdempotentMessageAnnotationsParameters {\n  isIdempotentPublishingEnabled: boolean;\n  ownerLevel?: number;\n  producerGroupId?: number;\n  publishSequenceNumber?: number;\n}\n\n/**\n * Populates a rhea message with idempotent producer properties.\n * @internal\n */\nexport function populateIdempotentMessageAnnotations(\n  rheaMessage: RheaMessage,\n  {\n    isIdempotentPublishingEnabled,\n    ownerLevel,\n    producerGroupId,\n    publishSequenceNumber,\n  }: PopulateIdempotentMessageAnnotationsParameters,\n): void {\n  if (!isIdempotentPublishingEnabled) {\n    return;\n  }\n\n  const messageAnnotations = rheaMessage.message_annotations || {};\n  if (!rheaMessage.message_annotations) {\n    rheaMessage.message_annotations = messageAnnotations;\n  }\n\n  if (isDefined(ownerLevel)) {\n    messageAnnotations[idempotentProducerAmqpPropertyNames.epoch] = types.wrap_short(ownerLevel);\n  }\n  if (isDefined(producerGroupId)) {\n    messageAnnotations[idempotentProducerAmqpPropertyNames.producerId] =\n      types.wrap_long(producerGroupId);\n  }\n  if (isDefined(publishSequenceNumber)) {\n    messageAnnotations[idempotentProducerAmqpPropertyNames.producerSequenceNumber] =\n      types.wrap_int(publishSequenceNumber);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Constants, RetryOptions } from \"@azure/core-amqp\";\n\n/**\n * @internal\n */\nexport function getRetryAttemptTimeoutInMs(retryOptions: RetryOptions = {}): number {\n  const { timeoutInMs } = retryOptions;\n  return typeof timeoutInMs !== \"number\" || !isFinite(timeoutInMs)\n    ? Constants.defaultOperationTimeoutInMs\n    : timeoutInMs;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { randomUUID } from \"@azure/core-util\";\n\n/**\n * Returns a random name by appending a guid to the input string as follows:\n * `{name}-{uuid}`.\n * @internal\n */\nexport function getRandomName(prefix?: string): string {\n  const str = randomUUID();\n  return prefix ? `${prefix}-${str}` : str;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A timer loop is a loop over multiple instances of a promise every specific\n * time interval. It is different from `setInterval` in that it waits until the\n * promise is settled before it goes to the next iteration.\n * */\nexport interface TimerLoop {\n  /**\n   * Starts the timer loop. If the loop is already running, the loop will be\n   * restarted.\n   */\n  start: () => void;\n  /**\n   * Stops the timer loop. If the loop is not running, it is a no-op.\n   */\n  stop: () => void;\n  /**\n   * Whether the loop is running.\n   */\n  isRunning: boolean;\n}\n\n/**\n * Creates a timer loop with the given timeout and task.\n * @internal\n */\nexport function createTimerLoop(\n  timeoutInMs: number,\n  createTask: () => Promise<unknown>,\n): TimerLoop {\n  let token: ReturnType<typeof setTimeout>;\n  const loop = {\n    start: () => {\n      clearTimeout(token);\n      token = setTimeout(\n        () =>\n          createTask()\n            .catch(() => {\n              /** eats up any unhandled error */\n            })\n            .finally(loop.start),\n        timeoutInMs,\n      );\n      loop.isRunning = true;\n    },\n    stop: () => {\n      clearTimeout(token);\n      loop.isRunning = false;\n    },\n    isRunning: false,\n  };\n  return loop;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  Constants,\n  TokenType,\n  defaultCancellableLock,\n  isSasTokenProvider,\n  SasTokenProvider,\n  CbsClient,\n  CbsResponse,\n} from \"@azure/core-amqp\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { AccessToken, TokenCredential } from \"@azure/core-auth\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { createTimerLoop, TimerLoop } from \"./util/timerLoop\";\nimport { SimpleLogger, logObj } from \"./logger\";\n\n/**\n *\n * @param callback - The callback to be executed after the token is obtained.\n * @param context - The connection context.\n * @param audience - The audience for which the token is needed.\n * @param timeoutInMs - The timeout in milliseconds.\n * @param logger - The logger to be used for logging.\n * @returns  A TimerLoop that keeps the token refreshed.\n * @internal\n */\nexport async function withAuth(\n  callback: () => Promise<void>,\n  context: ConnectionContext,\n  audience: string,\n  timeoutInMs: number,\n  logger: SimpleLogger,\n  options: {\n    abortSignal?: AbortSignalLike;\n  },\n): Promise<TimerLoop> {\n  const info = await getTokenInfo(context.tokenCredential, audience);\n  await setupClaimNegotiation(context, audience, info, timeoutInMs, logger, options);\n  await callback();\n  async function createTask(): Promise<void> {\n    try {\n      const info2 = await getTokenInfo(context.tokenCredential, audience);\n      await setupClaimNegotiation(context, audience, info2, timeoutInMs, logger, options);\n      logger.verbose(\n        `next token renewal is in ${info2.timeToLiveInMs} milliseconds @(${new Date(\n          Date.now() + info2.timeToLiveInMs,\n        ).toString()}).`,\n      );\n    } catch (err) {\n      logger.verbose(`an error occurred while renewing the token: ${logObj(err)}`);\n    }\n  }\n  const loop = createTimerLoop(info.timeToLiveInMs, createTask);\n  loop.start();\n  return loop;\n}\n\n/**\n * @internal\n */\nexport async function openCbsSession(\n  client: CbsClient,\n  timeoutAfterStartTime: number,\n  { abortSignal }: { abortSignal?: AbortSignalLike } = {},\n): Promise<void> {\n  return defaultCancellableLock.acquire(\n    client.cbsLock,\n    () =>\n      client.init({\n        abortSignal,\n        timeoutInMs: timeoutAfterStartTime - Date.now(),\n      }),\n    {\n      abortSignal,\n      timeoutInMs: timeoutAfterStartTime - Date.now(),\n    },\n  );\n}\n\n/**\n * A representation of an access token.\n * @internal\n */\ninterface TokenInfo {\n  /** The access token */\n  token: AccessToken;\n  /** The type of the token */\n  type: TokenType;\n  /** The time duration after which the token should be refreshed */\n  timeToLiveInMs: number;\n}\n\nasync function getAadToken(cred: TokenCredential): Promise<TokenInfo> {\n  const token = await cred.getToken(Constants.aadEventHubsScope);\n  if (!token) {\n    throw new Error(`Failed to get token from the provided \"TokenCredential\" object`);\n  }\n  return {\n    token,\n    type: TokenType.CbsTokenTypeJwt,\n    timeToLiveInMs: token.expiresOnTimestamp - Date.now() - 2 * 60 * 1000,\n  };\n}\n\nasync function getSharedKeyBasedToken(\n  cred: SasTokenProvider,\n  audience: string,\n): Promise<TokenInfo> {\n  return {\n    token: await cred.getToken(audience),\n    type: TokenType.CbsTokenTypeSas,\n    timeToLiveInMs: 45 * 60 * 1000,\n  };\n}\n\nasync function getTokenInfo(\n  cred: SasTokenProvider | TokenCredential,\n  audience: string,\n): Promise<TokenInfo> {\n  return isSasTokenProvider(cred) ? getSharedKeyBasedToken(cred, audience) : getAadToken(cred);\n}\n\nfunction negotiateClaim(\n  { token, type }: TokenInfo,\n  audience: string,\n  cbsSession: CbsClient,\n  timeoutAfterStartTime: number,\n  lock: string,\n  abortSignal?: AbortSignalLike,\n): Promise<CbsResponse> {\n  return defaultCancellableLock.acquire(\n    lock,\n    () =>\n      cbsSession.negotiateClaim(audience, token.token, type, {\n        abortSignal,\n        timeoutInMs: timeoutAfterStartTime - Date.now(),\n      }),\n    {\n      abortSignal,\n      timeoutInMs: timeoutAfterStartTime - Date.now(),\n    },\n  );\n}\n\nasync function setupClaimNegotiation(\n  context: ConnectionContext,\n  audience: string,\n  info: TokenInfo,\n  timeoutInMs: number,\n  logger: SimpleLogger,\n  {\n    abortSignal,\n  }: {\n    abortSignal?: AbortSignalLike;\n  },\n): Promise<void> {\n  const startTime = Date.now();\n  logger.verbose(\n    `acquiring cbs lock: '${context.cbsSession.cbsLock}' for creating the cbs session`,\n  );\n\n  await openCbsSession(context.cbsSession, timeoutInMs + startTime, { abortSignal });\n  logger.verbose(`acquiring cbs lock: '${context.negotiateClaimLock}' for cbs auth`);\n  await negotiateClaim(\n    info,\n    audience,\n    context.cbsSession,\n    timeoutInMs + startTime,\n    context.negotiateClaimLock,\n    abortSignal,\n  );\n  logger.verbose(\"claim negotiation succeeded\");\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortController, AbortError, AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  Constants,\n  MessagingError,\n  RetryOperationType,\n  StandardAbortMessage,\n  retry,\n  translate,\n  RetryConfig,\n} from \"@azure/core-amqp\";\nimport {\n  EventContext,\n  Receiver as Link,\n  ReceiverOptions as RheaReceiverOptions,\n  Source,\n  types,\n} from \"rhea-promise\";\nimport { EventDataInternal, ReceivedEventData, fromRheaMessage } from \"./eventData\";\nimport { EventPosition, getEventPositionFilter } from \"./eventPosition\";\nimport {\n  createSimpleLogger,\n  logErrorStackTrace,\n  logObj,\n  logger as azureLogger,\n  SimpleLogger,\n  createReceiverLogPrefix,\n} from \"./logger\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { PartitionReceiverOptions } from \"./models/private\";\nimport { getRetryAttemptTimeoutInMs } from \"./util/retries\";\nimport { createAbortablePromise } from \"@azure/core-util\";\nimport { TimerLoop } from \"./util/timerLoop\";\nimport { getRandomName } from \"./util/utils\";\nimport { withAuth } from \"./withAuth\";\nimport { receiverIdPropertyName } from \"./util/constants\";\n\ntype Writable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n/** @internal */\nexport type WritableReceiver = Writable<PartitionReceiver>;\n\nconst abortLogMessage = \"operation has been cancelled by the user\";\n/** The time to wait in ms before attempting to read from the queue */\nconst qReadIntervalInMs = 20;\n\n/**\n * A set of information about the last enqueued event of a partition, as observed by the consumer as\n * events are received from the Event Hubs service\n */\nexport interface LastEnqueuedEventProperties {\n  /**\n   * The sequence number of the event that was last enqueued into the Event Hub partition from which\n   * this event was received.\n   */\n  sequenceNumber?: number;\n  /**\n   * The date and time, in UTC, that the last event was enqueued into the Event Hub partition from\n   * which this event was received.\n   */\n  enqueuedOn?: Date;\n  /**\n   * The offset of the event that was last enqueued into the Event Hub partition from which\n   * this event was received.\n   */\n  offset?: string;\n  /**\n   * The date and time, in UTC, that the last event was retrieved from the Event Hub partition.\n   */\n  retrievedOn?: Date;\n}\n\n/** @internal */\nexport interface PartitionReceiver {\n  readonly checkpoint: number;\n  readonly lastEnqueuedEventProperties: LastEnqueuedEventProperties;\n  readonly isClosed: boolean;\n  readonly close: () => Promise<void>;\n  readonly abort: () => Promise<void>;\n  readonly isOpen: () => boolean;\n  readonly receiveBatch: (\n    maxMessageCount: number,\n    maxWaitTimeInSeconds?: number,\n    abortSignal?: AbortSignalLike,\n  ) => Promise<ReceivedEventData[]>;\n  /** Needed for tests only */\n  readonly _onError?: (error: MessagingError | Error) => void;\n  readonly connect: (options: ConnectOptions) => Promise<void>;\n}\n\ninterface ConnectOptions {\n  abortSignal: AbortSignalLike | undefined;\n  timeoutInMs: number;\n}\n\ninterface ReceiverState {\n  link?: Link;\n  authLoop?: TimerLoop;\n  isConnecting: boolean;\n}\n\n/** @internal */\nexport function createReceiver(\n  ctx: ConnectionContext,\n  consumerGroup: string,\n  consumerId: string,\n  partitionId: string,\n  eventPosition: EventPosition,\n  options: PartitionReceiverOptions = {},\n): PartitionReceiver {\n  const address = ctx.config.getReceiverAddress(partitionId, consumerGroup);\n  const name = getRandomName(address);\n  const audience = ctx.config.getReceiverAudience(partitionId, consumerGroup);\n  const logPrefix = createReceiverLogPrefix(consumerId, ctx.connectionId, partitionId);\n  const logger = createSimpleLogger(azureLogger, logPrefix);\n  const queue: ReceivedEventData[] = [];\n  const state: ReceiverState = {\n    isConnecting: false,\n  };\n\n  const obj: WritableReceiver = {\n    _onError: undefined,\n    checkpoint: -1,\n    lastEnqueuedEventProperties: {},\n    isClosed: false,\n    close: async () => {\n      clearHandlers(obj);\n      delete ctx.receivers[name];\n      logger.verbose(\"deleted the receiver from the client cache\");\n      state.authLoop?.stop();\n      return state.link\n        ?.close()\n        .catch((err) => {\n          logger.warning(`an error occurred while closing: ${err?.name}: ${err?.message}`);\n          logErrorStackTrace(err);\n          throw err;\n        })\n        .finally(() => {\n          obj.isClosed = true;\n          logger.verbose(\"is closed\");\n          state.link = undefined;\n          state.authLoop = undefined;\n        });\n    },\n    abort: () => {\n      obj._onError?.(new AbortError(StandardAbortMessage));\n      logger.info(abortLogMessage);\n      return obj.close();\n    },\n    isOpen: () => {\n      const isOpen = !!state.link?.isOpen();\n      logger.verbose(`is open? -> ${isOpen}`);\n      return isOpen;\n    },\n    async connect({ abortSignal, timeoutInMs }: ConnectOptions): Promise<void> {\n      if (state.isConnecting || obj.isOpen()) {\n        return;\n      }\n      state.isConnecting = true;\n      logger.verbose(\"is trying to connect\");\n      try {\n        await ctx.readyToOpenLink({ abortSignal });\n        state.authLoop = await withAuth(\n          () =>\n            setupLink(\n              consumerId,\n              ctx,\n              name,\n              address,\n              obj,\n              state,\n              queue,\n              eventPosition,\n              logger,\n              options,\n              abortSignal,\n            ),\n          ctx,\n          audience,\n          timeoutInMs,\n          logger,\n          {\n            abortSignal,\n          },\n        );\n      } catch (err) {\n        state.isConnecting = false;\n        const error = translate(err);\n        logger.error(\n          `an error occurred while creating the receiver: ${error?.name}: ${error?.message}`,\n        );\n        logErrorStackTrace(err);\n        throw error;\n      }\n    },\n    receiveBatch: (\n      maxMessageCount: number,\n      maxWaitTimeInSeconds: number = 60,\n      abortSignal?: AbortSignalLike,\n    ) => {\n      const prefetchCount = options.prefetchCount ?? maxMessageCount * 3;\n      const cleanupBeforeAbort = (): Promise<void> => {\n        logger.info(abortLogMessage);\n        return obj.close();\n      };\n      const retrieveEvents = (): Promise<ReceivedEventData[]> => {\n        const eventsToRetrieveCount = Math.max(maxMessageCount - queue.length, 0);\n        logger.verbose(\n          `already has ${queue.length} events and wants to receive ${eventsToRetrieveCount} more events`,\n        );\n        if (abortSignal?.aborted) {\n          cleanupBeforeAbort();\n          return Promise.reject(new AbortError(StandardAbortMessage));\n        }\n        return obj.isClosed || ctx.wasConnectionCloseCalled || eventsToRetrieveCount === 0\n          ? Promise.resolve(queue.splice(0, maxMessageCount))\n          : new Promise<void>((resolve, reject) => {\n              obj._onError = reject;\n              obj // eslint-disable-line promise/catch-or-return\n                .connect({\n                  abortSignal,\n                  timeoutInMs: getRetryAttemptTimeoutInMs(options.retryOptions),\n                })\n                .then(() => {\n                  addCredits(state.link, Math.max(prefetchCount, maxMessageCount) - queue.length);\n                  logger.verbose(`setting the max wait time to ${maxWaitTimeInSeconds} seconds`);\n                  return waitForEvents(\n                    maxMessageCount,\n                    maxWaitTimeInSeconds * 1000,\n                    qReadIntervalInMs,\n                    queue,\n                    {\n                      abortSignal,\n                      cleanupBeforeAbort,\n                      receivedAfterWait: () =>\n                        logger.info(\n                          `${Math.min(\n                            maxMessageCount,\n                            queue.length,\n                          )} messages received within ${maxWaitTimeInSeconds} seconds`,\n                        ),\n                      receivedAlready: () =>\n                        logger.info(`${maxMessageCount} messages already received`),\n                      receivedNone: () =>\n                        logger.info(\n                          `no messages received when max wait time in seconds ${maxWaitTimeInSeconds} is over`,\n                        ),\n                    },\n                  );\n                })\n                .catch(reject)\n                .then(resolve);\n            })\n              .then(() => queue.splice(0, maxMessageCount))\n              .finally(() => clearHandlers(obj));\n      };\n      return retry(\n        Object.defineProperties(\n          {\n            operation: retrieveEvents,\n            operationType: RetryOperationType.receiveMessage,\n            abortSignal: abortSignal,\n            retryOptions: options.retryOptions ?? {},\n          },\n          {\n            connectionId: {\n              enumerable: true,\n              get: () => ctx.connectionId,\n            },\n            connectionHost: {\n              enumerable: true,\n              get: () => ctx.config.host,\n            },\n          },\n        ) as RetryConfig<ReceivedEventData[]>,\n      );\n    },\n  };\n  return obj;\n}\n\nfunction delay(\n  waitTimeInMs: number,\n  options?: {\n    abortSignal?: AbortSignalLike;\n    cleanupBeforeAbort?: () => void;\n    abortErrorMsg?: string;\n  },\n): Promise<void> {\n  let token: ReturnType<typeof setTimeout>;\n  return createAbortablePromise<void>((resolve) => {\n    token = setTimeout(resolve, waitTimeInMs);\n  }, options).finally(() => clearTimeout(token));\n}\n\n/**\n * @internal\n */\nexport function checkOnInterval(\n  waitTimeInMs: number,\n  check: () => boolean,\n  options?: {\n    abortSignal?: AbortSignalLike;\n    cleanupBeforeAbort?: () => void;\n    abortErrorMsg?: string;\n  },\n): Promise<void> {\n  let token: ReturnType<typeof setInterval>;\n  return createAbortablePromise<void>((resolve) => {\n    token = setInterval(() => {\n      if (check()) {\n        resolve();\n      }\n    }, waitTimeInMs);\n  }, options).finally(() => clearInterval(token));\n}\n\n/**\n * Returns a promise that will resolve when it is time to read from the queue\n * @param maxEventCount - The maximum number of events to receive.\n * @param maxWaitTimeInMs - The maximum time to wait in ms for the queue to contain any events.\n * @param readIntervalWaitTimeInMs - The time interval to wait in ms before checking the queue.\n * @param queue - The queue to read from.\n * @param options - The options bag.\n * @returns a promise that will resolve when it is time to read from the queue\n * @internal\n */\nexport function waitForEvents(\n  maxEventCount: number,\n  maxWaitTimeInMs: number,\n  readIntervalWaitTimeInMs: number,\n  queue: unknown[],\n  options: {\n    abortSignal?: AbortSignalLike;\n    cleanupBeforeAbort?: () => void;\n    receivedAfterWait?: () => void;\n    receivedAlready?: () => void;\n    receivedNone?: () => void;\n  } = {},\n): Promise<void> {\n  const {\n    abortSignal: clientAbortSignal,\n    cleanupBeforeAbort,\n    receivedNone,\n    receivedAfterWait,\n    receivedAlready,\n  } = options;\n\n  if (queue.length >= maxEventCount) {\n    return Promise.resolve().then(receivedAlready);\n  }\n\n  const aborter = new AbortController();\n  const abortListener = () => {\n    aborter.abort();\n  };\n  clientAbortSignal?.addEventListener(\"abort\", abortListener);\n\n  const updatedOptions = {\n    abortSignal: aborter.signal,\n    abortErrorMsg: StandardAbortMessage,\n    cleanupBeforeAbort: () => {\n      if (clientAbortSignal?.aborted) {\n        cleanupBeforeAbort?.();\n      }\n    },\n  };\n  return Promise.race([\n    checkOnInterval(readIntervalWaitTimeInMs, () => queue.length > 0, updatedOptions)\n      .then(() => delay(readIntervalWaitTimeInMs, updatedOptions))\n      .then(receivedAfterWait),\n    delay(maxWaitTimeInMs, updatedOptions).then(receivedNone),\n  ]).finally(() => {\n    aborter.abort();\n    clientAbortSignal?.removeEventListener(\"abort\", abortListener);\n  });\n}\n\nfunction convertAMQPMesage(data: EventDataInternal): ReceivedEventData {\n  const rawMessage = data.getRawAmqpMessage();\n  const receivedEventData: ReceivedEventData = {\n    body: data.body,\n    properties: data.properties,\n    offset: data.offset!,\n    sequenceNumber: data.sequenceNumber!,\n    enqueuedTimeUtc: data.enqueuedTimeUtc!,\n    partitionKey: data.partitionKey!,\n    systemProperties: data.systemProperties,\n    getRawAmqpMessage() {\n      return rawMessage;\n    },\n  };\n  if (data.correlationId != null) {\n    receivedEventData.correlationId = data.correlationId;\n  }\n  if (data.contentType != null) {\n    receivedEventData.contentType = data.contentType;\n  }\n  if (data.messageId != null) {\n    receivedEventData.messageId = data.messageId;\n  }\n  return receivedEventData;\n}\n\nfunction setEventProps(eventProps: LastEnqueuedEventProperties, data: EventDataInternal): void {\n  eventProps.sequenceNumber = data.lastSequenceNumber;\n  eventProps.enqueuedOn = data.lastEnqueuedTime;\n  eventProps.offset = data.lastEnqueuedOffset;\n  eventProps.retrievedOn = data.retrievalTime;\n}\n\nfunction clearHandlers(obj: WritableReceiver): void {\n  obj._onError = undefined;\n}\n\nfunction onMessage(\n  context: EventContext,\n  obj: WritableReceiver,\n  queue: ReceivedEventData[],\n  options: PartitionReceiverOptions,\n): void {\n  if (!context.message) {\n    return;\n  }\n  const data = fromRheaMessage(context.message, !!options.skipParsingBodyAsJson);\n  const receivedEventData = convertAMQPMesage(data);\n  obj.checkpoint = receivedEventData.sequenceNumber;\n  if (options.trackLastEnqueuedEventProperties) {\n    setEventProps(obj.lastEnqueuedEventProperties, data);\n  }\n  queue.push(receivedEventData);\n}\n\nfunction onError(\n  context: EventContext,\n  obj: PartitionReceiver,\n  receiver: Link | undefined,\n  logger: SimpleLogger,\n): void {\n  const rheaReceiver = receiver || context.receiver;\n  const amqpError = rheaReceiver?.error;\n  logger.verbose(`'receiver_error' event occurred: ${logObj(amqpError)}`);\n  if (obj._onError && amqpError) {\n    const error = translate(amqpError);\n    logErrorStackTrace(error);\n    obj._onError(error);\n  }\n}\n\nfunction onSessionError(context: EventContext, obj: PartitionReceiver, logger: SimpleLogger): void {\n  const sessionError = context.session?.error;\n  logger.verbose(`'session_error' event occurred: ${logObj(sessionError)}`);\n  if (obj._onError && sessionError) {\n    const error = translate(sessionError);\n    logErrorStackTrace(error);\n    obj._onError(error);\n  }\n}\n\nasync function onClose(\n  context: EventContext,\n  state: ReceiverState,\n  logger: SimpleLogger,\n): Promise<void> {\n  const rheaReceiver = state.link || context.receiver;\n  logger.verbose(\n    `'receiver_close' event occurred. Value for isItselfClosed on the receiver is: '${rheaReceiver\n      ?.isItselfClosed()\n      .toString()}' Value for isConnecting on the session is: '${state.isConnecting}'`,\n  );\n  if (rheaReceiver && !state.isConnecting) {\n    return rheaReceiver.close().catch((err) => {\n      logger.verbose(`error when closing after 'receiver_close' event: ${logObj(err)}`);\n    });\n  }\n}\n\nasync function onSessionClose(\n  context: EventContext,\n  state: ReceiverState,\n  logger: SimpleLogger,\n): Promise<void> {\n  const rheaReceiver = state.link || context.receiver;\n  logger.verbose(\n    `'session_close' event occurred. Value for isSessionItselfClosed on the session is: '${rheaReceiver\n      ?.isSessionItselfClosed()\n      .toString()}' Value for isConnecting on the session is: '${state.isConnecting}'`,\n  );\n  if (rheaReceiver && !state.isConnecting) {\n    return rheaReceiver.close().catch((err) => {\n      logger.verbose(`error when closing after 'session_close' event: ${logObj(err)}`);\n    });\n  }\n}\n\nfunction createRheaOptions(\n  consumerId: string,\n  name: string,\n  address: string,\n  obj: PartitionReceiver,\n  state: ReceiverState,\n  queue: ReceivedEventData[],\n  eventPosition: EventPosition,\n  logger: SimpleLogger,\n  options: PartitionReceiverOptions,\n): RheaReceiverOptions {\n  const rheaOptions: RheaReceiverOptions & { source: Source; properties: Record<string, any> } = {\n    name,\n    autoaccept: true,\n    target: consumerId,\n    source: {\n      address,\n    },\n    credit_window: 0,\n    properties: {\n      [receiverIdPropertyName]: consumerId,\n    },\n    onClose: (context) => onClose(context, state, logger),\n    onSessionClose: (context) => onSessionClose(context, state, logger),\n    onError: (context) => onError(context, obj, state.link, logger),\n    onMessage: (context) => onMessage(context, obj, queue, options),\n    onSessionError: (context) => onSessionError(context, obj, logger),\n  };\n  const ownerLevel = options.ownerLevel;\n  if (typeof ownerLevel === \"number\") {\n    rheaOptions.properties[Constants.attachEpoch] = types.wrap_long(ownerLevel);\n  }\n  if (options.trackLastEnqueuedEventProperties) {\n    rheaOptions.desired_capabilities = Constants.enableReceiverRuntimeMetricName;\n  }\n  const filterClause = getEventPositionFilter(\n    obj.checkpoint > -1 ? { sequenceNumber: obj.checkpoint } : eventPosition,\n  );\n  rheaOptions.source.filter = {\n    \"apache.org:selector-filter:string\": types.wrap_described(filterClause, 0x468c00000004),\n  };\n  return rheaOptions;\n}\n\nasync function setupLink(\n  consumerId: string,\n  ctx: ConnectionContext,\n  name: string,\n  address: string,\n  obj: PartitionReceiver,\n  state: ReceiverState,\n  queue: ReceivedEventData[],\n  eventPosition: EventPosition,\n  logger: SimpleLogger,\n  options: PartitionReceiverOptions,\n  abortSignal?: AbortSignalLike,\n): Promise<void> {\n  const rheaOptions = createRheaOptions(\n    consumerId,\n    name,\n    address,\n    obj,\n    state,\n    queue,\n    eventPosition,\n    logger,\n    options,\n  );\n  logger.verbose(`trying to be created with options ${logObj(rheaOptions)}`);\n  state.link = await ctx.connection.createReceiver({\n    ...rheaOptions,\n    abortSignal,\n  });\n  state.isConnecting = false;\n  logger.verbose(\"is created successfully\");\n  ctx.receivers[name] = obj;\n}\n\nfunction addCredits(receiver: Link | undefined, creditsToAdd: number): void {\n  if (creditsToAdd > 0) {\n    receiver?.addCredit(creditsToAdd);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createTracingClient, TracingSpanOptions, TracingSpanKind } from \"@azure/core-tracing\";\nimport { EventHubConnectionConfig } from \"../eventhubConnectionConfig\";\nimport { packageJsonInfo } from \"../util/constants\";\n\n/**\n * The names of the operations that can be instrumented.\n */\nexport type MessagingOperationNames = \"publish\" | \"receive\" | \"process\";\n\n/**\n * The {@link TracingClient} that is used to add tracing spans.\n */\nexport const tracingClient = createTracingClient({\n  namespace: \"Microsoft.EventHub\",\n  packageName: packageJsonInfo.name,\n  packageVersion: packageJsonInfo.version,\n});\n\n/**\n * Creates {@link TracingSpanOptions} from the provided data.\n * @param eventHubConfig - The configuration object containing initial attributes to set on the span.\n * @param spanKind - The {@link TracingSpanKind} for the newly created span.\n * @param operation - The operation type.\n * @returns a {@link TracingSpanOptions} that can be passed to a {@link TracingClient}\n */\nexport function toSpanOptions(\n  eventHubConfig: Pick<EventHubConnectionConfig, \"entityPath\" | \"host\">,\n  operation?: MessagingOperationNames,\n  spanKind?: TracingSpanKind,\n): TracingSpanOptions {\n  const propertyName =\n    operation === \"process\" || operation === \"receive\"\n      ? \"messaging.source.name\"\n      : \"messaging.destination.name\";\n\n  const spanAttributes = {\n    \"messaging.system\": \"eventhubs\",\n    [propertyName]: eventHubConfig.entityPath,\n    \"net.peer.name\": eventHubConfig.host,\n  };\n\n  if (operation) {\n    spanAttributes[\"messaging.operation\"] = operation;\n  }\n\n  const spanOptions: TracingSpanOptions = {\n    spanAttributes: spanAttributes,\n  };\n  if (spanKind) {\n    spanOptions.spanKind = spanKind;\n  }\n  return spanOptions;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { EventData, isAmqpAnnotatedMessage } from \"../eventData\";\nimport { TracingContext } from \"@azure/core-tracing\";\nimport { AmqpAnnotatedMessage } from \"@azure/core-amqp\";\nimport { OperationOptions } from \"../util/operationOptions\";\nimport { MessagingOperationNames, toSpanOptions, tracingClient } from \"./tracing\";\n\n/**\n * @internal\n */\nexport const TRACEPARENT_PROPERTY = \"Diagnostic-Id\";\n\n/**\n * Populates the `EventData` with `SpanContext` info to support trace propagation.\n * Creates and returns a copy of the passed in `EventData` unless the `EventData`\n * has already been instrumented.\n * @param eventData - The `EventData` or `AmqpAnnotatedMessage` to instrument.\n * @param span - The `Span` containing the context to propagate tracing information.\n * @param operation - The type of the operation being performed.\n */\nexport function instrumentEventData(\n  eventData: EventData | AmqpAnnotatedMessage,\n  options: OperationOptions,\n  entityPath: string,\n  host: string,\n  operation?: MessagingOperationNames,\n): { event: EventData; spanContext: TracingContext | undefined } {\n  const props = isAmqpAnnotatedMessage(eventData)\n    ? eventData.applicationProperties\n    : eventData.properties;\n\n  // check if the event has already been instrumented\n  const previouslyInstrumented = Boolean(props?.[TRACEPARENT_PROPERTY]);\n\n  if (previouslyInstrumented) {\n    return { event: eventData, spanContext: undefined };\n  }\n\n  const { span: messageSpan, updatedOptions } = tracingClient.startSpan(\n    \"message\",\n    options,\n    toSpanOptions({ entityPath, host }, operation, \"producer\"),\n  );\n  try {\n    if (!messageSpan.isRecording()) {\n      return {\n        event: eventData,\n        spanContext: undefined,\n      };\n    }\n\n    const traceParent = tracingClient.createRequestHeaders(\n      updatedOptions.tracingOptions?.tracingContext,\n    )[\"traceparent\"];\n    if (traceParent) {\n      const copiedProps = { ...props };\n\n      // create a copy so the original isn't modified\n      if (isAmqpAnnotatedMessage(eventData)) {\n        eventData = { ...eventData, applicationProperties: copiedProps };\n      } else {\n        eventData = { ...eventData, properties: copiedProps };\n      }\n      copiedProps[TRACEPARENT_PROPERTY] = traceParent;\n    }\n\n    return {\n      event: eventData,\n      spanContext: updatedOptions.tracingOptions?.tracingContext,\n    };\n  } finally {\n    messageSpan.end();\n  }\n}\n\n/**\n * Extracts the `SpanContext` from an `EventData` if the context exists.\n * @param eventData - An individual `EventData` object.\n * @internal\n */\nexport function extractSpanContextFromEventData(eventData: EventData): TracingContext | undefined {\n  if (!eventData.properties || !eventData.properties[TRACEPARENT_PROPERTY]) {\n    return;\n  }\n\n  const diagnosticId = eventData.properties[TRACEPARENT_PROPERTY];\n  return tracingClient.parseTraceparentHeader(diagnosticId);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TracingSpanOptions, TracingSpanLink } from \"@azure/core-tracing\";\nimport { logErrorStackTrace, logger } from \"./logger\";\nimport { AbortController } from \"@azure/abort-controller\";\nimport { CloseReason } from \"./models/public\";\nimport { CommonEventProcessorOptions } from \"./models/private\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { EventHubConnectionConfig } from \"./eventhubConnectionConfig\";\nimport { createReceiver, PartitionReceiver } from \"./partitionReceiver\";\nimport { EventPosition } from \"./eventPosition\";\nimport { MessagingError } from \"@azure/core-amqp\";\nimport { PartitionProcessor } from \"./partitionProcessor\";\nimport { ReceivedEventData } from \"./eventData\";\nimport { toSpanOptions, tracingClient } from \"./diagnostics/tracing\";\nimport { extractSpanContextFromEventData } from \"./diagnostics/instrumentEventData\";\n\n/**\n * @internal\n */\nexport class PartitionPump {\n  private _partitionProcessor: PartitionProcessor;\n  private _processorOptions: CommonEventProcessorOptions;\n  private _receiver: PartitionReceiver | undefined;\n  private _isReceiving: boolean = false;\n  private _isStopped: boolean = false;\n  private _abortController: AbortController;\n  constructor(\n    private _context: ConnectionContext,\n    partitionProcessor: PartitionProcessor,\n    private readonly _startPosition: EventPosition,\n    options: CommonEventProcessorOptions,\n  ) {\n    this._partitionProcessor = partitionProcessor;\n    this._processorOptions = options;\n    this._abortController = new AbortController();\n  }\n\n  public get isReceiving(): boolean {\n    return this._isReceiving;\n  }\n\n  async start(): Promise<void> {\n    this._isReceiving = true;\n    try {\n      await this._partitionProcessor.initialize();\n    } catch (err) {\n      // swallow the error from the user-defined code\n      this._partitionProcessor.processError(err as Error);\n    }\n\n    // this is intentionally not await'd - the _receiveEvents loop will continue to\n    // execute and can be stopped by calling .stop()\n    this._receiveEvents(this._partitionProcessor.partitionId);\n    logger.info(\n      `Successfully started the receiver for partition \"${this._partitionProcessor.partitionId}\".`,\n    );\n  }\n\n  /**\n   * Creates a new `PartitionReceiver` and replaces any existing receiver.\n   * @param partitionId - The partition the receiver should read messages from.\n   * @param lastSeenSequenceNumber - The sequence number to begin receiving messages from (exclusive).\n   * If `-1`, then the PartitionPump's startPosition will be used instead.\n   */\n  private _setOrReplaceReceiver(\n    partitionId: string,\n    lastSeenSequenceNumber: number,\n  ): PartitionReceiver {\n    // Determine what the new EventPosition should be.\n    // If this PartitionPump has received events, we'll start from the last\n    // seen sequenceNumber (exclusive).\n    // Otherwise, use the `_startPosition`.\n    const currentEventPosition: EventPosition =\n      lastSeenSequenceNumber >= 0\n        ? {\n            sequenceNumber: lastSeenSequenceNumber,\n            isInclusive: false,\n          }\n        : this._startPosition;\n\n    // Set or replace the PartitionPump's receiver.\n    this._receiver = createReceiver(\n      this._context,\n      this._partitionProcessor.consumerGroup,\n      this._partitionProcessor.eventProcessorId,\n      partitionId,\n      currentEventPosition,\n      {\n        ownerLevel: this._processorOptions.ownerLevel,\n        trackLastEnqueuedEventProperties: this._processorOptions.trackLastEnqueuedEventProperties,\n        retryOptions: this._processorOptions.retryOptions,\n        skipParsingBodyAsJson: this._processorOptions.skipParsingBodyAsJson,\n        prefetchCount: this._processorOptions.prefetchCount,\n      },\n    );\n\n    return this._receiver;\n  }\n\n  private async _receiveEvents(partitionId: string): Promise<void> {\n    let lastSeenSequenceNumber = -1;\n    let receiver = this._setOrReplaceReceiver(partitionId, lastSeenSequenceNumber);\n\n    while (this._isReceiving) {\n      try {\n        // Check if the receiver was closed so we can recreate it.\n        if (receiver.isClosed) {\n          receiver = this._setOrReplaceReceiver(partitionId, lastSeenSequenceNumber);\n        }\n\n        const receivedEvents = await receiver.receiveBatch(\n          this._processorOptions.maxBatchSize,\n          this._processorOptions.maxWaitTimeInSeconds,\n          this._abortController.signal,\n        );\n\n        if (\n          this._processorOptions.trackLastEnqueuedEventProperties &&\n          receiver.lastEnqueuedEventProperties\n        ) {\n          this._partitionProcessor.lastEnqueuedEventProperties =\n            receiver.lastEnqueuedEventProperties;\n        }\n        // avoid calling user's processEvents handler if the pump was stopped while receiving events\n        if (!this._isReceiving) {\n          return;\n        }\n\n        if (receivedEvents.length) {\n          lastSeenSequenceNumber = receivedEvents[receivedEvents.length - 1].sequenceNumber;\n        }\n\n        await tracingClient.withSpan(\n          \"PartitionPump.process\",\n          {},\n          () => this._partitionProcessor.processEvents(receivedEvents),\n          toProcessingSpanOptions(receivedEvents, this._context.config),\n        );\n      } catch (err: any) {\n        // check if this pump is still receiving\n        // it may not be if the EventProcessor was stopped during processEvents\n        if (!this._isReceiving) {\n          // no longer receiving, so close was called from somewhere else\n          return;\n        }\n\n        logger.warning(\n          `An error was thrown while receiving or processing events on partition \"${this._partitionProcessor.partitionId}\"`,\n        );\n        logErrorStackTrace(err);\n        // forward error to user's processError and swallow errors they may throw\n        try {\n          await this._partitionProcessor.processError(err as Error);\n        } catch (errorFromUser) {\n          // Using verbose over warning because this error is swallowed.\n          logger.verbose(\"An error was thrown by user's processError method: \", errorFromUser);\n        }\n\n        // close the partition processor if a non-retryable error was encountered\n        if (typeof err !== \"object\" || !(err as MessagingError).retryable) {\n          try {\n            // If the exception indicates that the partition was stolen (i.e some other consumer with same ownerlevel\n            // started consuming the partition), update the closeReason\n            if (err.code === \"ReceiverDisconnectedError\") {\n              return await this.stop(CloseReason.OwnershipLost);\n            }\n            // this will close the pump and will break us out of the while loop\n            return await this.stop(CloseReason.Shutdown);\n          } catch (errorFromStop) {\n            // Using verbose over warning because this error is swallowed.\n            logger.verbose(\n              `An error occurred while closing the receiver with reason ${CloseReason.Shutdown}: `,\n              errorFromStop,\n            );\n          }\n        }\n      }\n    }\n  }\n\n  async stop(reason: CloseReason): Promise<void> {\n    if (this._isStopped) {\n      return;\n    }\n    this._isStopped = true;\n    this._isReceiving = false;\n    try {\n      // Trigger the cancellation before closing the receiver,\n      // otherwise the receiver will remove the listener on the abortSignal\n      // before it has a chance to be emitted.\n      this._abortController.abort();\n      await this._receiver?.close();\n      await this._partitionProcessor.close(reason);\n    } catch (err: any) {\n      logger.warning(`An error occurred while closing the receiver: ${err?.name}: ${err?.message}`);\n      logErrorStackTrace(err);\n      this._partitionProcessor.processError(err);\n      throw err;\n    }\n  }\n}\n\n/**\n * @internal\n */\nexport function toProcessingSpanOptions(\n  receivedEvents: ReceivedEventData[],\n  eventHubProperties: Pick<EventHubConnectionConfig, \"entityPath\" | \"host\">,\n): TracingSpanOptions {\n  const spanLinks: TracingSpanLink[] = [];\n  for (const receivedEvent of receivedEvents) {\n    const tracingContext = extractSpanContextFromEventData(receivedEvent);\n    if (tracingContext) {\n      spanLinks.push({\n        tracingContext,\n        attributes: {\n          enqueuedTime: receivedEvent.enqueuedTimeUtc.getTime(),\n        },\n      });\n    }\n  }\n  return {\n    spanLinks,\n    spanKind: \"consumer\",\n    ...toSpanOptions(eventHubProperties, \"process\"),\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { logErrorStackTrace, logger } from \"./logger\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { CloseReason } from \"./models/public\";\nimport { CommonEventProcessorOptions } from \"./models/private\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { EventPosition } from \"./eventPosition\";\nimport { PartitionProcessor } from \"./partitionProcessor\";\nimport { PartitionPump } from \"./partitionPump\";\n\n/**\n * The PumpManager handles the creation and removal of PartitionPumps.\n * It also starts a PartitionPump when it is created, and stops a\n * PartitionPump when it is removed.\n * @internal\n */\nexport interface PumpManager {\n  /**\n   * Creates and starts a PartitionPump.\n   * @param startPosition - The position in the partition to start reading from.\n   * @param eventHubClient - The EventHubClient to forward to the PartitionPump.\n   * @param partitionProcessor - The PartitionProcessor to forward to the PartitionPump.\n   * @param abortSignal - Used to cancel pump creation.\n   */\n  createPump(\n    startPosition: EventPosition,\n    connectionContext: ConnectionContext,\n    partitionProcessor: PartitionProcessor,\n    abortSignal: AbortSignalLike,\n  ): Promise<void>;\n\n  /**\n   * Indicates whether the pump manager is actively receiving events from a given partition.\n   * @param partitionId - The partition to check.\n   */\n  isReceivingFromPartition(partitionId: string): boolean;\n\n  /**\n   * Stops all PartitionPumps and removes them from the internal map.\n   * @param reason - The reason for removing the pump.\n   */\n  removeAllPumps(reason: CloseReason): Promise<void>;\n}\n\n/**\n * The PumpManager handles the creation and removal of PartitionPumps.\n * It also starts a PartitionPump when it is created, and stops a\n * PartitionPump when it is removed.\n * @internal\n */\nexport class PumpManagerImpl implements PumpManager {\n  private readonly _eventProcessorName: string;\n  private readonly _options: CommonEventProcessorOptions;\n  private _partitionIdToPumps: {\n    [partitionId: string]: PartitionPump | undefined;\n  } = {};\n\n  constructor(eventProcessorName: string, eventProcessorOptions: CommonEventProcessorOptions) {\n    this._eventProcessorName = eventProcessorName;\n    this._options = eventProcessorOptions;\n  }\n\n  /**\n   * Returns a list of partitionIds that are actively receiving messages.\n   */\n  public receivingFromPartitions(): string[] {\n    return Object.keys(this._partitionIdToPumps).filter((id) => {\n      const pump = this._partitionIdToPumps[id];\n      return Boolean(pump && pump.isReceiving);\n    });\n  }\n\n  /**\n   * Indicates whether the pump manager is actively receiving events from a given partition.\n   * @internal\n   */\n  public isReceivingFromPartition(partitionId: string): boolean {\n    const pump = this._partitionIdToPumps[partitionId];\n    return Boolean(pump && pump.isReceiving);\n  }\n\n  /**\n   * Creates and starts a PartitionPump.\n   * @param startPosition - The position in the partition to start reading from.\n   * @param connectionContext - The ConnectionContext to forward to the PartitionPump.\n   * @param partitionProcessor - The PartitionProcessor to forward to the PartitionPump.\n   */\n  public async createPump(\n    startPosition: EventPosition,\n    connectionContext: ConnectionContext,\n    partitionProcessor: PartitionProcessor,\n    abortSignal: AbortSignalLike,\n  ): Promise<void> {\n    const partitionId = partitionProcessor.partitionId;\n    if (abortSignal.aborted) {\n      logger.verbose(\n        `${this._eventProcessorName}] The subscription was closed before creating the pump for partition ${partitionId}.`,\n      );\n      return;\n    }\n    // attempt to get an existing pump\n    const existingPump = this._partitionIdToPumps[partitionId];\n    if (existingPump) {\n      if (existingPump.isReceiving) {\n        logger.verbose(\n          `[${this._eventProcessorName}] [${partitionId}] The existing pump is running.`,\n        );\n        return;\n      }\n      logger.verbose(\n        `[${this._eventProcessorName}] [${partitionId}] The existing pump is not running.`,\n      );\n      await this.removePump(partitionId, CloseReason.OwnershipLost);\n    }\n\n    logger.verbose(`[${this._eventProcessorName}] [${partitionId}] Creating a new pump.`);\n\n    const pump = new PartitionPump(\n      connectionContext,\n      partitionProcessor,\n      startPosition,\n      this._options,\n    );\n\n    try {\n      // Set the pump before starting it in case the user\n      // closes the subscription while `start()` is in progress.\n      this._partitionIdToPumps[partitionId] = pump;\n      await pump.start();\n    } catch (err: any) {\n      logger.verbose(\n        `[${this._eventProcessorName}] [${partitionId}] An error occured while adding/updating a pump: ${err}`,\n      );\n      logErrorStackTrace(err);\n    }\n  }\n\n  /**\n   * Stop a PartitionPump and removes it from the internal map.\n   * @param partitionId - The partitionId to remove the associated PartitionPump from.\n   * @param reason - The reason for removing the pump.\n   */\n  public async removePump(partitionId: string, reason: CloseReason): Promise<void> {\n    try {\n      const pump = this._partitionIdToPumps[partitionId];\n      if (pump) {\n        delete this._partitionIdToPumps[partitionId];\n        logger.verbose(`[${this._eventProcessorName}] [${partitionId}] Stopping the pump.`);\n        await pump.stop(reason);\n      } else {\n        logger.verbose(\n          `[${this._eventProcessorName}] [${partitionId}] No pump was found to remove.`,\n        );\n      }\n    } catch (err: any) {\n      logger.verbose(\n        `[${this._eventProcessorName}] [${partitionId}] An error occured while removing a pump: ${err}`,\n      );\n      logErrorStackTrace(err);\n    }\n  }\n\n  /**\n   * Stops all PartitionPumps and removes them from the internal map.\n   * @param reason - The reason for removing the pump.\n   */\n  public async removeAllPumps(reason: CloseReason): Promise<void> {\n    const partitionIds = Object.keys(this._partitionIdToPumps);\n\n    logger.verbose(`[${this._eventProcessorName}] Removing all pumps due to reason ${reason}.`);\n\n    const tasks: PromiseLike<void>[] = [];\n    for (const partitionId of partitionIds) {\n      const pump = this._partitionIdToPumps[partitionId];\n      if (pump) {\n        tasks.push(pump.stop(reason));\n      }\n    }\n\n    try {\n      await Promise.all(tasks);\n    } catch (err: any) {\n      logger.verbose(\n        `[${this._eventProcessorName}] An error occured while removing all pumps: ${err}`,\n      );\n      logErrorStackTrace(err);\n    } finally {\n      this._partitionIdToPumps = {};\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { delay } from \"@azure/core-amqp\";\n\n/**\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param abortSignal - The abortSignal associated with the containing operation.\n * @internal\n */\nexport async function delayWithoutThrow(\n  delayInMs: number,\n  abortSignal?: AbortSignalLike,\n): Promise<void> {\n  try {\n    await delay(delayInMs, abortSignal);\n  } catch {\n    /* no-op to swallow AbortError */\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortController, AbortError, AbortSignalLike } from \"@azure/abort-controller\";\nimport { Checkpoint, PartitionProcessor } from \"./partitionProcessor\";\nimport { EventPosition, isEventPosition, latestEventPosition } from \"./eventPosition\";\nimport { PumpManager, PumpManagerImpl } from \"./pumpManager\";\nimport { logErrorStackTrace, logger } from \"./logger\";\nimport { CloseReason } from \"./models/public\";\nimport { CommonEventProcessorOptions } from \"./models/private\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { LoadBalancingStrategy } from \"./loadBalancerStrategies/loadBalancingStrategy\";\nimport { OperationOptions } from \"./util/operationOptions\";\nimport { SubscriptionEventHandlers } from \"./eventHubConsumerClientModels\";\nimport { delayWithoutThrow } from \"./util/delayWithoutThrow\";\nimport { getRandomName } from \"./util/utils\";\n\n/**\n * An interface representing the details on which instance of a `EventProcessor` owns processing\n * of a given partition from a consumer group of an Event Hub instance.\n *\n * **Note**: This is used internally by the `EventProcessor` and user never has to create it directly.\n */\nexport interface PartitionOwnership {\n  /**\n   * The fully qualified Event Hubs namespace. This is likely to be similar to\n   * <yournamespace>.servicebus.windows.net\n   */\n  fullyQualifiedNamespace: string;\n  /**\n   * The event hub name\n   */\n  eventHubName: string;\n  /**\n   * The consumer group name\n   */\n  consumerGroup: string;\n  /**\n   * The identifier of the Event Hub partition.\n   */\n  partitionId: string;\n  /**\n   * The unique identifier of the event processor.\n   */\n  ownerId: string;\n  /**\n   * The last modified time.\n   */\n  lastModifiedTimeInMs?: number;\n  /**\n   * The unique identifier for the operation.\n   */\n  etag?: string;\n}\n\n/**\n * A checkpoint store stores and retrieves partition ownership information and checkpoint details\n * for each partition in a given consumer group of an event hub instance.\n *\n * Users are not meant to implement an `CheckpointStore`.\n * Users are expected to choose existing implementations of this interface, instantiate it, and pass\n * it to the `EventHubConsumerClient` class constructor when instantiating a client.\n * Users are not expected to use any of the methods on a checkpoint store, these are used internally by\n * the client.\n *\n * Implementations of `CheckpointStore` can be found on npm by searching for packages with the prefix &commat;azure/eventhub-checkpointstore-.\n */\nexport interface CheckpointStore {\n  /**\n   * Called to get the list of all existing partition ownership from the underlying data store. Could return empty\n   * results if there are is no existing ownership information.\n   *\n   * @param fullyQualifiedNamespace - The fully qualified Event Hubs namespace. This is likely to be similar to\n   * <yournamespace>.servicebus.windows.net.\n   * @param eventHubName - The event hub name.\n   * @param consumerGroup - The consumer group name.\n   * @param options - A set of options that can be specified to influence the behavior of this method.\n   *  - `abortSignal`: A signal used to request operation cancellation.\n   *  - `tracingOptions`: Options for configuring tracing.\n   * @returns A list of partition ownership details of all the partitions that have/had an owner.\n   */\n  listOwnership(\n    fullyQualifiedNamespace: string,\n    eventHubName: string,\n    consumerGroup: string,\n    options?: OperationOptions,\n  ): Promise<PartitionOwnership[]>;\n  /**\n   * Called to claim ownership of a list of partitions. This will return the list of partitions that were owned\n   * successfully.\n   *\n   * @param partitionOwnership - The list of partition ownership this instance is claiming to own.\n   * @param options - A set of options that can be specified to influence the behavior of this method.\n   *  - `abortSignal`: A signal used to request operation cancellation.\n   *  - `tracingOptions`: Options for configuring tracing.\n   * @returns A list of partitions this instance successfully claimed ownership.\n   */\n  claimOwnership(\n    partitionOwnership: PartitionOwnership[],\n    options?: OperationOptions,\n  ): Promise<PartitionOwnership[]>;\n\n  /**\n   * Updates the checkpoint in the data store for a partition.\n   *\n   * @param checkpoint - The checkpoint.\n   * @param options - A set of options that can be specified to influence the behavior of this method.\n   *  - `abortSignal`: A signal used to request operation cancellation.\n   *  - `tracingOptions`: Options for configuring tracing.\n   */\n  updateCheckpoint(checkpoint: Checkpoint, options?: OperationOptions): Promise<void>;\n\n  /**\n   * Lists all the checkpoints in a data store for a given namespace, eventhub and consumer group.\n   *\n   * @param fullyQualifiedNamespace - The fully qualified Event Hubs namespace. This is likely to be similar to\n   * <yournamespace>.servicebus.windows.net.\n   * @param eventHubName - The event hub name.\n   * @param consumerGroup - The consumer group name.\n   * @param options - A set of options that can be specified to influence the behavior of this method.\n   *  - `abortSignal`: A signal used to request operation cancellation.\n   *  - `tracingOptions`: Options for configuring tracing.\n   * @returns A list of checkpoints for a given namespace, eventhub, and consumer group.\n   */\n  listCheckpoints(\n    fullyQualifiedNamespace: string,\n    eventHubName: string,\n    consumerGroup: string,\n    options?: OperationOptions,\n  ): Promise<Checkpoint[]>;\n}\n\n/**\n * A set of options to pass to the constructor of `EventProcessor`.\n * You can specify\n * - `maxBatchSize`: The max size of the batch of events passed each time to user code for processing.\n * - `maxWaitTimeInSeconds`: The maximum amount of time to wait to build up the requested message count before\n * passing the data to user code for processing. If not provided, it defaults to 60 seconds.\n *\n * Example usage with default values:\n * ```ts\n * {\n *     maxBatchSize: 1,\n *     maxWaitTimeInSeconds: 60,\n * }\n * ```\n * @internal\n */\nexport interface FullEventProcessorOptions extends CommonEventProcessorOptions {\n  /**\n   * An optional pump manager to use, rather than instantiating one internally\n   * @internal\n   */\n  pumpManager?: PumpManager;\n  /**\n   * The amount of time between load balancing attempts.\n   */\n  loopIntervalInMs: number;\n  /**\n   * A specific partition to target.\n   */\n  processingTarget?: string;\n}\n\n/**\n * Event Processor based applications consist of one or more instances of EventProcessor which have been\n * configured to consume events from the same Event Hub and consumer group. They balance the\n * workload across different instances by distributing the partitions to be processed among themselves.\n * They also allow the user to track progress when events are processed using checkpoints.\n *\n * A checkpoint is meant to represent the last successfully processed event by the user from a particular\n * partition of a consumer group in an Event Hub instance.\n *\n * @internal\n */\nexport class EventProcessor {\n  private _processorOptions: FullEventProcessorOptions;\n  private _pumpManager: PumpManager;\n  private _id: string;\n  private _isRunning: boolean = false;\n  private _loopTask?: PromiseLike<void>;\n  private _abortController?: AbortController;\n  /**\n   * A specific partition to target.\n   */\n  private _processingTarget?: string;\n  /**\n   * Determines which partitions to claim as part of load balancing.\n   */\n  private _loadBalancingStrategy: LoadBalancingStrategy;\n  /**\n   * The amount of time between load balancing attempts.\n   */\n  private _loopIntervalInMs: number;\n  private _eventHubName: string;\n  private _fullyQualifiedNamespace: string;\n\n  /**\n   * @param consumerGroup - The name of the consumer group from which you want to process events.\n   * @param eventHubClient - An instance of `EventHubClient` that was created for the Event Hub instance.\n   * @param PartitionProcessorClass - A user-provided class that extends the `PartitionProcessor` class.\n   * This class will be responsible for processing and checkpointing events.\n   * @param checkpointStore - An instance of `CheckpointStore`. See &commat;azure/eventhubs-checkpointstore-blob for an implementation.\n   * For production, choose an implementation that will store checkpoints and partition ownership details to a durable store.\n   * @param options - A set of options to configure the Event Processor\n   * - `maxBatchSize`         : The max size of the batch of events passed each time to user code for processing.\n   * - `maxWaitTimeInSeconds` : The maximum amount of time to wait to build up the requested message count before\n   * passing the data to user code for processing. If not provided, it defaults to 60 seconds.\n   */\n  constructor(\n    private _consumerGroup: string,\n    private _context: ConnectionContext,\n    private _subscriptionEventHandlers: SubscriptionEventHandlers,\n    private _checkpointStore: CheckpointStore,\n    options: FullEventProcessorOptions,\n  ) {\n    if (options.ownerId) {\n      this._id = options.ownerId;\n      logger.verbose(`Starting event processor with ID ${this._id}`);\n    } else {\n      this._id = getRandomName();\n      logger.verbose(`Starting event processor with autogenerated ID ${this._id}`);\n    }\n\n    this._eventHubName = this._context.config.entityPath;\n    this._fullyQualifiedNamespace = this._context.config.host;\n    this._processorOptions = options;\n    this._pumpManager =\n      options.pumpManager || new PumpManagerImpl(this._id, this._processorOptions);\n    this._processingTarget = options.processingTarget;\n    this._loopIntervalInMs = options.loopIntervalInMs;\n    this._loadBalancingStrategy = options.loadBalancingStrategy;\n  }\n\n  /**\n   * The unique identifier for the EventProcessor.\n   */\n  get id(): string {\n    return this._id;\n  }\n\n  private _createPartitionOwnershipRequest(\n    partitionOwnershipMap: Map<string, PartitionOwnership>,\n    partitionIdToClaim: string,\n  ): PartitionOwnership {\n    const previousPartitionOwnership = partitionOwnershipMap.get(partitionIdToClaim);\n    const partitionOwnership: PartitionOwnership = {\n      ownerId: this._id,\n      partitionId: partitionIdToClaim,\n      fullyQualifiedNamespace: this._fullyQualifiedNamespace,\n      consumerGroup: this._consumerGroup,\n      eventHubName: this._eventHubName,\n      etag: previousPartitionOwnership ? previousPartitionOwnership.etag : undefined,\n    };\n\n    return partitionOwnership;\n  }\n\n  /*\n   * Claim ownership of the given partition if it's available\n   */\n  private async _claimOwnership(\n    ownershipRequest: PartitionOwnership,\n    abortSignal: AbortSignalLike,\n  ): Promise<void> {\n    if (abortSignal.aborted) {\n      logger.verbose(\n        `[${this._id}] Subscription was closed before claiming ownership of ${ownershipRequest.partitionId}.`,\n      );\n      return;\n    }\n    logger.info(\n      `[${this._id}] Attempting to claim ownership of partition ${ownershipRequest.partitionId}.`,\n    );\n    try {\n      const claimedOwnerships = await this._checkpointStore.claimOwnership([ownershipRequest]);\n\n      // can happen if the partition was claimed out from underneath us - we shouldn't\n      // attempt to spin up a processor.\n      if (!claimedOwnerships.length) {\n        return;\n      }\n\n      logger.info(\n        `[${this._id}] Successfully claimed ownership of partition ${ownershipRequest.partitionId}.`,\n      );\n\n      await this._startPump(ownershipRequest.partitionId, abortSignal);\n    } catch (err: any) {\n      logger.warning(\n        `[${this._id}] Failed to claim ownership of partition ${ownershipRequest.partitionId}`,\n      );\n      logErrorStackTrace(err);\n      await this._handleSubscriptionError(err);\n    }\n  }\n\n  private async _startPump(partitionId: string, abortSignal: AbortSignalLike): Promise<void> {\n    if (abortSignal.aborted) {\n      logger.verbose(\n        `[${this._id}] The subscription was closed before starting to read from ${partitionId}.`,\n      );\n      return;\n    }\n\n    if (this._pumpManager.isReceivingFromPartition(partitionId)) {\n      logger.verbose(\n        `[${this._id}] There is already an active partitionPump for partition \"${partitionId}\", skipping pump creation.`,\n      );\n      return;\n    }\n\n    logger.verbose(\n      `[${this._id}] [${partitionId}] Calling user-provided PartitionProcessorFactory.`,\n    );\n\n    const partitionProcessor = new PartitionProcessor(\n      this._subscriptionEventHandlers,\n      this._checkpointStore,\n      {\n        fullyQualifiedNamespace: this._fullyQualifiedNamespace,\n        eventHubName: this._eventHubName,\n        consumerGroup: this._consumerGroup,\n        partitionId: partitionId,\n        eventProcessorId: this._id,\n      },\n    );\n\n    const eventPosition = await this._getStartingPosition(partitionId);\n    await this._pumpManager.createPump(\n      eventPosition,\n      this._context,\n      partitionProcessor,\n      abortSignal,\n    );\n\n    logger.verbose(`[${this._id}] PartitionPump created successfully.`);\n  }\n\n  private async _getStartingPosition(partitionIdToClaim: string): Promise<EventPosition> {\n    const availableCheckpoints = await this._checkpointStore.listCheckpoints(\n      this._fullyQualifiedNamespace,\n      this._eventHubName,\n      this._consumerGroup,\n    );\n\n    const validCheckpoints = availableCheckpoints.filter(\n      (chk) => chk.partitionId === partitionIdToClaim,\n    );\n\n    if (validCheckpoints.length > 0) {\n      return { offset: validCheckpoints[0].offset };\n    }\n\n    logger.verbose(\n      `No checkpoint found for partition ${partitionIdToClaim}. Looking for fallback.`,\n    );\n    return getStartPosition(partitionIdToClaim, this._processorOptions.startPosition);\n  }\n\n  private async _runLoopForSinglePartition(\n    partitionId: string,\n    abortSignal: AbortSignalLike,\n  ): Promise<void> {\n    while (!abortSignal.aborted) {\n      try {\n        await this._startPump(partitionId, abortSignal);\n      } catch (err: any) {\n        logger.warning(\n          `[${this._id}] An error occured within the EventProcessor loop: ${err?.name}: ${err?.message}`,\n        );\n        logErrorStackTrace(err);\n        await this._handleSubscriptionError(err);\n      } finally {\n        // sleep for some time after which we can attempt to create a pump again.\n        logger.verbose(\n          `[${this._id}] Pausing the EventProcessor loop for ${this._loopIntervalInMs} ms.`,\n        );\n        // swallow errors from delay since it's fine for delay to exit early\n        await delayWithoutThrow(this._loopIntervalInMs, abortSignal);\n      }\n    }\n    this._isRunning = false;\n  }\n\n  /**\n   * Every loop to this method will result in this EventProcessor owning at most one new partition.\n   *\n   * The load is considered balanced when no active EventProcessor owns 2 partitions more than any other active\n   * EventProcessor. Given that each invocation to this method results in ownership claim of at most one partition,\n   * this algorithm converges gradually towards a steady state.\n   *\n   * When a new partition is claimed, this method is also responsible for starting a partition pump that creates an\n   * EventHubConsumer for processing events from that partition.\n   */\n  private async _runLoopWithLoadBalancing(\n    loadBalancingStrategy: LoadBalancingStrategy,\n    abortSignal: AbortSignalLike,\n  ): Promise<void> {\n    let cancelLoopResolver;\n    // This provides a mechanism for exiting the loop early\n    // if the subscription has had `close` called.\n    const cancelLoopPromise = new Promise<void>((resolve) => {\n      cancelLoopResolver = resolve;\n      if (abortSignal.aborted) {\n        resolve();\n        return;\n      }\n\n      abortSignal.addEventListener(\"abort\", resolve);\n    });\n\n    // Periodically check if any partitions need to be claimed and claim them.\n    while (!abortSignal.aborted) {\n      const iterationStartTimeInMs = Date.now();\n      try {\n        const { partitionIds } = await this._context.managementSession!.getEventHubProperties({\n          abortSignal: abortSignal,\n        });\n        await this._performLoadBalancing(loadBalancingStrategy, partitionIds, abortSignal);\n      } catch (err: any) {\n        logger.warning(\n          `[${this._id}] An error occurred within the EventProcessor loop: ${err?.name}: ${err?.message}`,\n        );\n        logErrorStackTrace(err);\n        // Protect against the scenario where the user awaits on subscription.close() from inside processError.\n        await Promise.race([this._handleSubscriptionError(err), cancelLoopPromise]);\n      } finally {\n        // Sleep for some time, then continue the loop.\n        const iterationDeltaInMs = Date.now() - iterationStartTimeInMs;\n        const delayDurationInMs = Math.max(this._loopIntervalInMs - iterationDeltaInMs, 0);\n        logger.verbose(\n          `[${this._id}] Pausing the EventProcessor loop for ${delayDurationInMs} ms.`,\n        );\n        // Swallow the error since it's fine to exit early from the delay.\n        await delayWithoutThrow(delayDurationInMs, abortSignal);\n      }\n    }\n\n    if (cancelLoopResolver) {\n      abortSignal.removeEventListener(\"abort\", cancelLoopResolver);\n    }\n    this._isRunning = false;\n  }\n\n  private async _performLoadBalancing(\n    loadBalancingStrategy: LoadBalancingStrategy,\n    partitionIds: string[],\n    abortSignal: AbortSignalLike,\n  ): Promise<void> {\n    if (abortSignal.aborted) throw new AbortError(\"The operation was aborted.\");\n\n    // Retrieve current partition ownership details from the datastore.\n    const partitionOwnership = await this._checkpointStore.listOwnership(\n      this._fullyQualifiedNamespace,\n      this._eventHubName,\n      this._consumerGroup,\n    );\n\n    if (abortSignal.aborted) throw new AbortError(\"The operation was aborted.\");\n\n    const { partitionOwnershipMap, partitionsToClaim } = computePartitionsToClaim({\n      id: this._id,\n      isReceivingFromPartition: (partitionId: string) =>\n        this._pumpManager.isReceivingFromPartition(partitionId),\n      loadBalancingStrategy,\n      partitionIds,\n      partitionOwnership,\n    });\n\n    for (const partitionToClaim of partitionsToClaim) {\n      const partitionOwnershipRequest = this._createPartitionOwnershipRequest(\n        partitionOwnershipMap,\n        partitionToClaim,\n      );\n\n      await this._claimOwnership(partitionOwnershipRequest, abortSignal);\n    }\n  }\n\n  /**\n   * This is called when there are errors that are not specific to a partition (ex: load balancing)\n   */\n  private async _handleSubscriptionError(err: Error): Promise<void> {\n    // filter out any internal \"expected\" errors\n    if (err.name === \"AbortError\") {\n      return;\n    }\n\n    if (this._subscriptionEventHandlers.processError) {\n      try {\n        await this._subscriptionEventHandlers.processError(err, {\n          fullyQualifiedNamespace: this._fullyQualifiedNamespace,\n          eventHubName: this._eventHubName,\n          consumerGroup: this._consumerGroup,\n          partitionId: \"\",\n          updateCheckpoint: async () => {\n            /* no-op */\n          },\n        });\n      } catch (errorFromUser: any) {\n        logger.verbose(\n          `[${this._id}] An error was thrown from the user's processError handler: ${errorFromUser}`,\n        );\n      }\n    }\n  }\n\n  /**\n   * Starts the `EventProcessor`. Based on the number of instances of `EventProcessor` that are running for the\n   * same consumer group, the partitions are distributed among these instances to process events.\n   *\n   * For each partition, the user provided `PartitionProcessor` is instantiated.\n   *\n   * Subsequent calls to start will be ignored if this event processor is already running.\n   * Calling `start()` after `stop()` is called will restart this event processor.\n   *\n   */\n  start(): void {\n    if (this._isRunning) {\n      logger.verbose(`[${this._id}] Attempted to start an already running EventProcessor.`);\n      return;\n    }\n\n    this._isRunning = true;\n    this._abortController = new AbortController();\n    logger.verbose(`[${this._id}] Starting an EventProcessor.`);\n\n    if (this._processingTarget) {\n      logger.verbose(`[${this._id}] Single partition target: ${this._processingTarget}`);\n      this._loopTask = this._runLoopForSinglePartition(\n        this._processingTarget,\n        this._abortController.signal,\n      );\n    } else {\n      logger.verbose(`[${this._id}] Multiple partitions, using load balancer`);\n      this._loopTask = this._runLoopWithLoadBalancing(\n        this._loadBalancingStrategy,\n        this._abortController.signal,\n      );\n    }\n  }\n\n  isRunning(): boolean {\n    return this._isRunning;\n  }\n\n  /**\n   * Stops processing events for all partitions owned by this event processor.\n   * All `PartitionProcessor` will be shutdown and any open resources will be closed.\n   *\n   * Subsequent calls to stop will be ignored if the event processor is not running.\n   *\n   */\n  async stop(): Promise<void> {\n    logger.verbose(`[${this._id}] Stopping an EventProcessor.`);\n    if (this._abortController) {\n      // cancel the event processor loop\n      this._abortController.abort();\n    }\n\n    try {\n      // remove all existing pumps\n      await this._pumpManager.removeAllPumps(CloseReason.Shutdown);\n\n      // waits for the event processor loop to complete\n      // will complete immediately if _loopTask is undefined\n      if (this._loopTask) {\n        await this._loopTask;\n      }\n    } catch (err: any) {\n      logger.verbose(`[${this._id}] An error occured while stopping the EventProcessor: ${err}`);\n    } finally {\n      logger.verbose(`[${this._id}] EventProcessor stopped.`);\n    }\n\n    if (this._processingTarget) {\n      logger.verbose(`[${this._id}] No partitions owned, skipping abandoning.`);\n    } else {\n      await this.abandonPartitionOwnerships();\n    }\n  }\n\n  private async abandonPartitionOwnerships(): Promise<PartitionOwnership[]> {\n    logger.verbose(`[${this._id}] Abandoning owned partitions`);\n    const allOwnerships = await this._checkpointStore.listOwnership(\n      this._fullyQualifiedNamespace,\n      this._eventHubName,\n      this._consumerGroup,\n    );\n    const ourOwnerships = allOwnerships.filter((ownership) => ownership.ownerId === this._id);\n    // unclaim any partitions that we currently own\n    for (const ownership of ourOwnerships) {\n      ownership.ownerId = \"\";\n    }\n    return this._checkpointStore.claimOwnership(ourOwnerships);\n  }\n}\n\nfunction isAbandoned(ownership: PartitionOwnership): boolean {\n  return ownership.ownerId === \"\";\n}\n\nfunction getStartPosition(\n  partitionIdToClaim: string,\n  startPositions?: EventPosition | { [partitionId: string]: EventPosition },\n): EventPosition {\n  if (startPositions == null) {\n    return latestEventPosition;\n  }\n\n  if (isEventPosition(startPositions)) {\n    return startPositions;\n  }\n\n  const startPosition = (startPositions as { [partitionId: string]: EventPosition })[\n    partitionIdToClaim\n  ];\n\n  if (startPosition == null) {\n    return latestEventPosition;\n  }\n\n  return startPosition;\n}\n\nfunction computePartitionsToClaim(inputs: {\n  partitionOwnership: PartitionOwnership[];\n  id: string;\n  isReceivingFromPartition: (id: string) => boolean;\n  loadBalancingStrategy: LoadBalancingStrategy;\n  partitionIds: string[];\n}): {\n  partitionsToClaim: Set<string>;\n  partitionOwnershipMap: Map<string, PartitionOwnership>;\n} {\n  const { partitionOwnership, id, isReceivingFromPartition, loadBalancingStrategy, partitionIds } =\n    inputs;\n\n  const partitionOwnershipMap = new Map<string, PartitionOwnership>();\n  const nonAbandonedPartitionOwnershipMap = new Map<string, PartitionOwnership>();\n  const partitionsToRenew: string[] = [];\n\n  // Separate abandoned ownerships from claimed ownerships.\n  // We only want to pass active partition ownerships to the\n  // load balancer, but we need to hold onto the abandoned\n  // partition ownerships because we need the etag to claim them.\n  for (const ownership of partitionOwnership) {\n    partitionOwnershipMap.set(ownership.partitionId, ownership);\n    if (!isAbandoned(ownership)) {\n      nonAbandonedPartitionOwnershipMap.set(ownership.partitionId, ownership);\n    }\n    if (ownership.ownerId === id && isReceivingFromPartition(ownership.partitionId)) {\n      partitionsToRenew.push(ownership.partitionId);\n    }\n  }\n\n  // Pass the list of all the partition ids and the collection of claimed partition ownerships\n  // to the load balance strategy.\n  // The load balancing strategy only needs to know the full list of partitions,\n  // and which of those are currently claimed.\n  // Since abandoned partitions are no longer claimed, we exclude them.\n  const partitionsToClaim = loadBalancingStrategy.getPartitionsToClaim(\n    id,\n    nonAbandonedPartitionOwnershipMap,\n    partitionIds,\n  );\n  partitionsToClaim.push(...partitionsToRenew);\n\n  return {\n    partitionsToClaim: new Set(partitionsToClaim),\n    partitionOwnershipMap,\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { parseConnectionString } from \"@azure/core-amqp\";\n\n/**\n * The set of properties that comprise an Event Hub connection string.\n */\nexport interface EventHubConnectionStringProperties {\n  /**\n   * The fully qualified Event Hub namespace extracted from the \"Endpoint\" in the\n   * connection string. This is likely to be similar to `{yournamespace}.servicebus.windows.net`.\n   * This is typically used to construct an EventHubProducerClient or an EventHubConsumerClient.\n   */\n  fullyQualifiedNamespace: string;\n  /**\n   * The value for \"Endpoint\" in the connection string.\n   */\n  endpoint: string;\n  /**\n   * The value for \"EntityPath\" in the connection string which would be the name of the event hub instance associated with the connection string.\n   * Connection string from a Shared Access Policy created at the namespace level\n   * will not have the EntityPath in it.\n   */\n  eventHubName?: string;\n  /**\n   * The value for \"SharedAccessKey\" in the connection string. This along with the \"SharedAccessKeyName\"\n   * in the connection string is used to generate a SharedAccessSignature which can be used authorize\n   * the connection to the service.\n   */\n  sharedAccessKey?: string;\n  /**\n   * The value for \"SharedAccessKeyName\" in the connection string. This along with the \"SharedAccessKey\"\n   * in the connection string is used to generate a SharedAccessSignature which can be used authorize\n   * the connection to the service.\n   */\n  sharedAccessKeyName?: string;\n  /**\n   * The value for \"SharedAccessSignature\" in the connection string. This is typically not present in the\n   * connection string generated for a Shared Access Policy. It is instead generated by the\n   * user and appended to the connection string for ease of use.\n   */\n  sharedAccessSignature?: string;\n  /**\n   * This should be true only if the connection string contains the slug \";UseDevelopmentEmulator=true\"\n   * and the endpoint is a loopback address.\n   */\n  useDevelopmentEmulator?: boolean;\n}\n\n/**\n * Parses given connection string into the different properties applicable to Azure Event Hubs.\n * The properties are useful to then construct an EventHubProducerClient or an EventHubConsumerClient.\n * @param connectionString - The connection string associated with the Shared Access Policy created\n * for the Event Hubs namespace.\n */\nexport function parseEventHubConnectionString(\n  connectionString: string,\n): Readonly<EventHubConnectionStringProperties> {\n  const parsedResult = parseConnectionString<{\n    Endpoint: string;\n    EntityPath?: string;\n    SharedAccessSignature?: string;\n    SharedAccessKey?: string;\n    SharedAccessKeyName?: string;\n    UseDevelopmentEmulator?: string;\n  }>(connectionString);\n\n  validateProperties(\n    parsedResult.Endpoint,\n    parsedResult.SharedAccessSignature,\n    parsedResult.SharedAccessKey,\n    parsedResult.SharedAccessKeyName,\n  );\n\n  const output: EventHubConnectionStringProperties = {\n    fullyQualifiedNamespace: (parsedResult.Endpoint.match(\".*://([^/]*)\") || [])[1],\n    endpoint: parsedResult.Endpoint,\n  };\n\n  if (parsedResult.EntityPath) {\n    output.eventHubName = parsedResult.EntityPath;\n  }\n\n  if (parsedResult.SharedAccessSignature) {\n    output.sharedAccessSignature = parsedResult.SharedAccessSignature;\n  }\n\n  if (parsedResult.SharedAccessKey && parsedResult.SharedAccessKeyName) {\n    output.sharedAccessKey = parsedResult.SharedAccessKey;\n    output.sharedAccessKeyName = parsedResult.SharedAccessKeyName;\n  }\n\n  return output;\n}\n\n/**\n * @internal\n */\nfunction validateProperties(\n  endpoint?: string,\n  sharedAccessSignature?: string,\n  sharedAccessKey?: string,\n  sharedAccessKeyName?: string,\n): void {\n  if (!endpoint) {\n    throw new Error(\"Connection string should have an Endpoint key.\");\n  }\n\n  if (sharedAccessSignature) {\n    if (sharedAccessKey || sharedAccessKeyName) {\n      throw new Error(\n        \"Connection string cannot have both SharedAccessSignature and SharedAccessKey keys.\",\n      );\n    }\n  } else if (sharedAccessKey && !sharedAccessKeyName) {\n    throw new Error(\"Connection string with SharedAccessKey should have SharedAccessKeyName.\");\n  } else if (!sharedAccessKey && sharedAccessKeyName) {\n    throw new Error(\n      \"Connection string with SharedAccessKeyName should have SharedAccessKey as well.\",\n    );\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { logErrorStackTrace, logger } from \"../logger\";\nimport { ConnectionContext } from \"../connectionContext\";\nimport { isDefined } from \"@azure/core-util\";\nimport { AmqpError, isAmqpError } from \"rhea-promise\";\nimport { isMessagingError, MessagingError, translate } from \"@azure/core-amqp\";\n\n/**\n * @internal\n * Logs and throws Error if the current AMQP connection is closed.\n * @param context - The ConnectionContext associated with the current AMQP connection.\n */\nexport function throwErrorIfConnectionClosed(context: ConnectionContext): void {\n  if (context && context.wasConnectionCloseCalled) {\n    const errorMessage = \"The underlying AMQP connection is closed.\";\n    const error = new Error(errorMessage);\n    logger.warning(`[${context.connectionId}] ${error.name}: ${error.message}`);\n    logErrorStackTrace(error);\n    throw error;\n  }\n}\n\n/**\n * @internal\n * Logs and Throws TypeError if given parameter is undefined or null\n * @param connectionId - Id of the underlying AMQP connection used for logging\n * @param methodName - Name of the method that was passed the parameter\n * @param parameterName - Name of the parameter to check\n * @param parameterValue - Value of the parameter to check\n */\nexport function throwTypeErrorIfParameterMissing(\n  connectionId: string,\n  methodName: string,\n  parameterName: string,\n  parameterValue: unknown,\n): void {\n  if (!isDefined(parameterValue)) {\n    const error = new TypeError(\n      `${methodName} called without required argument \"${parameterName}\"`,\n    );\n    logger.warning(`[${connectionId}] ${error.name}: ${error.message}`);\n    logErrorStackTrace(error);\n    throw error;\n  }\n}\n\n/**\n * Maps the amqp error conditions to the Error names.\n * @internal\n */\nenum ConditionErrorNameMapper {\n  /**\n   * Indicates that a sequenc enumber was out of order.\n   */\n  \"com.microsoft:out-of-order-sequence\" = \"SequenceOutOfOrderError\",\n  /**\n   * Error is thrown when two or more instances connect to the same partition\n   * with different epoch values.\n   */\n  \"com.microsoft:producer-epoch-stolen\" = \"ProducerDisconnectedError\",\n}\n\n/**\n * @internal\n */\nconst nonRetryableErrors: Set<string> = new Set([\n  \"ProducerDisconnectedError\",\n  \"SequenceOutOfOrderError\",\n]);\n\n/**\n * @internal\n */\nexport function translateError(err: AmqpError | Error): MessagingError | Error {\n  const translatedError = translate(err);\n  // If we're not dealing with a messaging error, or the original error wasn't an AMQP error,\n  // or we have a resolved code on the messaging error, just return the translated error.\n  if (!isMessagingError(translatedError) || !isAmqpError(err) || translatedError.code) {\n    return translatedError;\n  }\n\n  const amqpError = err as AmqpError;\n  const condition = amqpError.condition;\n\n  // If we don't have a condition, we can't map the condition to a code.\n  if (!condition) {\n    return translatedError;\n  }\n\n  // Attempt to resolve codes core-amqp doesn't know about.\n  translatedError.code =\n    ConditionErrorNameMapper[condition as keyof typeof ConditionErrorNameMapper];\n  if (translatedError.code) {\n    translatedError.retryable = !nonRetryableErrors.has(translatedError.code);\n  }\n\n  return translatedError;\n}\n\n/**\n * @internal\n */\nexport const idempotentAlreadyPublished =\n  \"These events have already been successfully published. When idempotent publishing is enabled, events that were acknowledged by the Event Hubs service may not be published again.\";\n\n/**\n * @internal\n */\nexport const idempotentSomeAlreadyPublished =\n  \"1 or more of these events have already been successfully published. When idempotent publishing is enabled, events that were acknowledged by the Event Hubs service may not be published again.\";\n\n/**\n * @internal\n */\nexport function validateProducerPartitionSettings({\n  enableIdempotentRetries,\n  partitionId,\n  partitionKey,\n}: {\n  enableIdempotentRetries?: boolean;\n  partitionId?: string;\n  partitionKey?: string;\n}): void {\n  if (enableIdempotentRetries && (isDefined(partitionKey) || !isDefined(partitionId))) {\n    throw new Error(\n      `The \"partitionId\" must be supplied and \"partitionKey\" must not be provided when the EventHubProducerClient has \"enableIdempotentRetries\" set to true.`,\n    );\n  }\n\n  if (isDefined(partitionId) && isDefined(partitionKey)) {\n    throw new Error(\n      `The partitionId (${partitionId}) and partitionKey (${partitionKey}) cannot both be specified.`,\n    );\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  Constants,\n  RequestResponseLink,\n  RetryConfig,\n  RetryOperationType,\n  RetryOptions,\n  SendRequestOptions,\n  defaultCancellableLock,\n  isSasTokenProvider,\n  retry,\n  translate,\n} from \"@azure/core-amqp\";\nimport {\n  EventContext,\n  Message,\n  ReceiverEvents,\n  ReceiverOptions,\n  SenderEvents,\n  SenderOptions,\n} from \"rhea-promise\";\nimport {\n  logErrorStackTrace,\n  createSimpleLogger,\n  logger,\n  SimpleLogger,\n  createManagementLogPrefix,\n} from \"./logger\";\nimport { throwErrorIfConnectionClosed, throwTypeErrorIfParameterMissing } from \"./util/error\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { AccessToken } from \"@azure/core-auth\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { OperationOptions } from \"./util/operationOptions\";\nimport { toSpanOptions, tracingClient } from \"./diagnostics/tracing\";\nimport { getRetryAttemptTimeoutInMs } from \"./util/retries\";\nimport { TimerLoop } from \"./util/timerLoop\";\nimport { withAuth } from \"./withAuth\";\nimport { getRandomName } from \"./util/utils\";\n\n/**\n * Describes the runtime information of an Event Hub.\n */\nexport interface EventHubProperties {\n  /**\n   * The name of the event hub.\n   */\n  name: string;\n  /**\n   * The date and time the hub was created in UTC.\n   */\n  createdOn: Date;\n  /**\n   * The slice of string partition identifiers.\n   */\n  partitionIds: string[];\n}\n\n/**\n * Describes the runtime information of an EventHub Partition.\n */\nexport interface PartitionProperties {\n  /**\n   * The name of the Event Hub.\n   */\n  eventHubName: string;\n  /**\n   * Identifier of the partition within the Event Hub.\n   */\n  partitionId: string;\n  /**\n   * The starting sequence number of the partition's message log.\n   */\n  beginningSequenceNumber: number;\n  /**\n   * The last sequence number of the partition's message log.\n   */\n  lastEnqueuedSequenceNumber: number;\n  /**\n   * The offset of the last enqueued message in the partition's message log.\n   */\n  lastEnqueuedOffset: number;\n  /**\n   * The time of the last enqueued message in the partition's message log in UTC.\n   */\n  lastEnqueuedOnUtc: Date;\n  /**\n   * Indicates whether the partition is empty.\n   */\n  isEmpty: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ManagementClientOptions {\n  address?: string;\n  audience?: string;\n}\n\n/**\n * @internal\n * Describes the EventHubs Management Client that talks\n * to the $management endpoint over AMQP connection.\n */\nexport class ManagementClient {\n  readonly managementLock: string = getRandomName(Constants.managementRequestKey);\n  /**\n   * The name/path of the entity (hub name) for which the management\n   * request needs to be made.\n   */\n  private readonly entityPath: string;\n  /**\n   * The reply to Guid for the management client.\n   */\n  private readonly replyTo: string = getRandomName();\n  /**\n   * $management sender, receiver on the same session.\n   */\n  private _mgmtReqResLink?: RequestResponseLink;\n  /**\n   * The address in the following form:\n   * `\"$management\"`.\n   */\n  private readonly address: string;\n  /**\n   * The token audience in the following form:\n   * `\"sb://<your-namespace>.servicebus.windows.net/<event-hub-name>/$management\"`.\n   */\n  private readonly audience: string;\n  /**\n   * Provides relevant information about the amqp connection,\n   * cbs and $management sessions, token provider, sender and receivers.\n   */\n  private readonly _context: ConnectionContext;\n  /**\n   * The authentication loop that keeps the token refreshed.\n   */\n  private authLoop?: TimerLoop;\n  private readonly logger: SimpleLogger;\n\n  /**\n   * Instantiates the management client.\n   * @param context - The connection context.\n   * @param address - The address for the management endpoint. For IotHub it will be\n   * `/messages/events/$management`.\n   */\n  constructor(context: ConnectionContext, { address, audience }: ManagementClientOptions = {}) {\n    this.address = address ?? Constants.management;\n    this.audience = audience ?? context.config.getManagementAudience();\n    this._context = context;\n    const logPrefix = createManagementLogPrefix(this._context.connectionId);\n    this.logger = createSimpleLogger(logger, logPrefix);\n    this.entityPath = context.config.entityPath as string;\n  }\n\n  /**\n   * Gets the security token for the management application properties.\n   * @internal\n   */\n  async getSecurityToken(): Promise<AccessToken | null> {\n    if (isSasTokenProvider(this._context.tokenCredential)) {\n      // the security_token has the $management address removed from the end of the audience\n      // expected audience: sb://fully.qualified.namespace/event-hub-name/$management\n      const audienceParts = this.audience.split(\"/\");\n      // for management links, address should be '$management'\n      if (audienceParts[audienceParts.length - 1] === this.address) {\n        audienceParts.pop();\n      }\n      const audience = audienceParts.join(\"/\");\n      return this._context.tokenCredential.getToken(audience);\n    }\n\n    // aad credentials use the aad scope\n    return this._context.tokenCredential.getToken(Constants.aadEventHubsScope);\n  }\n\n  /**\n   * Provides the eventhub runtime information.\n   */\n  async getEventHubProperties(\n    options: OperationOptions & { retryOptions?: RetryOptions } = {},\n  ): Promise<EventHubProperties> {\n    throwErrorIfConnectionClosed(this._context);\n    return tracingClient.withSpan(\n      \"ManagementClient.getEventHubProperties\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const securityToken = await this.getSecurityToken();\n\n          const request: Message = {\n            body: Buffer.from(JSON.stringify([])),\n            message_id: getRandomName(),\n            reply_to: this.replyTo,\n            application_properties: {\n              operation: Constants.readOperation,\n              name: this.entityPath as string,\n              type: `${Constants.vendorString}:${Constants.eventHub}`,\n              security_token: securityToken?.token,\n            },\n          };\n\n          const info: any = await this._makeManagementRequest(request, {\n            ...updatedOptions,\n            requestName: \"getHubRuntimeInformation\",\n          });\n          const runtimeInfo: EventHubProperties = {\n            name: info.name,\n            createdOn: new Date(info.created_at),\n            partitionIds: info.partition_ids,\n          };\n          logger.verbose(\"the hub runtime info is: %O\", runtimeInfo);\n\n          return runtimeInfo;\n        } catch (error: any) {\n          logger.warning(\n            `an error occurred while getting the hub runtime information: ${error?.name}: ${error?.message}`,\n          );\n          logErrorStackTrace(error);\n          throw error;\n        }\n      },\n      toSpanOptions(this._context.config),\n    );\n  }\n\n  /**\n   * Provides information about the specified partition.\n   * @param partitionId - Partition ID for which partition information is required.\n   */\n  async getPartitionProperties(\n    partitionId: string,\n    options: OperationOptions & { retryOptions?: RetryOptions } = {},\n  ): Promise<PartitionProperties> {\n    throwErrorIfConnectionClosed(this._context);\n    throwTypeErrorIfParameterMissing(\n      this._context.connectionId,\n      \"getPartitionProperties\",\n      \"partitionId\",\n      partitionId,\n    );\n    partitionId = String(partitionId);\n\n    return tracingClient.withSpan(\n      \"ManagementClient.getPartitionProperties\",\n      options,\n      async (updatedOptions) => {\n        try {\n          const securityToken = await this.getSecurityToken();\n          const request: Message = {\n            body: Buffer.from(JSON.stringify([])),\n            message_id: getRandomName(),\n            reply_to: this.replyTo,\n            application_properties: {\n              operation: Constants.readOperation,\n              name: this.entityPath as string,\n              type: `${Constants.vendorString}:${Constants.partition}`,\n              partition: `${partitionId}`,\n              security_token: securityToken?.token,\n            },\n          };\n\n          const info: any = await this._makeManagementRequest(request, {\n            ...updatedOptions,\n            requestName: \"getPartitionInformation\",\n          });\n\n          const partitionInfo: PartitionProperties = {\n            beginningSequenceNumber: info.begin_sequence_number,\n            eventHubName: info.name,\n            lastEnqueuedOffset: info.last_enqueued_offset,\n            lastEnqueuedOnUtc: new Date(info.last_enqueued_time_utc),\n            lastEnqueuedSequenceNumber: info.last_enqueued_sequence_number,\n            partitionId: info.partition,\n            isEmpty: info.is_partition_empty,\n          };\n          logger.verbose(\"the partition info is: %O.\", partitionInfo);\n          return partitionInfo;\n        } catch (error: any) {\n          logger.warning(\n            `an error occurred while getting the partition information: ${error?.name}: ${error?.message}`,\n          );\n          logErrorStackTrace(error);\n          throw error;\n        }\n      },\n      toSpanOptions(this._context.config),\n    );\n  }\n\n  /**\n   * Closes the AMQP management session to the Event Hub for this client,\n   * returning a promise that will be resolved when disconnection is completed.\n   */\n  async close(): Promise<void> {\n    try {\n      // Always stop the auth loop when closing the management link.\n      this.authLoop?.stop();\n      if (this._isMgmtRequestResponseLinkOpen()) {\n        const mgmtLink = this._mgmtReqResLink;\n        this._mgmtReqResLink = undefined;\n        await mgmtLink!.close();\n        logger.info(\"successfully closed the management session.\");\n      }\n    } catch (err: any) {\n      const msg = `an error occurred while closing the management session: ${err?.name}: ${err?.message}`;\n      logger.warning(msg);\n      logErrorStackTrace(err);\n      throw new Error(msg);\n    }\n  }\n\n  private async _init({\n    abortSignal,\n    timeoutInMs,\n  }: {\n    abortSignal: AbortSignalLike | undefined;\n    timeoutInMs: number;\n  }): Promise<void> {\n    const createLink = async () => {\n      const rxopt: ReceiverOptions = {\n        source: { address: this.address },\n        name: this.replyTo,\n        target: { address: this.replyTo },\n        onSessionError: (context: EventContext) => {\n          const ehError = translate(context.session!.error!);\n          logger.verbose(\n            \"an error occurred on the session for request/response links for \" + \"$management: %O\",\n            ehError,\n          );\n        },\n      };\n      const sropt: SenderOptions = {\n        target: { address: this.address },\n      };\n      logger.verbose(\n        \"creating sender/receiver links with \" + \"srOpts: %o, receiverOpts: %O.\",\n        sropt,\n        rxopt,\n      );\n      this._mgmtReqResLink = await RequestResponseLink.create(\n        this._context.connection,\n        sropt,\n        rxopt,\n        { abortSignal },\n      );\n      this._mgmtReqResLink.sender.on(SenderEvents.senderError, (context: EventContext) => {\n        const ehError = translate(context.sender!.error!);\n        logger.verbose(\"an error occurred on the $management sender link.. %O\", ehError);\n      });\n      this._mgmtReqResLink.receiver.on(ReceiverEvents.receiverError, (context: EventContext) => {\n        const ehError = translate(context.receiver!.error!);\n        logger.verbose(\"an error occurred on the $management receiver link.. %O\", ehError);\n      });\n      logger.verbose(\n        \"created sender '%s' and receiver '%s' links\",\n        this._mgmtReqResLink.sender.name,\n        this._mgmtReqResLink.receiver.name,\n      );\n    };\n    try {\n      if (!this._isMgmtRequestResponseLinkOpen()) {\n        // Wait for the connectionContext to be ready to open the link.\n        await this._context.readyToOpenLink();\n        this.authLoop = await withAuth(\n          createLink,\n          this._context,\n          this.audience,\n          timeoutInMs,\n          this.logger,\n          { abortSignal },\n        );\n      }\n    } catch (err) {\n      const translatedError = translate(err);\n      logger.warning(\n        `an error occurred while establishing the links: ${translatedError?.name}: ${translatedError?.message}`,\n      );\n      logErrorStackTrace(translatedError);\n      throw translatedError;\n    }\n  }\n\n  /**\n   * Helper method to make the management request\n   * @param request - The AMQP message to send\n   * @param options - The options to use when sending a request over a $management link\n   */\n  private async _makeManagementRequest(\n    request: Message,\n    options: {\n      retryOptions?: RetryOptions;\n      abortSignal?: AbortSignalLike;\n      requestName?: string;\n    } = {},\n  ): Promise<any> {\n    const retryOptions = options.retryOptions || {};\n    try {\n      const abortSignal: AbortSignalLike | undefined = options && options.abortSignal;\n\n      const sendOperationPromise = async (): Promise<Message> => {\n        let count = 0;\n\n        const retryTimeoutInMs = getRetryAttemptTimeoutInMs(options.retryOptions);\n        let timeTakenByInit = 0;\n\n        if (!this._isMgmtRequestResponseLinkOpen()) {\n          logger.verbose(\"acquiring lock to get the management req res link.\");\n\n          const initOperationStartTime = Date.now();\n          try {\n            await defaultCancellableLock.acquire(\n              this.managementLock,\n              () => {\n                const acquireLockEndTime = Date.now();\n                const timeoutInMs =\n                  retryTimeoutInMs - (acquireLockEndTime - initOperationStartTime);\n                return this._init({ abortSignal, timeoutInMs });\n              },\n              { abortSignal, timeoutInMs: retryTimeoutInMs },\n            );\n          } catch (err) {\n            const translatedError = translate(err);\n            logger.warning(\n              \"an error occurred while creating the link: %s\",\n              `${translatedError?.name}: ${translatedError?.message}`,\n            );\n            logErrorStackTrace(translatedError);\n            throw translatedError;\n          }\n          timeTakenByInit = Date.now() - initOperationStartTime;\n        }\n\n        const remainingOperationTimeoutInMs = retryTimeoutInMs - timeTakenByInit;\n\n        const sendRequestOptions: SendRequestOptions = {\n          abortSignal: options.abortSignal,\n          requestName: options.requestName,\n          timeoutInMs: remainingOperationTimeoutInMs,\n        };\n\n        count++;\n        if (count !== 1) {\n          // Generate a new message_id every time after the first attempt\n          request.message_id = getRandomName();\n        } else if (!request.message_id) {\n          // Set the message_id in the first attempt only if it is not set\n          request.message_id = getRandomName();\n        }\n\n        return this._mgmtReqResLink!.sendRequest(request, sendRequestOptions);\n      };\n\n      const config: RetryConfig<Message> = Object.defineProperties(\n        {\n          operation: sendOperationPromise,\n          operationType: RetryOperationType.management,\n          abortSignal: abortSignal,\n          retryOptions: retryOptions,\n        },\n        {\n          connectionId: {\n            enumerable: true,\n            get: () => {\n              return this._context.connectionId;\n            },\n          },\n        },\n      ) as RetryConfig<Message>;\n      return (await retry<Message>(config)).body;\n    } catch (err) {\n      const translatedError = translate(err);\n      logger.warning(\n        \"an error occurred during send on management request-response link with address: %s\",\n        `${translatedError?.name}: ${translatedError?.message}`,\n      );\n      logErrorStackTrace(translatedError);\n      throw translatedError;\n    }\n  }\n\n  private _isMgmtRequestResponseLinkOpen(): boolean {\n    return this._mgmtReqResLink! && this._mgmtReqResLink!.isOpen();\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Parses the host, hostname, and port from an endpoint.\n * @param endpoint - And endpoint to parse.\n * @internal\n */\nexport function parseEndpoint(endpoint: string): { host: string; hostname: string; port?: string } {\n  const hostMatch = endpoint.match(/.*:\\/\\/([^/]*)/);\n  if (!hostMatch) {\n    throw new TypeError(`Invalid endpoint missing host: ${endpoint}`);\n  }\n\n  const [, host] = hostMatch;\n  const [hostname, port] = host.split(\":\");\n\n  return { host, hostname, port };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\nimport { ConnectionConfig } from \"@azure/core-amqp\";\nimport { parseEndpoint } from \"./util/parseEndpoint\";\n\n/**\n * Describes the connection config object that is created after parsing an EventHub connection\n * string. It also provides some convenience methods for getting the address and audience for\n * different entities.\n * @internal\n */\nexport interface EventHubConnectionConfig extends ConnectionConfig {\n  /**\n   * The name/path of the entity (event hub name) to which the\n   * connection needs to happen.\n   */\n  entityPath: string;\n  /**\n   * Provides the EventHub Sender address in one of the following forms based on the input:\n   * - `\"<hubName>\"`\n   * - `\"<hubName>/Partitions/<partitionId>\"`\n   *\n   * @param partitionId - The partitionId in the EventHub to which messages will be sent.\n   */\n  getSenderAddress(partitionId?: string | number): string;\n  /**\n   * Provides the EventHub Sender audience in one of the following forms based on the input:\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>\"`\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>\"`\n   *\n   * @param partitionId - The partitionId in the EventHub to which messages will be sent.\n   */\n  getSenderAudience(partitionId?: string | number): string;\n  /**\n   * Provides the EventHub Receiver address:\n   * - `\"<hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`\n   *\n   * @param partitionId - The partitionId in the EventHub from which messages will be received.\n   * @param consumergroup - The consumergroup in the EventHub from which the messages will\n   * be received. Default: `$default`.\n   */\n  getReceiverAddress(partitionId: string | number, consumergroup?: string): string;\n  /**\n   * Provides the EventHub Receiver audience.\n   * - `\"sb://<your-namespace>.servicebus.windows.net/<hub-name>/ConsumerGroups/<consumer-group-name>/Partitions/<partition-id>\"`\n   *\n   * @param partitionId - The partitionId in the EventHub from which messages will be received.\n   * @param consumergroup - The consumergroup in the EventHub from which the messages will\n   * be received. Default: `$default`.\n   */\n  getReceiverAudience(partitionId: string | number, consumergroup?: string): string;\n  /**\n   * Provides the EventHub Management address.\n   * - `\"<hub-name>/$management\"`\n   */\n  getManagementAddress(): string;\n  /**\n   * Provides the EventHub Management audience.\n   * - `\"sb://<your-namespace>.servicebus.windows.net/<hub-name>/$management\"`\n   */\n  getManagementAudience(): string;\n}\n\n/**\n * Describes the connection config object that is created after parsing an EventHub connection\n * string. It also provides some convenience methods for getting the address and audience for\n * different entities.\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- renaming constant would be a breaking change.\nexport const EventHubConnectionConfig = {\n  /**\n   * Creates the connection config.\n   * @param connectionString - The connection string for a given service like\n   * EventHub/ServiceBus.\n   * @param path - The name/path of the entity (hub name) to which the\n   * connection needs to happen. This will override the EntityPath in the connectionString\n   * if present.\n   * @returns EventHubConnectionConfig\n   */\n  create(connectionString: string, path?: string): EventHubConnectionConfig {\n    const config = ConnectionConfig.create(connectionString, path);\n    if (!config.entityPath) {\n      throw new TypeError(\n        `Either provide \"path\" or the \"connectionString\": \"${connectionString}\", ` +\n          `must contain EntityPath=\"<path-to-the-entity>\".`,\n      );\n    }\n    return EventHubConnectionConfig.createFromConnectionConfig(config);\n  },\n\n  /**\n   * Creates an EventHubConnectionConfig from the provided base ConnectionConfig.\n   * @param config - The base connection config from which the EventHubConnectionConfig needs to be\n   * created.\n   * @returns EventHubConnectionConfig\n   */\n  createFromConnectionConfig(config: ConnectionConfig): EventHubConnectionConfig {\n    ConnectionConfig.validate(config, { isEntityPathRequired: true });\n\n    (config as EventHubConnectionConfig).getManagementAudience = () => {\n      return `${config.endpoint}${config.entityPath}/$management`;\n    };\n    (config as EventHubConnectionConfig).getManagementAddress = () => {\n      return `${config.entityPath}/$management`;\n    };\n\n    (config as EventHubConnectionConfig).getSenderAudience = (partitionId?: string | number) => {\n      if (partitionId != undefined) {\n        return `${config.endpoint}${config.entityPath}/Partitions/${partitionId}`;\n      } else {\n        return `${config.endpoint}${config.entityPath}`;\n      }\n    };\n\n    (config as EventHubConnectionConfig).getSenderAddress = (partitionId?: string | number) => {\n      if (partitionId != undefined) {\n        return `${config.entityPath}/Partitions/${partitionId}`;\n      } else {\n        return `${config.entityPath}`;\n      }\n    };\n\n    (config as EventHubConnectionConfig).getReceiverAudience = (\n      partitionId: string | number,\n      consumergroup?: string,\n    ) => {\n      if (!consumergroup) consumergroup = \"$default\";\n      return (\n        `${config.endpoint}${config.entityPath}/ConsumerGroups/${consumergroup}/` +\n        `Partitions/${partitionId}`\n      );\n    };\n\n    (config as EventHubConnectionConfig).getReceiverAddress = (\n      partitionId: string | number,\n      consumergroup?: string,\n    ) => {\n      if (!consumergroup) consumergroup = \"$default\";\n      return `${config.entityPath}/ConsumerGroups/${consumergroup}/Partitions/${partitionId}`;\n    };\n    return config as EventHubConnectionConfig;\n  },\n\n  /**\n   * Updates the provided EventHubConnectionConfig to use the custom endpoint address.\n   * @param config - An existing connection configuration to be updated.\n   * @param customEndpointAddress - The custom endpoint address to use.\n   */\n  setCustomEndpointAddress(config: EventHubConnectionConfig, customEndpointAddress: string): void {\n    // The amqpHostname should match the host prior to using the custom endpoint.\n    config.amqpHostname = config.host;\n    const { hostname, port } = parseEndpoint(customEndpointAddress);\n    // Since we specify the port separately, set host to the customEndpointAddress hostname.\n    config.host = hostname;\n    if (port) {\n      config.port = parseInt(port, 10);\n    }\n  },\n\n  /**\n   * Validates the properties of connection config.\n   * @param config - The connection config to be validated.\n   * @returns void\n   */\n  validate(config: EventHubConnectionConfig): void {\n    return ConnectionConfig.validate(config, { isEntityPathRequired: true });\n  },\n};\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as os from \"os\";\n\n/**\n * Returns information about the platform this function is being run on.\n * @internal\n */\nexport function getRuntimeInfo(): string {\n  return `NODE-VERSION ${process.version}; ${os.type()} ${os.release()}`;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  NamedKeyCredential,\n  SASCredential,\n  TokenCredential,\n  isNamedKeyCredential,\n  isSASCredential,\n  isTokenCredential,\n} from \"@azure/core-auth\";\n\n/**\n * Typeguard that checks if the input is a credential type the clients accept.\n * @param thing - Any object.\n * @internal\n */\nexport function isCredential(\n  thing: unknown,\n): thing is TokenCredential | NamedKeyCredential | SASCredential {\n  return isTokenCredential(thing) || isNamedKeyCredential(thing) || isSASCredential(thing);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-inner-declarations */\n\nimport { Connection, ConnectionEvents, Dictionary, EventContext, OnAmqpEvent } from \"rhea-promise\";\nimport {\n  ConnectionConfig,\n  ConnectionContextBase,\n  Constants,\n  CreateConnectionContextBaseParameters,\n  SasTokenProvider,\n  createSasTokenProvider,\n} from \"@azure/core-amqp\";\nimport {\n  EventHubConnectionStringProperties,\n  parseEventHubConnectionString,\n} from \"./util/connectionStringUtils\";\nimport { ManagementClient, ManagementClientOptions } from \"./managementClient\";\nimport {\n  NamedKeyCredential,\n  SASCredential,\n  TokenCredential,\n  isNamedKeyCredential,\n  isSASCredential,\n} from \"@azure/core-auth\";\nimport { logErrorStackTrace, logger } from \"./logger\";\nimport { EventHubClientOptions } from \"./models/public\";\nimport { EventHubConnectionConfig } from \"./eventhubConnectionConfig\";\nimport { PartitionReceiver } from \"./partitionReceiver\";\nimport { EventHubSender } from \"./eventHubSender\";\nimport { getRuntimeInfo } from \"./util/runtimeInfo\";\nimport { isCredential } from \"./util/typeGuards\";\nimport { packageJsonInfo } from \"./util/constants\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { createAbortablePromise } from \"@azure/core-util\";\n\n/**\n * @internal\n * Provides contextual information like the underlying amqp connection, cbs session, management session,\n * tokenProvider, senders, receivers, etc. about the EventHub client.\n */\nexport interface ConnectionContext extends ConnectionContextBase {\n  /**\n   * The EventHub connection config that is created after\n   * parsing the connection string.\n   */\n  readonly config: EventHubConnectionConfig;\n  /**\n   * The credential to be used for Authentication.\n   * Default value: SasTokenProvider.\n   */\n  tokenCredential: SasTokenProvider | TokenCredential;\n  /**\n   * Indicates whether the close() method was\n   * called on theconnection object.\n   */\n  wasConnectionCloseCalled: boolean;\n  /**\n   * A dictionary of the EventHub Receivers associated with this client.\n   */\n  receivers: Dictionary<PartitionReceiver>;\n  /**\n   * A dictionary of the EventHub Senders associated with this client.\n   */\n  senders: Dictionary<EventHubSender>;\n  /**\n   * A reference to the management session ($management endpoint) on\n   * the underlying amqp connection for the EventHub Client.\n   */\n  managementSession?: ManagementClient;\n  /**\n   * Function returning a promise that resolves once the connectionContext is ready to open an AMQP link.\n   * ConnectionContext will be ready to open an AMQP link when:\n   * - The AMQP connection is already open on both sides.\n   * - The AMQP connection has been closed or disconnected. In this case, a new AMQP connection is expected\n   * to be created first.\n   * An AMQP link cannot be opened if the AMQP connection\n   * is in the process of closing or disconnecting.\n   */\n  readyToOpenLink(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Closes all AMQP links, sessions and connection.\n   */\n  close(): Promise<void>;\n}\n\n/**\n * Describes the members on the ConnectionContext that are only\n * used by it internally.\n * @internal\n */\nexport interface ConnectionContextInternalMembers extends ConnectionContext {\n  /**\n   * Indicates whether the connection is in the process of closing.\n   * When this returns `true`, a `disconnected` event will be received\n   * after the connection is closed.\n   *\n   */\n  isConnectionClosing(): boolean;\n  /**\n   * Resolves once the context's connection emits a `disconnected` event.\n   */\n  waitForDisconnectedEvent(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Resolves once the connection has finished being reset.\n   * Connections are reset as part of reacting to a `disconnected` event.\n   */\n  waitForConnectionReset(): Promise<void>;\n}\n\n/**\n * @internal\n */\nexport interface ConnectionContextOptions extends EventHubClientOptions {\n  managementSessionAddress?: string;\n  managementSessionAudience?: string;\n}\n\n/**\n * Helper type to get the names of all the functions on an object.\n */\ntype FunctionPropertyNames<T> = { [K in keyof T]: T[K] extends Function ? K : never }[keyof T]; // eslint-disable-line @typescript-eslint/ban-types\n/**\n * Helper type to get the types of all the functions on an object.\n */\ntype FunctionProperties<T> = Pick<T, FunctionPropertyNames<T>>;\n/**\n * Helper type to get the types of all the functions on ConnectionContext\n * and the internal methods from ConnectionContextInternalMembers.\n * Note that this excludes the functions that ConnectionContext inherits.\n * Each function also has its `this` type set as `ConnectionContext`.\n */\ntype ConnectionContextMethods = Omit<\n  FunctionProperties<ConnectionContextInternalMembers>,\n  FunctionPropertyNames<ConnectionContextBase>\n> &\n  ThisType<ConnectionContextInternalMembers>;\n\n/**\n * @internal\n */\nexport namespace ConnectionContext {\n  /**\n   * The user agent string for the EventHubs client.\n   * See guideline at https://github.com/Azure/azure-sdk/blob/main/docs/design/Telemetry.mdk\n   */\n  const userAgent: string = `azsdk-js-azureeventhubs/${\n    packageJsonInfo.version\n  } (${getRuntimeInfo()})`;\n\n  export function getUserAgent(options: ConnectionContextOptions): string {\n    const finalUserAgent = options.userAgent ? `${userAgent},${options.userAgent}` : userAgent;\n    if (finalUserAgent.length > Constants.maxUserAgentLength) {\n      throw new Error(\n        `The user-agent string cannot be more than ${Constants.maxUserAgentLength} characters in length.` +\n          `The given user-agent string is: ${finalUserAgent} with length: ${finalUserAgent.length}`,\n      );\n    }\n    return finalUserAgent;\n  }\n\n  export function create(\n    config: EventHubConnectionConfig,\n    tokenCredential: SasTokenProvider | TokenCredential,\n    options?: ConnectionContextOptions,\n  ): ConnectionContext {\n    if (!options) options = {};\n\n    config.webSocket = options.webSocketOptions && options.webSocketOptions.webSocket;\n    config.webSocketEndpointPath = \"$servicebus/websocket\";\n    config.webSocketConstructorOptions =\n      options.webSocketOptions && options.webSocketOptions.webSocketConstructorOptions;\n\n    const parameters: CreateConnectionContextBaseParameters = {\n      config: config,\n      // re-enabling this will be a post-GA discussion.\n      // dataTransformer: options.dataTransformer,\n      isEntityPathRequired: true,\n      connectionProperties: {\n        product: \"MSJSClient\",\n        userAgent: getUserAgent(options),\n        version: packageJsonInfo.version,\n      },\n    };\n    // Let us create the base context and then add EventHub specific ConnectionContext properties.\n    const connectionContext = ConnectionContextBase.create(parameters) as ConnectionContext;\n    connectionContext.tokenCredential = tokenCredential;\n    connectionContext.wasConnectionCloseCalled = false;\n    connectionContext.senders = {};\n    connectionContext.receivers = {};\n    const mOptions: ManagementClientOptions = {\n      address: options.managementSessionAddress,\n      audience: options.managementSessionAudience,\n    };\n    connectionContext.managementSession = new ManagementClient(connectionContext, mOptions);\n\n    let waitForConnectionRefreshResolve: () => void;\n    let waitForConnectionRefreshPromise: Promise<void> | undefined;\n\n    Object.assign<ConnectionContext, ConnectionContextMethods>(connectionContext, {\n      isConnectionClosing() {\n        // When the connection is not open, but the remote end is open,\n        // then the rhea connection is in the process of terminating.\n        return Boolean(!this.connection.isOpen() && this.connection.isRemoteOpen());\n      },\n      async readyToOpenLink(optionsArg?: { abortSignal?: AbortSignalLike }) {\n        // Check that the connection isn't in the process of closing.\n        // This can happen when the idle timeout has been reached but\n        // the underlying socket is waiting to be destroyed.\n        if (this.isConnectionClosing()) {\n          // Wait for the disconnected event that indicates the underlying socket has closed.\n          await this.waitForDisconnectedEvent(optionsArg);\n        }\n\n        // Wait for the connection to be reset.\n        await this.waitForConnectionReset();\n      },\n      waitForDisconnectedEvent(optionsArg?: { abortSignal?: AbortSignalLike }) {\n        return createAbortablePromise((resolve) => {\n          logger.verbose(\n            `[${this.connectionId}] Attempting to reinitialize connection` +\n              ` but the connection is in the process of closing.` +\n              ` Waiting for the disconnect event before continuing.`,\n          );\n          this.connection.once(ConnectionEvents.disconnected, resolve);\n        }, optionsArg);\n      },\n      waitForConnectionReset() {\n        // Check if the connection is currently in the process of disconnecting.\n        if (waitForConnectionRefreshPromise) {\n          return waitForConnectionRefreshPromise;\n        }\n        return Promise.resolve();\n      },\n      async close() {\n        try {\n          if (this.connection.isOpen()) {\n            // Close all the senders.\n            await Promise.all(\n              Object.keys(connectionContext.senders).map((name) =>\n                connectionContext.senders[name]?.close().catch(() => {\n                  /* error already logged, swallow it here */\n                }),\n              ),\n            );\n            // Close all the receivers.\n            await Promise.all(\n              Object.keys(connectionContext.receivers).map((name) =>\n                connectionContext.receivers[name]?.close().catch(() => {\n                  /* error already logged, swallow it here */\n                }),\n              ),\n            );\n            // Close the cbs session;\n            await this.cbsSession.close();\n            // Close the management session\n            await this.managementSession?.close();\n            await this.connection.close();\n            this.wasConnectionCloseCalled = true;\n            logger.info(\"Closed the amqp connection '%s' on the client.\", this.connectionId);\n          }\n        } catch (err: any) {\n          const errorDescription =\n            err instanceof Error ? `${err.name}: ${err.message}` : JSON.stringify(err);\n          logger.warning(\n            `An error occurred while closing the connection \"${this.connectionId}\":\\n${errorDescription}`,\n          );\n          logErrorStackTrace(err);\n          throw err;\n        }\n      },\n    });\n\n    // Define listeners to be added to the connection object for\n    // \"connection_open\" and \"connection_error\" events.\n    const onConnectionOpen: OnAmqpEvent = () => {\n      connectionContext.wasConnectionCloseCalled = false;\n      logger.verbose(\n        \"[%s] setting 'wasConnectionCloseCalled' property of connection context to %s.\",\n        connectionContext.connection.id,\n        connectionContext.wasConnectionCloseCalled,\n      );\n    };\n\n    const onDisconnected: OnAmqpEvent = async (context: EventContext) => {\n      if (waitForConnectionRefreshPromise) {\n        return;\n      }\n      waitForConnectionRefreshPromise = new Promise((resolve) => {\n        waitForConnectionRefreshResolve = resolve;\n      });\n      try {\n        logger.verbose(\n          \"[%s] 'disconnected' event occurred on the amqp connection.\",\n          connectionContext.connection.id,\n        );\n\n        if (context.connection && context.connection.error) {\n          logger.verbose(\n            \"[%s] Accompanying error on the context.connection: %O\",\n            connectionContext.connection.id,\n            context.connection && context.connection.error,\n          );\n        }\n        if (context.error) {\n          logger.verbose(\n            \"[%s] Accompanying error on the context: %O\",\n            connectionContext.connection.id,\n            context.error,\n          );\n        }\n        const state: Readonly<{\n          wasConnectionCloseCalled: boolean;\n          numSenders: number;\n          numReceivers: number;\n        }> = {\n          wasConnectionCloseCalled: connectionContext.wasConnectionCloseCalled,\n          numSenders: Object.keys(connectionContext.senders).length,\n          numReceivers: Object.keys(connectionContext.receivers).length,\n        };\n        logger.verbose(\n          \"[%s] Closing all open senders and receivers in the state: %O\",\n          connectionContext.connection.id,\n          state,\n        );\n\n        // Clear internal map maintained by rhea to avoid reconnecting of old links once the\n        // connection is back up.\n        connectionContext.connection.removeAllSessions();\n\n        // Close the cbs session to ensure all the event handlers are released.\n        await connectionContext.cbsSession?.close().catch(() => {\n          /* error already logged, swallow it here */\n        });\n        // Close the management session to ensure all the event handlers are released.\n        await connectionContext.managementSession?.close().catch(() => {\n          /* error already logged, swallow it here */\n        });\n\n        // Close all senders and receivers to ensure clean up of timers & other resources.\n        if (state.numSenders || state.numReceivers) {\n          await Promise.all(\n            Object.keys(connectionContext.senders).map((name) =>\n              connectionContext.senders[name]?.close().catch(() => {\n                /* error already logged, swallow it here */\n              }),\n            ),\n          );\n\n          await Promise.all(\n            Object.keys(connectionContext.receivers).map((name) =>\n              connectionContext.receivers[name]?.close().catch(() => {\n                /* error already logged, swallow it here */\n              }),\n            ),\n          );\n        }\n      } catch (err: any) {\n        logger.verbose(\n          `[${connectionContext.connectionId}] An error occurred while closing the connection in 'disconnected'. %O`,\n          err,\n        );\n      }\n\n      try {\n        await refreshConnection(connectionContext);\n      } catch (err: any) {\n        logger.verbose(\n          `[${connectionContext.connectionId}] An error occurred while refreshing the connection in 'disconnected'. %O`,\n          err,\n        );\n      } finally {\n        waitForConnectionRefreshResolve();\n        waitForConnectionRefreshPromise = undefined;\n      }\n    };\n\n    const protocolError: OnAmqpEvent = async (context: EventContext) => {\n      logger.verbose(\n        \"[%s] 'protocol_error' event occurred on the amqp connection.\",\n        connectionContext.connection.id,\n      );\n\n      if (context.connection && context.connection.error) {\n        logger.verbose(\n          \"[%s] Accompanying error on the context.connection: %O\",\n          connectionContext.connection.id,\n          context.connection && context.connection.error,\n        );\n      }\n      if (context.error) {\n        logger.verbose(\n          \"[%s] Accompanying error on the context: %O\",\n          connectionContext.connection.id,\n          context.error,\n        );\n      }\n    };\n\n    const error: OnAmqpEvent = async (context: EventContext) => {\n      logger.verbose(\n        \"[%s] 'error' event occurred on the amqp connection.\",\n        connectionContext.connection.id,\n      );\n\n      if (context.connection && context.connection.error) {\n        logger.verbose(\n          \"[%s] Accompanying error on the context.connection: %O\",\n          connectionContext.connection.id,\n          context.connection && context.connection.error,\n        );\n      }\n      if (context.error) {\n        logger.verbose(\n          \"[%s] Accompanying error on the context: %O\",\n          connectionContext.connection.id,\n          context.error,\n        );\n      }\n    };\n\n    function addConnectionListeners(connection: Connection): void {\n      // Add listeners on the connection object.\n      connection.on(ConnectionEvents.connectionOpen, onConnectionOpen);\n      connection.on(ConnectionEvents.disconnected, onDisconnected);\n      connection.on(ConnectionEvents.protocolError, protocolError);\n      connection.on(ConnectionEvents.error, error);\n    }\n\n    function cleanConnectionContext(context: ConnectionContext): Promise<void> {\n      // Remove listeners from the connection object.\n      context.connection.removeListener(ConnectionEvents.connectionOpen, onConnectionOpen);\n      context.connection.removeListener(ConnectionEvents.disconnected, onDisconnected);\n      context.connection.removeListener(ConnectionEvents.protocolError, protocolError);\n      context.connection.removeListener(ConnectionEvents.error, error);\n      // Close the connection\n      return context.connection.close();\n    }\n\n    async function refreshConnection(context: ConnectionContext): Promise<void> {\n      const originalConnectionId = context.connectionId;\n      try {\n        await cleanConnectionContext(context);\n      } catch (err: any) {\n        logger.verbose(\n          `[${context.connectionId}] There was an error closing the connection before reconnecting: %O`,\n          err,\n        );\n      }\n\n      // Create a new connection, id, locks, and cbs client.\n      context.refreshConnection();\n      addConnectionListeners(context.connection);\n      logger.verbose(\n        `The connection \"${originalConnectionId}\" has been updated to \"${context.connectionId}\".`,\n      );\n    }\n\n    addConnectionListeners(connectionContext.connection);\n\n    logger.verbose(\"[%s] Created connection context successfully.\", connectionContext.connectionId);\n    return connectionContext;\n  }\n}\n\n/**\n * Helper method to create a ConnectionContext from the input passed to either\n * EventHubProducerClient or EventHubConsumerClient constructors\n *\n * @internal\n */\nexport function createConnectionContext(\n  hostOrConnectionString: string,\n  eventHubNameOrOptions?: string | EventHubClientOptions,\n  credentialOrOptions?:\n    | TokenCredential\n    | NamedKeyCredential\n    | SASCredential\n    | EventHubClientOptions,\n  options?: EventHubClientOptions,\n): ConnectionContext {\n  let connectionString;\n  let config;\n  let credential: TokenCredential | SasTokenProvider;\n  hostOrConnectionString = String(hostOrConnectionString);\n\n  if (!isCredential(credentialOrOptions)) {\n    const parsedCS = parseEventHubConnectionString(hostOrConnectionString);\n    if (\n      !(\n        parsedCS.eventHubName ||\n        (typeof eventHubNameOrOptions === \"string\" && eventHubNameOrOptions)\n      )\n    ) {\n      throw new TypeError(\n        `Either provide \"eventHubName\" or the \"connectionString\": \"${hostOrConnectionString}\", ` +\n          `must contain \"EntityPath=<your-event-hub-name>\".`,\n      );\n    }\n    if (\n      parsedCS.eventHubName &&\n      typeof eventHubNameOrOptions === \"string\" &&\n      eventHubNameOrOptions &&\n      parsedCS.eventHubName !== eventHubNameOrOptions\n    ) {\n      throw new TypeError(\n        `The entity path \"${parsedCS.eventHubName}\" in connectionString: \"${hostOrConnectionString}\" ` +\n          `doesn't match with eventHubName: \"${eventHubNameOrOptions}\".`,\n      );\n    }\n    connectionString = hostOrConnectionString;\n    if (typeof eventHubNameOrOptions !== \"string\") {\n      // connectionstring and/or options were passed to constructor\n      config = EventHubConnectionConfig.create(connectionString);\n      options = eventHubNameOrOptions;\n    } else {\n      // connectionstring, eventHubName and/or options were passed to constructor\n      const eventHubName = eventHubNameOrOptions;\n      config = EventHubConnectionConfig.create(connectionString, eventHubName);\n      options = credentialOrOptions;\n    }\n\n    const parsed = parseEventHubConnectionString(connectionString) as Required<\n      | Pick<EventHubConnectionStringProperties, \"sharedAccessKey\" | \"sharedAccessKeyName\">\n      | Pick<EventHubConnectionStringProperties, \"sharedAccessSignature\">\n    >;\n    // Since connectionString was passed, create a TokenProvider.\n    credential = createSasTokenProvider(parsed);\n  } else {\n    // host, eventHubName, a TokenCredential and/or options were passed to constructor\n    const eventHubName = eventHubNameOrOptions;\n    let host = hostOrConnectionString;\n    if (isNamedKeyCredential(credentialOrOptions) || isSASCredential(credentialOrOptions)) {\n      credential = createSasTokenProvider(credentialOrOptions);\n    } else {\n      credential = credentialOrOptions;\n    }\n    if (!eventHubName) {\n      throw new TypeError(`\"eventHubName\" is missing`);\n    }\n\n    if (!host.endsWith(\"/\")) host += \"/\";\n    connectionString = `Endpoint=sb://${host};SharedAccessKeyName=defaultKeyName;SharedAccessKey=defaultKeyValue;EntityPath=${eventHubName}`;\n    config = EventHubConnectionConfig.create(connectionString);\n  }\n\n  if (options?.customEndpointAddress) {\n    EventHubConnectionConfig.setCustomEndpointAddress(config, options.customEndpointAddress);\n  }\n\n  ConnectionConfig.validate(config);\n\n  return ConnectionContext.create(config, credential, options);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PartitionOwnership } from \"../eventProcessor\";\nimport { logger } from \"../logger\";\n\n/**\n * Determines which partitions to claim as part of load balancing.\n * @internal\n */\nexport interface LoadBalancingStrategy {\n  /**\n   * Implements load balancing by taking into account current ownership and\n   * the full set of partitions in the Event Hub.\n   * @param ourOwnerId - The id we should assume is _our_ id when checking for ownership.\n   * @param claimedPartitionOwnershipMap - The current claimed ownerships for partitions.\n   * @param partitionIds - Partitions to assign owners to.\n   * @returns Partition ids to claim.\n   */\n  getPartitionsToClaim(\n    ownerId: string,\n    claimedPartitionOwnershipMap: Map<string, PartitionOwnership>,\n    partitionIds: string[],\n  ): string[];\n}\n\n/**\n * Counts of the EventProcessors that currently own partitions.\n * @internal\n */\ninterface EventProcessorCounts {\n  /**\n   * The # of EventProcessors that only own the required # of\n   * partitions.\n   */\n  haveRequiredPartitions: number;\n  /**\n   * The # of EventProcessors that currently own the required #\n   * of partitions + 1 additional (ie, handling the case where\n   * the number of partitions is not evenly divisible by the # of\n   * EventProcessors).\n   */\n  haveAdditionalPartition: number;\n  /**\n   * EventProcessors which have more than the required or even required + 1\n   * number of partitions. These will eventually be downsized by other\n   * EventProcessors as they acquire their required number of partitions.\n   */\n  haveTooManyPartitions: number;\n}\n\n/**\n * This method will create a new map of partition id and PartitionOwnership containing only those partitions\n * that are actively owned.\n * All entries in the original map that haven't been modified for a duration of time greater than the allowed\n * inactivity time limit are assumed to be owned by dead event processors.\n * These will not be included in the map returned by this method.\n *\n * @param partitionOwnershipMap - The existing PartitionOwnerships mapped by partition.\n * @param expirationIntervalInMs - The length of time a PartitionOwnership claim is valid.\n */\nfunction getActivePartitionOwnerships(\n  partitionOwnershipMap: Map<string, PartitionOwnership>,\n  expirationIntervalInMs: number,\n): Map<string, PartitionOwnership> {\n  const activePartitionOwnershipMap: Map<string, PartitionOwnership> = new Map();\n  partitionOwnershipMap.forEach((partitionOwnership: PartitionOwnership, partitionId: string) => {\n    // If lastModifiedtimeInMs is missing, assume it is inactive.\n    if (\n      typeof partitionOwnership.lastModifiedTimeInMs === \"undefined\" ||\n      partitionOwnership.lastModifiedTimeInMs === null\n    ) {\n      return;\n    }\n\n    const timeSincePartitionClaimed = Date.now() - partitionOwnership.lastModifiedTimeInMs;\n    if (timeSincePartitionClaimed < expirationIntervalInMs && partitionOwnership.ownerId) {\n      activePartitionOwnershipMap.set(partitionId, partitionOwnership);\n    }\n  });\n\n  return activePartitionOwnershipMap;\n}\n\n/**\n * Calculates the minimum number of partitions each EventProcessor should own,\n * and the number of EventProcessors that should have an extra partition assigned.\n * @param ownerToOwnershipMap - The current ownerships for partitions.\n * @param partitionIds - The full list of the Event Hub's partition ids.\n * @internal\n */\nfunction calculateBalancedLoadCounts(\n  ownerToOwnershipMap: Map<string, PartitionOwnership[]>,\n  partitionIds: string[],\n): { minPartitionsPerOwner: number; requiredNumberOfOwnersWithExtraPartition: number } {\n  // Calculate the minimum number of partitions every EventProcessor should own when the load\n  // is evenly distributed.\n  const minPartitionsPerOwner = Math.floor(partitionIds.length / ownerToOwnershipMap.size);\n\n  // If the number of partitions in the Event Hub is not evenly divisible by the number of active\n  // EventProcesrrors, some EventProcessors may own 1 partition in addition to the minimum when the\n  // load is balanced.\n  // Calculate the number of EventProcessors that can own an additional partition.\n  const requiredNumberOfOwnersWithExtraPartition = partitionIds.length % ownerToOwnershipMap.size;\n\n  return {\n    minPartitionsPerOwner,\n    requiredNumberOfOwnersWithExtraPartition,\n  };\n}\n\n/**\n * Counts the EventProcessors and tallies them by type.\n *\n * To be in balance we need to make sure that each EventProcessor is only consuming\n * their fair share.\n *\n * When the partitions are divvied up we will sometimes end up with some EventProcessors\n * that will have 1 more partition than others.\n * This can happen if the number of partitions is not evenly divisible by the number of EventProcessors.\n *\n * So this function largely exists to support isLoadBalanced() and\n * shouldOwnMorePartitions(), both of which depend on knowing if our current list\n * of EventProcessors is actually in the proper state.\n *\n * @param minPartitionsPerOwner - The number of required partitions per EventProcessor.\n * @param ownerToOwnershipMap - The current ownerships for partitions.\n * @internal\n */\nfunction getEventProcessorCounts(\n  minPartitionsPerOwner: number,\n  ownerToOwnershipMap: Map<string, PartitionOwnership[]>,\n): EventProcessorCounts {\n  const counts: EventProcessorCounts = {\n    haveRequiredPartitions: 0,\n    haveAdditionalPartition: 0,\n    haveTooManyPartitions: 0,\n  };\n\n  for (const ownershipList of ownerToOwnershipMap.values()) {\n    const numberOfPartitions = ownershipList.length;\n\n    // there are basically three kinds of partition counts\n    // for a processor:\n\n    if (numberOfPartitions === minPartitionsPerOwner) {\n      // 1. Has _exactly_ the required number of partitions\n      counts.haveRequiredPartitions++;\n    } else if (numberOfPartitions === minPartitionsPerOwner + 1) {\n      // 2. Has the required number plus one extra (correct in cases)\n      // where the # of partitions is not evenly divisible by the\n      // number of processors.\n      counts.haveAdditionalPartition++;\n    } else if (numberOfPartitions > minPartitionsPerOwner + 1) {\n      // 3. has more than the possible # of partitions required\n      counts.haveTooManyPartitions++;\n    }\n  }\n\n  return counts;\n}\n\n/**\n * Validates that we are currently in a balanced state - all EventProcessors own the\n * minimum required number of partitions (and additional partitions, if the # of partitions\n * is not evenly divisible by the # of EventProcessors).\n *\n * @param requiredNumberOfOwnersWithExtraPartition - The # of EventProcessors that process an additional partition, in addition to the required minimum.\n * @param totalExpectedProcessors - The total # of EventProcessors we expect.\n * @param eventProcessorCounts - EventProcessor counts, grouped by criteria.\n * @internal\n */\nfunction isLoadBalanced(\n  requiredNumberOfOwnersWithExtraPartition: number,\n  totalExpectedEventProcessors: number,\n  { haveAdditionalPartition, haveRequiredPartitions }: EventProcessorCounts,\n): boolean {\n  return (\n    haveAdditionalPartition === requiredNumberOfOwnersWithExtraPartition &&\n    haveRequiredPartitions + haveAdditionalPartition === totalExpectedEventProcessors\n  );\n}\n\n/**\n * Determines the number of new partitions to claim for this particular processor.\n *\n * @param minRequired - The minimum required number of partitions.\n * @param requiredNumberOfOwnersWithExtraPartition - The current number of processors that should have an additional partition.\n * @param numPartitionsOwnedByUs - The number of partitions we currently own.\n * @param eventProcessorCounts - Processors, grouped by criteria.\n * @internal\n */\nfunction getNumberOfPartitionsToClaim(\n  minRequiredPartitionCount: number,\n  requiredNumberOfOwnersWithExtraPartition: number,\n  numPartitionsOwnedByUs: number,\n  { haveAdditionalPartition, haveTooManyPartitions }: EventProcessorCounts,\n): number {\n  let actualRequiredPartitionCount = minRequiredPartitionCount;\n\n  if (\n    requiredNumberOfOwnersWithExtraPartition > 0 &&\n    // Eventually the `haveTooManyPartitions` will decay into `haveAdditionalPartition`\n    // EventProcessors as partitions are balanced to consumers that aren't at par.\n    // We can consider them to be `haveAdditionalPartition` EventProcessors for our purposes.\n    haveAdditionalPartition + haveTooManyPartitions < requiredNumberOfOwnersWithExtraPartition\n  ) {\n    // Overall we don't have enough EventProcessors that are taking on an additional partition\n    // so we should attempt to.\n    actualRequiredPartitionCount = minRequiredPartitionCount + 1;\n  }\n  return actualRequiredPartitionCount - numPartitionsOwnedByUs;\n}\n\n/**\n * Determines which partitions can be stolen from other owners while maintaining\n * a balanced state.\n * @param numberOfPartitionsToClaim - The number of partitions the owner needs to claim to reach a balanced state.\n * @param minPartitionsPerOwner - The minimum number of partitions each owner needs for the partition load to be balanced.\n * @param requiredNumberOfOwnersWithExtraPartition - The number of owners that should have 1 extra partition.\n * @param ourOwnerId - The id of _our_ owner.\n * @param ownerToOwnershipMap - The current ownerships for partitions.\n * @internal\n */\nfunction findPartitionsToSteal(\n  numberOfPartitionsToClaim: number,\n  minPartitionsPerOwner: number,\n  requiredNumberOfOwnersWithExtraPartition: number,\n  ourOwnerId: string,\n  ownerToOwnershipMap: Map<string, PartitionOwnership[]>,\n): string[] {\n  const partitionsToSteal: string[] = [];\n  // Create a list of PartitionOwnership lists that we can steal from.\n  const listOfPartitionOwnerships: Array<PartitionOwnership[]> = [];\n  ownerToOwnershipMap.forEach((partitionOwnerships, ownerId) => {\n    if (ownerId === ourOwnerId || partitionOwnerships.length <= minPartitionsPerOwner) return;\n    listOfPartitionOwnerships.push(partitionOwnerships);\n  });\n\n  // Sort the list in descending order based on the length of each element.\n  listOfPartitionOwnerships.sort((a, b) => {\n    if (a.length > b.length) return -1;\n    if (a.length < b.length) return 1;\n    return 0;\n  });\n\n  // Attempt to steal partitions from EventProcessors that have the most partitions 1st,\n  // then work our way down.\n  let ownersEncounteredWithExtraPartitions = 0;\n  let currentPartitionOwnershipList = listOfPartitionOwnerships.shift();\n  while (numberOfPartitionsToClaim > 0 && currentPartitionOwnershipList) {\n    let ownersExpectedPartitionCount = minPartitionsPerOwner;\n    // Determine if the current owner should be allowed to have an extra partition.\n    if (ownersEncounteredWithExtraPartitions < requiredNumberOfOwnersWithExtraPartition) {\n      ownersExpectedPartitionCount++;\n    }\n    ownersEncounteredWithExtraPartitions++;\n\n    let numberAvailableToSteal =\n      currentPartitionOwnershipList.length - ownersExpectedPartitionCount;\n    // Claim as many random partitions as possible.\n    while (Math.min(numberOfPartitionsToClaim, numberAvailableToSteal)) {\n      const indexToClaim = Math.floor(Math.random() * currentPartitionOwnershipList.length);\n      partitionsToSteal.push(currentPartitionOwnershipList.splice(indexToClaim, 1)[0].partitionId);\n      numberOfPartitionsToClaim--;\n      numberAvailableToSteal--;\n    }\n\n    // Move on to the next list of PartitionOwnership.\n    currentPartitionOwnershipList = listOfPartitionOwnerships.shift();\n  }\n\n  return partitionsToSteal;\n}\n\n/**\n * Identifies all of the partitions that can be claimed by the specified owner for\n * that owner to reach a balanced state.\n * @param OwnerId - The id we should assume is _our_ id when checking for ownership.\n * @param claimedPartitionOwnershipMap - The current claimed ownerships for partitions.\n * @param partitionIds - Partitions to assign owners to.\n * @param expirationIntervalInMs - The length of time a partition claim is valid.\n * @returns Partition ids that may be claimed.\n * @internal\n */\nexport function listAvailablePartitions(\n  ownerId: string,\n  claimedPartitionOwnershipMap: Map<string, PartitionOwnership>,\n  partitionIds: string[],\n  expirationIntervalInMs: number,\n): string[] {\n  if (!partitionIds.length) {\n    return [];\n  }\n\n  // Collect only the PartitionOwnership that have been updated within the expiration interval.\n  // Any PartitionOwnership that has been updated outside the expiration interval can be claimed.\n  const activePartitionOwnershipMap = getActivePartitionOwnerships(\n    claimedPartitionOwnershipMap,\n    expirationIntervalInMs,\n  );\n  logger.verbose(\n    `[${ownerId}] Number of active ownership records: ${activePartitionOwnershipMap.size}.`,\n  );\n\n  if (activePartitionOwnershipMap.size === 0) {\n    // All partitions in this Event Hub are available to claim.\n    return partitionIds;\n  }\n\n  // Map ownerIds to the partitions they own so that we can determine how many each owner has.\n  const ownerToOwnershipMap = new Map<string, PartitionOwnership[]>();\n  for (const activeOwnership of activePartitionOwnershipMap.values()) {\n    const partitionOwnershipList = ownerToOwnershipMap.get(activeOwnership.ownerId) || [];\n\n    partitionOwnershipList.push(activeOwnership);\n    ownerToOwnershipMap.set(activeOwnership.ownerId, partitionOwnershipList);\n  }\n\n  // Add the current EventProcessor to the map of owners to ownerships if it doesn't exist.\n  if (!ownerToOwnershipMap.has(ownerId)) {\n    ownerToOwnershipMap.set(ownerId, []);\n  }\n\n  logger.info(`[${ownerId}] Number of active event processors: ${ownerToOwnershipMap.size}.`);\n\n  const { minPartitionsPerOwner, requiredNumberOfOwnersWithExtraPartition } =\n    calculateBalancedLoadCounts(ownerToOwnershipMap, partitionIds);\n\n  logger.verbose(\n    `[${ownerId}] Expected minimum number of partitions per event processor: ${minPartitionsPerOwner},` +\n      `expected number of event processors with additional partition: ${requiredNumberOfOwnersWithExtraPartition}.`,\n  );\n\n  // Get some stats representing the current state the world with regards to how balanced the\n  // partitions are across EventProcessors.\n  const eventProcessorCounts = getEventProcessorCounts(minPartitionsPerOwner, ownerToOwnershipMap);\n\n  if (\n    isLoadBalanced(\n      requiredNumberOfOwnersWithExtraPartition,\n      ownerToOwnershipMap.size,\n      eventProcessorCounts,\n    )\n  ) {\n    // When the partitions are evenly distributed, no change required.\n    return [];\n  }\n\n  let numberOfPartitionsToClaim = getNumberOfPartitionsToClaim(\n    minPartitionsPerOwner,\n    requiredNumberOfOwnersWithExtraPartition,\n    ownerToOwnershipMap.get(ownerId)!.length,\n    eventProcessorCounts,\n  );\n\n  if (numberOfPartitionsToClaim <= 0) {\n    return [];\n  }\n\n  const partitionsToClaim: string[] = [];\n  const unclaimedPartitionIds = partitionIds.filter((id) => !activePartitionOwnershipMap.has(id));\n\n  // Prioritize getting unclaimed partitions first.\n  while (Math.min(numberOfPartitionsToClaim, unclaimedPartitionIds.length)) {\n    const indexToClaim = Math.floor(Math.random() * unclaimedPartitionIds.length);\n    partitionsToClaim.push(unclaimedPartitionIds.splice(indexToClaim, 1)[0]);\n    numberOfPartitionsToClaim--;\n  }\n\n  if (numberOfPartitionsToClaim === 0) {\n    return partitionsToClaim;\n  }\n\n  // Find partitions that can be stolen from other EventProcessors.\n  const partitionsToSteal = findPartitionsToSteal(\n    numberOfPartitionsToClaim,\n    minPartitionsPerOwner,\n    requiredNumberOfOwnersWithExtraPartition,\n    ownerId,\n    ownerToOwnershipMap,\n  );\n\n  return partitionsToClaim.concat(partitionsToSteal);\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LoadBalancingStrategy, listAvailablePartitions } from \"./loadBalancingStrategy\";\nimport { PartitionOwnership } from \"../eventProcessor\";\n\n/**\n * The BalancedLoadBalancerStrategy is meant to be used when the user\n * wants to reach a load balanced state with less partition 'thrashing'.\n *\n * Partition thrashing - where a partition changes owners - is minimized\n * by only returning a single partition to claim at a time.\n * This minimizes the number of times a partition should need to be stolen.\n * @internal\n */\nexport class BalancedLoadBalancingStrategy implements LoadBalancingStrategy {\n  /**\n   * Creates an instance of BalancedLoadBalancingStrategy.\n   *\n   * @param _partitionOwnershipExpirationIntervalInMs - The length of time a partition claim is valid.\n   */\n  constructor(private readonly _partitionOwnershipExpirationIntervalInMs: number) {}\n\n  /**\n   * Implements load balancing by taking into account current ownership and\n   * the full set of partitions in the Event Hub.\n   * @param ourOwnerId - The id we should assume is _our_ id when checking for ownership.\n   * @param claimedPartitionOwnershipMap - The current claimed ownerships for partitions.\n   * @param partitionIds - Partitions to assign owners to.\n   * @returns Partition ids to claim.\n   */\n  public getPartitionsToClaim(\n    ourOwnerId: string,\n    claimedPartitionOwnershipMap: Map<string, PartitionOwnership>,\n    partitionIds: string[],\n  ): string[] {\n    const claimablePartitions = listAvailablePartitions(\n      ourOwnerId,\n      claimedPartitionOwnershipMap,\n      partitionIds,\n      this._partitionOwnershipExpirationIntervalInMs,\n    );\n\n    if (!claimablePartitions.length) {\n      return [];\n    }\n\n    const randomIndex = Math.floor(Math.random() * claimablePartitions.length);\n    return [claimablePartitions[randomIndex]];\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LoadBalancingStrategy, listAvailablePartitions } from \"./loadBalancingStrategy\";\nimport { PartitionOwnership } from \"../eventProcessor\";\n\n/**\n * @internal\n */\nexport class GreedyLoadBalancingStrategy implements LoadBalancingStrategy {\n  /**\n   * Creates an instance of GreedyLoadBalancingStrategy.\n   *\n   * @param _partitionOwnershipExpirationIntervalInMs - The length of time a partition claim is valid.\n   */\n  constructor(private readonly _partitionOwnershipExpirationIntervalInMs: number) {}\n\n  /**\n   * Implements load balancing by taking into account current ownership and\n   * the new set of partitions to add.\n   * @param ourOwnerId - The id we should assume is _our_ id when checking for ownership.\n   * @param claimedPartitionOwnershipMap - The current claimed ownerships for partitions.\n   * @param partitionIds - Partitions to assign owners to.\n   * @returns Partition ids to claim.\n   */\n  public getPartitionsToClaim(\n    ourOwnerId: string,\n    claimedPartitionOwnershipMap: Map<string, PartitionOwnership>,\n    partitionIds: string[],\n  ): string[] {\n    return listAvailablePartitions(\n      ourOwnerId,\n      claimedPartitionOwnershipMap,\n      partitionIds,\n      this._partitionOwnershipExpirationIntervalInMs,\n    );\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CheckpointStore, PartitionOwnership } from \"./eventProcessor\";\nimport { Checkpoint } from \"./partitionProcessor\";\nimport { throwTypeErrorIfParameterMissing } from \"./util/error\";\nimport { getRandomName } from \"./util/utils\";\n\n/**\n * The `EventProcessor` relies on a `CheckpointStore` to store checkpoints and handle partition\n * ownerships. `InMemoryCheckpointStore` is simple partition manager that stores checkpoints and\n * partition ownerships in memory of your program.\n *\n * You can use the `InMemoryCheckpointStore` to get started with using the `EventProcessor`.\n * But in production, you should choose an implementation of the `CheckpointStore` interface that will\n * store the checkpoints and partition ownerships to a durable store instead.\n *\n * @internal\n */\nexport class InMemoryCheckpointStore implements CheckpointStore {\n  private _partitionOwnershipMap: Map<string, PartitionOwnership> = new Map();\n  private _committedCheckpoints: Map<string, Map<string, Checkpoint>> = new Map();\n\n  /**\n   * Get the list of all existing partition ownership from the underlying data store. Could return empty\n   * results if there are is no existing ownership information.\n   *\n   * @param fullyQualifiedNamespace - The fully qualified Event Hubs namespace. This is likely to be similar to\n   * <yournamespace>.servicebus.windows.net.\n   * @param eventHubName - The event hub name.\n   * @param consumerGroup - The consumer group name.\n   * @returns Partition ownership details of all the partitions that have/had an owner..\n   */\n  async listOwnership(\n    _fullyQualifiedNamespace: string,\n    _eventHubName: string,\n    _consumerGroup: string,\n  ): Promise<PartitionOwnership[]> {\n    const ownerships = [];\n\n    for (const value of this._partitionOwnershipMap.values()) {\n      ownerships.push({ ...value });\n    }\n\n    return ownerships;\n  }\n\n  /**\n   * Claim ownership of a list of partitions. This will return the list of partitions that were owned\n   * successfully.\n   *\n   * @param partitionOwnership - The list of partition ownership this instance is claiming to own.\n   * @returns A list partitions this instance successfully claimed ownership.\n   */\n  async claimOwnership(partitionOwnership: PartitionOwnership[]): Promise<PartitionOwnership[]> {\n    const claimedOwnerships = [];\n\n    for (const ownership of partitionOwnership) {\n      if (\n        !this._partitionOwnershipMap.has(ownership.partitionId) ||\n        this._partitionOwnershipMap.get(ownership.partitionId)!.etag === ownership.etag\n      ) {\n        const date = new Date();\n\n        const newOwnership = {\n          ...ownership,\n          etag: getRandomName(),\n          lastModifiedTimeInMs: date.getTime(),\n        };\n\n        this._partitionOwnershipMap.set(newOwnership.partitionId, newOwnership);\n        claimedOwnerships.push(newOwnership);\n      }\n    }\n    return claimedOwnerships;\n  }\n\n  /**\n   * Updates the checkpoint in the data store for a partition.\n   *\n   * @param checkpoint - The checkpoint.\n   */\n  async updateCheckpoint(checkpoint: Checkpoint): Promise<void> {\n    throwTypeErrorIfParameterMissing(\n      \"\",\n      \"updateCheckpoint\",\n      \"sequenceNumber\",\n      checkpoint.sequenceNumber,\n    );\n    throwTypeErrorIfParameterMissing(\"\", \"updateCheckpoint\", \"offset\", checkpoint.offset);\n\n    checkpoint = { ...checkpoint };\n\n    const partitionOwnership = this._partitionOwnershipMap.get(checkpoint.partitionId);\n    if (partitionOwnership) {\n      partitionOwnership.etag = getRandomName();\n\n      const key = `${checkpoint.fullyQualifiedNamespace}:${checkpoint.eventHubName}:${checkpoint.consumerGroup}`;\n      let partitionMap = this._committedCheckpoints.get(key);\n\n      if (partitionMap == null) {\n        partitionMap = new Map();\n        this._committedCheckpoints.set(key, partitionMap);\n      }\n\n      partitionMap.set(checkpoint.partitionId, checkpoint);\n    }\n  }\n\n  async listCheckpoints(\n    fullyQualifiedNamespace: string,\n    eventHubName: string,\n    consumerGroup: string,\n  ): Promise<Checkpoint[]> {\n    const key = `${fullyQualifiedNamespace}:${eventHubName}:${consumerGroup}`;\n\n    const partitionMap = this._committedCheckpoints.get(key);\n\n    if (partitionMap == null) {\n      return [];\n    }\n\n    const checkpoints = [];\n\n    for (const value of partitionMap.values()) {\n      checkpoints.push({ ...value });\n    }\n\n    return checkpoints;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Used by EventHubConsumerClient to prevent accidentally spinning up multiple\n * subscriptions against the same set of partitions.\n *\n * This is needed now that EventHubConsumerClient only uses a single CheckpointStore\n * instance - otherwise users will see unpredictable results as their event processor\n * continually steals/overwrites checkpointing and ownership with itself.\n *\n * @internal\n */\nexport class PartitionGate {\n  private _partitions = new Set<string>();\n\n  /**\n   * Adds a partition, throwing an Error if there is a conflict with partitions (including \"all\")\n   * that are already added.\n   *\n   * @param partitionId - A partition ID or the constant \"all\"\n   */\n  add(partitionId: string | \"all\"): void {\n    if (\n      (partitionId === \"all\" && this._partitions.size > 0) ||\n      this._partitions.has(partitionId) ||\n      this._partitions.has(\"all\")\n    ) {\n      throw new Error(`Partition already has a subscriber.`);\n    }\n\n    this._partitions.add(partitionId);\n  }\n\n  /**\n   * Removes a partition\n   *\n   * @param partitionId - A partition ID or the constant \"all\"\n   */\n  remove(partitionId: string | \"all\"): void {\n    this._partitions.delete(partitionId);\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LoadBalancingStrategy } from \"./loadBalancingStrategy\";\nimport { PartitionOwnership } from \"../eventProcessor\";\n\n/**\n * The UnbalancedLoadBalancingStrategy does no actual load balancing.\n * It is intended to be used when you want to avoid load balancing\n * and consume a set of partitions.\n * @internal\n */\nexport class UnbalancedLoadBalancingStrategy implements LoadBalancingStrategy {\n  /**\n   * Implements load balancing by taking into account current ownership and\n   * the full set of partitions in the Event Hub.\n   * @param _ourOwnerId - The id we should assume is _our_ id when checking for ownership.\n   * @param _claimedPartitionOwnershipMap - The current claimed ownerships for partitions.\n   * @param partitionIds - Partitions to assign owners to.\n   * @returns Partition ids to claim.\n   */\n  public getPartitionsToClaim(\n    _ourOwnerId: string,\n    _claimedPartitionOwnershipMap: Map<string, PartitionOwnership>,\n    partitionIds: string[],\n  ): string[] {\n    return partitionIds;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { CheckpointStore, EventProcessor, FullEventProcessorOptions } from \"./eventProcessor\";\nimport { ConnectionContext, createConnectionContext } from \"./connectionContext\";\nimport {\n  EventHubConsumerClientOptions,\n  GetEventHubPropertiesOptions,\n  GetPartitionIdsOptions,\n  GetPartitionPropertiesOptions,\n  LoadBalancingOptions,\n} from \"./models/public\";\nimport { EventHubProperties, PartitionProperties } from \"./managementClient\";\nimport { NamedKeyCredential, SASCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  SubscribeOptions,\n  Subscription,\n  SubscriptionEventHandlers,\n} from \"./eventHubConsumerClientModels\";\nimport { BalancedLoadBalancingStrategy } from \"./loadBalancerStrategies/balancedStrategy\";\nimport { Constants } from \"@azure/core-amqp\";\nimport { GreedyLoadBalancingStrategy } from \"./loadBalancerStrategies/greedyStrategy\";\nimport { InMemoryCheckpointStore } from \"./inMemoryCheckpointStore\";\nimport { LoadBalancingStrategy } from \"./loadBalancerStrategies/loadBalancingStrategy\";\nimport { PartitionGate } from \"./impl/partitionGate\";\nimport { UnbalancedLoadBalancingStrategy } from \"./loadBalancerStrategies/unbalancedStrategy\";\nimport { isCredential } from \"./util/typeGuards\";\nimport { logger } from \"./logger\";\nimport { validateEventPositions } from \"./eventPosition\";\nimport { getRandomName } from \"./util/utils\";\n\nconst defaultConsumerClientOptions: Required<\n  Pick<FullEventProcessorOptions, \"maxWaitTimeInSeconds\" | \"maxBatchSize\">\n> = {\n  // to support our current \"process single event only\" workflow we'll also purposefully\n  // only request a single event at a time.\n  maxBatchSize: 1,\n  maxWaitTimeInSeconds: 60,\n};\n\n/**\n * The `EventHubConsumerClient` class is used to consume events from an Event Hub.\n *\n * There are multiple ways to create an `EventHubConsumerClient`\n * - Use the connection string from the SAS policy created for your Event Hub instance.\n * - Use the connection string from the SAS policy created for your Event Hub namespace,\n * and the name of the Event Hub instance\n * - Use the full namespace like `<yournamespace>.servicebus.windows.net`, and a credentials object.\n *\n * Optionally, you can also pass:\n * - An options bag to configure the retry policy or proxy settings.\n * - A checkpoint store that is used by the client to read checkpoints to determine the position from where it should\n * resume receiving events when your application gets restarted. The checkpoint store is also used by the client\n * to load balance multiple instances of your application.\n */\nexport class EventHubConsumerClient {\n  /**\n   * Describes the amqp connection context for the client.\n   */\n  private _context: ConnectionContext;\n  /**\n   * The options passed by the user when creating the EventHubClient instance.\n   */\n  private _clientOptions: EventHubConsumerClientOptions;\n  private _partitionGate = new PartitionGate();\n\n  /**\n   * The Subscriptions that were spawned by calling `subscribe()`.\n   * Subscriptions that have been stopped by the user will not\n   * be present in this set.\n   */\n  private _subscriptions = new Set<Subscription>();\n\n  /**\n   * The name of the default consumer group in the Event Hubs service.\n   */\n  static defaultConsumerGroupName: string = Constants.defaultConsumerGroup;\n\n  private _checkpointStore: CheckpointStore;\n  private _userChoseCheckpointStore: boolean;\n\n  /**\n   * Options for configuring load balancing.\n   */\n  private readonly _loadBalancingOptions: Required<LoadBalancingOptions>;\n\n  /**\n   * @readonly\n   * The name of the Event Hub instance for which this client is created.\n   */\n  get eventHubName(): string {\n    return this._context.config.entityPath;\n  }\n\n  /**\n   * @readonly\n   * The fully qualified namespace of the Event Hub instance for which this client is created.\n   * This is likely to be similar to <yournamespace>.servicebus.windows.net.\n   */\n  get fullyQualifiedNamespace(): string {\n    return this._context.config.host;\n  }\n\n  /**\n   * The name used to identify this EventHubConsumerClient.\n   * If not specified or empty, a random unique one will be generated.\n   */\n  public readonly identifier: string;\n\n  /**\n   * The `EventHubConsumerClient` class is used to consume events from an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param consumerGroup - The name of the consumer group from which you want to process events.\n   * @param connectionString - The connection string to use for connecting to the Event Hub instance.\n   * It is expected that the shared key properties and the Event Hub path are contained in this connection string.\n   * e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;EntityPath=my-event-hub-name'.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    consumerGroup: string,\n    connectionString: string,\n    options?: EventHubConsumerClientOptions,\n  ); // #1\n  /**\n   * The `EventHubConsumerClient` class is used to consume events from an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param consumerGroup - The name of the consumer group from which you want to process events.\n   * @param connectionString - The connection string to use for connecting to the Event Hub instance.\n   * It is expected that the shared key properties and the Event Hub path are contained in this connection string.\n   * e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;EntityPath=my-event-hub-name'.\n   * @param checkpointStore - A checkpoint store that is used by the client to read checkpoints to determine\n   * the position from where it should resume receiving events when your application gets restarted.\n   * It is also used by the client to load balance multiple instances of your application.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    consumerGroup: string,\n    connectionString: string,\n    checkpointStore: CheckpointStore,\n    options?: EventHubConsumerClientOptions,\n  ); // #1.1\n  /**\n   * The `EventHubConsumerClient` class is used to consume events from an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param consumerGroup - The name of the consumer group from which you want to process events.\n   * @param connectionString - The connection string to use for connecting to the Event Hubs namespace.\n   * It is expected that the shared key properties are contained in this connection string, but not the Event Hub path,\n   * e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;'.\n   * @param eventHubName - The name of the specific Event Hub to connect the client to.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    consumerGroup: string,\n    connectionString: string,\n    eventHubName: string,\n    options?: EventHubConsumerClientOptions,\n  ); // #2\n  /**\n   * The `EventHubConsumerClient` class is used to consume events from an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param consumerGroup - The name of the consumer group from which you want to process events.\n   * @param connectionString - The connection string to use for connecting to the Event Hubs namespace.\n   * It is expected that the shared key properties are contained in this connection string, but not the Event Hub path,\n   * e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;'.\n   * @param eventHubName - The name of the specific Event Hub to connect the client to.\n   * @param checkpointStore - A checkpoint store that is used by the client to read checkpoints to determine\n   * the position from where it should resume receiving events when your application gets restarted.\n   * It is also used by the client to load balance multiple instances of your application.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    consumerGroup: string,\n    connectionString: string,\n    eventHubName: string,\n    checkpointStore: CheckpointStore,\n    options?: EventHubConsumerClientOptions,\n  ); // #2.1\n  /**\n   * The `EventHubConsumerClient` class is used to consume events from an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param consumerGroup - The name of the consumer group from which you want to process events.\n   * @param fullyQualifiedNamespace - The full namespace which is likely to be similar to\n   * <yournamespace>.servicebus.windows.net\n   * @param eventHubName - The name of the specific Event Hub to connect the client to.\n   * @param credential - An credential object used by the client to get the token to authenticate the connection\n   * with the Azure Event Hubs service.\n   * See &commat;azure/identity for creating credentials that support AAD auth.\n   * Use the `AzureNamedKeyCredential` from &commat;azure/core-auth if you want to pass in a `SharedAccessKeyName`\n   * and `SharedAccessKey` without using a connection string. These fields map to the `name` and `key` field respectively\n   * in `AzureNamedKeyCredential`.\n   * Use the `AzureSASCredential` from &commat;azure/core-auth if you want to pass in a `SharedAccessSignature`\n   * without using a connection string. This field maps to `signature` in `AzureSASCredential`.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    consumerGroup: string,\n    fullyQualifiedNamespace: string,\n    eventHubName: string,\n    credential: TokenCredential | NamedKeyCredential | SASCredential,\n    options?: EventHubConsumerClientOptions,\n  ); // #3\n  /**\n   * The `EventHubConsumerClient` class is used to consume events from an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param consumerGroup - The name of the consumer group from which you want to process events.\n   * @param fullyQualifiedNamespace - The full namespace which is likely to be similar to\n   * <yournamespace>.servicebus.windows.net\n   * @param eventHubName - The name of the specific Event Hub to connect the client to.\n   * @param credential - An credential object used by the client to get the token to authenticate the connection\n   * with the Azure Event Hubs service.\n   * See &commat;azure/identity for creating credentials that support AAD auth.\n   * Use the `AzureNamedKeyCredential` from &commat;azure/core-auth if you want to pass in a `SharedAccessKeyName`\n   * and `SharedAccessKey` without using a connection string. These fields map to the `name` and `key` field respectively\n   * in `AzureNamedKeyCredential`.\n   * Use the `AzureSASCredential` from &commat;azure/core-auth if you want to pass in a `SharedAccessSignature`\n   * without using a connection string. This field maps to `signature` in `AzureSASCredential`.\n   * @param checkpointStore - A checkpoint store that is used by the client to read checkpoints to determine\n   * the position from where it should resume receiving events when your application gets restarted.\n   * It is also used by the client to load balance multiple instances of your application.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    consumerGroup: string,\n    fullyQualifiedNamespace: string,\n    eventHubName: string,\n    credential: TokenCredential | NamedKeyCredential | SASCredential,\n    checkpointStore: CheckpointStore,\n    options?: EventHubConsumerClientOptions,\n  ); // #3.1\n  constructor(\n    private _consumerGroup: string,\n    connectionStringOrFullyQualifiedNamespace2: string,\n    checkpointStoreOrEventHubNameOrOptions3?:\n      | CheckpointStore\n      | EventHubConsumerClientOptions\n      | string,\n    checkpointStoreOrCredentialOrOptions4?:\n      | CheckpointStore\n      | EventHubConsumerClientOptions\n      | TokenCredential\n      | NamedKeyCredential\n      | SASCredential,\n    checkpointStoreOrOptions5?: CheckpointStore | EventHubConsumerClientOptions,\n    options6?: EventHubConsumerClientOptions,\n  ) {\n    if (isCredential(checkpointStoreOrCredentialOrOptions4)) {\n      // #3 or 3.1\n      logger.info(\"Creating EventHubConsumerClient with TokenCredential.\");\n\n      if (isCheckpointStore(checkpointStoreOrOptions5)) {\n        // 3.1\n        this._checkpointStore = checkpointStoreOrOptions5;\n        this._userChoseCheckpointStore = true;\n        this._clientOptions = options6 || {};\n      } else {\n        this._checkpointStore = new InMemoryCheckpointStore();\n        this._userChoseCheckpointStore = false;\n        this._clientOptions = checkpointStoreOrOptions5 || {};\n      }\n\n      this._context = createConnectionContext(\n        connectionStringOrFullyQualifiedNamespace2,\n        checkpointStoreOrEventHubNameOrOptions3 as string,\n        checkpointStoreOrCredentialOrOptions4,\n        this._clientOptions,\n      );\n    } else if (typeof checkpointStoreOrEventHubNameOrOptions3 === \"string\") {\n      // #2 or 2.1\n      logger.info(\"Creating EventHubConsumerClient with connection string and event hub name.\");\n\n      if (isCheckpointStore(checkpointStoreOrCredentialOrOptions4)) {\n        // 2.1\n        this._checkpointStore = checkpointStoreOrCredentialOrOptions4;\n        this._userChoseCheckpointStore = true;\n        this._clientOptions = (checkpointStoreOrOptions5 as EventHubConsumerClientOptions) || {};\n      } else {\n        // 2\n        this._checkpointStore = new InMemoryCheckpointStore();\n        this._userChoseCheckpointStore = false;\n        this._clientOptions = checkpointStoreOrCredentialOrOptions4 || {};\n      }\n\n      this._context = createConnectionContext(\n        connectionStringOrFullyQualifiedNamespace2,\n        checkpointStoreOrEventHubNameOrOptions3,\n        this._clientOptions,\n      );\n    } else {\n      // #1 or 1.1\n      logger.info(\"Creating EventHubConsumerClient with connection string.\");\n\n      if (isCheckpointStore(checkpointStoreOrEventHubNameOrOptions3)) {\n        // 1.1\n        this._checkpointStore = checkpointStoreOrEventHubNameOrOptions3;\n        this._userChoseCheckpointStore = true;\n        this._clientOptions =\n          (checkpointStoreOrCredentialOrOptions4 as EventHubConsumerClientOptions) || {};\n      } else {\n        // 1\n        this._checkpointStore = new InMemoryCheckpointStore();\n        this._userChoseCheckpointStore = false;\n        this._clientOptions =\n          (checkpointStoreOrEventHubNameOrOptions3 as EventHubConsumerClientOptions) || {};\n      }\n\n      this._context = createConnectionContext(\n        connectionStringOrFullyQualifiedNamespace2,\n        this._clientOptions,\n      );\n    }\n    this.identifier = this._clientOptions.identifier ?? getRandomName();\n    this._loadBalancingOptions = {\n      // default options\n      strategy: \"balanced\",\n      updateIntervalInMs: 10000,\n      partitionOwnershipExpirationIntervalInMs: 60000,\n      // options supplied by user\n      ...this._clientOptions?.loadBalancingOptions,\n    };\n  }\n\n  /**\n   * Closes the AMQP connection to the Event Hub instance,\n   * returning a promise that will be resolved when disconnection is completed.\n   * @returns Promise<void>\n   * @throws Error if the underlying connection encounters an error while closing.\n   */\n  async close(): Promise<void> {\n    // Stop all the actively running subscriptions.\n    const activeSubscriptions = Array.from(this._subscriptions);\n    await Promise.all(\n      activeSubscriptions.map((subscription) => {\n        return subscription.close();\n      }),\n    );\n    // Close the connection via the connection context.\n    return this._context.close();\n  }\n\n  /**\n   * Provides the id for each partition associated with the Event Hub.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with an Array of strings representing the id for\n   * each partition associated with the Event Hub.\n   * @throws Error if the underlying connection has been closed, create a new EventHubConsumerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getPartitionIds(options: GetPartitionIdsOptions = {}): Promise<Array<string>> {\n    return this._context\n      .managementSession!.getEventHubProperties({\n        ...options,\n        retryOptions: this._clientOptions.retryOptions,\n      })\n      .then((eventHubProperties) => {\n        return eventHubProperties.partitionIds;\n      });\n  }\n\n  /**\n   * Provides information about the state of the specified partition.\n   * @param partitionId - The id of the partition for which information is required.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with information about the state of the partition .\n   * @throws Error if the underlying connection has been closed, create a new EventHubConsumerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getPartitionProperties(\n    partitionId: string,\n    options: GetPartitionPropertiesOptions = {},\n  ): Promise<PartitionProperties> {\n    return this._context.managementSession!.getPartitionProperties(partitionId, {\n      ...options,\n      retryOptions: this._clientOptions.retryOptions,\n    });\n  }\n\n  /**\n   * Provides the Event Hub runtime information.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with information about the Event Hub instance.\n   * @throws Error if the underlying connection has been closed, create a new EventHubConsumerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getEventHubProperties(options: GetEventHubPropertiesOptions = {}): Promise<EventHubProperties> {\n    return this._context.managementSession!.getEventHubProperties({\n      ...options,\n      retryOptions: this._clientOptions.retryOptions,\n    });\n  }\n\n  /**\n   * Subscribe to events from all partitions.\n   *\n   * If checkpoint store is provided to the `EventHubConsumerClient` and there are multiple\n   * instances of your application, then each instance will subscribe to a subset of the\n   * partitions such that the load is balanced amongst them.\n   *\n   * Call close() on the returned object to stop receiving events.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new EventHubConsumerClient(consumerGroup, connectionString, eventHubName);\n   * const subscription = client.subscribe(\n   *  {\n   *    processEvents: (events, context) => { console.log(\"Received event count: \", events.length) },\n   *    processError: (err, context) => { console.log(\"Error: \", err) }\n   *  },\n   *  { startPosition: earliestEventPosition }\n   * );\n   * ```\n   *\n   * @param handlers - Handlers for the lifecycle of the subscription - subscription initialization\n   *                 per partition, receiving events, handling errors and the closing\n   *                 of a subscription per partition.\n   * @param options - Configures the way events are received.\n   * Most common are `maxBatchSize` and `maxWaitTimeInSeconds` that control the flow of\n   * events to the handler provided to receive events as well as the start position. For example,\n   * `{ maxBatchSize: 20, maxWaitTimeInSeconds: 120, startPosition: { sequenceNumber: 123 } }`\n   */\n  subscribe(handlers: SubscriptionEventHandlers, options?: SubscribeOptions): Subscription; // #1\n  /**\n   * Subscribe to events from a single partition.\n   * Call close() on the returned object to stop receiving events.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new EventHubConsumerClient(consumerGroup, connectionString, eventHubName);\n   * const subscription = client.subscribe(\n   *  partitionId,\n   *  {\n   *    processEvents: (events, context) => { console.log(\"Received event count: \", events.length) },\n   *    processError: (err, context) => { console.log(\"Error: \", err) }\n   *  },\n   *  { startPosition: earliestEventPosition }\n   * );\n   * ```\n   *\n   * @param partitionId - The id of the partition to subscribe to.\n   * @param handlers - Handlers for the lifecycle of the subscription - subscription initialization\n   *                 of the partition, receiving events, handling errors and the closing\n   *                 of a subscription to the partition.\n   * @param options - Configures the way events are received.\n   * Most common are `maxBatchSize` and `maxWaitTimeInSeconds` that control the flow of\n   * events to the handler provided to receive events as well as the start position. For example,\n   * `{ maxBatchSize: 20, maxWaitTimeInSeconds: 120, startPosition: { sequenceNumber: 123 } }`\n   */\n\n  subscribe(\n    partitionId: string,\n    handlers: SubscriptionEventHandlers,\n    options?: SubscribeOptions,\n  ): Subscription; // #2\n  subscribe(\n    handlersOrPartitionId1?: SubscriptionEventHandlers | string,\n    optionsOrHandlers2?: SubscribeOptions | SubscriptionEventHandlers,\n    possibleOptions3?: SubscribeOptions,\n  ): Subscription {\n    let eventProcessor: EventProcessor;\n    let targetedPartitionId: string;\n\n    if (isSubscriptionEventHandlers(handlersOrPartitionId1)) {\n      // #1: subscribe overload - read from all partitions\n      const options = optionsOrHandlers2 as SubscribeOptions | undefined;\n      if (options && options.startPosition) {\n        validateEventPositions(options.startPosition);\n      }\n      ({ targetedPartitionId, eventProcessor } = this.createEventProcessorForAllPartitions(\n        handlersOrPartitionId1,\n        options,\n      ));\n    } else if (isSubscriptionEventHandlers(optionsOrHandlers2)) {\n      // #2: subscribe overload (read from specific partition IDs), don't coordinate\n      const options = possibleOptions3 as SubscribeOptions | undefined;\n      if (options && options.startPosition) {\n        validateEventPositions(options.startPosition);\n      }\n      ({ targetedPartitionId, eventProcessor } = this.createEventProcessorForSinglePartition(\n        // cast to string as downstream code expects partitionId to be string, but JS users could have given us anything.\n        // we don't validate the user input and instead rely on service throwing errors if any\n        String(handlersOrPartitionId1),\n        optionsOrHandlers2,\n        possibleOptions3,\n      ));\n    } else {\n      throw new TypeError(\"Unhandled subscribe() overload\");\n    }\n\n    eventProcessor.start();\n\n    const subscription = {\n      get isRunning() {\n        return eventProcessor.isRunning();\n      },\n      close: () => {\n        this._partitionGate.remove(targetedPartitionId);\n        this._subscriptions.delete(subscription);\n        return eventProcessor.stop();\n      },\n    };\n    this._subscriptions.add(subscription);\n    return subscription;\n  }\n\n  /**\n   * Gets the LoadBalancing strategy that should be used based on what the user provided.\n   */\n  private _getLoadBalancingStrategy(): LoadBalancingStrategy {\n    if (!this._userChoseCheckpointStore) {\n      // The default behavior when a checkpointstore isn't provided\n      // is to always grab all the partitions.\n      return new UnbalancedLoadBalancingStrategy();\n    }\n\n    const partitionOwnershipExpirationIntervalInMs =\n      this._loadBalancingOptions.partitionOwnershipExpirationIntervalInMs;\n    if (this._loadBalancingOptions?.strategy === \"greedy\") {\n      return new GreedyLoadBalancingStrategy(partitionOwnershipExpirationIntervalInMs);\n    }\n\n    // The default behavior when a checkpointstore is provided is\n    // to grab one partition at a time.\n    return new BalancedLoadBalancingStrategy(partitionOwnershipExpirationIntervalInMs);\n  }\n\n  private createEventProcessorForAllPartitions(\n    subscriptionEventHandlers: SubscriptionEventHandlers,\n    options?: SubscribeOptions,\n  ): { targetedPartitionId: string; eventProcessor: EventProcessor } {\n    this._partitionGate.add(\"all\");\n\n    if (this._userChoseCheckpointStore) {\n      logger.verbose(\n        \"EventHubConsumerClient subscribing to all partitions, using a checkpoint store.\",\n      );\n    } else {\n      logger.verbose(\"EventHubConsumerClient subscribing to all partitions, no checkpoint store.\");\n    }\n\n    const loadBalancingStrategy = this._getLoadBalancingStrategy();\n    const eventProcessor = this._createEventProcessor(\n      this._context,\n      subscriptionEventHandlers,\n      this._checkpointStore,\n      {\n        ...defaultConsumerClientOptions,\n        ...(options as SubscribeOptions),\n        ownerLevel: getOwnerLevel(options, this._userChoseCheckpointStore),\n        // make it so all the event processors process work with the same overarching owner ID\n        // this allows the EventHubConsumer to unify all the work for any processors that it spawns\n        ownerId: this.identifier,\n        retryOptions: this._clientOptions.retryOptions,\n        loadBalancingStrategy,\n        loopIntervalInMs: this._loadBalancingOptions.updateIntervalInMs,\n      },\n    );\n\n    return { targetedPartitionId: \"all\", eventProcessor };\n  }\n\n  private createEventProcessorForSinglePartition(\n    partitionId: string,\n    eventHandlers: SubscriptionEventHandlers,\n    options?: SubscribeOptions,\n  ): { targetedPartitionId: string; eventProcessor: EventProcessor } {\n    this._partitionGate.add(partitionId);\n\n    const subscribeOptions = options as SubscribeOptions | undefined;\n\n    if (this._userChoseCheckpointStore) {\n      logger.verbose(\n        `EventHubConsumerClient subscribing to specific partition (${partitionId}), using a checkpoint store.`,\n      );\n    } else {\n      logger.verbose(\n        `EventHubConsumerClient subscribing to specific partition (${partitionId}), no checkpoint store.`,\n      );\n    }\n\n    const eventProcessor = this._createEventProcessor(\n      this._context,\n      eventHandlers,\n      this._checkpointStore,\n      {\n        ...defaultConsumerClientOptions,\n        ...options,\n        processingTarget: partitionId,\n        ownerLevel: getOwnerLevel(subscribeOptions, this._userChoseCheckpointStore),\n        retryOptions: this._clientOptions.retryOptions,\n        loadBalancingStrategy: new UnbalancedLoadBalancingStrategy(),\n        loopIntervalInMs: this._loadBalancingOptions.updateIntervalInMs ?? 10000,\n      },\n    );\n\n    return { targetedPartitionId: partitionId, eventProcessor };\n  }\n\n  private _createEventProcessor(\n    connectionContext: ConnectionContext,\n    subscriptionEventHandlers: SubscriptionEventHandlers,\n    checkpointStore: CheckpointStore,\n    options: FullEventProcessorOptions,\n  ): EventProcessor {\n    return new EventProcessor(\n      this._consumerGroup,\n      connectionContext,\n      subscriptionEventHandlers,\n      checkpointStore,\n      options,\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport function isCheckpointStore(possible: CheckpointStore | any): possible is CheckpointStore {\n  if (!possible) {\n    return false;\n  }\n\n  const checkpointStore = possible as CheckpointStore;\n\n  return (\n    typeof checkpointStore.claimOwnership === \"function\" &&\n    typeof checkpointStore.listCheckpoints === \"function\" &&\n    typeof checkpointStore.listOwnership === \"function\" &&\n    typeof checkpointStore.updateCheckpoint === \"function\"\n  );\n}\n\n/**\n * @internal\n */\nfunction isSubscriptionEventHandlers(\n  possible: any | SubscriptionEventHandlers,\n): possible is SubscriptionEventHandlers {\n  return typeof (possible as SubscriptionEventHandlers).processEvents === \"function\";\n}\n\nfunction getOwnerLevel(\n  options: SubscribeOptions | undefined,\n  userChoseCheckpointStore: boolean,\n): number | undefined {\n  if (options && options.ownerLevel) {\n    return options.ownerLevel;\n  }\n\n  if (userChoseCheckpointStore) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AmqpAnnotatedMessage } from \"@azure/core-amqp\";\nimport { EventData, populateIdempotentMessageAnnotations, toRheaMessage } from \"./eventData\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { MessageAnnotations, message, Message as RheaMessage } from \"rhea-promise\";\nimport { isDefined, isObjectWithProperties } from \"@azure/core-util\";\nimport { OperationTracingOptions, TracingContext } from \"@azure/core-tracing\";\nimport { instrumentEventData } from \"./diagnostics/instrumentEventData\";\nimport { throwTypeErrorIfParameterMissing } from \"./util/error\";\nimport { PartitionPublishingProperties } from \"./models/private\";\n\n/**\n * The amount of bytes to reserve as overhead for a small message.\n */\nconst smallMessageOverhead = 5;\n/**\n * The amount of bytes to reserve as overhead for a large message.\n */\nconst largeMessageOverhead = 8;\n/**\n * The maximum number of bytes that a message may be to be considered small.\n */\nconst smallMessageMaxBytes = 255;\n\n/**\n * Checks if the provided eventDataBatch is an instance of `EventDataBatch`.\n * @param eventDataBatch - The instance of `EventDataBatch` to verify.\n * @internal\n */\nexport function isEventDataBatch(eventDataBatch: unknown): eventDataBatch is EventDataBatch {\n  return (\n    isObjectWithProperties(eventDataBatch, [\"count\", \"sizeInBytes\", \"tryAdd\"]) &&\n    typeof eventDataBatch.tryAdd === \"function\" &&\n    typeof eventDataBatch.count === \"number\" &&\n    typeof eventDataBatch.sizeInBytes === \"number\"\n  );\n}\n\n/**\n * Options to configure the behavior of the `tryAdd` method on the `EventDataBatch` class.\n */\nexport interface TryAddOptions {\n  /**\n   * The options to use when creating Spans for tracing.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * An interface representing a batch of events which can be used to send events to Event Hub.\n *\n * To create the batch, use the `createBatch()` method on the `EventHubProducerClient`.\n * To send the batch, use the `sendBatch()` method on the same client.\n * To fill the batch, use the `tryAdd()` method on the batch itself.\n *\n */\nexport interface EventDataBatch {\n  /**\n   * A value that is hashed and used by the Azure Event Hubs service to determine the partition to\n   * which the events are sent. Use the `createBatch()` method on the `EventHubProducerClient` to\n   * set the partitionKey.\n   * @readonly\n   * @internal\n   */\n  readonly partitionKey?: string;\n\n  /**\n   * Id of the partition to which the batch of events are sent. Use the `createBatch()` method on\n   * the `EventHubProducerClient` to set the partitionId.\n   * @readonly\n   * @internal\n   */\n  readonly partitionId?: string;\n\n  /**\n   * Size of the batch in bytes after the events added to it have been encoded into a single AMQP\n   * message.\n   * @readonly\n   */\n  readonly sizeInBytes: number;\n\n  /**\n   * Number of events added to the batch.\n   * @readonly\n   */\n  readonly count: number;\n\n  /**\n   * The maximum size of the batch, in bytes. The `tryAdd` function on the batch will return `false`\n   * if the event being added causes the size of the batch to exceed this limit. Use the `createBatch()` method on\n   * the `EventHubProducerClient` to set the maxSizeInBytes.\n   * @readonly\n   */\n  readonly maxSizeInBytes: number;\n\n  /**\n   * Adds an event to the batch if permitted by the batch's size limit.\n   * **NOTE**: Always remember to check the return value of this method, before calling it again\n   * for the next event.\n   *\n   * @param eventData -  An individual event data object or AmqpAnnotatedMessage.\n   * @returns A boolean value indicating if the event data has been added to the batch or not.\n   */\n  tryAdd(eventData: EventData | AmqpAnnotatedMessage, options?: TryAddOptions): boolean;\n}\n\n/**\n * An internal class representing a batch of events which can be used to send events to Event Hub.\n *\n * @internal\n */\nexport class EventDataBatchImpl implements EventDataBatch {\n  /**\n   * Describes the amqp connection context for the Client.\n   */\n  private _context: ConnectionContext;\n  /**\n   * The Id of the partition to which the batch is expected to be sent to.\n   * Specifying this will throw an error if the batch was created using a `partitionKey`.\n   */\n  private _partitionId?: string;\n  /**\n   * A value that is hashed to produce a partition assignment.\n   * It guarantees that messages with the same partitionKey end up in the same partition.\n   * Specifying this will throw an error if the batch was created using a `partitionId`.\n   */\n  private _partitionKey?: string;\n  /**\n   * The maximum size allowed for the batch.\n   */\n  private _maxSizeInBytes: number;\n  /**\n   * Current size of the batch in bytes.\n   */\n  private _sizeInBytes: number;\n  /**\n   * Encoded amqp messages.\n   */\n  private _encodedMessages: Buffer[] = [];\n  /**\n   * Number of events in the batch.\n   */\n  private _count: number;\n  /**\n   * List of 'message' span contexts.\n   */\n  private _spanContexts: TracingContext[] = [];\n  /**\n   * The message annotations to apply on the batch envelope.\n   * This will reflect the message annotations on the first event\n   * that was added to the batch.\n   * A common annotation is the partition key.\n   */\n  private _batchAnnotations?: MessageAnnotations;\n  /**\n   * Indicates that the batch should be treated as idempotent.\n   */\n  private _isIdempotent: boolean;\n  /**\n   * The sequence number assigned to the first event in the batch while\n   * the batch is being sent to the service.\n   */\n  private _pendingStartingSequenceNumber?: number;\n  /**\n   * The publishing sequence number assigned to the first event in the batch at the time\n   * the batch was successfully published.\n   * If the producer was not configured to apply sequence numbering or if the batch\n   * has not yet been successfully published, the value will be `undefined`.\n   */\n  private _startingPublishSequenceNumber?: number;\n\n  /**\n   * EventDataBatch should not be constructed using `new EventDataBatch()`\n   * Use the `createBatch()` method on your `EventHubProducer` instead.\n   * @internal\n   */\n  constructor(\n    context: ConnectionContext,\n    maxSizeInBytes: number,\n    isIdempotent: boolean,\n    partitionKey?: string,\n    partitionId?: string,\n  ) {\n    this._context = context;\n    this._maxSizeInBytes = maxSizeInBytes;\n    this._isIdempotent = isIdempotent;\n    this._partitionKey = isDefined(partitionKey) ? String(partitionKey) : partitionKey;\n    this._partitionId = isDefined(partitionId) ? String(partitionId) : partitionId;\n    this._sizeInBytes = 0;\n    this._count = 0;\n  }\n\n  /**\n   * The maximum size of the batch, in bytes.\n   * @readonly\n   */\n  get maxSizeInBytes(): number {\n    return this._maxSizeInBytes;\n  }\n\n  /**\n   * The partitionKey set during `EventDataBatch` creation. This value is hashed to\n   * produce a partition assignment when the producer is created without a `partitionId`\n   * @readonly\n   */\n  get partitionKey(): string | undefined {\n    return this._partitionKey;\n  }\n\n  /**\n   * The partitionId set during `EventDataBatch` creation.\n   * If this value is set then partitionKey can not be set.\n   * @readonly\n   */\n  get partitionId(): string | undefined {\n    return this._partitionId;\n  }\n\n  /**\n   * Size of the `EventDataBatch` instance after the events added to it have been\n   * encoded into a single AMQP message.\n   * @readonly\n   */\n  get sizeInBytes(): number {\n    return this._sizeInBytes;\n  }\n\n  /**\n   * Number of events in the `EventDataBatch` instance.\n   * @readonly\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * The publishing sequence number assigned to the first event in the batch at the time\n   * the batch was successfully published.\n   * If the producer was not configured to apply sequence numbering or if the batch\n   * has not yet been successfully published, the value will be `undefined`.\n   */\n  get startingPublishedSequenceNumber(): number | undefined {\n    return this._startingPublishSequenceNumber;\n  }\n\n  /**\n   * Gets the \"message\" span contexts that were created when adding events to the batch.\n   * @internal\n   */\n  get _messageSpanContexts(): TracingContext[] {\n    return this._spanContexts;\n  }\n\n  /**\n   * Generates an AMQP message that contains the provided encoded events and annotations.\n   * @param encodedEvents - The already encoded events to include in the AMQP batch.\n   * @param annotations - The message annotations to set on the batch.\n   * @param publishingProps - Idempotent publishing properties used to decorate the events in the batch while sending.\n   */\n  private _generateBatch(\n    encodedEvents: Buffer[],\n    annotations: MessageAnnotations | undefined,\n    publishingProps?: PartitionPublishingProperties,\n  ): Buffer {\n    if (this._isIdempotent && publishingProps) {\n      // We need to decode the encoded events, add the idempotent annotations, and re-encode them.\n      // We can't lazily encode the events because we rely on `message.encode` to capture the\n      // byte length of anything not in `event.body`.\n      // Events can't be decorated ahead of time because the publishing properties aren't known\n      // until the events are being sent to the service.\n      const decodedEvents = encodedEvents.map(message.decode) as unknown as RheaMessage[];\n      const decoratedEvents = this._decorateRheaMessagesWithPublishingProps(\n        decodedEvents,\n        publishingProps,\n      );\n      encodedEvents = decoratedEvents.map(message.encode);\n    }\n\n    const batchEnvelope: RheaMessage = {\n      body: message.data_sections(encodedEvents),\n    };\n    if (annotations) {\n      batchEnvelope.message_annotations = annotations;\n    }\n    return message.encode(batchEnvelope);\n  }\n\n  /**\n   * Uses the publishingProps to add idempotent properties as message annotations to rhea messages.\n   */\n  private _decorateRheaMessagesWithPublishingProps(\n    events: RheaMessage[],\n    publishingProps: PartitionPublishingProperties,\n  ): RheaMessage[] {\n    if (!this._isIdempotent) {\n      return events;\n    }\n\n    const { lastPublishedSequenceNumber = 0, ownerLevel, producerGroupId } = publishingProps;\n    const startingSequenceNumber = lastPublishedSequenceNumber + 1;\n    for (let i = 0; i < events.length; i++) {\n      const event = events[i];\n      populateIdempotentMessageAnnotations(event, {\n        isIdempotentPublishingEnabled: this._isIdempotent,\n        ownerLevel,\n        producerGroupId,\n        publishSequenceNumber: startingSequenceNumber + i,\n      });\n    }\n\n    this._pendingStartingSequenceNumber = startingSequenceNumber;\n    return events;\n  }\n\n  /**\n   * Annotates a rhea message with placeholder idempotent properties if the batch is idempotent.\n   * This is necessary so that we can accurately calculate the size of the batch while adding events.\n   * Placeholder values are used because real values won't be known until we attempt to send the batch.\n   */\n  private _decorateRheaMessageWithPlaceholderIdempotencyProps(event: RheaMessage): RheaMessage {\n    if (!this._isIdempotent) {\n      return event;\n    }\n\n    if (!event.message_annotations) {\n      event.message_annotations = {};\n    }\n\n    // Set placeholder values for these annotations.\n    populateIdempotentMessageAnnotations(event, {\n      isIdempotentPublishingEnabled: this._isIdempotent,\n      ownerLevel: 0,\n      publishSequenceNumber: 0,\n      producerGroupId: 0,\n    });\n\n    return event;\n  }\n\n  /**\n   * Generates the single AMQP message which is the result of encoding all the events\n   * added into the `EventDataBatch` instance.\n   *\n   * This is not meant for the user to use directly.\n   *\n   * When the `EventDataBatch` instance is passed to the `send()` method on the `EventHubProducer`,\n   * this single batched AMQP message is what gets sent over the wire to the service.\n   * @readonly\n   */\n  _generateMessage(publishingProps?: PartitionPublishingProperties): Buffer {\n    return this._generateBatch(this._encodedMessages, this._batchAnnotations, publishingProps);\n  }\n\n  /**\n   * Sets startingPublishSequenceNumber to the pending publish sequence number.\n   */\n  _commitPublish(): void {\n    this._startingPublishSequenceNumber = this._pendingStartingSequenceNumber;\n  }\n\n  /**\n   * Tries to add an event data to the batch if permitted by the batch's size limit.\n   * **NOTE**: Always remember to check the return value of this method, before calling it again\n   * for the next event.\n   *\n   * @param eventData -  An individual event data object.\n   * @returns A boolean value indicating if the event data has been added to the batch or not.\n   */\n  public tryAdd(eventData: EventData | AmqpAnnotatedMessage, options: TryAddOptions = {}): boolean {\n    throwTypeErrorIfParameterMissing(this._context.connectionId, \"tryAdd\", \"eventData\", eventData);\n\n    const { entityPath, host } = this._context.config;\n    const { event: instrumentedEvent, spanContext } = instrumentEventData(\n      eventData,\n      options,\n      entityPath,\n      host,\n    );\n\n    // Convert EventData to RheaMessage.\n    const amqpMessage = toRheaMessage(instrumentedEvent, this._partitionKey);\n    const originalAnnotations = amqpMessage.message_annotations && {\n      ...amqpMessage.message_annotations,\n    };\n    this._decorateRheaMessageWithPlaceholderIdempotencyProps(amqpMessage);\n    const encodedMessage = message.encode(amqpMessage);\n\n    let currentSize = this._sizeInBytes;\n    // The first time an event is added, we need to calculate\n    // the overhead of creating an AMQP batch, including the\n    // message_annotations that are taken from the 1st message.\n    if (this.count === 0) {\n      if (originalAnnotations) {\n        this._batchAnnotations = originalAnnotations;\n      }\n\n      // Figure out the overhead of creating a batch by generating an empty batch\n      // with the expected batch annotations.\n      currentSize += this._generateBatch([], this._batchAnnotations).length;\n    }\n\n    const messageSize = encodedMessage.length;\n    const messageOverhead =\n      messageSize <= smallMessageMaxBytes ? smallMessageOverhead : largeMessageOverhead;\n    currentSize += messageSize + messageOverhead;\n\n    // Check if the size of the batch exceeds the maximum allowed size\n    // once we add the new event to it.\n    if (currentSize > this._maxSizeInBytes) {\n      return false;\n    }\n\n    // The event will fit in the batch, so it is now safe to store it.\n    this._encodedMessages.push(encodedMessage);\n    if (spanContext) {\n      this._spanContexts.push(spanContext);\n    }\n\n    this._sizeInBytes = currentSize;\n    this._count++;\n    return true;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AmqpError,\n  AwaitableSender,\n  AwaitableSenderOptions,\n  EventContext,\n  OnAmqpEvent,\n  Message as RheaMessage,\n  message,\n  types,\n} from \"rhea-promise\";\nimport {\n  ErrorNameConditionMapper,\n  RetryConfig,\n  RetryOperationType,\n  RetryOptions,\n  defaultCancellableLock,\n  delay,\n  retry,\n  translate,\n} from \"@azure/core-amqp\";\nimport {\n  EventData,\n  EventDataInternal,\n  populateIdempotentMessageAnnotations,\n  toRheaMessage,\n} from \"./eventData\";\nimport { EventDataBatch, EventDataBatchImpl, isEventDataBatch } from \"./eventDataBatch\";\nimport {\n  logErrorStackTrace,\n  createSimpleLogger,\n  logger,\n  SimpleLogger,\n  createSenderLogPrefix,\n} from \"./logger\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { ConnectionContext } from \"./connectionContext\";\nimport { EventHubProducerOptions, IdempotentLinkProperties } from \"./models/private\";\nimport { SendOptions } from \"./models/public\";\nimport { PartitionPublishingOptions, PartitionPublishingProperties } from \"./models/private\";\nimport { getRetryAttemptTimeoutInMs } from \"./util/retries\";\nimport {\n  idempotentProducerAmqpPropertyNames,\n  PENDING_PUBLISH_SEQ_NUM_SYMBOL,\n} from \"./util/constants\";\nimport { isDefined } from \"@azure/core-util\";\nimport { translateError } from \"./util/error\";\nimport { TimerLoop } from \"./util/timerLoop\";\nimport { withAuth } from \"./withAuth\";\nimport { getRandomName } from \"./util/utils\";\n\n/**\n * @internal\n */\nexport interface EventHubSenderOptions {\n  /**\n   * Indicates whether or not the sender should enable idempotent publishing to Event Hub partitions.\n   */\n  enableIdempotentProducer: boolean;\n  /**\n   * The EventHub partition id to which the sender wants to send the event data.\n   */\n  partitionId?: string;\n  /**\n   * The set of options that can be specified to influence publishing behavior\n   * specific to a partition.\n   */\n  partitionPublishingOptions?: PartitionPublishingOptions;\n}\n\n/**\n * Describes the EventHubSender that will send event data to EventHub.\n * @internal\n */\nexport class EventHubSender {\n  /**\n   * The unique lock name per connection that is used to acquire the\n   * lock for establishing a sender link by an entity on that connection.\n   */\n  private readonly senderLock: string = getRandomName(\"sender\");\n  /**\n   * The handler function to handle errors that happen on the\n   * underlying sender.\n   */\n  private readonly _onAmqpError: OnAmqpEvent;\n  /**\n   * The handler function to handle \"sender_close\" event\n   * that happens on the underlying sender.\n   */\n  private readonly _onAmqpClose: OnAmqpEvent;\n  /**\n   * The message handler that will be set as the handler on\n   * the underlying rhea sender's session for the \"session_error\" event.\n   */\n  private _onSessionError: OnAmqpEvent;\n  /**\n   * The message handler that will be set as the handler on\n   * the underlying rhea sender's session for the \"session_close\" event.\n   */\n  private _onSessionClose: OnAmqpEvent;\n  /**\n   * The AMQP sender link.\n   */\n  private _sender?: AwaitableSender;\n  /**\n   * The partition ID.\n   */\n  private readonly partitionId?: string;\n  /**\n   * Indicates whether the sender is configured for idempotent publishing.\n   */\n  private _isIdempotentProducer: boolean;\n  /**\n   * Indicates whether the sender has an in-flight send while idempotent\n   * publishing is enabled.\n   */\n  private _hasPendingSend?: boolean;\n  /**\n   * A local copy of the PartitionPublishingProperties that can be mutated to\n   * keep track of the lastSequenceNumber used.\n   */\n  private _localPublishingProperties?: PartitionPublishingProperties;\n  /**\n   * The user-provided set of options that can be specified to influence\n   * publishing behavior specific to a partition.\n   */\n  private _userProvidedPublishingOptions?: PartitionPublishingOptions;\n  /**\n   * Indicates whether the link is in the process of connecting\n   * (establishing) itself. Default value: `false`.\n   */\n  private isConnecting: boolean = false;\n  /**\n   * The unique name for the entity (mostly a guid).\n   */\n  private readonly name: string;\n  /**\n   * The address in the following form:\n   * - `\"<hubName>\"`\n   * - `\"<hubName>/Partitions/<partitionId>\"`.\n   */\n  private readonly address: string;\n  /**\n   * The token audience in the following form:\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>\"`\n   * - `\"sb://<yournamespace>.servicebus.windows.net/<hubName>/Partitions/<partitionId>\"`.\n   */\n  private readonly audience: string;\n  /**\n   * Provides relevant information about the amqp connection,\n   * cbs and $management sessions, token provider, sender and receivers.\n   */\n  private readonly _context: ConnectionContext;\n  /**\n   * The auth loop.\n   */\n  private authLoop?: TimerLoop;\n  /**\n   * The logger.\n   */\n  private readonly logger: SimpleLogger;\n\n  /** The client identifier */\n  private _id: string;\n\n  /**\n   * Creates a new EventHubSender instance.\n   * @param context - The connection context.\n   * @param options - Options used to configure the EventHubSender.\n   */\n  constructor(\n    context: ConnectionContext,\n    senderId: string,\n    { partitionId, enableIdempotentProducer, partitionPublishingOptions }: EventHubSenderOptions,\n  ) {\n    this.address = context.config.getSenderAddress(partitionId);\n    this.name = this.address;\n    this._id = senderId;\n    this.audience = context.config.getSenderAudience(partitionId);\n    this._context = context;\n    this.partitionId = partitionId;\n    this._isIdempotentProducer = enableIdempotentProducer;\n    this._userProvidedPublishingOptions = partitionPublishingOptions;\n    const logPrefix = createSenderLogPrefix(this.name, this._context.connectionId);\n    this.logger = createSimpleLogger(logger, logPrefix);\n\n    this._onAmqpError = (eventContext: EventContext) => {\n      const senderError = eventContext.sender && eventContext.sender.error;\n      this.logger.verbose(\n        \"'sender_error' event occurred. The associated error is: %O\",\n        senderError,\n      );\n      // TODO: Consider rejecting promise in trySendBatch() or createBatch()\n    };\n\n    this._onSessionError = (eventContext: EventContext) => {\n      const sessionError = eventContext.session && eventContext.session.error;\n      this.logger.verbose(\n        \"'session_error' event occurred. The associated error is: %O\",\n        sessionError,\n      );\n      // TODO: Consider rejecting promise in trySendBatch() or createBatch()\n    };\n\n    this._onAmqpClose = async (eventContext: EventContext) => {\n      const sender = this._sender || eventContext.sender!;\n      this.logger.verbose(\n        \"'sender_close' event occurred. Value for isItselfClosed on the receiver is: '%s' \" +\n          \"Value for isConnecting on the session is: '%s'.\",\n        sender?.isItselfClosed().toString(),\n        this.isConnecting,\n      );\n      if (sender && !this.isConnecting) {\n        // Call close to clean up timers & other resources\n        await sender.close().catch((err) => {\n          this.logger.verbose(\"error when closing after 'sender_close' event: %O\", err);\n        });\n      }\n    };\n\n    this._onSessionClose = async (eventContext: EventContext) => {\n      const sender = this._sender || eventContext.sender!;\n      this.logger.verbose(\n        \"'session_close' event occurred. Value for isSessionItselfClosed on the session is: '%s' \" +\n          \"Value for isConnecting on the session is: '%s'.\",\n        sender?.isSessionItselfClosed().toString(),\n        this.isConnecting,\n      );\n      if (sender && !this.isConnecting) {\n        // Call close to clean up timers & other resources\n        await sender.close().catch((err) => {\n          this.logger.verbose(\"error when closing after 'session_close' event: %O\", err);\n        });\n      }\n    };\n  }\n\n  /**\n   * Deletes the sender from the context. Clears the token renewal timer. Closes the sender link.\n   */\n  async close(): Promise<void> {\n    try {\n      if (this._sender) {\n        this.logger.info(\"closing\");\n        const senderLink = this._sender;\n        this._deleteFromCache();\n        await senderLink.close();\n        this.authLoop?.stop();\n        this.logger.verbose(\"closed.\");\n      }\n    } catch (err: any) {\n      const msg = `an error occurred while closing: ${err?.name}: ${err?.message}`;\n      this.logger.warning(msg);\n      logErrorStackTrace(err);\n      throw err;\n    }\n  }\n\n  /**\n   * Determines whether the AMQP sender link is open. If open then returns true else returns false.\n   * @returns boolean\n   */\n  isOpen(): boolean {\n    const result = Boolean(this._sender && this._sender.isOpen());\n    this.logger.verbose(\"is open? -> %s\", result);\n    return result;\n  }\n  /**\n   * Returns maximum message size on the AMQP sender link.\n   * @param abortSignal - An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   * @returns Promise<number>\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  async getMaxMessageSize(\n    options: {\n      retryOptions?: RetryOptions;\n      abortSignal?: AbortSignalLike;\n    } = {},\n  ): Promise<number> {\n    const sender = await this._getLink(options);\n\n    return sender.maxMessageSize;\n  }\n\n  /**\n   * Get the information about the state of publishing for a partition as observed by the `EventHubSender`.\n   * This data can always be read, but will only be populated with information relevant to the active features\n   * for the producer client.\n   */\n  async getPartitionPublishingProperties(\n    options: {\n      retryOptions?: RetryOptions;\n      abortSignal?: AbortSignalLike;\n    } = {},\n  ): Promise<PartitionPublishingProperties> {\n    if (this._localPublishingProperties) {\n      // Send a copy of the properties so it can't be mutated downstream.\n      return { ...this._localPublishingProperties };\n    }\n\n    const properties: PartitionPublishingProperties = {\n      isIdempotentPublishingEnabled: this._isIdempotentProducer,\n      partitionId: this.partitionId ?? \"\",\n    };\n\n    if (this._isIdempotentProducer) {\n      this._sender = await this._getLink(options);\n      // await this._createLinkIfNotOpen(options);\n      if (!this._sender) {\n        // createLinkIfNotOpen should throw if `this._sender` can't be created, but just in case it gets\n        // deleted while setting up token refreshing, make sure it exists.\n        throw new Error(\n          `Failed to retrieve partition publishing properties for partition \"${this.partitionId}\".`,\n        );\n      }\n\n      const {\n        [idempotentProducerAmqpPropertyNames.epoch]: ownerLevel,\n        [idempotentProducerAmqpPropertyNames.producerId]: producerGroupId,\n        [idempotentProducerAmqpPropertyNames.producerSequenceNumber]: lastPublishedSequenceNumber,\n      } = this._sender.properties ?? {};\n\n      properties.ownerLevel = parseInt(ownerLevel, 10);\n      properties.producerGroupId = parseInt(producerGroupId, 10);\n      properties.lastPublishedSequenceNumber = parseInt(lastPublishedSequenceNumber, 10);\n    }\n\n    this._localPublishingProperties = properties;\n\n    // Send a copy of the properties so it can't be mutated downstream.\n    return { ...properties };\n  }\n\n  /**\n   * Send a batch of EventData to the EventHub. The \"message_annotations\",\n   * \"application_properties\" and \"properties\" of the first message will be set as that\n   * of the envelope (batch message).\n   * @param events -  An array of EventData objects to be sent in a Batch message.\n   * @param options - Options to control the way the events are batched along with request options\n   */\n  async send(\n    events: EventData[] | EventDataBatch,\n    options?: SendOptions &\n      EventHubProducerOptions & { tracingProperties?: Array<EventData[\"properties\"]> },\n  ): Promise<void> {\n    try {\n      this.logger.info(\"trying to send EventData[].\");\n      if (this._isIdempotentProducer && this._hasPendingSend) {\n        throw new Error(\n          `There can only be 1 \"sendBatch\" call in-flight per partition while \"enableIdempotentRetries\" is set to true.`,\n        );\n      }\n\n      const eventCount = isEventDataBatch(events) ? events.count : events.length;\n      if (eventCount === 0) {\n        this.logger.info(`no events were passed to sendBatch.`);\n        return;\n      }\n\n      if (this._isIdempotentProducer) {\n        this._hasPendingSend = true;\n      }\n\n      this.logger.info(\"sending encoded batch message.\");\n      await this._trySendBatch(events, options);\n      if (this._isIdempotentProducer) {\n        commitIdempotentSequenceNumbers(events);\n        if (this._localPublishingProperties) {\n          const { lastPublishedSequenceNumber = 0 } = this._localPublishingProperties;\n          // Increment the lastPublishedSequenceNumber based on the number of events published.\n          this._localPublishingProperties.lastPublishedSequenceNumber =\n            lastPublishedSequenceNumber + eventCount;\n        }\n      }\n      return;\n    } catch (err: any) {\n      rollbackIdempotentSequenceNumbers(events);\n      this.logger.warning(\n        `an error occurred while sending the batch message ${err?.name}: ${err?.message}`,\n      );\n      logErrorStackTrace(err);\n      throw err;\n    } finally {\n      if (this._isIdempotentProducer) {\n        this._hasPendingSend = false;\n      }\n    }\n  }\n\n  /**\n   * @param sender - The rhea sender that contains the idempotent producer properties.\n   */\n  private _populateLocalPublishingProperties(sender: AwaitableSender): void {\n    const {\n      [idempotentProducerAmqpPropertyNames.epoch]: ownerLevel,\n      [idempotentProducerAmqpPropertyNames.producerId]: producerGroupId,\n      [idempotentProducerAmqpPropertyNames.producerSequenceNumber]: lastPublishedSequenceNumber,\n    } = sender.properties ?? {};\n\n    this._localPublishingProperties = {\n      isIdempotentPublishingEnabled: this._isIdempotentProducer,\n      partitionId: this.partitionId ?? \"\",\n      lastPublishedSequenceNumber,\n      ownerLevel,\n      producerGroupId,\n    };\n  }\n\n  private _deleteFromCache(): void {\n    this._sender = undefined;\n    delete this._context.senders[this.name];\n    this.logger.verbose(\"deleted from the client cache.\");\n  }\n\n  private _createSenderOptions(): AwaitableSenderOptions {\n    const srOptions: AwaitableSenderOptions = {\n      name: this.name,\n      source: this._id,\n      target: {\n        address: this.address,\n      },\n      onError: this._onAmqpError,\n      onClose: this._onAmqpClose,\n      onSessionError: this._onSessionError,\n      onSessionClose: this._onSessionClose,\n    };\n\n    if (this._isIdempotentProducer) {\n      srOptions.desired_capabilities = idempotentProducerAmqpPropertyNames.capability;\n      const idempotentProperties = generateIdempotentLinkProperties(\n        this._userProvidedPublishingOptions,\n        this._localPublishingProperties,\n      );\n      srOptions.properties = idempotentProperties;\n    }\n    this.logger.verbose(\"being created with options: %O\", srOptions);\n    return srOptions;\n  }\n\n  /**\n   * Tries to send the message to EventHub if there is enough credit to send them\n   * and the circular buffer has available space to settle the message after sending them.\n   *\n   * We have implemented a synchronous send over here in the sense that we shall be waiting\n   * for the message to be accepted or rejected and accordingly resolve or reject the promise.\n   * @param rheaMessage - The message to be sent to EventHub.\n   * @returns Promise<void>\n   */\n  private async _trySendBatch(\n    events: EventData[] | EventDataBatch,\n    options: SendOptions &\n      EventHubProducerOptions & {\n        /**\n         * Tracing properties that are associated with EventData.\n         */\n        tracingProperties?: Array<EventData[\"properties\"]>;\n      } = {},\n  ): Promise<void> {\n    const abortSignal: AbortSignalLike | undefined = options.abortSignal;\n    const retryOptions = options.retryOptions || {};\n    const timeoutInMs = getRetryAttemptTimeoutInMs(retryOptions);\n    retryOptions.timeoutInMs = timeoutInMs;\n\n    const sendEventPromise = async (): Promise<void> => {\n      const initStartTime = Date.now();\n      // TODO: (jeremymeng) A or B\n      // variant A:\n      const sender = await this._getLink(options);\n      // variant B\n      // await this._createLinkIfNotOpen(options);\n      const publishingProps = await this.getPartitionPublishingProperties(options);\n      const timeTakenByInit = Date.now() - initStartTime;\n\n      this.logger.verbose(\n        \"credit: %d available: %d\",\n        sender.credit,\n        sender.session.outgoing.available(),\n      );\n\n      let waitTimeForSendable = 1000;\n      if (!sender.sendable() && timeoutInMs - timeTakenByInit > waitTimeForSendable) {\n        this.logger.verbose(\"waiting for 1 second for sender to become sendable\");\n\n        await delay(waitTimeForSendable);\n\n        this.logger.verbose(\n          \"after waiting for a second, credit: %d available: %d\",\n          sender.credit,\n          sender.session?.outgoing?.available(),\n        );\n      } else {\n        waitTimeForSendable = 0;\n      }\n\n      if (!sender.sendable()) {\n        // let us retry to send the message after some time.\n        const msg = `cannot send the message right now. Please try later.`;\n        this.logger.warning(msg);\n        const amqpError: AmqpError = {\n          condition: ErrorNameConditionMapper.SenderBusyError,\n          description: msg,\n        };\n        throw translate(amqpError);\n      }\n\n      if (timeoutInMs <= timeTakenByInit + waitTimeForSendable) {\n        const desc: string =\n          `was not able to send the message right now, due ` + `to operation timeout.`;\n        this.logger.warning(desc);\n        const e: AmqpError = {\n          condition: ErrorNameConditionMapper.ServiceUnavailableError,\n          description: desc,\n        };\n        throw translate(e);\n      }\n\n      try {\n        const encodedMessage = transformEventsForSend(events, publishingProps, options);\n        const delivery = await sender.send(encodedMessage, {\n          format: 0x80013700,\n          timeoutInSeconds: (timeoutInMs - timeTakenByInit - waitTimeForSendable) / 1000,\n          abortSignal,\n        });\n        this.logger.info(\"sent message with delivery id: %d\", delivery.id);\n      } catch (err: any) {\n        const error = err.innerError || err;\n        const translatedError = translateError(error);\n        throw translatedError;\n      }\n    };\n\n    const config: RetryConfig<void> = {\n      operation: sendEventPromise,\n      connectionId: this._context.connectionId,\n      operationType: RetryOperationType.sendMessage,\n      abortSignal: abortSignal,\n      retryOptions: retryOptions,\n    };\n\n    try {\n      await retry<void>(config);\n    } catch (err: any) {\n      const translatedError = translate(err);\n      this.logger.warning(\n        \"an error occurred while sending the message %s\",\n        `${translatedError?.name}: ${translatedError?.message}`,\n      );\n      logErrorStackTrace(translatedError);\n      throw translatedError;\n    }\n  }\n\n  private async _getLink(\n    options: {\n      retryOptions?: RetryOptions;\n      abortSignal?: AbortSignalLike;\n    } = {},\n  ): Promise<AwaitableSender> {\n    if (this.isOpen() && this._sender) {\n      return this._sender;\n    }\n    const retryOptions = options.retryOptions || {};\n    const timeoutInMs = getRetryAttemptTimeoutInMs(retryOptions);\n    retryOptions.timeoutInMs = timeoutInMs;\n    const senderOptions = this._createSenderOptions();\n\n    const startTime = Date.now();\n    const createLinkPromise = async (): Promise<AwaitableSender> => {\n      return defaultCancellableLock.acquire(\n        this.senderLock,\n        () => {\n          const taskStartTime = Date.now();\n          const taskTimeoutInMs = timeoutInMs - (taskStartTime - startTime);\n          return this._init({\n            ...senderOptions,\n            abortSignal: options.abortSignal,\n            timeoutInMs: taskTimeoutInMs,\n          });\n        },\n        { abortSignal: options.abortSignal, timeoutInMs: timeoutInMs },\n      );\n    };\n\n    const config: RetryConfig<AwaitableSender> = {\n      operation: createLinkPromise,\n      connectionId: this._context.connectionId,\n      operationType: RetryOperationType.senderLink,\n      abortSignal: options.abortSignal,\n      retryOptions: retryOptions,\n    };\n\n    try {\n      return await retry<AwaitableSender>(config);\n    } catch (err: any) {\n      const translatedError = translate(err);\n      this.logger.warning(\n        \"an error occurred while creating: %s\",\n        `${translatedError?.name}: ${translatedError?.message}`,\n      );\n      logErrorStackTrace(translatedError);\n      throw translatedError;\n    }\n  }\n\n  /**\n   * Initializes the sender session on the connection.\n   * Should only be called from _createLinkIfNotOpen\n   */\n  private async _init(\n    options: AwaitableSenderOptions & {\n      abortSignal: AbortSignalLike | undefined;\n      timeoutInMs: number;\n    },\n  ): Promise<AwaitableSender> {\n    const createSender = async () => {\n      this.logger.verbose(\"trying to be created...\");\n\n      const sender = await this._context.connection.createAwaitableSender(options);\n      this._sender = sender;\n      this._populateLocalPublishingProperties(this._sender);\n      this.isConnecting = false;\n      this.logger.verbose(\"created with options: %O\", options);\n\n      // It is possible for someone to close the sender and then start it again.\n      // Thus make sure that the sender is present in the client cache.\n      if (!this._context.senders[this.name]) this._context.senders[this.name] = this;\n    };\n    try {\n      if (!this.isOpen() || !this._sender) {\n        await this._context.readyToOpenLink();\n        this.authLoop = await withAuth(\n          createSender,\n          this._context,\n          this.audience,\n          options.timeoutInMs,\n          this.logger,\n          { abortSignal: options.abortSignal },\n        );\n        // it is guaranteed to be defined at this point, otherwise, an error would\n        // have been thrown.\n        return this._sender!;\n      } else {\n        this.logger.verbose(\"is open -> %s. Hence not reconnecting.\", this.isOpen());\n        return this._sender;\n      }\n    } catch (err) {\n      const translatedError = translate(err);\n      this.logger.warning(\n        \"an error occurred while being created: %s\",\n        `${translatedError?.name}: ${translatedError?.message}`,\n      );\n      logErrorStackTrace(translatedError);\n      throw translatedError;\n    }\n  }\n\n  /**\n   * Creates a new sender to the given event hub, and optionally to a given partition if it is\n   * not present in the context or returns the one present in the context.\n   * @hidden\n   * @param options - Options used to configure the EventHubSender.\n   */\n  static create(\n    context: ConnectionContext,\n    senderId: string,\n    options: EventHubSenderOptions,\n  ): EventHubSender {\n    const ehSender: EventHubSender = new EventHubSender(context, senderId, options);\n    if (!context.senders[ehSender.name]) {\n      context.senders[ehSender.name] = ehSender;\n    }\n    return context.senders[ehSender.name];\n  }\n}\n\n/**\n * Generates the link properties for an indemopotent sender given\n * based on the user-provided and locally-cached publishing options.\n *\n * Note: The set of idempotent properties a user specifies at EventHubProducerClient instantiation-time\n * is slightly different than what the service returns and the EventHubSender keeps track of locally.\n *\n * The difference is that the user specifies the `startingSequenceNumber`, whereas the local options\n * (those returned by getPartitionPublishingProperties) specifies `lastPublishedSequenceNumber`.\n *\n * These _can_ be the same, but the user is technically free to set any `startingSequenceNumber` they want.\n * @internal\n */\nexport function generateIdempotentLinkProperties(\n  userProvidedPublishingOptions: PartitionPublishingOptions | undefined,\n  localPublishingOptions: PartitionPublishingProperties | undefined,\n): IdempotentLinkProperties | Record<string, never> {\n  let ownerLevel: number | undefined;\n  let producerGroupId: number | undefined;\n  let sequenceNumber: number | undefined;\n\n  // Prefer local publishing options since this is the up-to-date state of the sender.\n  // Only use user-provided publishing options the first time we create the link.\n  if (localPublishingOptions) {\n    ownerLevel = localPublishingOptions.ownerLevel;\n    producerGroupId = localPublishingOptions.producerGroupId;\n    sequenceNumber = localPublishingOptions.lastPublishedSequenceNumber;\n  } else if (userProvidedPublishingOptions) {\n    ownerLevel = userProvidedPublishingOptions.ownerLevel;\n    producerGroupId = userProvidedPublishingOptions.producerGroupId;\n    sequenceNumber = userProvidedPublishingOptions.startingSequenceNumber;\n  } else {\n    // If we don't have any properties at all, send an empty object.\n    // This will cause the service to generate a new producer-id for our client.\n    return {};\n  }\n\n  // The service requires that if ANY_ of these properties are defined,\n  // they _ALL_ have to be defined.\n  // If we don't have one of the required values, use `null` and the\n  // service will provide it.\n  const idempotentLinkProperties: IdempotentLinkProperties = {\n    [idempotentProducerAmqpPropertyNames.epoch]: isDefined(ownerLevel)\n      ? types.wrap_short(ownerLevel)\n      : null,\n    [idempotentProducerAmqpPropertyNames.producerId]: isDefined(producerGroupId)\n      ? types.wrap_long(producerGroupId)\n      : null,\n    [idempotentProducerAmqpPropertyNames.producerSequenceNumber]: isDefined(sequenceNumber)\n      ? types.wrap_int(sequenceNumber)\n      : null,\n  };\n\n  return idempotentLinkProperties;\n}\n\n/**\n * Encodes a list or batch of events into a single binary message that can be sent to the service.\n *\n * Prior to encoding, any special properties not specified by the user, such as tracing or idempotent\n * properties, are assigned to the list or batch of events as needed.\n *\n * @internal\n * @param events - Events to transform for sending to the service.\n * @param publishingProps - Describes the current publishing state for the partition.\n * @param options - Options used to configure this function.\n */\nexport function transformEventsForSend(\n  events: EventData[] | EventDataBatch,\n  publishingProps: PartitionPublishingProperties,\n  options: SendOptions & {\n    /**\n     * A list containing the `Diagnostic-Id` tracing property that is associated with each EventData.\n     * The index of tracingProperties corresponds to the same index in `events` when `events` is EventData[].\n     */\n    tracingProperties?: Array<EventData[\"properties\"]>;\n  } = {},\n): Buffer {\n  if (isEventDataBatch(events)) {\n    return (events as EventDataBatchImpl)._generateMessage(publishingProps);\n  } else {\n    const eventCount = events.length;\n    // convert events to rhea messages\n    const rheaMessages: RheaMessage[] = [];\n    const tracingProperties = options.tracingProperties ?? [];\n    for (let i = 0; i < eventCount; i++) {\n      const originalEvent = events[i];\n      const tracingProperty = tracingProperties[i];\n      // Create a copy of the user's event so we can add the tracing property.\n      const event: EventData = {\n        ...originalEvent,\n        properties: { ...originalEvent.properties, ...tracingProperty },\n      };\n      const rheaMessage = toRheaMessage(event, options.partitionKey);\n\n      // populate idempotent message annotations\n      const { lastPublishedSequenceNumber = 0 } = publishingProps;\n      const startingSequenceNumber = lastPublishedSequenceNumber + 1;\n      const pendingPublishSequenceNumber = startingSequenceNumber + i;\n      populateIdempotentMessageAnnotations(rheaMessage, {\n        ...publishingProps,\n        publishSequenceNumber: pendingPublishSequenceNumber,\n      });\n\n      if (publishingProps.isIdempotentPublishingEnabled) {\n        // Set pending seq number on user's event.\n        (originalEvent as EventDataInternal)[PENDING_PUBLISH_SEQ_NUM_SYMBOL] =\n          pendingPublishSequenceNumber;\n      }\n\n      rheaMessages.push(rheaMessage);\n    }\n\n    // Encode every amqp message and then convert every encoded message to amqp data section\n    const batchMessage: RheaMessage = {\n      body: message.data_sections(rheaMessages.map(message.encode)),\n    };\n\n    // Set message_annotations of the first message as\n    // that of the envelope (batch message).\n    if (rheaMessages[0].message_annotations) {\n      batchMessage.message_annotations = { ...rheaMessages[0].message_annotations };\n    }\n\n    // Finally encode the envelope (batch message).\n    return message.encode(batchMessage);\n  }\n}\n\n/**\n * Commits the pending publish sequence number events.\n * EventDataBatch exposes this as `startingPublishSequenceNumber`,\n * EventData not in a batch exposes this as `publishedSequenceNumber`.\n */\nfunction commitIdempotentSequenceNumbers(\n  events: Omit<EventDataInternal, \"getRawAmqpMessage\">[] | EventDataBatch,\n): void {\n  if (isEventDataBatch(events)) {\n    (events as EventDataBatchImpl)._commitPublish();\n  } else {\n    // For each event, set the `publishedSequenceNumber` equal to the sequence number\n    // we set when we attempted to send the events to the service.\n    for (const event of events) {\n      event._publishedSequenceNumber = event[PENDING_PUBLISH_SEQ_NUM_SYMBOL];\n      delete event[PENDING_PUBLISH_SEQ_NUM_SYMBOL];\n    }\n  }\n}\n\n/**\n * Rolls back any pending publish sequence number in the events.\n */\nfunction rollbackIdempotentSequenceNumbers(\n  events: Omit<EventDataInternal, \"getRawAmqpMessage\">[] | EventDataBatch,\n): void {\n  if (isEventDataBatch(events)) {\n    /* No action required. */\n  } else {\n    for (const event of events) {\n      delete event[PENDING_PUBLISH_SEQ_NUM_SYMBOL];\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ConnectionContext, createConnectionContext } from \"./connectionContext\";\nimport {\n  CreateBatchOptions,\n  EventHubClientOptions,\n  GetEventHubPropertiesOptions,\n  GetPartitionIdsOptions,\n  GetPartitionPropertiesOptions,\n  SendBatchOptions,\n} from \"./models/public\";\nimport { PartitionPublishingOptions, PartitionPublishingProperties } from \"./models/private\";\nimport { EventDataBatch, EventDataBatchImpl, isEventDataBatch } from \"./eventDataBatch\";\nimport { EventHubProperties, PartitionProperties } from \"./managementClient\";\nimport { TracingContext, TracingSpanLink } from \"@azure/core-tracing\";\nimport { NamedKeyCredential, SASCredential, TokenCredential } from \"@azure/core-auth\";\nimport { isDefined } from \"@azure/core-util\";\nimport { isCredential } from \"./util/typeGuards\";\nimport { logErrorStackTrace, logger } from \"./logger\";\nimport {\n  idempotentAlreadyPublished,\n  idempotentSomeAlreadyPublished,\n  throwErrorIfConnectionClosed,\n  throwTypeErrorIfParameterMissing,\n  validateProducerPartitionSettings,\n} from \"./util/error\";\nimport { AmqpAnnotatedMessage } from \"@azure/core-amqp\";\nimport { EventData, EventDataInternal } from \"./eventData\";\nimport { EventHubSender } from \"./eventHubSender\";\nimport { OperationOptions } from \"./util/operationOptions\";\nimport { toSpanOptions, tracingClient } from \"./diagnostics/tracing\";\nimport { instrumentEventData } from \"./diagnostics/instrumentEventData\";\nimport { getRandomName } from \"./util/utils\";\n\n/**\n * The `EventHubProducerClient` class is used to send events to an Event Hub.\n *\n * There are multiple ways to create an `EventHubProducerClient`\n * - Use the connection string from the SAS policy created for your Event Hub instance.\n * - Use the connection string from the SAS policy created for your Event Hub namespace,\n * and the name of the Event Hub instance\n * - Use the full namespace like `<yournamespace>.servicebus.windows.net`, and a credentials object.\n *\n * Optionally, you can also pass an options bag to configure the retry policy or proxy settings.\n *\n */\nexport class EventHubProducerClient {\n  /**\n   * Describes the amqp connection context for the client.\n   */\n  private _context: ConnectionContext;\n\n  /**\n   * The options passed by the user when creating the EventHubClient instance.\n   */\n  private _clientOptions: EventHubClientOptions;\n  /**\n   * Map of partitionId to senders\n   */\n  private _sendersMap: Map<string, EventHubSender>;\n  /**\n   * Indicates whether or not the EventHubProducerClient should enable idempotent publishing to Event Hub partitions.\n   * If enabled, the producer will only be able to publish directly to partitions;\n   * it will not be able to publish to the Event Hubs gateway for automatic partition routing\n   * nor will it be able to use a partition key.\n   * Default: false\n   */\n  private _enableIdempotentRetries?: boolean;\n  /**\n   * The set of options that can be specified to influence publishing behavior specific to the configured Event Hub partition.\n   * These options are not necessary in the majority of scenarios and are intended for use with specialized scenarios,\n   * such as when recovering the state used for idempotent publishing.\n   */\n  private _partitionOptions?: Record<string, PartitionPublishingOptions>;\n  /**\n   * @readonly\n   * The name of the Event Hub instance for which this client is created.\n   */\n  get eventHubName(): string {\n    return this._context.config.entityPath;\n  }\n\n  /**\n   * @readonly\n   * The fully qualified namespace of the Event Hub instance for which this client is created.\n   * This is likely to be similar to <yournamespace>.servicebus.windows.net.\n   */\n  get fullyQualifiedNamespace(): string {\n    return this._context.config.host;\n  }\n\n  /**\n   * The name used to identify this EventHubProducerClient.\n   * If not specified or empty, a random unique one will be generated.\n   */\n  public readonly identifier: string;\n\n  /**\n   * The `EventHubProducerClient` class is used to send events to an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param connectionString - The connection string to use for connecting to the Event Hub instance.\n   * It is expected that the shared key properties and the Event Hub path are contained in this connection string.\n   * e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;EntityPath=my-event-hub-name'.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(connectionString: string, options?: EventHubClientOptions); // eslint-disable-line @azure/azure-sdk/ts-naming-options\n  /**\n   * The `EventHubProducerClient` class is used to send events to an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param connectionString - The connection string to use for connecting to the Event Hubs namespace.\n   * It is expected that the shared key properties are contained in this connection string, but not the Event Hub path,\n   * e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;'.\n   * @param eventHubName - The name of the specific Event Hub to connect the client to.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(connectionString: string, eventHubName: string, options?: EventHubClientOptions); // eslint-disable-line @azure/azure-sdk/ts-naming-options\n  /**\n   * The `EventHubProducerClient` class is used to send events to an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param fullyQualifiedNamespace - The full namespace which is likely to be similar to\n   * <yournamespace>.servicebus.windows.net\n   * @param eventHubName - The name of the specific Event Hub to connect the client to.\n   * @param credential - An credential object used by the client to get the token to authenticate the connection\n   * with the Azure Event Hubs service.\n   * See &commat;azure/identity for creating credentials that support AAD auth.\n   * Use the `AzureNamedKeyCredential` from &commat;azure/core-auth if you want to pass in a `SharedAccessKeyName`\n   * and `SharedAccessKey` without using a connection string. These fields map to the `name` and `key` field respectively\n   * in `AzureNamedKeyCredential`.\n   * Use the `AzureSASCredential` from &commat;azure/core-auth if you want to pass in a `SharedAccessSignature`\n   * without using a connection string. This field maps to `signature` in `AzureSASCredential`.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    fullyQualifiedNamespace: string,\n    eventHubName: string,\n    credential: TokenCredential | NamedKeyCredential | SASCredential,\n    options?: EventHubClientOptions, // eslint-disable-line @azure/azure-sdk/ts-naming-options\n  );\n  constructor(\n    fullyQualifiedNamespaceOrConnectionString1: string,\n    eventHubNameOrOptions2?: string | EventHubClientOptions,\n    credentialOrOptions3?:\n      | TokenCredential\n      | NamedKeyCredential\n      | SASCredential\n      | EventHubClientOptions,\n    options4?: EventHubClientOptions, // eslint-disable-line @azure/azure-sdk/ts-naming-options\n  ) {\n    this._context = createConnectionContext(\n      fullyQualifiedNamespaceOrConnectionString1,\n      eventHubNameOrOptions2,\n      credentialOrOptions3,\n      options4,\n    );\n    if (typeof eventHubNameOrOptions2 !== \"string\") {\n      this._clientOptions = eventHubNameOrOptions2 || {};\n    } else if (!isCredential(credentialOrOptions3)) {\n      this._clientOptions = credentialOrOptions3 || {};\n    } else {\n      this._clientOptions = options4 || {};\n    }\n    this.identifier = this._clientOptions.identifier ?? getRandomName();\n    this._sendersMap = new Map();\n  }\n\n  /**\n   * Creates an instance of `EventDataBatch` to which one can add events until the maximum supported size is reached.\n   * The batch can be passed to the {@link sendBatch} method of the `EventHubProducerClient` to be sent to Azure Event Hubs.\n   *\n   * Events with different values for partitionKey or partitionId will need to be put into different batches.\n   * To simplify such batch management across partitions or to have the client automatically batch events\n   * and send them in specific intervals, use `EventHubBufferedProducerClient` instead.\n   *\n   * The below example assumes you have an array of events at hand to be batched safely.\n   * If you have events coming in one by one, `EventHubBufferedProducerClient` is recommended instead\n   * for effecient management of batches.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new EventHubProducerClient(connectionString);\n   * let batch = await client.createBatch();\n   * for (let i = 0; i < messages.length; i++) {\n   *  if (!batch.tryAdd(messages[i])) {\n   *    await client.sendBatch(batch);\n   *    batch = await client.createBatch();\n   *    if (!batch.tryAdd(messages[i])) {\n   *      throw new Error(\"Message too big to fit\")\n   *    }\n   *    if (i === messages.length - 1) {\n   *      await client.sendBatch(batch);\n   *    }\n   *   }\n   * }\n   * ```\n   *\n   * @param options -  Configures the behavior of the batch.\n   * - `partitionKey`  : A value that is hashed and used by the Azure Event Hubs service to determine the partition to which\n   * the events need to be sent.\n   * - `partitionId`   : Id of the partition to which the batch of events need to be sent.\n   * - `maxSizeInBytes`: The upper limit for the size of batch. The `tryAdd` function will return `false` after this limit is reached.\n   * - `abortSignal`   : A signal the request to cancel the operation.\n   * @returns Promise<EventDataBatch>\n   * @throws Error if both `partitionId` and `partitionKey` are set in the options.\n   * @throws Error if the underlying connection has been closed, create a new EventHubProducerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal in the options.\n   */\n  async createBatch(options: CreateBatchOptions = {}): Promise<EventDataBatch> {\n    throwErrorIfConnectionClosed(this._context);\n\n    const partitionId = isDefined(options.partitionId) ? String(options.partitionId) : undefined;\n\n    validateProducerPartitionSettings({\n      enableIdempotentRetries: this._enableIdempotentRetries,\n      partitionId,\n      partitionKey: options.partitionKey,\n    });\n\n    let sender = this._sendersMap.get(partitionId || \"\");\n    if (!sender) {\n      const partitionPublishingOptions = isDefined(partitionId)\n        ? this._partitionOptions?.[partitionId]\n        : undefined;\n      sender = EventHubSender.create(this._context, this.identifier, {\n        enableIdempotentProducer: Boolean(this._enableIdempotentRetries),\n        partitionId,\n        partitionPublishingOptions,\n      });\n      this._sendersMap.set(partitionId || \"\", sender);\n    }\n\n    let maxMessageSize = await sender.getMaxMessageSize({\n      retryOptions: this._clientOptions.retryOptions,\n      abortSignal: options.abortSignal,\n    });\n\n    if (options.maxSizeInBytes) {\n      if (options.maxSizeInBytes > maxMessageSize) {\n        const error = new Error(\n          `Max message size (${options.maxSizeInBytes} bytes) is greater than maximum message size (${maxMessageSize} bytes) on the AMQP sender link.`,\n        );\n        logger.warning(`[${this._context.connectionId}] ${error.message}`);\n        logErrorStackTrace(error);\n        throw error;\n      }\n      maxMessageSize = options.maxSizeInBytes;\n    }\n    return new EventDataBatchImpl(\n      this._context,\n      maxMessageSize,\n      Boolean(this._enableIdempotentRetries),\n      options.partitionKey,\n      partitionId,\n    );\n  }\n\n  /**\n   * Get the information about the state of publishing for a partition as observed by the `EventHubProducerClient`.\n   * This data can always be read, but will only be populated with information relevant to the active features\n   * for the producer client.\n   *\n   * @param partitionId - Id of the partition from which to retrieve publishing properties.\n   * @param options - The set of options to apply to the operation call.\n   * - `abortSignal`  : A signal the request to cancel the send operation.\n   * @returns Promise<void>\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore this is called in EventHubBufferedProducerClient via cast-to-any workaround\n  private async getPartitionPublishingProperties(\n    partitionId: string,\n    options: OperationOptions = {},\n  ): Promise<PartitionPublishingProperties> {\n    if (!isDefined(partitionId)) {\n      throw new TypeError(\n        `getPartitionPublishingProperties called without required argument \"partitionId\"`,\n      );\n    }\n\n    if (typeof partitionId === \"number\") {\n      partitionId = String(partitionId);\n    }\n\n    let sender = this._sendersMap.get(partitionId);\n    if (!sender) {\n      sender = EventHubSender.create(this._context, this.identifier, {\n        enableIdempotentProducer: Boolean(this._enableIdempotentRetries),\n        partitionId,\n        partitionPublishingOptions: this._partitionOptions?.[partitionId],\n      });\n      this._sendersMap.set(partitionId, sender);\n    }\n\n    return sender.getPartitionPublishingProperties(options);\n  }\n\n  /**\n   * Sends an array of events as a batch to the associated Event Hub.\n   *\n   * Azure Event Hubs has a limit on the size of the batch that can be sent which if exceeded\n   * will result in an error with code `MessageTooLargeError`.\n   * To safely send within batch size limits, use `EventHubProducerClient.createBatch()` or\n   * `EventHubBufferedProducerClient` instead.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new EventHubProducerClient(connectionString);\n   * await client.sendBatch(messages);\n   * ```\n   *\n   * @param batch - An array of {@link EventData} or `AmqpAnnotatedMessage`.\n   * @param options - A set of options that can be specified to influence the way in which\n   * events are sent to the associated Event Hub.\n   * - `abortSignal`  : A signal the request to cancel the send operation.\n   * - `partitionId`  : The partition this batch will be sent to. If set, `partitionKey` can not be set.\n   * - `partitionKey` : A value that is hashed to produce a partition assignment. If set, `partitionId` can not be set.\n   *\n   * @returns Promise<void>\n   * @throws MessageTooLargeError if all the events in the input array cannot be fit into a batch.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   * @throws MessagingError if an error is encountered while sending a message.\n   * @throws Error if the underlying connection or sender has been closed.\n   */\n  async sendBatch(\n    batch: EventData[] | AmqpAnnotatedMessage[],\n    options?: SendBatchOptions,\n  ): Promise<void>;\n  /**\n   * Sends a batch of events created using `EventHubProducerClient.createBatch()` to the associated Event Hub.\n   *\n   * Events with different values for partitionKey or partitionId will need to be put into different batches.\n   * To simplify such batch management across partitions or to have the client automatically batch events\n   * and send them in specific intervals, use `EventHubBufferedProducerClient` instead.\n   *\n   * The below example assumes you have an array of events at hand to be batched safely.\n   * If you have events coming in one by one, `EventHubBufferedProducerClient` is recommended instead\n   * for effecient management of batches.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new EventHubProducerClient(connectionString);\n   * let batch = await client.createBatch();\n   * for (let i = 0; i < messages.length; i++) {\n   *  if (!batch.tryAdd(messages[i])) {\n   *    await client.sendBatch(batch);\n   *    batch = await client.createBatch();\n   *    if (!batch.tryAdd(messages[i])) {\n   *      throw new Error(\"Message too big to fit\")\n   *    }\n   *    if (i === messages.length - 1) {\n   *      await client.sendBatch(batch);\n   *    }\n   *   }\n   * }\n   * ```\n   * @param batch - A batch of events that you can create using the {@link createBatch} method.\n   * @param options - A set of options that can be specified to influence the way in which\n   * events are sent to the associated Event Hub.\n   * - `abortSignal`  : A signal the request to cancel the send operation.\n   *\n   * @returns Promise<void>\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   * @throws MessagingError if an error is encountered while sending a message.\n   * @throws Error if the underlying connection or sender has been closed.\n   */\n  async sendBatch(batch: EventDataBatch, options?: OperationOptions): Promise<void>; // eslint-disable-line @azure/azure-sdk/ts-naming-options\n  async sendBatch(\n    batch: EventDataBatch | EventData[],\n    options: SendBatchOptions | OperationOptions = {},\n  ): Promise<void> {\n    throwErrorIfConnectionClosed(this._context);\n    throwTypeErrorIfParameterMissing(this._context.connectionId, \"sendBatch\", \"batch\", batch);\n\n    let partitionId: string | undefined;\n    let partitionKey: string | undefined;\n\n    // Holds an EventData properties object containing tracing properties.\n    // This lets us avoid cloning batch when it is EventData[], which is\n    // important as the idempotent EventHubSender needs to decorate the\n    // original EventData passed through.\n    const eventDataTracingProperties: Array<EventData[\"properties\"]> = [];\n\n    // link message span contexts\n    let spanContextsToLink: TracingContext[] = [];\n\n    if (isEventDataBatch(batch)) {\n      if (\n        this._enableIdempotentRetries &&\n        isDefined((batch as EventDataBatchImpl).startingPublishedSequenceNumber)\n      ) {\n        throw new Error(idempotentAlreadyPublished);\n      }\n      const partitionAssignment = extractPartitionAssignmentFromBatch(batch, options);\n      partitionId = partitionAssignment.partitionId;\n      partitionKey = partitionAssignment.partitionKey;\n      spanContextsToLink = (batch as EventDataBatchImpl)._messageSpanContexts;\n    } else {\n      if (!Array.isArray(batch)) {\n        batch = [batch];\n      }\n      if (batch.some((event) => isDefined((event as EventDataInternal)._publishedSequenceNumber))) {\n        throw new Error(idempotentSomeAlreadyPublished);\n      }\n      const partitionAssignment = extractPartitionAssignmentFromOptions(options);\n      partitionId = partitionAssignment.partitionId;\n      partitionKey = partitionAssignment.partitionKey;\n\n      for (let i = 0; i < batch.length; i++) {\n        batch[i] = instrumentEventData(\n          batch[i],\n          options,\n          this._context.config.entityPath,\n          this._context.config.host,\n          \"publish\",\n        ).event;\n        eventDataTracingProperties[i] = batch[i].properties;\n      }\n    }\n\n    validateProducerPartitionSettings({\n      enableIdempotentRetries: this._enableIdempotentRetries,\n      partitionId,\n      partitionKey,\n    });\n\n    return tracingClient.withSpan(\n      `${EventHubProducerClient.name}.${this.sendBatch.name}`,\n      options,\n      (updatedOptions) => {\n        let sender = this._sendersMap.get(partitionId || \"\");\n        if (!sender) {\n          const partitionPublishingOptions = isDefined(partitionId)\n            ? this._partitionOptions?.[partitionId]\n            : undefined;\n          sender = EventHubSender.create(this._context, this.identifier, {\n            enableIdempotentProducer: Boolean(this._enableIdempotentRetries),\n            partitionId,\n            partitionPublishingOptions,\n          });\n          this._sendersMap.set(partitionId || \"\", sender);\n        }\n\n        return sender.send(batch, {\n          ...updatedOptions,\n          partitionId,\n          partitionKey,\n          retryOptions: this._clientOptions.retryOptions,\n        });\n      },\n      {\n        spanLinks: spanContextsToLink.map<TracingSpanLink>((tracingContext) => {\n          return { tracingContext };\n        }),\n        ...toSpanOptions(this._context.config, \"publish\", \"client\"),\n      },\n    );\n  }\n\n  /**\n   * Closes the AMQP connection to the Event Hub instance,\n   * returning a promise that will be resolved when disconnection is completed.\n   * @returns Promise<void>\n   * @throws Error if the underlying connection encounters an error while closing.\n   */\n  async close(): Promise<void> {\n    await this._context.close();\n\n    for (const pair of this._sendersMap) {\n      await pair[1].close();\n    }\n    this._sendersMap.clear();\n  }\n\n  /**\n   * Provides the Event Hub runtime information.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with information about the Event Hub instance.\n   * @throws Error if the underlying connection has been closed, create a new EventHubProducerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getEventHubProperties(options: GetEventHubPropertiesOptions = {}): Promise<EventHubProperties> {\n    return this._context.managementSession!.getEventHubProperties({\n      ...options,\n      retryOptions: this._clientOptions.retryOptions,\n    });\n  }\n\n  /**\n   * Provides the id for each partition associated with the Event Hub.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with an Array of strings representing the id for\n   * each partition associated with the Event Hub.\n   * @throws Error if the underlying connection has been closed, create a new EventHubProducerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getPartitionIds(options: GetPartitionIdsOptions = {}): Promise<Array<string>> {\n    return this._context\n      .managementSession!.getEventHubProperties({\n        ...options,\n        retryOptions: this._clientOptions.retryOptions,\n      })\n      .then((eventHubProperties) => {\n        return eventHubProperties.partitionIds;\n      });\n  }\n\n  /**\n   * Provides information about the state of the specified partition.\n   * @param partitionId - The id of the partition for which information is required.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with information about the state of the partition .\n   * @throws Error if the underlying connection has been closed, create a new EventHubProducerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getPartitionProperties(\n    partitionId: string,\n    options: GetPartitionPropertiesOptions = {},\n  ): Promise<PartitionProperties> {\n    return this._context.managementSession!.getPartitionProperties(partitionId, {\n      ...options,\n      retryOptions: this._clientOptions.retryOptions,\n    });\n  }\n}\n\n/**\n * @internal\n */\nfunction extractPartitionAssignmentFromOptions(options: SendBatchOptions = {}): {\n  partitionKey?: string;\n  partitionId?: string;\n} {\n  const result: ReturnType<typeof extractPartitionAssignmentFromOptions> = {};\n  const { partitionId, partitionKey } = options;\n\n  if (isDefined(partitionId)) {\n    result.partitionId = String(partitionId);\n  }\n  if (isDefined(partitionKey)) {\n    result.partitionKey = String(partitionKey);\n  }\n\n  return result;\n}\n\n/**\n * @internal\n */\nfunction extractPartitionAssignmentFromBatch(\n  batch: EventDataBatch,\n  options: SendBatchOptions,\n): { partitionKey?: string; partitionId?: string } {\n  const result: ReturnType<typeof extractPartitionAssignmentFromBatch> = {};\n  const partitionId = batch.partitionId;\n  const partitionKey = batch.partitionKey;\n\n  const { partitionId: unexpectedPartitionId, partitionKey: unexpectedPartitionKey } =\n    extractPartitionAssignmentFromOptions(options);\n  if (unexpectedPartitionKey && partitionKey !== unexpectedPartitionKey) {\n    throw new Error(\n      `The partitionKey (${unexpectedPartitionKey}) set on sendBatch does not match the partitionKey (${partitionKey}) set when creating the batch.`,\n    );\n  }\n  if (unexpectedPartitionId && unexpectedPartitionId !== partitionId) {\n    throw new Error(\n      `The partitionId (${unexpectedPartitionId}) set on sendBatch does not match the partitionId (${partitionId}) set when creating the batch.`,\n    );\n  }\n\n  if (isDefined(partitionId)) {\n    result.partitionId = String(partitionId);\n  }\n  if (isDefined(partitionKey)) {\n    result.partitionKey = String(partitionKey);\n  }\n\n  return result;\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortOptions, createAbortablePromise } from \"@azure/core-util\";\n\n/**\n * `AwaitableQueue` stores items in the order that they are received.\n *\n * This differs from ordinary Queues in that `shift` returns a Promise for a value.\n * This allows a consumer of the queue to request an item that the queue does not yet have.\n *\n * @internal\n */\nexport class AwaitableQueue<T> {\n  private readonly _items: T[];\n\n  private readonly _resolvers: Array<(value: T) => void> = [];\n\n  constructor() {\n    this._items = [];\n  }\n\n  public size(): number {\n    return this._items.length;\n  }\n\n  /**\n   * Returns a Promise that will resolve with the next item in the queue.\n   */\n  public shift(options?: AbortOptions): Promise<T> {\n    const item = this._items.shift();\n    if (typeof item !== \"undefined\") {\n      return Promise.resolve(item);\n    }\n\n    return createAbortablePromise<T>((resolve) => this._resolvers.push(resolve), {\n      ...options,\n      cleanupBeforeAbort: () => this._resolvers.pop(),\n    });\n  }\n\n  /**\n   * Appends new item to the queue.\n   */\n  public push(item: T): void {\n    if (!this._resolveNextItem(item)) {\n      this._items.push(item);\n    }\n  }\n\n  private _resolveNextItem(item: T) {\n    const resolver = this._resolvers.shift();\n    if (!resolver) {\n      return false;\n    }\n\n    resolver(item);\n    return true;\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * @internal\n * Returns a promise and the promise's resolve and reject methods.\n */\nexport function getPromiseParts<T = unknown>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: (reason: Error) => void;\n} {\n  let resolver: (value: T) => void;\n  let rejector: (reason?: any) => void;\n  const promise = new Promise<T>((resolve, reject) => {\n    resolver = resolve;\n    rejector = reject;\n  });\n  return {\n    promise,\n    resolve: resolver!,\n    reject: rejector!,\n  };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AmqpAnnotatedMessage, delay } from \"@azure/core-amqp\";\nimport {\n  EventData,\n  EventDataBatch,\n  EventHubBufferedProducerClientOptions,\n  EventHubProducerClient,\n  OperationOptions,\n} from \"./index\";\nimport { isDefined, isObjectWithProperties, AbortOptions } from \"@azure/core-util\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { AwaitableQueue } from \"./impl/awaitableQueue\";\nimport { getPromiseParts } from \"./util/getPromiseParts\";\nimport { logger } from \"./logger\";\nimport { cancelablePromiseRace } from \"@azure/core-util\";\n\nexport interface BatchingPartitionChannelProps {\n  loopAbortSignal: AbortSignalLike;\n  maxBufferSize: number;\n  maxWaitTimeInMs: number;\n  partitionId: string;\n  producer: EventHubProducerClient;\n  /**\n   * The handler to call once a batch has successfully published.\n   */\n  onSendEventsSuccessHandler?: EventHubBufferedProducerClientOptions[\"onSendEventsSuccessHandler\"];\n  /**\n   * The handler to call when a batch fails to publish.\n   */\n  onSendEventsErrorHandler: EventHubBufferedProducerClientOptions[\"onSendEventsErrorHandler\"];\n}\n\n/**\n * The `BatchingPartitionChannel` is responsible for accepting enqueued events\n * and optimally batching and sending them to an Event Hub.\n * @internal\n */\nexport class BatchingPartitionChannel {\n  private _eventQueue = new AwaitableQueue<EventData | AmqpAnnotatedMessage>();\n  private _batchedEvents: Array<EventData | AmqpAnnotatedMessage> = [];\n  private _bufferCount: number = 0;\n  private _readyQueue: Array<{\n    resolve: (value: void) => void;\n    reject: (reason?: any) => void;\n  }> = [];\n  private _flushState:\n    | { isFlushing: false }\n    | { isFlushing: true; currentPromise: Promise<void>; resolve: () => void } = {\n    isFlushing: false,\n  };\n  private _isRunning: boolean = false;\n  private _lastBatchCreationTime: number = 0;\n  private _loopAbortSignal: AbortSignalLike;\n  private _maxBufferSize: number;\n  private _maxWaitTimeInMs: number;\n  private _onSendEventsErrorHandler: EventHubBufferedProducerClientOptions[\"onSendEventsErrorHandler\"];\n  private _onSendEventsSuccessHandler?: EventHubBufferedProducerClientOptions[\"onSendEventsSuccessHandler\"];\n\n  private _partitionId: string;\n  private _producer: EventHubProducerClient;\n\n  constructor({\n    loopAbortSignal,\n    maxBufferSize,\n    maxWaitTimeInMs,\n    onSendEventsErrorHandler,\n    onSendEventsSuccessHandler,\n    partitionId,\n    producer,\n  }: BatchingPartitionChannelProps) {\n    this._loopAbortSignal = loopAbortSignal;\n    this._maxBufferSize = maxBufferSize;\n    this._maxWaitTimeInMs = maxWaitTimeInMs;\n    this._onSendEventsErrorHandler = onSendEventsErrorHandler;\n    this._onSendEventsSuccessHandler = onSendEventsSuccessHandler;\n    this._partitionId = partitionId;\n    this._producer = producer;\n  }\n\n  getCurrentBufferedCount(): number {\n    return this._bufferCount;\n  }\n\n  async enqueueEvent(event: EventData | AmqpAnnotatedMessage): Promise<void> {\n    await this._ready();\n    this._eventQueue.push(event);\n    this._bufferCount++;\n\n    if (!this._isRunning) {\n      this._isRunning = true;\n      this._startPublishLoop().catch((e) => {\n        logger.error(\n          `The following error occured during batch creation or sending: ${JSON.stringify(\n            e,\n            undefined,\n            \"  \",\n          )}`,\n        );\n      });\n    }\n  }\n\n  /**\n   * Sets the flush state so that no new events can be enqueued until\n   * all the currently buffered events are sent to the Event Hub.\n   *\n   * Returns a promise that resolves once flushing is complete.\n   */\n  async flush(_options: OperationOptions = {}): Promise<void> {\n    const state = this._flushState;\n    if (state.isFlushing) {\n      return state.currentPromise;\n    }\n\n    if (this.getCurrentBufferedCount() === 0) {\n      return Promise.resolve();\n    }\n\n    const { promise, resolve } = getPromiseParts<void>();\n    this._flushState = { isFlushing: true, currentPromise: promise, resolve };\n\n    return promise;\n  }\n\n  /**\n   * Returns a promise that resolves once there is room for events to be added\n   * to the buffer.\n   */\n  private _ready(): Promise<void> {\n    const currentBufferedCount = this.getCurrentBufferedCount();\n\n    // If the buffer isn't full and we don't have any pending `ready()` calls,\n    // then it's safe to return right away.\n    if (\n      currentBufferedCount < this._maxBufferSize &&\n      !this._readyQueue.length &&\n      !this._flushState.isFlushing\n    ) {\n      return Promise.resolve();\n    }\n\n    const { promise: readyPromise, reject, resolve } = getPromiseParts<void>();\n    this._readyQueue.push({ resolve, reject });\n\n    return readyPromise;\n  }\n\n  /**\n   * Starts the loop that creates batches and sends them to the Event Hub.\n   *\n   * The loop will run until the `_loopAbortSignal` is aborted.\n   */\n  private async _startPublishLoop() {\n    let batch: EventDataBatch | undefined;\n    // `eventToAddToBatch` is used to keep track of an event that has been removed\n    // from the queue, but has not yet been added to a batch.\n    // This prevents losing an event if a `sendBatch` or `createBatch` call fails\n    // before the event is added to a batch.\n    let eventToAddToBatch: EventData | AmqpAnnotatedMessage | undefined;\n    while (!this._loopAbortSignal.aborted) {\n      try {\n        if (!isDefined(batch)) {\n          batch = await this._createBatch();\n        }\n        const timeSinceLastBatchCreation = Date.now() - this._lastBatchCreationTime;\n        const maximumTimeToWaitForEvent = batch.count\n          ? Math.max(this._maxWaitTimeInMs - timeSinceLastBatchCreation, 0)\n          : this._maxWaitTimeInMs;\n\n        const event =\n          eventToAddToBatch ??\n          (await cancelablePromiseRace<[EventData | AmqpAnnotatedMessage, void]>(\n            [\n              (abortOptions: AbortOptions) => this._eventQueue.shift(abortOptions),\n              (abortOptions: AbortOptions) =>\n                delay<void>(\n                  maximumTimeToWaitForEvent,\n                  abortOptions.abortSignal,\n                  abortOptions.abortErrorMsg,\n                ),\n            ],\n            { abortSignal: this._loopAbortSignal },\n          ));\n\n        if (!event) {\n          // We didn't receive an event within the allotted time.\n          // Send the existing batch if it has events in it.\n          if (batch.count) {\n            await this._producer.sendBatch(batch);\n            this._reportSuccess();\n            batch = await this._createBatch();\n          }\n          continue;\n        } else if (!eventToAddToBatch) {\n          eventToAddToBatch = event;\n        }\n\n        const didAdd = batch.tryAdd(event);\n        if (didAdd) {\n          // This event will definitely make it to one of the user-provided handlers\n          // since it was added to a batch.\n          // Store it so we can return it in a handler later.\n          this._batchedEvents.push(event);\n          // Clear reference to existing event since it has been added to the batch.\n          eventToAddToBatch = undefined;\n        }\n\n        if (didAdd && batch.count >= this._maxBufferSize) {\n          // Whenever batch.count exceeds the max count of buffered events, send the batch.\n          await this._producer.sendBatch(batch);\n          this._reportSuccess();\n          batch = await this._createBatch();\n        } else if (!didAdd && batch.count) {\n          // If the event wasn't able to be added and the current batch isn't empty,\n          // attempt to send the current batch and add the event to a new batch.\n          await this._producer.sendBatch(batch);\n          this._reportSuccess();\n          batch = await this._createBatch();\n        }\n\n        if (!didAdd && !batch.tryAdd(event)) {\n          // TODO: Report MaxMesageSizeExceeded error. Mimic service's error.\n          this._reportFailure(new Error(\"Placeholder for max message size exceeded\"), event);\n        } else if (!didAdd) {\n          // Handles the case where the event _was_ successfull added to the new batch.\n          this._batchedEvents.push(event);\n        }\n        // Clear reference to existing event since it has been added to the batch.\n        eventToAddToBatch = undefined;\n      } catch (err: any) {\n        if (!isObjectWithProperties(err, [\"name\"]) || err.name !== \"AbortError\") {\n          this._reportFailure(err);\n          batch = undefined;\n          this._batchedEvents = [];\n        }\n      }\n    }\n  }\n\n  /**\n   * Helper method that returns an `EventDataBatch`.\n   * This also has the side effects of\n   *  - keeping track of batch creation time: needed for maxWaitTime calculations.\n   *  - clearing reference to batched events.\n   *  - incrementing the readiness: creating a new batch indicates the buffer\n   *    should have room, so we can resolve some pending `ready()` calls.\n   */\n  private async _createBatch(): Promise<EventDataBatch> {\n    this._lastBatchCreationTime = Date.now();\n    this._batchedEvents = [];\n    const batch = await this._producer.createBatch({\n      partitionId: this._partitionId,\n    });\n    this._incrementReadiness();\n    return batch;\n  }\n\n  /**\n   * This method will resolve as many pending `ready()` calls as it can\n   * based on how much space remains in the buffer.\n   *\n   * If the channel is currently flushing, this is a no-op. This prevents\n   * `enqueueEvent` calls from adding the event to the buffer until flushing\n   * completes.\n   */\n  private _incrementReadiness() {\n    if (this._flushState.isFlushing) {\n      return;\n    }\n    const currentBufferedCount = this.getCurrentBufferedCount();\n    const num = Math.min(this._maxBufferSize - currentBufferedCount, this._readyQueue.length);\n    for (let i = 0; i < num; i++) {\n      this._readyQueue.shift()?.resolve();\n    }\n  }\n\n  /**\n   * Calls the user-provided `onSendEventsSuccessHandler` with the events\n   * that were successfully sent.\n   */\n  private _reportSuccess() {\n    this._bufferCount = this._bufferCount - this._batchedEvents.length;\n    this._updateFlushState();\n    try {\n      this._onSendEventsSuccessHandler?.({\n        events: this._batchedEvents,\n        partitionId: this._partitionId,\n      });\n    } catch (e: unknown) {\n      logger.error(\n        `The following error occurred in the onSendEventsSuccessHandler: ${JSON.stringify(\n          e,\n          undefined,\n          \"  \",\n        )}`,\n      );\n    }\n  }\n\n  /**\n   * Calls the user-provided `onSendEventsErrorHandler` with an error and the events\n   * that were not successfully sent.\n   */\n  private _reportFailure(err: any, event?: EventData | AmqpAnnotatedMessage) {\n    this._bufferCount = this._bufferCount - (event ? 1 : this._batchedEvents.length);\n    this._updateFlushState();\n    try {\n      this._onSendEventsErrorHandler({\n        error: err,\n        events: event ? [event] : this._batchedEvents,\n        partitionId: this._partitionId,\n      });\n    } catch (e: unknown) {\n      logger.error(\n        `The following error occurred in the onSendEventsErrorHandler: ${JSON.stringify(\n          e,\n          undefined,\n          \"  \",\n        )}`,\n      );\n    }\n  }\n\n  /**\n   * Updates the channel's flush state once the size of the\n   * event buffer has decreased to 0.\n   */\n  private _updateFlushState() {\n    const state = this._flushState;\n    if (!state.isFlushing || this.getCurrentBufferedCount() !== 0) {\n      return;\n    }\n\n    state.resolve();\n\n    this._flushState = { isFlushing: false };\n    this._incrementReadiness();\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/* eslint-disable no-fallthrough */\n\nexport function mapPartitionKeyToId(partitionKey: string, partitionCount: number): number {\n  const hashedParitionKey = hashPartitionKey(partitionKey);\n  return Math.abs(hashedParitionKey % partitionCount);\n}\n\n/**\n * @internal\n */\nexport function hashPartitionKey(partitionKey: string): number {\n  const hash = computeHash(Buffer.from(partitionKey, \"utf8\"));\n  return castToInt16(hash.c ^ hash.b);\n}\n\nfunction readUInt32(data: Buffer, offset: number): number {\n  return data.readUInt32LE(offset);\n}\n\nfunction castToInt16(n: number): number {\n  return new Int16Array([n])[0];\n}\n\nfunction computeHash(\n  data: Buffer,\n  seed1: number = 0,\n  seed2: number = 0,\n): {\n  b: number;\n  c: number;\n} {\n  let a: number, b: number, c: number;\n\n  a = b = c = 0xdeadbeef + data.length + seed1;\n  c += seed2;\n\n  let index = 0,\n    size = data.length;\n  while (size > 12) {\n    a += readUInt32(data, index);\n    b += readUInt32(data, index + 4);\n    c += readUInt32(data, index + 8);\n\n    a -= c;\n    a ^= (c << 4) | (c >>> 28);\n    c += b;\n\n    b -= a;\n    b ^= (a << 6) | (a >>> 26);\n    a += c;\n\n    c -= b;\n    c ^= (b << 8) | (b >>> 24);\n    b += a;\n\n    a -= c;\n    a ^= (c << 16) | (c >>> 16);\n    c += b;\n\n    b -= a;\n    b ^= (a << 19) | (a >>> 13);\n    a += c;\n\n    c -= b;\n    c ^= (b << 4) | (b >>> 28);\n    b += a;\n\n    index += 12;\n    size -= 12;\n  }\n\n  let curr = size;\n  switch (curr) {\n    case 12:\n      a += readUInt32(data, index);\n      b += readUInt32(data, index + 4);\n      c += readUInt32(data, index + 8);\n      break;\n    case 11:\n      c += data[index + 10] << 16;\n      curr = 10;\n    case 10:\n      c += data[index + 9] << 8;\n      curr = 9;\n    case 9:\n      c += data[index + 8];\n      curr = 8;\n    case 8:\n      b += readUInt32(data, index + 4);\n      a += readUInt32(data, index);\n      break;\n    case 7:\n      b += data[index + 6] << 16;\n      curr = 6;\n    case 6:\n      b += data[index + 5] << 8;\n      curr = 5;\n    case 5:\n      b += data[index + 4];\n      curr = 4;\n    case 4:\n      a += readUInt32(data, index);\n      break;\n    case 3:\n      a += data[index + 2] << 16;\n      curr = 2;\n    case 2:\n      a += data[index + 1] << 8;\n      curr = 1;\n    case 1:\n      a += data[index];\n      break;\n    case 0:\n      return { b: b >>> 0, c: c >>> 0 };\n  }\n\n  c ^= b;\n  c -= (b << 14) | (b >>> 18);\n\n  a ^= c;\n  a -= (c << 11) | (c >>> 21);\n\n  b ^= a;\n  b -= (a << 25) | (a >>> 7);\n\n  c ^= b;\n  c -= (b << 16) | (b >>> 16);\n\n  a ^= c;\n  a -= (c << 4) | (c >>> 28);\n\n  b ^= a;\n  b -= (a << 14) | (a >>> 18);\n\n  c ^= b;\n  c -= (b << 24) | (b >>> 8);\n\n  return { b: b >>> 0, c: c >>> 0 };\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isDefined } from \"@azure/core-util\";\nimport { mapPartitionKeyToId } from \"./partitionKeyToIdMapper\";\n\n/**\n * @internal\n * Assigns a partition based on the partition ids it knows about and an optional partition id or partition key.\n */\nexport class PartitionAssigner {\n  private _partitions: string[] = [];\n\n  private _lastRoundRobinPartitionIndex: number = -1;\n\n  /**\n   * Set the partition ids that can be used when assigning a partition.\n   * @param partitionIds - All valid partition ids.\n   */\n  public setPartitionIds(partitionIds: string[]): void {\n    this._partitions = partitionIds;\n  }\n\n  /**\n   * Returns a partitionId from the list of partition ids set via `setPartitionIds`.\n   *\n   * If a partitionId is specified, then that will be returned directly.\n   * If a partitionKey is specified, then a partitionId will be calculated based on the partitionKey.\n   * Specifying both partitionId and partitionKey results in an error.\n   *\n   * If neither partitionId nor partitionKey are specified, then a partitionId will be selected\n   * based on a round-robin approach.\n   */\n  assignPartition({\n    partitionId,\n    partitionKey,\n  }: {\n    partitionId?: string;\n    partitionKey?: string;\n  }): string {\n    if (isDefined(partitionId) && isDefined(partitionKey)) {\n      throw new Error(\n        `The partitionId (${partitionId}) and partitionKey (${partitionKey}) cannot both be specified.`,\n      );\n    }\n\n    if (!this._partitions.length) {\n      throw new Error(`Unable to determine partitionIds, can't assign partitionId.`);\n    }\n\n    if (isDefined(partitionId) && this._partitions.includes(partitionId)) {\n      return partitionId;\n    }\n\n    if (isDefined(partitionKey)) {\n      return mapPartitionKeyToId(partitionKey, this._partitions.length).toString();\n    }\n\n    return this._assignRoundRobinPartition();\n  }\n\n  private _assignRoundRobinPartition(): string {\n    const maxPartitionIndex = this._partitions.length - 1;\n    const proposedPartitionIndex = this._lastRoundRobinPartitionIndex + 1;\n\n    const nextPartitionIndex =\n      proposedPartitionIndex > maxPartitionIndex ? 0 : proposedPartitionIndex;\n\n    this._lastRoundRobinPartitionIndex = nextPartitionIndex;\n    return this._partitions[nextPartitionIndex];\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { EventData } from \"./eventData\";\nimport { EventHubProducerClient } from \"./eventHubProducerClient\";\nimport { OperationOptions } from \"./util/operationOptions\";\nimport {\n  EventHubClientOptions,\n  GetEventHubPropertiesOptions,\n  GetPartitionIdsOptions,\n  GetPartitionPropertiesOptions,\n  SendBatchOptions,\n} from \"./models/public\";\nimport { EventHubProperties, PartitionProperties } from \"./managementClient\";\nimport { NamedKeyCredential, SASCredential, TokenCredential } from \"@azure/core-auth\";\nimport { isDefined } from \"@azure/core-util\";\nimport { isCredential } from \"./util/typeGuards\";\nimport { AbortController } from \"@azure/abort-controller\";\nimport { AmqpAnnotatedMessage, delay } from \"@azure/core-amqp\";\nimport { BatchingPartitionChannel } from \"./batchingPartitionChannel\";\nimport { PartitionAssigner } from \"./impl/partitionAssigner\";\nimport { logger } from \"./logger\";\nimport { getRandomName } from \"./util/utils\";\n\n/**\n * Contains the events that were successfully sent to the Event Hub,\n * and the partition they were assigned to.\n */\nexport interface OnSendEventsSuccessContext {\n  /**\n   * The partition each event was assigned.\n   */\n  partitionId: string;\n  /**\n   * The array of {@link EventData} and/or `AmqpAnnotatedMessage` that were successfully sent to the Event Hub.\n   */\n  events: Array<EventData | AmqpAnnotatedMessage>;\n}\n\n/**\n * Contains the events that were not successfully sent to the Event Hub,\n * the partition they were assigned to, and the error that was encountered while sending.\n */\nexport interface OnSendEventsErrorContext {\n  /**\n   * The partition each event was assigned.\n   */\n  partitionId: string;\n  /**\n   * The array of {@link EventData} and/or `AmqpAnnotatedMessage` that were not successfully sent to the Event Hub.\n   */\n  events: Array<EventData | AmqpAnnotatedMessage>;\n  /**\n   * The error that occurred when sending the associated events to the Event Hub.\n   */\n  error: Error;\n}\n\n/**\n * Describes the options that can be provided while creating the `EventHubBufferedProducerClient`.\n */\nexport interface EventHubBufferedProducerClientOptions extends EventHubClientOptions {\n  /**\n   * The total number of events that can be buffered for publishing at a given time for a given partition.\n   *\n   * Default: 1500\n   */\n  maxEventBufferLengthPerPartition?: number;\n  /**\n   * The amount of time to wait for a new event to be enqueued in the buffer before publishing a partially full batch.\n   *\n   * Default: 1 second.\n   */\n  maxWaitTimeInMs?: number;\n  /**\n   * The handler to call once a batch has successfully published.\n   */\n  onSendEventsSuccessHandler?: (ctx: OnSendEventsSuccessContext) => void;\n  /**\n   * The handler to call when a batch fails to publish.\n   */\n  onSendEventsErrorHandler: (ctx: OnSendEventsErrorContext) => void;\n  /**\n   * Indicates whether or not the EventHubProducerClient should enable idempotent publishing to Event Hub partitions.\n   * If enabled, the producer will only be able to publish directly to partitions;\n   * it will not be able to publish to the Event Hubs gateway for automatic partition routing\n   * nor will it be able to use a partition key.\n   * Default: false\n   */\n  enableIdempotentRetries?: boolean;\n}\n\n/**\n * Options to configure the `flush` method on the `EventHubBufferedProducerClient`.\n */\nexport interface BufferedFlushOptions extends OperationOptions {}\n\n/**\n * Options to configure the `close` method on the `EventHubBufferedProducerClient`.\n */\nexport interface BufferedCloseOptions extends OperationOptions {\n  /**\n   * When `true`, all buffered events that are pending should be sent before closing.\n   * When `false`, abandon all buffered events and close immediately.\n   * Defaults to `true`.\n   */\n  flush?: boolean;\n}\n\n/**\n * Options to configure the `enqueueEvents` method on the `EventHubBufferedProducerClient`.\n */\nexport interface EnqueueEventOptions extends SendBatchOptions {}\n\n/**\n * The `EventHubBufferedProducerClient`is used to publish events to a specific Event Hub.\n *\n * The `EventHubBufferedProducerClient` does not publish events immediately.\n * Instead, events are buffered so they can be efficiently batched and published\n * when the batch is full or the `maxWaitTimeInMs` has elapsed with no new events\n * enqueued.\n *\n * Depending on the options specified when events are enqueued, they may be\n * automatically assigned to a partition, grouped according to the specified partition key,\n * or assigned a specifically requested partition.\n *\n * This model is intended to shift the burden of batch management from callers, at the cost of\n * non-deterministic timing, for when events will be published. There are additional trade-offs\n * to consider, as well:\n * - If the application crashes, events in the buffer will not have been published. To prevent\n *   data loss, callers are encouraged to track publishing progress using the\n *   `onSendEventsSuccessHandler` and `onSendEventsErrorHandler` handlers.\n * - Events specifying a partition key may be assigned a different partition than those using\n *   the same key with other producers.\n * - In the unlikely event that a partition becomes temporarily unavailable, the\n *   `EventHubBufferedProducerClient` may take longer to recover than other producers.\n *\n * In scenarios where it is important to have events published immediately with a deterministic\n * outcome, ensure that partition keys are assigned to a partition consistent with other\n * publishers, or where maximizing availability is a requirement, using the\n * `EventHubProducerClient` is recommended.\n */\nexport class EventHubBufferedProducerClient {\n  /**\n   * Controls the `abortSignal` passed to each `BatchingPartitionChannel`.\n   * Used to signal when a channel should stop waiting for events.\n   */\n  private _abortController = new AbortController();\n\n  /**\n   * Indicates whether the client has been explicitly closed.\n   */\n  private _isClosed: boolean = false;\n\n  /**\n   * Handles assigning partitions.\n   */\n  private _partitionAssigner = new PartitionAssigner();\n\n  /**\n   * The known partitionIds that will be used when assigning events to partitions.\n   */\n  private _partitionIds: string[] = [];\n\n  /**\n   * The EventHubProducerClient to use when creating and sending batches to the Event Hub.\n   */\n  private _producer: EventHubProducerClient;\n\n  /**\n   * Mapping of partitionIds to `BatchingPartitionChannels`.\n   * Each `BatchingPartitionChannel` handles buffering events and backpressure independently.\n   */\n  private _partitionChannels = new Map<string, BatchingPartitionChannel>();\n\n  /**\n   * The options passed by the user when creating the EventHubBufferedProducerClient instance.\n   */\n  private _clientOptions: EventHubBufferedProducerClientOptions;\n\n  /**\n   * The interval at which the background management operation should run.\n   */\n  private _backgroundManagementInterval = 10000; // 10 seconds\n\n  /**\n   * Indicates whether the background management loop is running.\n   */\n  private _isBackgroundManagementRunning = false;\n\n  /**\n   * @readonly\n   * The name of the Event Hub instance for which this client is created.\n   */\n  get eventHubName(): string {\n    return this._producer.eventHubName;\n  }\n\n  /**\n   * @readonly\n   * The fully qualified namespace of the Event Hub instance for which this client is created.\n   * This is likely to be similar to <yournamespace>.servicebus.windows.net.\n   */\n  get fullyQualifiedNamespace(): string {\n    return this._producer.fullyQualifiedNamespace;\n  }\n\n  /**\n   * The name used to identify this EventHubBufferedProducerClient.\n   * If not specified or empty, a random unique one will be generated.\n   */\n  public readonly identifier: string;\n\n  /**\n   * The `EventHubBufferedProducerClient` class is used to send events to an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param connectionString - The connection string to use for connecting to the Event Hub instance.\n   * It is expected that the shared key properties and the Event Hub path are contained in this connection string.\n   * e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;EntityPath=my-event-hub-name'.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(connectionString: string, options: EventHubBufferedProducerClientOptions);\n  /**\n   * The `EventHubBufferedProducerClient` class is used to send events to an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param connectionString - The connection string to use for connecting to the Event Hubs namespace.\n   * It is expected that the shared key properties are contained in this connection string, but not the Event Hub path,\n   * e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;'.\n   * @param eventHubName - The name of the specific Event Hub to connect the client to.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    connectionString: string,\n    eventHubName: string,\n    options: EventHubBufferedProducerClientOptions,\n  );\n  /**\n   * The `EventHubBufferedProducerClient` class is used to send events to an Event Hub.\n   * Use the `options` parmeter to configure retry policy or proxy settings.\n   * @param fullyQualifiedNamespace - The full namespace which is likely to be similar to\n   * <yournamespace>.servicebus.windows.net\n   * @param eventHubName - The name of the specific Event Hub to connect the client to.\n   * @param credential - An credential object used by the client to get the token to authenticate the connection\n   * with the Azure Event Hubs service.\n   * See &commat;azure/identity for creating credentials that support AAD auth.\n   * Use the `AzureNamedKeyCredential` from &commat;azure/core-auth if you want to pass in a `SharedAccessKeyName`\n   * and `SharedAccessKey` without using a connection string. These fields map to the `name` and `key` field respectively\n   * in `AzureNamedKeyCredential`.\n   * Use the `AzureSASCredential` from &commat;azure/core-auth if you want to pass in a `SharedAccessSignature`\n   * without using a connection string. This field maps to `signature` in `AzureSASCredential`.\n   * @param options - A set of options to apply when configuring the client.\n   * - `retryOptions`   : Configures the retry policy for all the operations on the client.\n   * For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n   * - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n   * - `userAgent`      : A string to append to the built in user agent string that is passed to the service.\n   */\n  constructor(\n    fullyQualifiedNamespace: string,\n    eventHubName: string,\n    credential: TokenCredential | NamedKeyCredential | SASCredential,\n    options: EventHubBufferedProducerClientOptions,\n  );\n  constructor(\n    fullyQualifiedNamespaceOrConnectionString1: string,\n    eventHubNameOrOptions2: string | EventHubBufferedProducerClientOptions,\n    credentialOrOptions3?:\n      | TokenCredential\n      | NamedKeyCredential\n      | SASCredential\n      | EventHubBufferedProducerClientOptions,\n    options4?: EventHubBufferedProducerClientOptions,\n  ) {\n    if (typeof eventHubNameOrOptions2 !== \"string\") {\n      this.identifier = eventHubNameOrOptions2.identifier ?? getRandomName();\n      this._producer = new EventHubProducerClient(fullyQualifiedNamespaceOrConnectionString1, {\n        ...eventHubNameOrOptions2,\n        identifier: this.identifier,\n      });\n      this._clientOptions = { ...eventHubNameOrOptions2 };\n    } else if (!isCredential(credentialOrOptions3)) {\n      this.identifier = credentialOrOptions3?.identifier ?? getRandomName();\n      this._producer = new EventHubProducerClient(\n        fullyQualifiedNamespaceOrConnectionString1,\n        eventHubNameOrOptions2,\n        { ...credentialOrOptions3, identifier: this.identifier },\n      );\n      this._clientOptions = { ...credentialOrOptions3! };\n    } else {\n      this.identifier = options4?.identifier ?? getRandomName();\n      this._producer = new EventHubProducerClient(\n        fullyQualifiedNamespaceOrConnectionString1,\n        eventHubNameOrOptions2,\n        credentialOrOptions3,\n        { ...options4, identifier: this.identifier },\n      );\n      this._clientOptions = { ...options4! };\n    }\n    // setting internal idempotent publishing option on the standard producer.\n    (this._producer as any)._enableIdempotentRetries = this._clientOptions.enableIdempotentRetries;\n  }\n\n  /**\n   * Closes the AMQP connection to the Event Hub instance,\n   * returning a promise that will be resolved when disconnection is completed.\n   *\n   * This will wait for enqueued events to be flushed to the service before closing\n   * the connection.\n   * To close without flushing, set the `flush` option to `false`.\n   *\n   * @param options - The set of options to apply to the operation call.\n   * @returns Promise<void>\n   * @throws Error if the underlying connection encounters an error while closing.\n   */\n  async close(options: BufferedCloseOptions = {}): Promise<void> {\n    logger.verbose(\"closing buffered producer client...\");\n    if (!isDefined(options.flush) || options.flush === true) {\n      await this.flush(options);\n    }\n    // Calling abort signals to the BatchingPartitionChannels that they\n    // should stop reading/sending events, and to the background management\n    // loop that it should stop periodic partition id updates.\n    this._abortController.abort();\n    await this._producer.close();\n    this._isClosed = true;\n  }\n\n  /**\n   * Enqueues an event into the buffer to be published to the Event Hub.\n   * If there is no capacity in the buffer when this method is invoked,\n   * it will wait for space to become available and ensure that the event\n   * has been enqueued.\n   *\n   * When this call returns, the event has been accepted into the buffer,\n   * but it may not have been published yet.\n   * Publishing will take place at a nondeterministic point in the future as the buffer is processed.\n   *\n   * @param events - An {@link EventData} or `AmqpAnnotatedMessage`.\n   * @param options - A set of options that can be specified to influence the way in which\n   * the event is sent to the associated Event Hub.\n   * - `abortSignal`  : A signal used to cancel the enqueueEvent operation.\n   * - `partitionId`  : The partition this set of events will be sent to. If set, `partitionKey` can not be set.\n   * - `partitionKey` : A value that is hashed to produce a partition assignment. If set, `partitionId` can not be set.\n   * @returns The total number of events that are currently buffered and waiting to be published, across all partitions.\n   */\n  async enqueueEvent(\n    event: EventData | AmqpAnnotatedMessage,\n    options: EnqueueEventOptions = {},\n  ): Promise<number> {\n    if (this._isClosed) {\n      throw new Error(\n        `This EventHubBufferedProducerClient has already been closed. Create a new client to enqueue events.`,\n      );\n    }\n\n    if (!this._partitionIds.length) {\n      await this._updatePartitionIds();\n    }\n    if (!this._isBackgroundManagementRunning) {\n      this._startPartitionIdsUpdateLoop().catch((e) => {\n        logger.error(\n          `The following error occured during batch creation or sending: ${JSON.stringify(\n            e,\n            undefined,\n            \"  \",\n          )}`,\n        );\n      });\n      this._isBackgroundManagementRunning = true;\n    }\n\n    const partitionId = this._partitionAssigner.assignPartition({\n      partitionId: options.partitionId,\n      partitionKey: options.partitionKey,\n    });\n\n    const partitionChannel = this._getPartitionChannel(partitionId);\n    await partitionChannel.enqueueEvent(event);\n    return this._getTotalBufferedEventsCount();\n  }\n\n  /**\n   * Enqueues events into the buffer to be published to the Event Hub.\n   * If there is no capacity in the buffer when this method is invoked,\n   * it will wait for space to become available and ensure that the events\n   * have been enqueued.\n   *\n   * When this call returns, the events have been accepted into the buffer,\n   * but it may not have been published yet.\n   * Publishing will take place at a nondeterministic point in the future as the buffer is processed.\n   *\n   * @param events - An array of {@link EventData} or `AmqpAnnotatedMessage`.\n   * @param options - A set of options that can be specified to influence the way in which\n   * events are sent to the associated Event Hub.\n   * - `abortSignal`  : A signal used to cancel the enqueueEvents operation.\n   * - `partitionId`  : The partition this set of events will be sent to. If set, `partitionKey` can not be set.\n   * - `partitionKey` : A value that is hashed to produce a partition assignment. If set, `partitionId` can not be set.\n   * @returns The total number of events that are currently buffered and waiting to be published, across all partitions.\n   */\n  async enqueueEvents(\n    events: EventData[] | AmqpAnnotatedMessage[],\n    options: EnqueueEventOptions = {},\n  ): Promise<number> {\n    for (const event of events) {\n      await this.enqueueEvent(event, options);\n    }\n\n    return this._getTotalBufferedEventsCount();\n  }\n\n  /**\n   * Attempts to publish all events in the buffer immediately.\n   * This may result in multiple batches being published,\n   * the outcome of each of which will be individually reported by\n   * the `onSendEventsSuccessHandler` and `onSendEventsErrorHandler` handlers.\n   *\n   * @param options - The set of options to apply to the operation call.\n   */\n  async flush(options: BufferedFlushOptions = {}): Promise<void> {\n    await Promise.all(\n      Array.from(this._partitionChannels.values()).map((channel) => channel.flush(options)),\n    );\n  }\n\n  /**\n   * Provides the Event Hub runtime information.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with information about the Event Hub instance.\n   * @throws Error if the underlying connection has been closed, create a new EventHubBufferedProducerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getEventHubProperties(options: GetEventHubPropertiesOptions = {}): Promise<EventHubProperties> {\n    return this._producer.getEventHubProperties(options);\n  }\n\n  /**\n   * Provides the id for each partition associated with the Event Hub.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with an Array of strings representing the id for\n   * each partition associated with the Event Hub.\n   * @throws Error if the underlying connection has been closed, create a new EventHubBufferedProducerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getPartitionIds(options: GetPartitionIdsOptions = {}): Promise<Array<string>> {\n    return this._producer.getPartitionIds(options);\n  }\n\n  /**\n   * Provides information about the state of the specified partition.\n   * @param partitionId - The id of the partition for which information is required.\n   * @param options - The set of options to apply to the operation call.\n   * @returns A promise that resolves with information about the state of the partition .\n   * @throws Error if the underlying connection has been closed, create a new EventHubBufferedProducerClient.\n   * @throws AbortError if the operation is cancelled via the abortSignal.\n   */\n  getPartitionProperties(\n    partitionId: string,\n    options: GetPartitionPropertiesOptions = {},\n  ): Promise<PartitionProperties> {\n    return this._producer.getPartitionProperties(partitionId, options);\n  }\n\n  /**\n   * Gets the `BatchingPartitionChannel` associated with the partitionId.\n   *\n   * If one does not exist, it is created.\n   */\n  private _getPartitionChannel(partitionId: string): BatchingPartitionChannel {\n    const partitionChannel =\n      this._partitionChannels.get(partitionId) ??\n      new BatchingPartitionChannel({\n        loopAbortSignal: this._abortController.signal,\n        maxBufferSize: this._clientOptions.maxEventBufferLengthPerPartition || 1500,\n        maxWaitTimeInMs: this._clientOptions.maxWaitTimeInMs || 1000,\n        onSendEventsErrorHandler: this._clientOptions.onSendEventsErrorHandler,\n        onSendEventsSuccessHandler: this._clientOptions.onSendEventsSuccessHandler,\n        partitionId,\n        producer: this._producer,\n      });\n    this._partitionChannels.set(partitionId, partitionChannel);\n    return partitionChannel;\n  }\n\n  /**\n   * Returns the total number of buffered events across all partitions.\n   */\n  private _getTotalBufferedEventsCount(): number {\n    let total = 0;\n    for (const [_, channel] of this._partitionChannels) {\n      total += channel.getCurrentBufferedCount();\n    }\n\n    return total;\n  }\n\n  private async _updatePartitionIds(): Promise<void> {\n    logger.verbose(\"Checking for partition Id updates...\");\n    const queriedPartitionIds = await this.getPartitionIds();\n\n    if (this._partitionIds.length !== queriedPartitionIds.length) {\n      logger.verbose(\"Applying partition Id updates\");\n      this._partitionIds = queriedPartitionIds;\n      this._partitionAssigner.setPartitionIds(this._partitionIds);\n    }\n  }\n\n  private async _startPartitionIdsUpdateLoop(): Promise<void> {\n    logger.verbose(\"Starting a background loop to check and apply partition id updates...\");\n    while (!this._abortController.signal.aborted && !this._isClosed) {\n      await delay<void>(this._backgroundManagementInterval);\n      if (!this._isClosed) {\n        await this._updatePartitionIds();\n      }\n    }\n  }\n}\n", "// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { EventData } from \"./eventData\";\n\n/**\n * A message with payload and content type fields\n *\n * This interface is hidden because it is already exported by `@azure/schema-registry-avro`\n *\n * @hidden\n */\nexport interface MessageContent {\n  /**\n   * The message's binary data\n   */\n  data: Uint8Array;\n  /**\n   * The message's content type\n   */\n  contentType: string;\n}\n\n/**\n * A message adapter interface that specifies methods for producing and consuming\n * messages with payloads and content type fields.\n *\n * This interface is hidden because it is already exported by `@azure/schema-registry-avro`\n *\n * @hidden\n */\nexport interface MessageAdapter<MessageT> {\n  /**\n   * defines how to create a message from a payload and a content type\n   */\n  produce: (MessageContent: MessageContent) => MessageT;\n  /**\n   * defines how to access the payload and the content type of a message\n   */\n  consume: (message: MessageT) => MessageContent;\n}\n\n// This type should always be equivalent to Omit<Omit<EventData, \"body\">, \"contentType\">\n/**\n * Parameters to the `createEventDataAdapter` function that creates an event data adapter.\n */\nexport interface EventDataAdapterParameters {\n  /**\n   * The correlation identifier that allows an\n   * application to specify a context for the message for the purposes of correlation, for example\n   * reflecting the MessageId of a message that is being replied to.\n   */\n  correlationId?: string | number | Buffer;\n\n  /**\n   * The message identifier is an\n   * application-defined value that uniquely identifies the message and its payload.\n   *\n   * Note: Numbers that are not whole integers are not allowed.\n   */\n  messageId?: string | number | Buffer;\n\n  /**\n   * Set of key value pairs that can be used to set properties specific to user application.\n   */\n  properties?: {\n    [key: string]: any;\n  };\n}\n\n/**\n * A function that constructs an event data adapter. That adapter can be used\n * with `@azure/schema-registry-avro` to encode and decode body in event data.\n *\n * @param params - parameters to create the event data\n * @returns An event data adapter that can produce and consume event data\n */\nexport function createEventDataAdapter(\n  params: EventDataAdapterParameters = {},\n): MessageAdapter<EventData> {\n  return {\n    produce: ({ data: body, contentType }: MessageContent) => {\n      return {\n        ...params,\n        body,\n        contentType,\n      };\n    },\n    consume: (message: EventData): MessageContent => {\n      const { body, contentType } = message;\n      if (body === undefined) {\n        throw new Error(\"Expected the body field to be defined\");\n      }\n      if (contentType === undefined) {\n        throw new Error(\"Expected the contentType field to be defined\");\n      }\n      return {\n        /**\n         * If the raw response was parsed as JSON, we need to convert it to a Uint8Array,\n         * otherwise, leave the payload as is.\n         */\n        data: typeof body === \"object\" ? Uint8Array.from(Object.values(body)) : body,\n        contentType,\n      };\n    },\n  };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultRDSDataHttpAuthSchemeProvider = exports.defaultRDSDataHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultRDSDataHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultRDSDataHttpAuthSchemeParametersProvider = defaultRDSDataHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"rds-data\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nconst defaultRDSDataHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultRDSDataHttpAuthSchemeProvider = defaultRDSDataHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return {\n        ...config_0,\n    };\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "{\n  \"name\": \"@aws-sdk/client-rds-data\",\n  \"description\": \"AWS SDK for JavaScript Rds Data Client for Node.js, Browser and React Native\",\n  \"version\": \"3.614.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-rds-data\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo rds-data\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/client-sso-oidc\": \"3.614.0\",\n    \"@aws-sdk/client-sts\": \"3.614.0\",\n    \"@aws-sdk/core\": \"3.614.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.614.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.609.0\",\n    \"@aws-sdk/middleware-logger\": \"3.609.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.609.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.614.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.614.0\",\n    \"@aws-sdk/types\": \"3.609.0\",\n    \"@aws-sdk/util-endpoints\": \"3.614.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.609.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.614.0\",\n    \"@smithy/config-resolver\": \"^3.0.5\",\n    \"@smithy/core\": \"^2.2.6\",\n    \"@smithy/fetch-http-handler\": \"^3.2.1\",\n    \"@smithy/hash-node\": \"^3.0.3\",\n    \"@smithy/invalid-dependency\": \"^3.0.3\",\n    \"@smithy/middleware-content-length\": \"^3.0.3\",\n    \"@smithy/middleware-endpoint\": \"^3.0.5\",\n    \"@smithy/middleware-retry\": \"^3.0.9\",\n    \"@smithy/middleware-serde\": \"^3.0.3\",\n    \"@smithy/middleware-stack\": \"^3.0.3\",\n    \"@smithy/node-config-provider\": \"^3.1.4\",\n    \"@smithy/node-http-handler\": \"^3.1.2\",\n    \"@smithy/protocol-http\": \"^4.0.3\",\n    \"@smithy/smithy-client\": \"^3.1.7\",\n    \"@smithy/types\": \"^3.3.0\",\n    \"@smithy/url-parser\": \"^3.0.3\",\n    \"@smithy/util-base64\": \"^3.0.0\",\n    \"@smithy/util-body-length-browser\": \"^3.0.0\",\n    \"@smithy/util-body-length-node\": \"^3.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^3.0.9\",\n    \"@smithy/util-defaults-mode-node\": \"^3.0.9\",\n    \"@smithy/util-endpoints\": \"^2.0.5\",\n    \"@smithy/util-middleware\": \"^3.0.3\",\n    \"@smithy/util-retry\": \"^3.0.3\",\n    \"@smithy/util-utf8\": \"^3.0.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node16\": \"16.1.3\",\n    \"@types/node\": \"^16.18.96\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=16.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-rds-data\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-rds-data\"\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst s = \"required\", t = \"fn\", u = \"argv\", v = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = { [s]: false, \"type\": \"String\" }, i = { [s]: true, \"default\": false, \"type\": \"Boolean\" }, j = { [v]: \"Endpoint\" }, k = { [t]: c, [u]: [{ [v]: \"UseFIPS\" }, true] }, l = { [t]: c, [u]: [{ [v]: \"UseDualStack\" }, true] }, m = {}, n = { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsFIPS\"] }, o = { [t]: c, [u]: [true, { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsDualStack\"] }] }, p = [k], q = [l], r = [{ [v]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: h, UseDualStack: i, UseFIPS: i, Endpoint: h }, rules: [{ conditions: [{ [t]: b, [u]: [j] }], rules: [{ conditions: p, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: q, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: j, properties: m, headers: m }, type: e }], type: f }, { conditions: [{ [t]: b, [u]: r }], rules: [{ conditions: [{ [t]: \"aws.partition\", [u]: r, assign: g }], rules: [{ conditions: [k, l], rules: [{ conditions: [{ [t]: c, [u]: [a, n] }, o], rules: [{ endpoint: { url: \"https://rds-data-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: p, rules: [{ conditions: [{ [t]: c, [u]: [n, a] }], rules: [{ endpoint: { url: \"https://rds-data-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: q, rules: [{ conditions: [o], rules: [{ endpoint: { url: \"https://rds-data.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://rds-data.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2018-08-01\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultRDSDataHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"RDS Data\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AccessDeniedException: () => AccessDeniedException,\n  ArrayValue: () => ArrayValue,\n  BadRequestException: () => BadRequestException,\n  BatchExecuteStatementCommand: () => BatchExecuteStatementCommand,\n  BeginTransactionCommand: () => BeginTransactionCommand,\n  CommitTransactionCommand: () => CommitTransactionCommand,\n  DatabaseErrorException: () => DatabaseErrorException,\n  DatabaseNotFoundException: () => DatabaseNotFoundException,\n  DatabaseUnavailableException: () => DatabaseUnavailableException,\n  DecimalReturnType: () => DecimalReturnType,\n  ExecuteSqlCommand: () => ExecuteSqlCommand,\n  ExecuteStatementCommand: () => ExecuteStatementCommand,\n  Field: () => Field,\n  ForbiddenException: () => ForbiddenException,\n  HttpEndpointNotEnabledException: () => HttpEndpointNotEnabledException,\n  InternalServerErrorException: () => InternalServerErrorException,\n  InvalidSecretException: () => InvalidSecretException,\n  LongReturnType: () => LongReturnType,\n  NotFoundException: () => NotFoundException,\n  RDSData: () => RDSData,\n  RDSDataClient: () => RDSDataClient,\n  RDSDataServiceException: () => RDSDataServiceException,\n  RecordsFormatType: () => RecordsFormatType,\n  RollbackTransactionCommand: () => RollbackTransactionCommand,\n  SecretsErrorException: () => SecretsErrorException,\n  ServiceUnavailableError: () => ServiceUnavailableError,\n  StatementTimeoutException: () => StatementTimeoutException,\n  TransactionNotFoundException: () => TransactionNotFoundException,\n  TypeHint: () => TypeHint,\n  UnsupportedResultException: () => UnsupportedResultException,\n  Value: () => Value,\n  __Client: () => import_smithy_client.Client\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/RDSDataClient.ts\nvar import_middleware_host_header = require(\"@aws-sdk/middleware-host-header\");\nvar import_middleware_logger = require(\"@aws-sdk/middleware-logger\");\nvar import_middleware_recursion_detection = require(\"@aws-sdk/middleware-recursion-detection\");\nvar import_middleware_user_agent = require(\"@aws-sdk/middleware-user-agent\");\nvar import_config_resolver = require(\"@smithy/config-resolver\");\nvar import_core = require(\"@smithy/core\");\nvar import_middleware_content_length = require(\"@smithy/middleware-content-length\");\nvar import_middleware_endpoint = require(\"@smithy/middleware-endpoint\");\nvar import_middleware_retry = require(\"@smithy/middleware-retry\");\n\nvar import_httpAuthSchemeProvider = require(\"./auth/httpAuthSchemeProvider\");\n\n// src/endpoint/EndpointParameters.ts\nvar resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {\n  return {\n    ...options,\n    useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n    useFipsEndpoint: options.useFipsEndpoint ?? false,\n    defaultSigningName: \"rds-data\"\n  };\n}, \"resolveClientEndpointParameters\");\nvar commonParams = {\n  UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n  Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n  Region: { type: \"builtInParams\", name: \"region\" },\n  UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" }\n};\n\n// src/RDSDataClient.ts\nvar import_runtimeConfig = require(\"././runtimeConfig\");\n\n// src/runtimeExtensions.ts\nvar import_region_config_resolver = require(\"@aws-sdk/region-config-resolver\");\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar import_smithy_client = require(\"@smithy/smithy-client\");\n\n// src/auth/httpAuthExtensionConfiguration.ts\nvar getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n  let _credentials = runtimeConfig.credentials;\n  return {\n    setHttpAuthScheme(httpAuthScheme) {\n      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n      if (index === -1) {\n        _httpAuthSchemes.push(httpAuthScheme);\n      } else {\n        _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n      }\n    },\n    httpAuthSchemes() {\n      return _httpAuthSchemes;\n    },\n    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n      _httpAuthSchemeProvider = httpAuthSchemeProvider;\n    },\n    httpAuthSchemeProvider() {\n      return _httpAuthSchemeProvider;\n    },\n    setCredentials(credentials) {\n      _credentials = credentials;\n    },\n    credentials() {\n      return _credentials;\n    }\n  };\n}, \"getHttpAuthExtensionConfiguration\");\nvar resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {\n  return {\n    httpAuthSchemes: config.httpAuthSchemes(),\n    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n    credentials: config.credentials()\n  };\n}, \"resolveHttpAuthRuntimeConfig\");\n\n// src/runtimeExtensions.ts\nvar asPartial = /* @__PURE__ */ __name((t) => t, \"asPartial\");\nvar resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {\n  const extensionConfiguration = {\n    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),\n    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))\n  };\n  extensions.forEach((extension) => extension.configure(extensionConfiguration));\n  return {\n    ...runtimeConfig,\n    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),\n    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),\n    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)\n  };\n}, \"resolveRuntimeExtensions\");\n\n// src/RDSDataClient.ts\nvar _RDSDataClient = class _RDSDataClient extends import_smithy_client.Client {\n  constructor(...[configuration]) {\n    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});\n    const _config_1 = resolveClientEndpointParameters(_config_0);\n    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);\n    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);\n    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);\n    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);\n    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);\n    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);\n    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);\n    super(_config_8);\n    this.config = _config_8;\n    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));\n    this.middlewareStack.use(\n      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()\n      })\n    );\n    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));\n  }\n  /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */\n  destroy() {\n    super.destroy();\n  }\n  getDefaultHttpAuthSchemeParametersProvider() {\n    return import_httpAuthSchemeProvider.defaultRDSDataHttpAuthSchemeParametersProvider;\n  }\n  getIdentityProviderConfigProvider() {\n    return async (config) => new import_core.DefaultIdentityProviderConfig({\n      \"aws.auth#sigv4\": config.credentials\n    });\n  }\n};\n__name(_RDSDataClient, \"RDSDataClient\");\nvar RDSDataClient = _RDSDataClient;\n\n// src/RDSData.ts\n\n\n// src/commands/BatchExecuteStatementCommand.ts\n\nvar import_middleware_serde = require(\"@smithy/middleware-serde\");\n\n\n// src/protocols/Aws_restJson1.ts\nvar import_core2 = require(\"@aws-sdk/core\");\n\n\n\n// src/models/RDSDataServiceException.ts\n\nvar _RDSDataServiceException = class _RDSDataServiceException extends import_smithy_client.ServiceException {\n  /**\n   * @internal\n   */\n  constructor(options) {\n    super(options);\n    Object.setPrototypeOf(this, _RDSDataServiceException.prototype);\n  }\n};\n__name(_RDSDataServiceException, \"RDSDataServiceException\");\nvar RDSDataServiceException = _RDSDataServiceException;\n\n// src/models/models_0.ts\nvar _AccessDeniedException = class _AccessDeniedException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AccessDeniedException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AccessDeniedException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AccessDeniedException.prototype);\n  }\n};\n__name(_AccessDeniedException, \"AccessDeniedException\");\nvar AccessDeniedException = _AccessDeniedException;\nvar _BadRequestException = class _BadRequestException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"BadRequestException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"BadRequestException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _BadRequestException.prototype);\n  }\n};\n__name(_BadRequestException, \"BadRequestException\");\nvar BadRequestException = _BadRequestException;\nvar TypeHint = {\n  DATE: \"DATE\",\n  DECIMAL: \"DECIMAL\",\n  JSON: \"JSON\",\n  TIME: \"TIME\",\n  TIMESTAMP: \"TIMESTAMP\",\n  UUID: \"UUID\"\n};\nvar _DatabaseErrorException = class _DatabaseErrorException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DatabaseErrorException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DatabaseErrorException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DatabaseErrorException.prototype);\n  }\n};\n__name(_DatabaseErrorException, \"DatabaseErrorException\");\nvar DatabaseErrorException = _DatabaseErrorException;\nvar _DatabaseNotFoundException = class _DatabaseNotFoundException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DatabaseNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"DatabaseNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _DatabaseNotFoundException.prototype);\n  }\n};\n__name(_DatabaseNotFoundException, \"DatabaseNotFoundException\");\nvar DatabaseNotFoundException = _DatabaseNotFoundException;\nvar _DatabaseUnavailableException = class _DatabaseUnavailableException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"DatabaseUnavailableException\",\n      $fault: \"server\",\n      ...opts\n    });\n    this.name = \"DatabaseUnavailableException\";\n    this.$fault = \"server\";\n    Object.setPrototypeOf(this, _DatabaseUnavailableException.prototype);\n  }\n};\n__name(_DatabaseUnavailableException, \"DatabaseUnavailableException\");\nvar DatabaseUnavailableException = _DatabaseUnavailableException;\nvar _ForbiddenException = class _ForbiddenException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ForbiddenException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ForbiddenException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ForbiddenException.prototype);\n  }\n};\n__name(_ForbiddenException, \"ForbiddenException\");\nvar ForbiddenException = _ForbiddenException;\nvar _HttpEndpointNotEnabledException = class _HttpEndpointNotEnabledException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"HttpEndpointNotEnabledException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"HttpEndpointNotEnabledException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _HttpEndpointNotEnabledException.prototype);\n  }\n};\n__name(_HttpEndpointNotEnabledException, \"HttpEndpointNotEnabledException\");\nvar HttpEndpointNotEnabledException = _HttpEndpointNotEnabledException;\nvar _InternalServerErrorException = class _InternalServerErrorException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InternalServerErrorException\",\n      $fault: \"server\",\n      ...opts\n    });\n    this.name = \"InternalServerErrorException\";\n    this.$fault = \"server\";\n    Object.setPrototypeOf(this, _InternalServerErrorException.prototype);\n  }\n};\n__name(_InternalServerErrorException, \"InternalServerErrorException\");\nvar InternalServerErrorException = _InternalServerErrorException;\nvar _InvalidSecretException = class _InvalidSecretException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidSecretException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidSecretException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidSecretException.prototype);\n  }\n};\n__name(_InvalidSecretException, \"InvalidSecretException\");\nvar InvalidSecretException = _InvalidSecretException;\nvar _SecretsErrorException = class _SecretsErrorException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"SecretsErrorException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"SecretsErrorException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _SecretsErrorException.prototype);\n  }\n};\n__name(_SecretsErrorException, \"SecretsErrorException\");\nvar SecretsErrorException = _SecretsErrorException;\nvar _ServiceUnavailableError = class _ServiceUnavailableError extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ServiceUnavailableError\",\n      $fault: \"server\",\n      ...opts\n    });\n    this.name = \"ServiceUnavailableError\";\n    this.$fault = \"server\";\n    Object.setPrototypeOf(this, _ServiceUnavailableError.prototype);\n  }\n};\n__name(_ServiceUnavailableError, \"ServiceUnavailableError\");\nvar ServiceUnavailableError = _ServiceUnavailableError;\nvar _StatementTimeoutException = class _StatementTimeoutException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"StatementTimeoutException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"StatementTimeoutException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _StatementTimeoutException.prototype);\n    this.dbConnectionId = opts.dbConnectionId;\n  }\n};\n__name(_StatementTimeoutException, \"StatementTimeoutException\");\nvar StatementTimeoutException = _StatementTimeoutException;\nvar _TransactionNotFoundException = class _TransactionNotFoundException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TransactionNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TransactionNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TransactionNotFoundException.prototype);\n  }\n};\n__name(_TransactionNotFoundException, \"TransactionNotFoundException\");\nvar TransactionNotFoundException = _TransactionNotFoundException;\nvar _NotFoundException = class _NotFoundException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"NotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"NotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _NotFoundException.prototype);\n  }\n};\n__name(_NotFoundException, \"NotFoundException\");\nvar NotFoundException = _NotFoundException;\nvar DecimalReturnType = {\n  DOUBLE_OR_LONG: \"DOUBLE_OR_LONG\",\n  STRING: \"STRING\"\n};\nvar RecordsFormatType = {\n  JSON: \"JSON\",\n  NONE: \"NONE\"\n};\nvar LongReturnType = {\n  LONG: \"LONG\",\n  STRING: \"STRING\"\n};\nvar _UnsupportedResultException = class _UnsupportedResultException extends RDSDataServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UnsupportedResultException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UnsupportedResultException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UnsupportedResultException.prototype);\n  }\n};\n__name(_UnsupportedResultException, \"UnsupportedResultException\");\nvar UnsupportedResultException = _UnsupportedResultException;\nvar ArrayValue;\n((ArrayValue2) => {\n  ArrayValue2.visit = /* @__PURE__ */ __name((value, visitor) => {\n    if (value.booleanValues !== void 0)\n      return visitor.booleanValues(value.booleanValues);\n    if (value.longValues !== void 0)\n      return visitor.longValues(value.longValues);\n    if (value.doubleValues !== void 0)\n      return visitor.doubleValues(value.doubleValues);\n    if (value.stringValues !== void 0)\n      return visitor.stringValues(value.stringValues);\n    if (value.arrayValues !== void 0)\n      return visitor.arrayValues(value.arrayValues);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  }, \"visit\");\n})(ArrayValue || (ArrayValue = {}));\nvar Field;\n((Field2) => {\n  Field2.visit = /* @__PURE__ */ __name((value, visitor) => {\n    if (value.isNull !== void 0)\n      return visitor.isNull(value.isNull);\n    if (value.booleanValue !== void 0)\n      return visitor.booleanValue(value.booleanValue);\n    if (value.longValue !== void 0)\n      return visitor.longValue(value.longValue);\n    if (value.doubleValue !== void 0)\n      return visitor.doubleValue(value.doubleValue);\n    if (value.stringValue !== void 0)\n      return visitor.stringValue(value.stringValue);\n    if (value.blobValue !== void 0)\n      return visitor.blobValue(value.blobValue);\n    if (value.arrayValue !== void 0)\n      return visitor.arrayValue(value.arrayValue);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  }, \"visit\");\n})(Field || (Field = {}));\nvar Value;\n((Value3) => {\n  Value3.visit = /* @__PURE__ */ __name((value, visitor) => {\n    if (value.isNull !== void 0)\n      return visitor.isNull(value.isNull);\n    if (value.bitValue !== void 0)\n      return visitor.bitValue(value.bitValue);\n    if (value.bigIntValue !== void 0)\n      return visitor.bigIntValue(value.bigIntValue);\n    if (value.intValue !== void 0)\n      return visitor.intValue(value.intValue);\n    if (value.doubleValue !== void 0)\n      return visitor.doubleValue(value.doubleValue);\n    if (value.realValue !== void 0)\n      return visitor.realValue(value.realValue);\n    if (value.stringValue !== void 0)\n      return visitor.stringValue(value.stringValue);\n    if (value.blobValue !== void 0)\n      return visitor.blobValue(value.blobValue);\n    if (value.arrayValues !== void 0)\n      return visitor.arrayValues(value.arrayValues);\n    if (value.structValue !== void 0)\n      return visitor.structValue(value.structValue);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  }, \"visit\");\n})(Value || (Value = {}));\n\n// src/protocols/Aws_restJson1.ts\nvar se_BatchExecuteStatementCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/BatchExecute\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      database: [],\n      parameterSets: (_) => se_SqlParameterSets(_, context),\n      resourceArn: [],\n      schema: [],\n      secretArn: [],\n      sql: [],\n      transactionId: []\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_BatchExecuteStatementCommand\");\nvar se_BeginTransactionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/BeginTransaction\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      database: [],\n      resourceArn: [],\n      schema: [],\n      secretArn: []\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_BeginTransactionCommand\");\nvar se_CommitTransactionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/CommitTransaction\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      resourceArn: [],\n      secretArn: [],\n      transactionId: []\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_CommitTransactionCommand\");\nvar se_ExecuteSqlCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/ExecuteSql\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      awsSecretStoreArn: [],\n      database: [],\n      dbClusterOrInstanceArn: [],\n      schema: [],\n      sqlStatements: []\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_ExecuteSqlCommand\");\nvar se_ExecuteStatementCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/Execute\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      continueAfterTimeout: [],\n      database: [],\n      formatRecordsAs: [],\n      includeResultMetadata: [],\n      parameters: (_) => se_SqlParametersList(_, context),\n      resourceArn: [],\n      resultSetOptions: (_) => (0, import_smithy_client._json)(_),\n      schema: [],\n      secretArn: [],\n      sql: [],\n      transactionId: []\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_ExecuteStatementCommand\");\nvar se_RollbackTransactionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const b = (0, import_core.requestBuilder)(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/RollbackTransaction\");\n  let body;\n  body = JSON.stringify(\n    (0, import_smithy_client.take)(input, {\n      resourceArn: [],\n      secretArn: [],\n      transactionId: []\n    })\n  );\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n}, \"se_RollbackTransactionCommand\");\nvar de_BatchExecuteStatementCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    updateResults: (_) => de_UpdateResults(_, context)\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_BatchExecuteStatementCommand\");\nvar de_BeginTransactionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    transactionId: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_BeginTransactionCommand\");\nvar de_CommitTransactionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    transactionStatus: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_CommitTransactionCommand\");\nvar de_ExecuteSqlCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    sqlStatementResults: (_) => de_SqlStatementResults(_, context)\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_ExecuteSqlCommand\");\nvar de_ExecuteStatementCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    columnMetadata: import_smithy_client._json,\n    formattedRecords: import_smithy_client.expectString,\n    generatedFields: (_) => de_FieldList(_, context),\n    numberOfRecordsUpdated: import_smithy_client.expectLong,\n    records: (_) => de_SqlRecords(_, context)\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_ExecuteStatementCommand\");\nvar de_RollbackTransactionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = (0, import_smithy_client.map)({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), \"body\");\n  const doc = (0, import_smithy_client.take)(data, {\n    transactionStatus: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n}, \"de_RollbackTransactionCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)\n  };\n  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.rdsdata#AccessDeniedException\":\n      throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n    case \"BadRequestException\":\n    case \"com.amazonaws.rdsdata#BadRequestException\":\n      throw await de_BadRequestExceptionRes(parsedOutput, context);\n    case \"DatabaseErrorException\":\n    case \"com.amazonaws.rdsdata#DatabaseErrorException\":\n      throw await de_DatabaseErrorExceptionRes(parsedOutput, context);\n    case \"DatabaseNotFoundException\":\n    case \"com.amazonaws.rdsdata#DatabaseNotFoundException\":\n      throw await de_DatabaseNotFoundExceptionRes(parsedOutput, context);\n    case \"DatabaseUnavailableException\":\n    case \"com.amazonaws.rdsdata#DatabaseUnavailableException\":\n      throw await de_DatabaseUnavailableExceptionRes(parsedOutput, context);\n    case \"ForbiddenException\":\n    case \"com.amazonaws.rdsdata#ForbiddenException\":\n      throw await de_ForbiddenExceptionRes(parsedOutput, context);\n    case \"HttpEndpointNotEnabledException\":\n    case \"com.amazonaws.rdsdata#HttpEndpointNotEnabledException\":\n      throw await de_HttpEndpointNotEnabledExceptionRes(parsedOutput, context);\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.rdsdata#InternalServerErrorException\":\n      throw await de_InternalServerErrorExceptionRes(parsedOutput, context);\n    case \"InvalidSecretException\":\n    case \"com.amazonaws.rdsdata#InvalidSecretException\":\n      throw await de_InvalidSecretExceptionRes(parsedOutput, context);\n    case \"SecretsErrorException\":\n    case \"com.amazonaws.rdsdata#SecretsErrorException\":\n      throw await de_SecretsErrorExceptionRes(parsedOutput, context);\n    case \"ServiceUnavailableError\":\n    case \"com.amazonaws.rdsdata#ServiceUnavailableError\":\n      throw await de_ServiceUnavailableErrorRes(parsedOutput, context);\n    case \"StatementTimeoutException\":\n    case \"com.amazonaws.rdsdata#StatementTimeoutException\":\n      throw await de_StatementTimeoutExceptionRes(parsedOutput, context);\n    case \"TransactionNotFoundException\":\n    case \"com.amazonaws.rdsdata#TransactionNotFoundException\":\n      throw await de_TransactionNotFoundExceptionRes(parsedOutput, context);\n    case \"NotFoundException\":\n    case \"com.amazonaws.rdsdata#NotFoundException\":\n      throw await de_NotFoundExceptionRes(parsedOutput, context);\n    case \"UnsupportedResultException\":\n    case \"com.amazonaws.rdsdata#UnsupportedResultException\":\n      throw await de_UnsupportedResultExceptionRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode\n      });\n  }\n}, \"de_CommandError\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(RDSDataServiceException);\nvar de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new AccessDeniedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_AccessDeniedExceptionRes\");\nvar de_BadRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new BadRequestException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_BadRequestExceptionRes\");\nvar de_DatabaseErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new DatabaseErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_DatabaseErrorExceptionRes\");\nvar de_DatabaseNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new DatabaseNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_DatabaseNotFoundExceptionRes\");\nvar de_DatabaseUnavailableExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {});\n  Object.assign(contents, doc);\n  const exception = new DatabaseUnavailableException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_DatabaseUnavailableExceptionRes\");\nvar de_ForbiddenExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ForbiddenException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_ForbiddenExceptionRes\");\nvar de_HttpEndpointNotEnabledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new HttpEndpointNotEnabledException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_HttpEndpointNotEnabledExceptionRes\");\nvar de_InternalServerErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {});\n  Object.assign(contents, doc);\n  const exception = new InternalServerErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InternalServerErrorExceptionRes\");\nvar de_InvalidSecretExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InvalidSecretException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_InvalidSecretExceptionRes\");\nvar de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new NotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_NotFoundExceptionRes\");\nvar de_SecretsErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new SecretsErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_SecretsErrorExceptionRes\");\nvar de_ServiceUnavailableErrorRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {});\n  Object.assign(contents, doc);\n  const exception = new ServiceUnavailableError({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_ServiceUnavailableErrorRes\");\nvar de_StatementTimeoutExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    dbConnectionId: import_smithy_client.expectLong,\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new StatementTimeoutException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_StatementTimeoutExceptionRes\");\nvar de_TransactionNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new TransactionNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_TransactionNotFoundExceptionRes\");\nvar de_UnsupportedResultExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const contents = (0, import_smithy_client.map)({});\n  const data = parsedOutput.body;\n  const doc = (0, import_smithy_client.take)(data, {\n    message: import_smithy_client.expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new UnsupportedResultException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);\n}, \"de_UnsupportedResultExceptionRes\");\nvar se_ArrayOfArray = /* @__PURE__ */ __name((input, context) => {\n  return input.filter((e) => e != null).map((entry) => {\n    return se_ArrayValue(entry, context);\n  });\n}, \"se_ArrayOfArray\");\nvar se_ArrayValue = /* @__PURE__ */ __name((input, context) => {\n  return ArrayValue.visit(input, {\n    arrayValues: (value) => ({ arrayValues: se_ArrayOfArray(value, context) }),\n    booleanValues: (value) => ({ booleanValues: (0, import_smithy_client._json)(value) }),\n    doubleValues: (value) => ({ doubleValues: se_DoubleArray(value, context) }),\n    longValues: (value) => ({ longValues: (0, import_smithy_client._json)(value) }),\n    stringValues: (value) => ({ stringValues: (0, import_smithy_client._json)(value) }),\n    _: (name, value) => ({ name: value })\n  });\n}, \"se_ArrayValue\");\nvar se_DoubleArray = /* @__PURE__ */ __name((input, context) => {\n  return input.filter((e) => e != null).map((entry) => {\n    return (0, import_smithy_client.serializeFloat)(entry);\n  });\n}, \"se_DoubleArray\");\nvar se_Field = /* @__PURE__ */ __name((input, context) => {\n  return Field.visit(input, {\n    arrayValue: (value) => ({ arrayValue: se_ArrayValue(value, context) }),\n    blobValue: (value) => ({ blobValue: context.base64Encoder(value) }),\n    booleanValue: (value) => ({ booleanValue: value }),\n    doubleValue: (value) => ({ doubleValue: (0, import_smithy_client.serializeFloat)(value) }),\n    isNull: (value) => ({ isNull: value }),\n    longValue: (value) => ({ longValue: value }),\n    stringValue: (value) => ({ stringValue: value }),\n    _: (name, value) => ({ name: value })\n  });\n}, \"se_Field\");\nvar se_SqlParameter = /* @__PURE__ */ __name((input, context) => {\n  return (0, import_smithy_client.take)(input, {\n    name: [],\n    typeHint: [],\n    value: (_) => se_Field(_, context)\n  });\n}, \"se_SqlParameter\");\nvar se_SqlParameterSets = /* @__PURE__ */ __name((input, context) => {\n  return input.filter((e) => e != null).map((entry) => {\n    return se_SqlParametersList(entry, context);\n  });\n}, \"se_SqlParameterSets\");\nvar se_SqlParametersList = /* @__PURE__ */ __name((input, context) => {\n  return input.filter((e) => e != null).map((entry) => {\n    return se_SqlParameter(entry, context);\n  });\n}, \"se_SqlParametersList\");\nvar de_ArrayOfArray = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_ArrayValue((0, import_core2.awsExpectUnion)(entry), context);\n  });\n  return retVal;\n}, \"de_ArrayOfArray\");\nvar de_ArrayValue = /* @__PURE__ */ __name((output, context) => {\n  if (output.arrayValues != null) {\n    return {\n      arrayValues: de_ArrayOfArray(output.arrayValues, context)\n    };\n  }\n  if (output.booleanValues != null) {\n    return {\n      booleanValues: (0, import_smithy_client._json)(output.booleanValues)\n    };\n  }\n  if (output.doubleValues != null) {\n    return {\n      doubleValues: de_DoubleArray(output.doubleValues, context)\n    };\n  }\n  if (output.longValues != null) {\n    return {\n      longValues: (0, import_smithy_client._json)(output.longValues)\n    };\n  }\n  if (output.stringValues != null) {\n    return {\n      stringValues: (0, import_smithy_client._json)(output.stringValues)\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n}, \"de_ArrayValue\");\nvar de_ArrayValueList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Value((0, import_core2.awsExpectUnion)(entry), context);\n  });\n  return retVal;\n}, \"de_ArrayValueList\");\nvar de_DoubleArray = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return (0, import_smithy_client.limitedParseDouble)(entry);\n  });\n  return retVal;\n}, \"de_DoubleArray\");\nvar de_Field = /* @__PURE__ */ __name((output, context) => {\n  if (output.arrayValue != null) {\n    return {\n      arrayValue: de_ArrayValue((0, import_core2.awsExpectUnion)(output.arrayValue), context)\n    };\n  }\n  if (output.blobValue != null) {\n    return {\n      blobValue: context.base64Decoder(output.blobValue)\n    };\n  }\n  if ((0, import_smithy_client.expectBoolean)(output.booleanValue) !== void 0) {\n    return { booleanValue: (0, import_smithy_client.expectBoolean)(output.booleanValue) };\n  }\n  if ((0, import_smithy_client.limitedParseDouble)(output.doubleValue) !== void 0) {\n    return { doubleValue: (0, import_smithy_client.limitedParseDouble)(output.doubleValue) };\n  }\n  if ((0, import_smithy_client.expectBoolean)(output.isNull) !== void 0) {\n    return { isNull: (0, import_smithy_client.expectBoolean)(output.isNull) };\n  }\n  if ((0, import_smithy_client.expectLong)(output.longValue) !== void 0) {\n    return { longValue: (0, import_smithy_client.expectLong)(output.longValue) };\n  }\n  if ((0, import_smithy_client.expectString)(output.stringValue) !== void 0) {\n    return { stringValue: (0, import_smithy_client.expectString)(output.stringValue) };\n  }\n  return { $unknown: Object.entries(output)[0] };\n}, \"de_Field\");\nvar de_FieldList = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Field((0, import_core2.awsExpectUnion)(entry), context);\n  });\n  return retVal;\n}, \"de_FieldList\");\nvar de__Record = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    values: (_) => de_Row(_, context)\n  });\n}, \"de__Record\");\nvar de_Records = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de__Record(entry, context);\n  });\n  return retVal;\n}, \"de_Records\");\nvar de_ResultFrame = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    records: (_) => de_Records(_, context),\n    resultSetMetadata: import_smithy_client._json\n  });\n}, \"de_ResultFrame\");\nvar de_Row = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_Value((0, import_core2.awsExpectUnion)(entry), context);\n  });\n  return retVal;\n}, \"de_Row\");\nvar de_SqlRecords = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_FieldList(entry, context);\n  });\n  return retVal;\n}, \"de_SqlRecords\");\nvar de_SqlStatementResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    numberOfRecordsUpdated: import_smithy_client.expectLong,\n    resultFrame: (_) => de_ResultFrame(_, context)\n  });\n}, \"de_SqlStatementResult\");\nvar de_SqlStatementResults = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_SqlStatementResult(entry, context);\n  });\n  return retVal;\n}, \"de_SqlStatementResults\");\nvar de_StructValue = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    attributes: (_) => de_ArrayValueList(_, context)\n  });\n}, \"de_StructValue\");\nvar de_UpdateResult = /* @__PURE__ */ __name((output, context) => {\n  return (0, import_smithy_client.take)(output, {\n    generatedFields: (_) => de_FieldList(_, context)\n  });\n}, \"de_UpdateResult\");\nvar de_UpdateResults = /* @__PURE__ */ __name((output, context) => {\n  const retVal = (output || []).filter((e) => e != null).map((entry) => {\n    return de_UpdateResult(entry, context);\n  });\n  return retVal;\n}, \"de_UpdateResults\");\nvar de_Value = /* @__PURE__ */ __name((output, context) => {\n  if (output.arrayValues != null) {\n    return {\n      arrayValues: de_ArrayValueList(output.arrayValues, context)\n    };\n  }\n  if ((0, import_smithy_client.expectLong)(output.bigIntValue) !== void 0) {\n    return { bigIntValue: (0, import_smithy_client.expectLong)(output.bigIntValue) };\n  }\n  if ((0, import_smithy_client.expectBoolean)(output.bitValue) !== void 0) {\n    return { bitValue: (0, import_smithy_client.expectBoolean)(output.bitValue) };\n  }\n  if (output.blobValue != null) {\n    return {\n      blobValue: context.base64Decoder(output.blobValue)\n    };\n  }\n  if ((0, import_smithy_client.limitedParseDouble)(output.doubleValue) !== void 0) {\n    return { doubleValue: (0, import_smithy_client.limitedParseDouble)(output.doubleValue) };\n  }\n  if ((0, import_smithy_client.expectInt32)(output.intValue) !== void 0) {\n    return { intValue: (0, import_smithy_client.expectInt32)(output.intValue) };\n  }\n  if ((0, import_smithy_client.expectBoolean)(output.isNull) !== void 0) {\n    return { isNull: (0, import_smithy_client.expectBoolean)(output.isNull) };\n  }\n  if ((0, import_smithy_client.limitedParseFloat32)(output.realValue) !== void 0) {\n    return { realValue: (0, import_smithy_client.limitedParseFloat32)(output.realValue) };\n  }\n  if ((0, import_smithy_client.expectString)(output.stringValue) !== void 0) {\n    return { stringValue: (0, import_smithy_client.expectString)(output.stringValue) };\n  }\n  if (output.structValue != null) {\n    return {\n      structValue: de_StructValue(output.structValue, context)\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n}, \"de_Value\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output) => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n}), \"deserializeMetadata\");\n\n// src/commands/BatchExecuteStatementCommand.ts\nvar _BatchExecuteStatementCommand = class _BatchExecuteStatementCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"RdsDataService\", \"BatchExecuteStatement\", {}).n(\"RDSDataClient\", \"BatchExecuteStatementCommand\").f(void 0, void 0).ser(se_BatchExecuteStatementCommand).de(de_BatchExecuteStatementCommand).build() {\n};\n__name(_BatchExecuteStatementCommand, \"BatchExecuteStatementCommand\");\nvar BatchExecuteStatementCommand = _BatchExecuteStatementCommand;\n\n// src/commands/BeginTransactionCommand.ts\n\n\n\nvar _BeginTransactionCommand = class _BeginTransactionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"RdsDataService\", \"BeginTransaction\", {}).n(\"RDSDataClient\", \"BeginTransactionCommand\").f(void 0, void 0).ser(se_BeginTransactionCommand).de(de_BeginTransactionCommand).build() {\n};\n__name(_BeginTransactionCommand, \"BeginTransactionCommand\");\nvar BeginTransactionCommand = _BeginTransactionCommand;\n\n// src/commands/CommitTransactionCommand.ts\n\n\n\nvar _CommitTransactionCommand = class _CommitTransactionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"RdsDataService\", \"CommitTransaction\", {}).n(\"RDSDataClient\", \"CommitTransactionCommand\").f(void 0, void 0).ser(se_CommitTransactionCommand).de(de_CommitTransactionCommand).build() {\n};\n__name(_CommitTransactionCommand, \"CommitTransactionCommand\");\nvar CommitTransactionCommand = _CommitTransactionCommand;\n\n// src/commands/ExecuteSqlCommand.ts\n\n\n\nvar _ExecuteSqlCommand = class _ExecuteSqlCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"RdsDataService\", \"ExecuteSql\", {}).n(\"RDSDataClient\", \"ExecuteSqlCommand\").f(void 0, void 0).ser(se_ExecuteSqlCommand).de(de_ExecuteSqlCommand).build() {\n};\n__name(_ExecuteSqlCommand, \"ExecuteSqlCommand\");\nvar ExecuteSqlCommand = _ExecuteSqlCommand;\n\n// src/commands/ExecuteStatementCommand.ts\n\n\n\nvar _ExecuteStatementCommand = class _ExecuteStatementCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"RdsDataService\", \"ExecuteStatement\", {}).n(\"RDSDataClient\", \"ExecuteStatementCommand\").f(void 0, void 0).ser(se_ExecuteStatementCommand).de(de_ExecuteStatementCommand).build() {\n};\n__name(_ExecuteStatementCommand, \"ExecuteStatementCommand\");\nvar ExecuteStatementCommand = _ExecuteStatementCommand;\n\n// src/commands/RollbackTransactionCommand.ts\n\n\n\nvar _RollbackTransactionCommand = class _RollbackTransactionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"RdsDataService\", \"RollbackTransaction\", {}).n(\"RDSDataClient\", \"RollbackTransactionCommand\").f(void 0, void 0).ser(se_RollbackTransactionCommand).de(de_RollbackTransactionCommand).build() {\n};\n__name(_RollbackTransactionCommand, \"RollbackTransactionCommand\");\nvar RollbackTransactionCommand = _RollbackTransactionCommand;\n\n// src/RDSData.ts\nvar commands = {\n  BatchExecuteStatementCommand,\n  BeginTransactionCommand,\n  CommitTransactionCommand,\n  ExecuteSqlCommand,\n  ExecuteStatementCommand,\n  RollbackTransactionCommand\n};\nvar _RDSData = class _RDSData extends RDSDataClient {\n};\n__name(_RDSData, \"RDSData\");\nvar RDSData = _RDSData;\n(0, import_smithy_client.createAggregatedClient)(commands, RDSData);\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  RDSDataServiceException,\n  __Client,\n  RDSDataClient,\n  RDSData,\n  $Command,\n  BatchExecuteStatementCommand,\n  BeginTransactionCommand,\n  CommitTransactionCommand,\n  ExecuteSqlCommand,\n  ExecuteStatementCommand,\n  RollbackTransactionCommand,\n  AccessDeniedException,\n  BadRequestException,\n  TypeHint,\n  DatabaseErrorException,\n  DatabaseNotFoundException,\n  DatabaseUnavailableException,\n  ForbiddenException,\n  HttpEndpointNotEnabledException,\n  InternalServerErrorException,\n  InvalidSecretException,\n  SecretsErrorException,\n  ServiceUnavailableError,\n  StatementTimeoutException,\n  TransactionNotFoundException,\n  NotFoundException,\n  DecimalReturnType,\n  RecordsFormatType,\n  LongReturnType,\n  UnsupportedResultException,\n  ArrayValue,\n  Field,\n  Value\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultSNSHttpAuthSchemeProvider = exports.defaultSNSHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultSNSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultSNSHttpAuthSchemeParametersProvider = defaultSNSHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sns\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nconst defaultSNSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultSNSHttpAuthSchemeProvider = defaultSNSHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return {\n        ...config_0,\n    };\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "{\n  \"name\": \"@aws-sdk/client-sns\",\n  \"description\": \"AWS SDK for JavaScript Sns Client for Node.js, Browser and React Native\",\n  \"version\": \"3.614.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-sns\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sns\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/client-sso-oidc\": \"3.614.0\",\n    \"@aws-sdk/client-sts\": \"3.614.0\",\n    \"@aws-sdk/core\": \"3.614.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.614.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.609.0\",\n    \"@aws-sdk/middleware-logger\": \"3.609.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.609.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.614.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.614.0\",\n    \"@aws-sdk/types\": \"3.609.0\",\n    \"@aws-sdk/util-endpoints\": \"3.614.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.609.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.614.0\",\n    \"@smithy/config-resolver\": \"^3.0.5\",\n    \"@smithy/core\": \"^2.2.6\",\n    \"@smithy/fetch-http-handler\": \"^3.2.1\",\n    \"@smithy/hash-node\": \"^3.0.3\",\n    \"@smithy/invalid-dependency\": \"^3.0.3\",\n    \"@smithy/middleware-content-length\": \"^3.0.3\",\n    \"@smithy/middleware-endpoint\": \"^3.0.5\",\n    \"@smithy/middleware-retry\": \"^3.0.9\",\n    \"@smithy/middleware-serde\": \"^3.0.3\",\n    \"@smithy/middleware-stack\": \"^3.0.3\",\n    \"@smithy/node-config-provider\": \"^3.1.4\",\n    \"@smithy/node-http-handler\": \"^3.1.2\",\n    \"@smithy/protocol-http\": \"^4.0.3\",\n    \"@smithy/smithy-client\": \"^3.1.7\",\n    \"@smithy/types\": \"^3.3.0\",\n    \"@smithy/url-parser\": \"^3.0.3\",\n    \"@smithy/util-base64\": \"^3.0.0\",\n    \"@smithy/util-body-length-browser\": \"^3.0.0\",\n    \"@smithy/util-body-length-node\": \"^3.0.0\",\n    \"@smithy/util-defaults-mode-browser\": \"^3.0.9\",\n    \"@smithy/util-defaults-mode-node\": \"^3.0.9\",\n    \"@smithy/util-endpoints\": \"^2.0.5\",\n    \"@smithy/util-middleware\": \"^3.0.3\",\n    \"@smithy/util-retry\": \"^3.0.3\",\n    \"@smithy/util-utf8\": \"^3.0.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node16\": \"16.1.3\",\n    \"@types/node\": \"^16.18.96\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~4.9.5\"\n  },\n  \"engines\": {\n    \"node\": \">=16.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sns\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sns\"\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"stringEquals\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [x]: \"Region\" }, p = { [v]: \"getAttr\", [w]: [{ [x]: g }, \"supportsFIPS\"] }, q = { [v]: c, [w]: [true, { [v]: \"getAttr\", [w]: [{ [x]: g }, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [o];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, p] }, q], rules: [{ endpoint: { url: \"https://sns-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [p, a] }], rules: [{ conditions: [{ [v]: h, [w]: [o, \"us-gov-east-1\"] }], endpoint: { url: \"https://sns.us-gov-east-1.amazonaws.com\", properties: n, headers: n }, type: e }, { conditions: [{ [v]: h, [w]: [o, \"us-gov-west-1\"] }], endpoint: { url: \"https://sns.us-gov-west-1.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://sns-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://sns.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://sns.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2010-03-31\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSNSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SNS\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AddPermissionCommand: () => AddPermissionCommand,\n  AuthorizationErrorException: () => AuthorizationErrorException,\n  BatchEntryIdsNotDistinctException: () => BatchEntryIdsNotDistinctException,\n  BatchRequestTooLongException: () => BatchRequestTooLongException,\n  CheckIfPhoneNumberIsOptedOutCommand: () => CheckIfPhoneNumberIsOptedOutCommand,\n  CheckIfPhoneNumberIsOptedOutInputFilterSensitiveLog: () => CheckIfPhoneNumberIsOptedOutInputFilterSensitiveLog,\n  ConcurrentAccessException: () => ConcurrentAccessException,\n  ConfirmSubscriptionCommand: () => ConfirmSubscriptionCommand,\n  CreatePlatformApplicationCommand: () => CreatePlatformApplicationCommand,\n  CreatePlatformEndpointCommand: () => CreatePlatformEndpointCommand,\n  CreateSMSSandboxPhoneNumberCommand: () => CreateSMSSandboxPhoneNumberCommand,\n  CreateSMSSandboxPhoneNumberInputFilterSensitiveLog: () => CreateSMSSandboxPhoneNumberInputFilterSensitiveLog,\n  CreateTopicCommand: () => CreateTopicCommand,\n  DeleteEndpointCommand: () => DeleteEndpointCommand,\n  DeletePlatformApplicationCommand: () => DeletePlatformApplicationCommand,\n  DeleteSMSSandboxPhoneNumberCommand: () => DeleteSMSSandboxPhoneNumberCommand,\n  DeleteSMSSandboxPhoneNumberInputFilterSensitiveLog: () => DeleteSMSSandboxPhoneNumberInputFilterSensitiveLog,\n  DeleteTopicCommand: () => DeleteTopicCommand,\n  EmptyBatchRequestException: () => EmptyBatchRequestException,\n  EndpointDisabledException: () => EndpointDisabledException,\n  FilterPolicyLimitExceededException: () => FilterPolicyLimitExceededException,\n  GetDataProtectionPolicyCommand: () => GetDataProtectionPolicyCommand,\n  GetEndpointAttributesCommand: () => GetEndpointAttributesCommand,\n  GetPlatformApplicationAttributesCommand: () => GetPlatformApplicationAttributesCommand,\n  GetSMSAttributesCommand: () => GetSMSAttributesCommand,\n  GetSMSSandboxAccountStatusCommand: () => GetSMSSandboxAccountStatusCommand,\n  GetSubscriptionAttributesCommand: () => GetSubscriptionAttributesCommand,\n  GetTopicAttributesCommand: () => GetTopicAttributesCommand,\n  InternalErrorException: () => InternalErrorException,\n  InvalidBatchEntryIdException: () => InvalidBatchEntryIdException,\n  InvalidParameterException: () => InvalidParameterException,\n  InvalidParameterValueException: () => InvalidParameterValueException,\n  InvalidSecurityException: () => InvalidSecurityException,\n  InvalidStateException: () => InvalidStateException,\n  KMSAccessDeniedException: () => KMSAccessDeniedException,\n  KMSDisabledException: () => KMSDisabledException,\n  KMSInvalidStateException: () => KMSInvalidStateException,\n  KMSNotFoundException: () => KMSNotFoundException,\n  KMSOptInRequired: () => KMSOptInRequired,\n  KMSThrottlingException: () => KMSThrottlingException,\n  LanguageCodeString: () => LanguageCodeString,\n  ListEndpointsByPlatformApplicationCommand: () => ListEndpointsByPlatformApplicationCommand,\n  ListOriginationNumbersCommand: () => ListOriginationNumbersCommand,\n  ListOriginationNumbersResultFilterSensitiveLog: () => ListOriginationNumbersResultFilterSensitiveLog,\n  ListPhoneNumbersOptedOutCommand: () => ListPhoneNumbersOptedOutCommand,\n  ListPhoneNumbersOptedOutResponseFilterSensitiveLog: () => ListPhoneNumbersOptedOutResponseFilterSensitiveLog,\n  ListPlatformApplicationsCommand: () => ListPlatformApplicationsCommand,\n  ListSMSSandboxPhoneNumbersCommand: () => ListSMSSandboxPhoneNumbersCommand,\n  ListSMSSandboxPhoneNumbersResultFilterSensitiveLog: () => ListSMSSandboxPhoneNumbersResultFilterSensitiveLog,\n  ListSubscriptionsByTopicCommand: () => ListSubscriptionsByTopicCommand,\n  ListSubscriptionsCommand: () => ListSubscriptionsCommand,\n  ListTagsForResourceCommand: () => ListTagsForResourceCommand,\n  ListTopicsCommand: () => ListTopicsCommand,\n  NotFoundException: () => NotFoundException,\n  NumberCapability: () => NumberCapability,\n  OptInPhoneNumberCommand: () => OptInPhoneNumberCommand,\n  OptInPhoneNumberInputFilterSensitiveLog: () => OptInPhoneNumberInputFilterSensitiveLog,\n  OptedOutException: () => OptedOutException,\n  PhoneNumberInformationFilterSensitiveLog: () => PhoneNumberInformationFilterSensitiveLog,\n  PlatformApplicationDisabledException: () => PlatformApplicationDisabledException,\n  PublishBatchCommand: () => PublishBatchCommand,\n  PublishCommand: () => PublishCommand,\n  PublishInputFilterSensitiveLog: () => PublishInputFilterSensitiveLog,\n  PutDataProtectionPolicyCommand: () => PutDataProtectionPolicyCommand,\n  RemovePermissionCommand: () => RemovePermissionCommand,\n  ReplayLimitExceededException: () => ReplayLimitExceededException,\n  ResourceNotFoundException: () => ResourceNotFoundException,\n  RouteType: () => RouteType,\n  SMSSandboxPhoneNumberFilterSensitiveLog: () => SMSSandboxPhoneNumberFilterSensitiveLog,\n  SMSSandboxPhoneNumberVerificationStatus: () => SMSSandboxPhoneNumberVerificationStatus,\n  SNS: () => SNS,\n  SNSClient: () => SNSClient,\n  SNSServiceException: () => SNSServiceException,\n  SetEndpointAttributesCommand: () => SetEndpointAttributesCommand,\n  SetPlatformApplicationAttributesCommand: () => SetPlatformApplicationAttributesCommand,\n  SetSMSAttributesCommand: () => SetSMSAttributesCommand,\n  SetSubscriptionAttributesCommand: () => SetSubscriptionAttributesCommand,\n  SetTopicAttributesCommand: () => SetTopicAttributesCommand,\n  StaleTagException: () => StaleTagException,\n  SubscribeCommand: () => SubscribeCommand,\n  SubscriptionLimitExceededException: () => SubscriptionLimitExceededException,\n  TagLimitExceededException: () => TagLimitExceededException,\n  TagPolicyException: () => TagPolicyException,\n  TagResourceCommand: () => TagResourceCommand,\n  ThrottledException: () => ThrottledException,\n  TooManyEntriesInBatchRequestException: () => TooManyEntriesInBatchRequestException,\n  TopicLimitExceededException: () => TopicLimitExceededException,\n  UnsubscribeCommand: () => UnsubscribeCommand,\n  UntagResourceCommand: () => UntagResourceCommand,\n  UserErrorException: () => UserErrorException,\n  ValidationException: () => ValidationException,\n  VerificationException: () => VerificationException,\n  VerifySMSSandboxPhoneNumberCommand: () => VerifySMSSandboxPhoneNumberCommand,\n  VerifySMSSandboxPhoneNumberInputFilterSensitiveLog: () => VerifySMSSandboxPhoneNumberInputFilterSensitiveLog,\n  __Client: () => import_smithy_client.Client,\n  paginateListEndpointsByPlatformApplication: () => paginateListEndpointsByPlatformApplication,\n  paginateListOriginationNumbers: () => paginateListOriginationNumbers,\n  paginateListPhoneNumbersOptedOut: () => paginateListPhoneNumbersOptedOut,\n  paginateListPlatformApplications: () => paginateListPlatformApplications,\n  paginateListSMSSandboxPhoneNumbers: () => paginateListSMSSandboxPhoneNumbers,\n  paginateListSubscriptions: () => paginateListSubscriptions,\n  paginateListSubscriptionsByTopic: () => paginateListSubscriptionsByTopic,\n  paginateListTopics: () => paginateListTopics\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/SNSClient.ts\nvar import_middleware_host_header = require(\"@aws-sdk/middleware-host-header\");\nvar import_middleware_logger = require(\"@aws-sdk/middleware-logger\");\nvar import_middleware_recursion_detection = require(\"@aws-sdk/middleware-recursion-detection\");\nvar import_middleware_user_agent = require(\"@aws-sdk/middleware-user-agent\");\nvar import_config_resolver = require(\"@smithy/config-resolver\");\nvar import_core = require(\"@smithy/core\");\nvar import_middleware_content_length = require(\"@smithy/middleware-content-length\");\nvar import_middleware_endpoint = require(\"@smithy/middleware-endpoint\");\nvar import_middleware_retry = require(\"@smithy/middleware-retry\");\n\nvar import_httpAuthSchemeProvider = require(\"./auth/httpAuthSchemeProvider\");\n\n// src/endpoint/EndpointParameters.ts\nvar resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {\n  return {\n    ...options,\n    useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n    useFipsEndpoint: options.useFipsEndpoint ?? false,\n    defaultSigningName: \"sns\"\n  };\n}, \"resolveClientEndpointParameters\");\nvar commonParams = {\n  UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n  Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n  Region: { type: \"builtInParams\", name: \"region\" },\n  UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" }\n};\n\n// src/SNSClient.ts\nvar import_runtimeConfig = require(\"././runtimeConfig\");\n\n// src/runtimeExtensions.ts\nvar import_region_config_resolver = require(\"@aws-sdk/region-config-resolver\");\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nvar import_smithy_client = require(\"@smithy/smithy-client\");\n\n// src/auth/httpAuthExtensionConfiguration.ts\nvar getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n  let _credentials = runtimeConfig.credentials;\n  return {\n    setHttpAuthScheme(httpAuthScheme) {\n      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n      if (index === -1) {\n        _httpAuthSchemes.push(httpAuthScheme);\n      } else {\n        _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n      }\n    },\n    httpAuthSchemes() {\n      return _httpAuthSchemes;\n    },\n    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n      _httpAuthSchemeProvider = httpAuthSchemeProvider;\n    },\n    httpAuthSchemeProvider() {\n      return _httpAuthSchemeProvider;\n    },\n    setCredentials(credentials) {\n      _credentials = credentials;\n    },\n    credentials() {\n      return _credentials;\n    }\n  };\n}, \"getHttpAuthExtensionConfiguration\");\nvar resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {\n  return {\n    httpAuthSchemes: config.httpAuthSchemes(),\n    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n    credentials: config.credentials()\n  };\n}, \"resolveHttpAuthRuntimeConfig\");\n\n// src/runtimeExtensions.ts\nvar asPartial = /* @__PURE__ */ __name((t) => t, \"asPartial\");\nvar resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {\n  const extensionConfiguration = {\n    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),\n    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),\n    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))\n  };\n  extensions.forEach((extension) => extension.configure(extensionConfiguration));\n  return {\n    ...runtimeConfig,\n    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),\n    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),\n    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),\n    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)\n  };\n}, \"resolveRuntimeExtensions\");\n\n// src/SNSClient.ts\nvar _SNSClient = class _SNSClient extends import_smithy_client.Client {\n  constructor(...[configuration]) {\n    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});\n    const _config_1 = resolveClientEndpointParameters(_config_0);\n    const _config_2 = (0, import_config_resolver.resolveRegionConfig)(_config_1);\n    const _config_3 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_2);\n    const _config_4 = (0, import_middleware_retry.resolveRetryConfig)(_config_3);\n    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);\n    const _config_6 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_5);\n    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);\n    const _config_8 = resolveRuntimeExtensions(_config_7, (configuration == null ? void 0 : configuration.extensions) || []);\n    super(_config_8);\n    this.config = _config_8;\n    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));\n    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));\n    this.middlewareStack.use(\n      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {\n        httpAuthSchemeParametersProvider: this.getDefaultHttpAuthSchemeParametersProvider(),\n        identityProviderConfigProvider: this.getIdentityProviderConfigProvider()\n      })\n    );\n    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));\n  }\n  /**\n   * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n   * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n   */\n  destroy() {\n    super.destroy();\n  }\n  getDefaultHttpAuthSchemeParametersProvider() {\n    return import_httpAuthSchemeProvider.defaultSNSHttpAuthSchemeParametersProvider;\n  }\n  getIdentityProviderConfigProvider() {\n    return async (config) => new import_core.DefaultIdentityProviderConfig({\n      \"aws.auth#sigv4\": config.credentials\n    });\n  }\n};\n__name(_SNSClient, \"SNSClient\");\nvar SNSClient = _SNSClient;\n\n// src/SNS.ts\n\n\n// src/commands/AddPermissionCommand.ts\n\nvar import_middleware_serde = require(\"@smithy/middleware-serde\");\n\n\n// src/protocols/Aws_query.ts\nvar import_core2 = require(\"@aws-sdk/core\");\n\n\n\n// src/models/models_0.ts\n\n\n// src/models/SNSServiceException.ts\n\nvar _SNSServiceException = class _SNSServiceException extends import_smithy_client.ServiceException {\n  /**\n   * @internal\n   */\n  constructor(options) {\n    super(options);\n    Object.setPrototypeOf(this, _SNSServiceException.prototype);\n  }\n};\n__name(_SNSServiceException, \"SNSServiceException\");\nvar SNSServiceException = _SNSServiceException;\n\n// src/models/models_0.ts\nvar _AuthorizationErrorException = class _AuthorizationErrorException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"AuthorizationErrorException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"AuthorizationErrorException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _AuthorizationErrorException.prototype);\n  }\n};\n__name(_AuthorizationErrorException, \"AuthorizationErrorException\");\nvar AuthorizationErrorException = _AuthorizationErrorException;\nvar _InternalErrorException = class _InternalErrorException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InternalErrorException\",\n      $fault: \"server\",\n      ...opts\n    });\n    this.name = \"InternalErrorException\";\n    this.$fault = \"server\";\n    Object.setPrototypeOf(this, _InternalErrorException.prototype);\n  }\n};\n__name(_InternalErrorException, \"InternalErrorException\");\nvar InternalErrorException = _InternalErrorException;\nvar _InvalidParameterException = class _InvalidParameterException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidParameterException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidParameterException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidParameterException.prototype);\n  }\n};\n__name(_InvalidParameterException, \"InvalidParameterException\");\nvar InvalidParameterException = _InvalidParameterException;\nvar _NotFoundException = class _NotFoundException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"NotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"NotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _NotFoundException.prototype);\n  }\n};\n__name(_NotFoundException, \"NotFoundException\");\nvar NotFoundException = _NotFoundException;\nvar _ThrottledException = class _ThrottledException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ThrottledException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ThrottledException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ThrottledException.prototype);\n  }\n};\n__name(_ThrottledException, \"ThrottledException\");\nvar ThrottledException = _ThrottledException;\nvar _FilterPolicyLimitExceededException = class _FilterPolicyLimitExceededException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"FilterPolicyLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"FilterPolicyLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _FilterPolicyLimitExceededException.prototype);\n  }\n};\n__name(_FilterPolicyLimitExceededException, \"FilterPolicyLimitExceededException\");\nvar FilterPolicyLimitExceededException = _FilterPolicyLimitExceededException;\nvar _ReplayLimitExceededException = class _ReplayLimitExceededException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ReplayLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ReplayLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ReplayLimitExceededException.prototype);\n  }\n};\n__name(_ReplayLimitExceededException, \"ReplayLimitExceededException\");\nvar ReplayLimitExceededException = _ReplayLimitExceededException;\nvar _SubscriptionLimitExceededException = class _SubscriptionLimitExceededException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"SubscriptionLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"SubscriptionLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _SubscriptionLimitExceededException.prototype);\n  }\n};\n__name(_SubscriptionLimitExceededException, \"SubscriptionLimitExceededException\");\nvar SubscriptionLimitExceededException = _SubscriptionLimitExceededException;\nvar LanguageCodeString = {\n  de_DE: \"de-DE\",\n  en_GB: \"en-GB\",\n  en_US: \"en-US\",\n  es_419: \"es-419\",\n  es_ES: \"es-ES\",\n  fr_CA: \"fr-CA\",\n  fr_FR: \"fr-FR\",\n  it_IT: \"it-IT\",\n  jp_JP: \"ja-JP\",\n  kr_KR: \"kr-KR\",\n  pt_BR: \"pt-BR\",\n  zh_CN: \"zh-CN\",\n  zh_TW: \"zh-TW\"\n};\nvar _OptedOutException = class _OptedOutException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"OptedOutException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"OptedOutException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _OptedOutException.prototype);\n  }\n};\n__name(_OptedOutException, \"OptedOutException\");\nvar OptedOutException = _OptedOutException;\nvar _UserErrorException = class _UserErrorException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"UserErrorException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"UserErrorException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _UserErrorException.prototype);\n  }\n};\n__name(_UserErrorException, \"UserErrorException\");\nvar UserErrorException = _UserErrorException;\nvar _ConcurrentAccessException = class _ConcurrentAccessException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ConcurrentAccessException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ConcurrentAccessException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ConcurrentAccessException.prototype);\n  }\n};\n__name(_ConcurrentAccessException, \"ConcurrentAccessException\");\nvar ConcurrentAccessException = _ConcurrentAccessException;\nvar _InvalidSecurityException = class _InvalidSecurityException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidSecurityException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidSecurityException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidSecurityException.prototype);\n  }\n};\n__name(_InvalidSecurityException, \"InvalidSecurityException\");\nvar InvalidSecurityException = _InvalidSecurityException;\nvar _StaleTagException = class _StaleTagException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"StaleTagException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"StaleTagException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _StaleTagException.prototype);\n  }\n};\n__name(_StaleTagException, \"StaleTagException\");\nvar StaleTagException = _StaleTagException;\nvar _TagLimitExceededException = class _TagLimitExceededException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TagLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TagLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TagLimitExceededException.prototype);\n  }\n};\n__name(_TagLimitExceededException, \"TagLimitExceededException\");\nvar TagLimitExceededException = _TagLimitExceededException;\nvar _TagPolicyException = class _TagPolicyException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TagPolicyException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TagPolicyException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TagPolicyException.prototype);\n  }\n};\n__name(_TagPolicyException, \"TagPolicyException\");\nvar TagPolicyException = _TagPolicyException;\nvar _TopicLimitExceededException = class _TopicLimitExceededException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TopicLimitExceededException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TopicLimitExceededException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TopicLimitExceededException.prototype);\n  }\n};\n__name(_TopicLimitExceededException, \"TopicLimitExceededException\");\nvar TopicLimitExceededException = _TopicLimitExceededException;\nvar _ResourceNotFoundException = class _ResourceNotFoundException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ResourceNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ResourceNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);\n  }\n};\n__name(_ResourceNotFoundException, \"ResourceNotFoundException\");\nvar ResourceNotFoundException = _ResourceNotFoundException;\nvar _InvalidStateException = class _InvalidStateException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidStateException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidStateException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidStateException.prototype);\n  }\n};\n__name(_InvalidStateException, \"InvalidStateException\");\nvar InvalidStateException = _InvalidStateException;\nvar NumberCapability = {\n  MMS: \"MMS\",\n  SMS: \"SMS\",\n  VOICE: \"VOICE\"\n};\nvar RouteType = {\n  Premium: \"Premium\",\n  Promotional: \"Promotional\",\n  Transactional: \"Transactional\"\n};\nvar _ValidationException = class _ValidationException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"ValidationException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"ValidationException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _ValidationException.prototype);\n    this.Message = opts.Message;\n  }\n};\n__name(_ValidationException, \"ValidationException\");\nvar ValidationException = _ValidationException;\nvar SMSSandboxPhoneNumberVerificationStatus = {\n  Pending: \"Pending\",\n  Verified: \"Verified\"\n};\nvar _EndpointDisabledException = class _EndpointDisabledException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"EndpointDisabledException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"EndpointDisabledException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _EndpointDisabledException.prototype);\n  }\n};\n__name(_EndpointDisabledException, \"EndpointDisabledException\");\nvar EndpointDisabledException = _EndpointDisabledException;\nvar _InvalidParameterValueException = class _InvalidParameterValueException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidParameterValueException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidParameterValueException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidParameterValueException.prototype);\n  }\n};\n__name(_InvalidParameterValueException, \"InvalidParameterValueException\");\nvar InvalidParameterValueException = _InvalidParameterValueException;\nvar _KMSAccessDeniedException = class _KMSAccessDeniedException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"KMSAccessDeniedException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KMSAccessDeniedException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _KMSAccessDeniedException.prototype);\n  }\n};\n__name(_KMSAccessDeniedException, \"KMSAccessDeniedException\");\nvar KMSAccessDeniedException = _KMSAccessDeniedException;\nvar _KMSDisabledException = class _KMSDisabledException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"KMSDisabledException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KMSDisabledException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _KMSDisabledException.prototype);\n  }\n};\n__name(_KMSDisabledException, \"KMSDisabledException\");\nvar KMSDisabledException = _KMSDisabledException;\nvar _KMSInvalidStateException = class _KMSInvalidStateException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"KMSInvalidStateException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KMSInvalidStateException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _KMSInvalidStateException.prototype);\n  }\n};\n__name(_KMSInvalidStateException, \"KMSInvalidStateException\");\nvar KMSInvalidStateException = _KMSInvalidStateException;\nvar _KMSNotFoundException = class _KMSNotFoundException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"KMSNotFoundException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KMSNotFoundException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _KMSNotFoundException.prototype);\n  }\n};\n__name(_KMSNotFoundException, \"KMSNotFoundException\");\nvar KMSNotFoundException = _KMSNotFoundException;\nvar _KMSOptInRequired = class _KMSOptInRequired extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"KMSOptInRequired\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KMSOptInRequired\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _KMSOptInRequired.prototype);\n  }\n};\n__name(_KMSOptInRequired, \"KMSOptInRequired\");\nvar KMSOptInRequired = _KMSOptInRequired;\nvar _KMSThrottlingException = class _KMSThrottlingException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"KMSThrottlingException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"KMSThrottlingException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _KMSThrottlingException.prototype);\n  }\n};\n__name(_KMSThrottlingException, \"KMSThrottlingException\");\nvar KMSThrottlingException = _KMSThrottlingException;\nvar _PlatformApplicationDisabledException = class _PlatformApplicationDisabledException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"PlatformApplicationDisabledException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"PlatformApplicationDisabledException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _PlatformApplicationDisabledException.prototype);\n  }\n};\n__name(_PlatformApplicationDisabledException, \"PlatformApplicationDisabledException\");\nvar PlatformApplicationDisabledException = _PlatformApplicationDisabledException;\nvar _BatchEntryIdsNotDistinctException = class _BatchEntryIdsNotDistinctException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"BatchEntryIdsNotDistinctException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"BatchEntryIdsNotDistinctException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _BatchEntryIdsNotDistinctException.prototype);\n  }\n};\n__name(_BatchEntryIdsNotDistinctException, \"BatchEntryIdsNotDistinctException\");\nvar BatchEntryIdsNotDistinctException = _BatchEntryIdsNotDistinctException;\nvar _BatchRequestTooLongException = class _BatchRequestTooLongException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"BatchRequestTooLongException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"BatchRequestTooLongException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _BatchRequestTooLongException.prototype);\n  }\n};\n__name(_BatchRequestTooLongException, \"BatchRequestTooLongException\");\nvar BatchRequestTooLongException = _BatchRequestTooLongException;\nvar _EmptyBatchRequestException = class _EmptyBatchRequestException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"EmptyBatchRequestException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"EmptyBatchRequestException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _EmptyBatchRequestException.prototype);\n  }\n};\n__name(_EmptyBatchRequestException, \"EmptyBatchRequestException\");\nvar EmptyBatchRequestException = _EmptyBatchRequestException;\nvar _InvalidBatchEntryIdException = class _InvalidBatchEntryIdException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"InvalidBatchEntryIdException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"InvalidBatchEntryIdException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _InvalidBatchEntryIdException.prototype);\n  }\n};\n__name(_InvalidBatchEntryIdException, \"InvalidBatchEntryIdException\");\nvar InvalidBatchEntryIdException = _InvalidBatchEntryIdException;\nvar _TooManyEntriesInBatchRequestException = class _TooManyEntriesInBatchRequestException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"TooManyEntriesInBatchRequestException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"TooManyEntriesInBatchRequestException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _TooManyEntriesInBatchRequestException.prototype);\n  }\n};\n__name(_TooManyEntriesInBatchRequestException, \"TooManyEntriesInBatchRequestException\");\nvar TooManyEntriesInBatchRequestException = _TooManyEntriesInBatchRequestException;\nvar _VerificationException = class _VerificationException extends SNSServiceException {\n  /**\n   * @internal\n   */\n  constructor(opts) {\n    super({\n      name: \"VerificationException\",\n      $fault: \"client\",\n      ...opts\n    });\n    this.name = \"VerificationException\";\n    this.$fault = \"client\";\n    Object.setPrototypeOf(this, _VerificationException.prototype);\n    this.Message = opts.Message;\n    this.Status = opts.Status;\n  }\n};\n__name(_VerificationException, \"VerificationException\");\nvar VerificationException = _VerificationException;\nvar CheckIfPhoneNumberIsOptedOutInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.phoneNumber && { phoneNumber: import_smithy_client.SENSITIVE_STRING }\n}), \"CheckIfPhoneNumberIsOptedOutInputFilterSensitiveLog\");\nvar CreateSMSSandboxPhoneNumberInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.PhoneNumber && { PhoneNumber: import_smithy_client.SENSITIVE_STRING }\n}), \"CreateSMSSandboxPhoneNumberInputFilterSensitiveLog\");\nvar DeleteSMSSandboxPhoneNumberInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.PhoneNumber && { PhoneNumber: import_smithy_client.SENSITIVE_STRING }\n}), \"DeleteSMSSandboxPhoneNumberInputFilterSensitiveLog\");\nvar PhoneNumberInformationFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.PhoneNumber && { PhoneNumber: import_smithy_client.SENSITIVE_STRING }\n}), \"PhoneNumberInformationFilterSensitiveLog\");\nvar ListOriginationNumbersResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.PhoneNumbers && {\n    PhoneNumbers: obj.PhoneNumbers.map((item) => PhoneNumberInformationFilterSensitiveLog(item))\n  }\n}), \"ListOriginationNumbersResultFilterSensitiveLog\");\nvar ListPhoneNumbersOptedOutResponseFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.phoneNumbers && { phoneNumbers: import_smithy_client.SENSITIVE_STRING }\n}), \"ListPhoneNumbersOptedOutResponseFilterSensitiveLog\");\nvar SMSSandboxPhoneNumberFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.PhoneNumber && { PhoneNumber: import_smithy_client.SENSITIVE_STRING }\n}), \"SMSSandboxPhoneNumberFilterSensitiveLog\");\nvar ListSMSSandboxPhoneNumbersResultFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.PhoneNumbers && {\n    PhoneNumbers: obj.PhoneNumbers.map((item) => SMSSandboxPhoneNumberFilterSensitiveLog(item))\n  }\n}), \"ListSMSSandboxPhoneNumbersResultFilterSensitiveLog\");\nvar OptInPhoneNumberInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.phoneNumber && { phoneNumber: import_smithy_client.SENSITIVE_STRING }\n}), \"OptInPhoneNumberInputFilterSensitiveLog\");\nvar PublishInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.PhoneNumber && { PhoneNumber: import_smithy_client.SENSITIVE_STRING }\n}), \"PublishInputFilterSensitiveLog\");\nvar VerifySMSSandboxPhoneNumberInputFilterSensitiveLog = /* @__PURE__ */ __name((obj) => ({\n  ...obj,\n  ...obj.PhoneNumber && { PhoneNumber: import_smithy_client.SENSITIVE_STRING }\n}), \"VerifySMSSandboxPhoneNumberInputFilterSensitiveLog\");\n\n// src/protocols/Aws_query.ts\nvar se_AddPermissionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_AddPermissionInput(input, context),\n    [_A]: _AP,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_AddPermissionCommand\");\nvar se_CheckIfPhoneNumberIsOptedOutCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_CheckIfPhoneNumberIsOptedOutInput(input, context),\n    [_A]: _CIPNIOO,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CheckIfPhoneNumberIsOptedOutCommand\");\nvar se_ConfirmSubscriptionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ConfirmSubscriptionInput(input, context),\n    [_A]: _CS,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ConfirmSubscriptionCommand\");\nvar se_CreatePlatformApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_CreatePlatformApplicationInput(input, context),\n    [_A]: _CPA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreatePlatformApplicationCommand\");\nvar se_CreatePlatformEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_CreatePlatformEndpointInput(input, context),\n    [_A]: _CPE,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreatePlatformEndpointCommand\");\nvar se_CreateSMSSandboxPhoneNumberCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_CreateSMSSandboxPhoneNumberInput(input, context),\n    [_A]: _CSMSSPN,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateSMSSandboxPhoneNumberCommand\");\nvar se_CreateTopicCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_CreateTopicInput(input, context),\n    [_A]: _CT,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_CreateTopicCommand\");\nvar se_DeleteEndpointCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_DeleteEndpointInput(input, context),\n    [_A]: _DE,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteEndpointCommand\");\nvar se_DeletePlatformApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_DeletePlatformApplicationInput(input, context),\n    [_A]: _DPA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeletePlatformApplicationCommand\");\nvar se_DeleteSMSSandboxPhoneNumberCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_DeleteSMSSandboxPhoneNumberInput(input, context),\n    [_A]: _DSMSSPN,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteSMSSandboxPhoneNumberCommand\");\nvar se_DeleteTopicCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_DeleteTopicInput(input, context),\n    [_A]: _DT,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_DeleteTopicCommand\");\nvar se_GetDataProtectionPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetDataProtectionPolicyInput(input, context),\n    [_A]: _GDPP,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetDataProtectionPolicyCommand\");\nvar se_GetEndpointAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetEndpointAttributesInput(input, context),\n    [_A]: _GEA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetEndpointAttributesCommand\");\nvar se_GetPlatformApplicationAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetPlatformApplicationAttributesInput(input, context),\n    [_A]: _GPAA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetPlatformApplicationAttributesCommand\");\nvar se_GetSMSAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetSMSAttributesInput(input, context),\n    [_A]: _GSMSA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetSMSAttributesCommand\");\nvar se_GetSMSSandboxAccountStatusCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetSMSSandboxAccountStatusInput(input, context),\n    [_A]: _GSMSSAS,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetSMSSandboxAccountStatusCommand\");\nvar se_GetSubscriptionAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetSubscriptionAttributesInput(input, context),\n    [_A]: _GSA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetSubscriptionAttributesCommand\");\nvar se_GetTopicAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_GetTopicAttributesInput(input, context),\n    [_A]: _GTA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_GetTopicAttributesCommand\");\nvar se_ListEndpointsByPlatformApplicationCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListEndpointsByPlatformApplicationInput(input, context),\n    [_A]: _LEBPA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListEndpointsByPlatformApplicationCommand\");\nvar se_ListOriginationNumbersCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListOriginationNumbersRequest(input, context),\n    [_A]: _LON,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListOriginationNumbersCommand\");\nvar se_ListPhoneNumbersOptedOutCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListPhoneNumbersOptedOutInput(input, context),\n    [_A]: _LPNOO,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListPhoneNumbersOptedOutCommand\");\nvar se_ListPlatformApplicationsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListPlatformApplicationsInput(input, context),\n    [_A]: _LPA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListPlatformApplicationsCommand\");\nvar se_ListSMSSandboxPhoneNumbersCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListSMSSandboxPhoneNumbersInput(input, context),\n    [_A]: _LSMSSPN,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSMSSandboxPhoneNumbersCommand\");\nvar se_ListSubscriptionsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListSubscriptionsInput(input, context),\n    [_A]: _LS,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSubscriptionsCommand\");\nvar se_ListSubscriptionsByTopicCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListSubscriptionsByTopicInput(input, context),\n    [_A]: _LSBT,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListSubscriptionsByTopicCommand\");\nvar se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListTagsForResourceRequest(input, context),\n    [_A]: _LTFR,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListTagsForResourceCommand\");\nvar se_ListTopicsCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_ListTopicsInput(input, context),\n    [_A]: _LT,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_ListTopicsCommand\");\nvar se_OptInPhoneNumberCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_OptInPhoneNumberInput(input, context),\n    [_A]: _OIPN,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_OptInPhoneNumberCommand\");\nvar se_PublishCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_PublishInput(input, context),\n    [_A]: _P,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PublishCommand\");\nvar se_PublishBatchCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_PublishBatchInput(input, context),\n    [_A]: _PB,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PublishBatchCommand\");\nvar se_PutDataProtectionPolicyCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_PutDataProtectionPolicyInput(input, context),\n    [_A]: _PDPP,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_PutDataProtectionPolicyCommand\");\nvar se_RemovePermissionCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_RemovePermissionInput(input, context),\n    [_A]: _RP,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_RemovePermissionCommand\");\nvar se_SetEndpointAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_SetEndpointAttributesInput(input, context),\n    [_A]: _SEA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SetEndpointAttributesCommand\");\nvar se_SetPlatformApplicationAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_SetPlatformApplicationAttributesInput(input, context),\n    [_A]: _SPAA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SetPlatformApplicationAttributesCommand\");\nvar se_SetSMSAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_SetSMSAttributesInput(input, context),\n    [_A]: _SSMSA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SetSMSAttributesCommand\");\nvar se_SetSubscriptionAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_SetSubscriptionAttributesInput(input, context),\n    [_A]: _SSA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SetSubscriptionAttributesCommand\");\nvar se_SetTopicAttributesCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_SetTopicAttributesInput(input, context),\n    [_A]: _STA,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SetTopicAttributesCommand\");\nvar se_SubscribeCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_SubscribeInput(input, context),\n    [_A]: _S,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_SubscribeCommand\");\nvar se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_TagResourceRequest(input, context),\n    [_A]: _TR,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_TagResourceCommand\");\nvar se_UnsubscribeCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_UnsubscribeInput(input, context),\n    [_A]: _U,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UnsubscribeCommand\");\nvar se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_UntagResourceRequest(input, context),\n    [_A]: _UR,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_UntagResourceCommand\");\nvar se_VerifySMSSandboxPhoneNumberCommand = /* @__PURE__ */ __name(async (input, context) => {\n  const headers = SHARED_HEADERS;\n  let body;\n  body = buildFormUrlencodedString({\n    ...se_VerifySMSSandboxPhoneNumberInput(input, context),\n    [_A]: _VSMSSPN,\n    [_V]: _\n  });\n  return buildHttpRpcRequest(context, headers, \"/\", void 0, body);\n}, \"se_VerifySMSSandboxPhoneNumberCommand\");\nvar de_AddPermissionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_AddPermissionCommand\");\nvar de_CheckIfPhoneNumberIsOptedOutCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_CheckIfPhoneNumberIsOptedOutResponse(data.CheckIfPhoneNumberIsOptedOutResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CheckIfPhoneNumberIsOptedOutCommand\");\nvar de_ConfirmSubscriptionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ConfirmSubscriptionResponse(data.ConfirmSubscriptionResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ConfirmSubscriptionCommand\");\nvar de_CreatePlatformApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_CreatePlatformApplicationResponse(data.CreatePlatformApplicationResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreatePlatformApplicationCommand\");\nvar de_CreatePlatformEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_CreateEndpointResponse(data.CreatePlatformEndpointResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreatePlatformEndpointCommand\");\nvar de_CreateSMSSandboxPhoneNumberCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_CreateSMSSandboxPhoneNumberResult(data.CreateSMSSandboxPhoneNumberResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateSMSSandboxPhoneNumberCommand\");\nvar de_CreateTopicCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_CreateTopicResponse(data.CreateTopicResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_CreateTopicCommand\");\nvar de_DeleteEndpointCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_DeleteEndpointCommand\");\nvar de_DeletePlatformApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_DeletePlatformApplicationCommand\");\nvar de_DeleteSMSSandboxPhoneNumberCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_DeleteSMSSandboxPhoneNumberResult(data.DeleteSMSSandboxPhoneNumberResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_DeleteSMSSandboxPhoneNumberCommand\");\nvar de_DeleteTopicCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_DeleteTopicCommand\");\nvar de_GetDataProtectionPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetDataProtectionPolicyResponse(data.GetDataProtectionPolicyResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetDataProtectionPolicyCommand\");\nvar de_GetEndpointAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetEndpointAttributesResponse(data.GetEndpointAttributesResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetEndpointAttributesCommand\");\nvar de_GetPlatformApplicationAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetPlatformApplicationAttributesResponse(data.GetPlatformApplicationAttributesResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetPlatformApplicationAttributesCommand\");\nvar de_GetSMSAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetSMSAttributesResponse(data.GetSMSAttributesResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetSMSAttributesCommand\");\nvar de_GetSMSSandboxAccountStatusCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetSMSSandboxAccountStatusResult(data.GetSMSSandboxAccountStatusResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetSMSSandboxAccountStatusCommand\");\nvar de_GetSubscriptionAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetSubscriptionAttributesResponse(data.GetSubscriptionAttributesResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetSubscriptionAttributesCommand\");\nvar de_GetTopicAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_GetTopicAttributesResponse(data.GetTopicAttributesResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_GetTopicAttributesCommand\");\nvar de_ListEndpointsByPlatformApplicationCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListEndpointsByPlatformApplicationResponse(data.ListEndpointsByPlatformApplicationResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListEndpointsByPlatformApplicationCommand\");\nvar de_ListOriginationNumbersCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListOriginationNumbersResult(data.ListOriginationNumbersResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListOriginationNumbersCommand\");\nvar de_ListPhoneNumbersOptedOutCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListPhoneNumbersOptedOutResponse(data.ListPhoneNumbersOptedOutResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListPhoneNumbersOptedOutCommand\");\nvar de_ListPlatformApplicationsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListPlatformApplicationsResponse(data.ListPlatformApplicationsResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListPlatformApplicationsCommand\");\nvar de_ListSMSSandboxPhoneNumbersCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListSMSSandboxPhoneNumbersResult(data.ListSMSSandboxPhoneNumbersResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListSMSSandboxPhoneNumbersCommand\");\nvar de_ListSubscriptionsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListSubscriptionsResponse(data.ListSubscriptionsResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListSubscriptionsCommand\");\nvar de_ListSubscriptionsByTopicCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListSubscriptionsByTopicResponse(data.ListSubscriptionsByTopicResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListSubscriptionsByTopicCommand\");\nvar de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListTagsForResourceResponse(data.ListTagsForResourceResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListTagsForResourceCommand\");\nvar de_ListTopicsCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_ListTopicsResponse(data.ListTopicsResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_ListTopicsCommand\");\nvar de_OptInPhoneNumberCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_OptInPhoneNumberResponse(data.OptInPhoneNumberResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_OptInPhoneNumberCommand\");\nvar de_PublishCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_PublishResponse(data.PublishResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_PublishCommand\");\nvar de_PublishBatchCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_PublishBatchResponse(data.PublishBatchResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_PublishBatchCommand\");\nvar de_PutDataProtectionPolicyCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_PutDataProtectionPolicyCommand\");\nvar de_RemovePermissionCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_RemovePermissionCommand\");\nvar de_SetEndpointAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_SetEndpointAttributesCommand\");\nvar de_SetPlatformApplicationAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_SetPlatformApplicationAttributesCommand\");\nvar de_SetSMSAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_SetSMSAttributesResponse(data.SetSMSAttributesResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_SetSMSAttributesCommand\");\nvar de_SetSubscriptionAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_SetSubscriptionAttributesCommand\");\nvar de_SetTopicAttributesCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_SetTopicAttributesCommand\");\nvar de_SubscribeCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_SubscribeResponse(data.SubscribeResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_SubscribeCommand\");\nvar de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_TagResourceResponse(data.TagResourceResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_TagResourceCommand\");\nvar de_UnsubscribeCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  await (0, import_smithy_client.collectBody)(output.body, context);\n  const response = {\n    $metadata: deserializeMetadata(output)\n  };\n  return response;\n}, \"de_UnsubscribeCommand\");\nvar de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_UntagResourceResponse(data.UntagResourceResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_UntagResourceCommand\");\nvar de_VerifySMSSandboxPhoneNumberCommand = /* @__PURE__ */ __name(async (output, context) => {\n  if (output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const data = await (0, import_core2.parseXmlBody)(output.body, context);\n  let contents = {};\n  contents = de_VerifySMSSandboxPhoneNumberResult(data.VerifySMSSandboxPhoneNumberResult, context);\n  const response = {\n    $metadata: deserializeMetadata(output),\n    ...contents\n  };\n  return response;\n}, \"de_VerifySMSSandboxPhoneNumberCommand\");\nvar de_CommandError = /* @__PURE__ */ __name(async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await (0, import_core2.parseXmlErrorBody)(output.body, context)\n  };\n  const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AuthorizationError\":\n    case \"com.amazonaws.sns#AuthorizationErrorException\":\n      throw await de_AuthorizationErrorExceptionRes(parsedOutput, context);\n    case \"InternalError\":\n    case \"com.amazonaws.sns#InternalErrorException\":\n      throw await de_InternalErrorExceptionRes(parsedOutput, context);\n    case \"InvalidParameter\":\n    case \"com.amazonaws.sns#InvalidParameterException\":\n      throw await de_InvalidParameterExceptionRes(parsedOutput, context);\n    case \"NotFound\":\n    case \"com.amazonaws.sns#NotFoundException\":\n      throw await de_NotFoundExceptionRes(parsedOutput, context);\n    case \"Throttled\":\n    case \"com.amazonaws.sns#ThrottledException\":\n      throw await de_ThrottledExceptionRes(parsedOutput, context);\n    case \"FilterPolicyLimitExceeded\":\n    case \"com.amazonaws.sns#FilterPolicyLimitExceededException\":\n      throw await de_FilterPolicyLimitExceededExceptionRes(parsedOutput, context);\n    case \"ReplayLimitExceeded\":\n    case \"com.amazonaws.sns#ReplayLimitExceededException\":\n      throw await de_ReplayLimitExceededExceptionRes(parsedOutput, context);\n    case \"SubscriptionLimitExceeded\":\n    case \"com.amazonaws.sns#SubscriptionLimitExceededException\":\n      throw await de_SubscriptionLimitExceededExceptionRes(parsedOutput, context);\n    case \"OptedOut\":\n    case \"com.amazonaws.sns#OptedOutException\":\n      throw await de_OptedOutExceptionRes(parsedOutput, context);\n    case \"UserError\":\n    case \"com.amazonaws.sns#UserErrorException\":\n      throw await de_UserErrorExceptionRes(parsedOutput, context);\n    case \"ConcurrentAccess\":\n    case \"com.amazonaws.sns#ConcurrentAccessException\":\n      throw await de_ConcurrentAccessExceptionRes(parsedOutput, context);\n    case \"InvalidSecurity\":\n    case \"com.amazonaws.sns#InvalidSecurityException\":\n      throw await de_InvalidSecurityExceptionRes(parsedOutput, context);\n    case \"StaleTag\":\n    case \"com.amazonaws.sns#StaleTagException\":\n      throw await de_StaleTagExceptionRes(parsedOutput, context);\n    case \"TagLimitExceeded\":\n    case \"com.amazonaws.sns#TagLimitExceededException\":\n      throw await de_TagLimitExceededExceptionRes(parsedOutput, context);\n    case \"TagPolicy\":\n    case \"com.amazonaws.sns#TagPolicyException\":\n      throw await de_TagPolicyExceptionRes(parsedOutput, context);\n    case \"TopicLimitExceeded\":\n    case \"com.amazonaws.sns#TopicLimitExceededException\":\n      throw await de_TopicLimitExceededExceptionRes(parsedOutput, context);\n    case \"ResourceNotFound\":\n    case \"com.amazonaws.sns#ResourceNotFoundException\":\n      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n    case \"InvalidState\":\n    case \"com.amazonaws.sns#InvalidStateException\":\n      throw await de_InvalidStateExceptionRes(parsedOutput, context);\n    case \"ValidationException\":\n    case \"com.amazonaws.sns#ValidationException\":\n      throw await de_ValidationExceptionRes(parsedOutput, context);\n    case \"EndpointDisabled\":\n    case \"com.amazonaws.sns#EndpointDisabledException\":\n      throw await de_EndpointDisabledExceptionRes(parsedOutput, context);\n    case \"KMSAccessDenied\":\n    case \"com.amazonaws.sns#KMSAccessDeniedException\":\n      throw await de_KMSAccessDeniedExceptionRes(parsedOutput, context);\n    case \"KMSDisabled\":\n    case \"com.amazonaws.sns#KMSDisabledException\":\n      throw await de_KMSDisabledExceptionRes(parsedOutput, context);\n    case \"KMSInvalidState\":\n    case \"com.amazonaws.sns#KMSInvalidStateException\":\n      throw await de_KMSInvalidStateExceptionRes(parsedOutput, context);\n    case \"KMSNotFound\":\n    case \"com.amazonaws.sns#KMSNotFoundException\":\n      throw await de_KMSNotFoundExceptionRes(parsedOutput, context);\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.sns#KMSOptInRequired\":\n      throw await de_KMSOptInRequiredRes(parsedOutput, context);\n    case \"KMSThrottling\":\n    case \"com.amazonaws.sns#KMSThrottlingException\":\n      throw await de_KMSThrottlingExceptionRes(parsedOutput, context);\n    case \"ParameterValueInvalid\":\n    case \"com.amazonaws.sns#InvalidParameterValueException\":\n      throw await de_InvalidParameterValueExceptionRes(parsedOutput, context);\n    case \"PlatformApplicationDisabled\":\n    case \"com.amazonaws.sns#PlatformApplicationDisabledException\":\n      throw await de_PlatformApplicationDisabledExceptionRes(parsedOutput, context);\n    case \"BatchEntryIdsNotDistinct\":\n    case \"com.amazonaws.sns#BatchEntryIdsNotDistinctException\":\n      throw await de_BatchEntryIdsNotDistinctExceptionRes(parsedOutput, context);\n    case \"BatchRequestTooLong\":\n    case \"com.amazonaws.sns#BatchRequestTooLongException\":\n      throw await de_BatchRequestTooLongExceptionRes(parsedOutput, context);\n    case \"EmptyBatchRequest\":\n    case \"com.amazonaws.sns#EmptyBatchRequestException\":\n      throw await de_EmptyBatchRequestExceptionRes(parsedOutput, context);\n    case \"InvalidBatchEntryId\":\n    case \"com.amazonaws.sns#InvalidBatchEntryIdException\":\n      throw await de_InvalidBatchEntryIdExceptionRes(parsedOutput, context);\n    case \"TooManyEntriesInBatchRequest\":\n    case \"com.amazonaws.sns#TooManyEntriesInBatchRequestException\":\n      throw await de_TooManyEntriesInBatchRequestExceptionRes(parsedOutput, context);\n    case \"VerificationException\":\n    case \"com.amazonaws.sns#VerificationException\":\n      throw await de_VerificationExceptionRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        errorCode\n      });\n  }\n}, \"de_CommandError\");\nvar de_AuthorizationErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_AuthorizationErrorException(body.Error, context);\n  const exception = new AuthorizationErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_AuthorizationErrorExceptionRes\");\nvar de_BatchEntryIdsNotDistinctExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_BatchEntryIdsNotDistinctException(body.Error, context);\n  const exception = new BatchEntryIdsNotDistinctException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_BatchEntryIdsNotDistinctExceptionRes\");\nvar de_BatchRequestTooLongExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_BatchRequestTooLongException(body.Error, context);\n  const exception = new BatchRequestTooLongException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_BatchRequestTooLongExceptionRes\");\nvar de_ConcurrentAccessExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_ConcurrentAccessException(body.Error, context);\n  const exception = new ConcurrentAccessException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ConcurrentAccessExceptionRes\");\nvar de_EmptyBatchRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_EmptyBatchRequestException(body.Error, context);\n  const exception = new EmptyBatchRequestException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_EmptyBatchRequestExceptionRes\");\nvar de_EndpointDisabledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_EndpointDisabledException(body.Error, context);\n  const exception = new EndpointDisabledException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_EndpointDisabledExceptionRes\");\nvar de_FilterPolicyLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_FilterPolicyLimitExceededException(body.Error, context);\n  const exception = new FilterPolicyLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_FilterPolicyLimitExceededExceptionRes\");\nvar de_InternalErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_InternalErrorException(body.Error, context);\n  const exception = new InternalErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InternalErrorExceptionRes\");\nvar de_InvalidBatchEntryIdExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_InvalidBatchEntryIdException(body.Error, context);\n  const exception = new InvalidBatchEntryIdException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidBatchEntryIdExceptionRes\");\nvar de_InvalidParameterExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_InvalidParameterException(body.Error, context);\n  const exception = new InvalidParameterException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidParameterExceptionRes\");\nvar de_InvalidParameterValueExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_InvalidParameterValueException(body.Error, context);\n  const exception = new InvalidParameterValueException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidParameterValueExceptionRes\");\nvar de_InvalidSecurityExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_InvalidSecurityException(body.Error, context);\n  const exception = new InvalidSecurityException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidSecurityExceptionRes\");\nvar de_InvalidStateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_InvalidStateException(body.Error, context);\n  const exception = new InvalidStateException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_InvalidStateExceptionRes\");\nvar de_KMSAccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_KMSAccessDeniedException(body.Error, context);\n  const exception = new KMSAccessDeniedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_KMSAccessDeniedExceptionRes\");\nvar de_KMSDisabledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_KMSDisabledException(body.Error, context);\n  const exception = new KMSDisabledException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_KMSDisabledExceptionRes\");\nvar de_KMSInvalidStateExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_KMSInvalidStateException(body.Error, context);\n  const exception = new KMSInvalidStateException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_KMSInvalidStateExceptionRes\");\nvar de_KMSNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_KMSNotFoundException(body.Error, context);\n  const exception = new KMSNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_KMSNotFoundExceptionRes\");\nvar de_KMSOptInRequiredRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_KMSOptInRequired(body.Error, context);\n  const exception = new KMSOptInRequired({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_KMSOptInRequiredRes\");\nvar de_KMSThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_KMSThrottlingException(body.Error, context);\n  const exception = new KMSThrottlingException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_KMSThrottlingExceptionRes\");\nvar de_NotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_NotFoundException(body.Error, context);\n  const exception = new NotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_NotFoundExceptionRes\");\nvar de_OptedOutExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_OptedOutException(body.Error, context);\n  const exception = new OptedOutException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_OptedOutExceptionRes\");\nvar de_PlatformApplicationDisabledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_PlatformApplicationDisabledException(body.Error, context);\n  const exception = new PlatformApplicationDisabledException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_PlatformApplicationDisabledExceptionRes\");\nvar de_ReplayLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_ReplayLimitExceededException(body.Error, context);\n  const exception = new ReplayLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ReplayLimitExceededExceptionRes\");\nvar de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_ResourceNotFoundException(body.Error, context);\n  const exception = new ResourceNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ResourceNotFoundExceptionRes\");\nvar de_StaleTagExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_StaleTagException(body.Error, context);\n  const exception = new StaleTagException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_StaleTagExceptionRes\");\nvar de_SubscriptionLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_SubscriptionLimitExceededException(body.Error, context);\n  const exception = new SubscriptionLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_SubscriptionLimitExceededExceptionRes\");\nvar de_TagLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_TagLimitExceededException(body.Error, context);\n  const exception = new TagLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TagLimitExceededExceptionRes\");\nvar de_TagPolicyExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_TagPolicyException(body.Error, context);\n  const exception = new TagPolicyException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TagPolicyExceptionRes\");\nvar de_ThrottledExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_ThrottledException(body.Error, context);\n  const exception = new ThrottledException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ThrottledExceptionRes\");\nvar de_TooManyEntriesInBatchRequestExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_TooManyEntriesInBatchRequestException(body.Error, context);\n  const exception = new TooManyEntriesInBatchRequestException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TooManyEntriesInBatchRequestExceptionRes\");\nvar de_TopicLimitExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_TopicLimitExceededException(body.Error, context);\n  const exception = new TopicLimitExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_TopicLimitExceededExceptionRes\");\nvar de_UserErrorExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_UserErrorException(body.Error, context);\n  const exception = new UserErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_UserErrorExceptionRes\");\nvar de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_ValidationException(body.Error, context);\n  const exception = new ValidationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_ValidationExceptionRes\");\nvar de_VerificationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {\n  const body = parsedOutput.body;\n  const deserialized = de_VerificationException(body.Error, context);\n  const exception = new VerificationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized\n  });\n  return (0, import_smithy_client.decorateServiceException)(exception, body);\n}, \"de_VerificationExceptionRes\");\nvar se_ActionsList = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    entries[`member.${counter}`] = entry;\n    counter++;\n  }\n  return entries;\n}, \"se_ActionsList\");\nvar se_AddPermissionInput = /* @__PURE__ */ __name((input, context) => {\n  var _a2, _b;\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  if (input[_L] != null) {\n    entries[_L] = input[_L];\n  }\n  if (input[_AWSAI] != null) {\n    const memberEntries = se_DelegatesList(input[_AWSAI], context);\n    if (((_a2 = input[_AWSAI]) == null ? void 0 : _a2.length) === 0) {\n      entries.AWSAccountId = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `AWSAccountId.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_AN] != null) {\n    const memberEntries = se_ActionsList(input[_AN], context);\n    if (((_b = input[_AN]) == null ? void 0 : _b.length) === 0) {\n      entries.ActionName = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `ActionName.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_AddPermissionInput\");\nvar se_CheckIfPhoneNumberIsOptedOutInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_pN] != null) {\n    entries[_pN] = input[_pN];\n  }\n  return entries;\n}, \"se_CheckIfPhoneNumberIsOptedOutInput\");\nvar se_ConfirmSubscriptionInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  if (input[_T] != null) {\n    entries[_T] = input[_T];\n  }\n  if (input[_AOU] != null) {\n    entries[_AOU] = input[_AOU];\n  }\n  return entries;\n}, \"se_ConfirmSubscriptionInput\");\nvar se_CreatePlatformApplicationInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_N] != null) {\n    entries[_N] = input[_N];\n  }\n  if (input[_Pl] != null) {\n    entries[_Pl] = input[_Pl];\n  }\n  if (input[_At] != null) {\n    const memberEntries = se_MapStringToString(input[_At], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Attributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_CreatePlatformApplicationInput\");\nvar se_CreatePlatformEndpointInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PAA] != null) {\n    entries[_PAA] = input[_PAA];\n  }\n  if (input[_T] != null) {\n    entries[_T] = input[_T];\n  }\n  if (input[_CUD] != null) {\n    entries[_CUD] = input[_CUD];\n  }\n  if (input[_At] != null) {\n    const memberEntries = se_MapStringToString(input[_At], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Attributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_CreatePlatformEndpointInput\");\nvar se_CreateSMSSandboxPhoneNumberInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PN] != null) {\n    entries[_PN] = input[_PN];\n  }\n  if (input[_LC] != null) {\n    entries[_LC] = input[_LC];\n  }\n  return entries;\n}, \"se_CreateSMSSandboxPhoneNumberInput\");\nvar se_CreateTopicInput = /* @__PURE__ */ __name((input, context) => {\n  var _a2;\n  const entries = {};\n  if (input[_N] != null) {\n    entries[_N] = input[_N];\n  }\n  if (input[_At] != null) {\n    const memberEntries = se_TopicAttributesMap(input[_At], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Attributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_Ta] != null) {\n    const memberEntries = se_TagList(input[_Ta], context);\n    if (((_a2 = input[_Ta]) == null ? void 0 : _a2.length) === 0) {\n      entries.Tags = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Tags.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_DPP] != null) {\n    entries[_DPP] = input[_DPP];\n  }\n  return entries;\n}, \"se_CreateTopicInput\");\nvar se_DelegatesList = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    entries[`member.${counter}`] = entry;\n    counter++;\n  }\n  return entries;\n}, \"se_DelegatesList\");\nvar se_DeleteEndpointInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_EA] != null) {\n    entries[_EA] = input[_EA];\n  }\n  return entries;\n}, \"se_DeleteEndpointInput\");\nvar se_DeletePlatformApplicationInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PAA] != null) {\n    entries[_PAA] = input[_PAA];\n  }\n  return entries;\n}, \"se_DeletePlatformApplicationInput\");\nvar se_DeleteSMSSandboxPhoneNumberInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PN] != null) {\n    entries[_PN] = input[_PN];\n  }\n  return entries;\n}, \"se_DeleteSMSSandboxPhoneNumberInput\");\nvar se_DeleteTopicInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  return entries;\n}, \"se_DeleteTopicInput\");\nvar se_GetDataProtectionPolicyInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_RA] != null) {\n    entries[_RA] = input[_RA];\n  }\n  return entries;\n}, \"se_GetDataProtectionPolicyInput\");\nvar se_GetEndpointAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_EA] != null) {\n    entries[_EA] = input[_EA];\n  }\n  return entries;\n}, \"se_GetEndpointAttributesInput\");\nvar se_GetPlatformApplicationAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PAA] != null) {\n    entries[_PAA] = input[_PAA];\n  }\n  return entries;\n}, \"se_GetPlatformApplicationAttributesInput\");\nvar se_GetSMSAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  var _a2;\n  const entries = {};\n  if (input[_a] != null) {\n    const memberEntries = se_ListString(input[_a], context);\n    if (((_a2 = input[_a]) == null ? void 0 : _a2.length) === 0) {\n      entries.attributes = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `attributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_GetSMSAttributesInput\");\nvar se_GetSMSSandboxAccountStatusInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  return entries;\n}, \"se_GetSMSSandboxAccountStatusInput\");\nvar se_GetSubscriptionAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_SA] != null) {\n    entries[_SA] = input[_SA];\n  }\n  return entries;\n}, \"se_GetSubscriptionAttributesInput\");\nvar se_GetTopicAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  return entries;\n}, \"se_GetTopicAttributesInput\");\nvar se_ListEndpointsByPlatformApplicationInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PAA] != null) {\n    entries[_PAA] = input[_PAA];\n  }\n  if (input[_NT] != null) {\n    entries[_NT] = input[_NT];\n  }\n  return entries;\n}, \"se_ListEndpointsByPlatformApplicationInput\");\nvar se_ListOriginationNumbersRequest = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_NT] != null) {\n    entries[_NT] = input[_NT];\n  }\n  if (input[_MR] != null) {\n    entries[_MR] = input[_MR];\n  }\n  return entries;\n}, \"se_ListOriginationNumbersRequest\");\nvar se_ListPhoneNumbersOptedOutInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_nT] != null) {\n    entries[_nT] = input[_nT];\n  }\n  return entries;\n}, \"se_ListPhoneNumbersOptedOutInput\");\nvar se_ListPlatformApplicationsInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_NT] != null) {\n    entries[_NT] = input[_NT];\n  }\n  return entries;\n}, \"se_ListPlatformApplicationsInput\");\nvar se_ListSMSSandboxPhoneNumbersInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_NT] != null) {\n    entries[_NT] = input[_NT];\n  }\n  if (input[_MR] != null) {\n    entries[_MR] = input[_MR];\n  }\n  return entries;\n}, \"se_ListSMSSandboxPhoneNumbersInput\");\nvar se_ListString = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    entries[`member.${counter}`] = entry;\n    counter++;\n  }\n  return entries;\n}, \"se_ListString\");\nvar se_ListSubscriptionsByTopicInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  if (input[_NT] != null) {\n    entries[_NT] = input[_NT];\n  }\n  return entries;\n}, \"se_ListSubscriptionsByTopicInput\");\nvar se_ListSubscriptionsInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_NT] != null) {\n    entries[_NT] = input[_NT];\n  }\n  return entries;\n}, \"se_ListSubscriptionsInput\");\nvar se_ListTagsForResourceRequest = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_RA] != null) {\n    entries[_RA] = input[_RA];\n  }\n  return entries;\n}, \"se_ListTagsForResourceRequest\");\nvar se_ListTopicsInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_NT] != null) {\n    entries[_NT] = input[_NT];\n  }\n  return entries;\n}, \"se_ListTopicsInput\");\nvar se_MapStringToString = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  Object.keys(input).filter((key) => input[key] != null).forEach((key) => {\n    entries[`entry.${counter}.key`] = key;\n    entries[`entry.${counter}.value`] = input[key];\n    counter++;\n  });\n  return entries;\n}, \"se_MapStringToString\");\nvar se_MessageAttributeMap = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  Object.keys(input).filter((key) => input[key] != null).forEach((key) => {\n    entries[`entry.${counter}.Name`] = key;\n    const memberEntries = se_MessageAttributeValue(input[key], context);\n    Object.entries(memberEntries).forEach(([key2, value]) => {\n      entries[`entry.${counter}.Value.${key2}`] = value;\n    });\n    counter++;\n  });\n  return entries;\n}, \"se_MessageAttributeMap\");\nvar se_MessageAttributeValue = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_DTa] != null) {\n    entries[_DTa] = input[_DTa];\n  }\n  if (input[_SV] != null) {\n    entries[_SV] = input[_SV];\n  }\n  if (input[_BV] != null) {\n    entries[_BV] = context.base64Encoder(input[_BV]);\n  }\n  return entries;\n}, \"se_MessageAttributeValue\");\nvar se_OptInPhoneNumberInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_pN] != null) {\n    entries[_pN] = input[_pN];\n  }\n  return entries;\n}, \"se_OptInPhoneNumberInput\");\nvar se_PublishBatchInput = /* @__PURE__ */ __name((input, context) => {\n  var _a2;\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  if (input[_PBRE] != null) {\n    const memberEntries = se_PublishBatchRequestEntryList(input[_PBRE], context);\n    if (((_a2 = input[_PBRE]) == null ? void 0 : _a2.length) === 0) {\n      entries.PublishBatchRequestEntries = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `PublishBatchRequestEntries.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_PublishBatchInput\");\nvar se_PublishBatchRequestEntry = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_I] != null) {\n    entries[_I] = input[_I];\n  }\n  if (input[_M] != null) {\n    entries[_M] = input[_M];\n  }\n  if (input[_Su] != null) {\n    entries[_Su] = input[_Su];\n  }\n  if (input[_MS] != null) {\n    entries[_MS] = input[_MS];\n  }\n  if (input[_MA] != null) {\n    const memberEntries = se_MessageAttributeMap(input[_MA], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `MessageAttributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_MDI] != null) {\n    entries[_MDI] = input[_MDI];\n  }\n  if (input[_MGI] != null) {\n    entries[_MGI] = input[_MGI];\n  }\n  return entries;\n}, \"se_PublishBatchRequestEntry\");\nvar se_PublishBatchRequestEntryList = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    const memberEntries = se_PublishBatchRequestEntry(entry, context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      entries[`member.${counter}.${key}`] = value;\n    });\n    counter++;\n  }\n  return entries;\n}, \"se_PublishBatchRequestEntryList\");\nvar se_PublishInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  if (input[_TAa] != null) {\n    entries[_TAa] = input[_TAa];\n  }\n  if (input[_PN] != null) {\n    entries[_PN] = input[_PN];\n  }\n  if (input[_M] != null) {\n    entries[_M] = input[_M];\n  }\n  if (input[_Su] != null) {\n    entries[_Su] = input[_Su];\n  }\n  if (input[_MS] != null) {\n    entries[_MS] = input[_MS];\n  }\n  if (input[_MA] != null) {\n    const memberEntries = se_MessageAttributeMap(input[_MA], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `MessageAttributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_MDI] != null) {\n    entries[_MDI] = input[_MDI];\n  }\n  if (input[_MGI] != null) {\n    entries[_MGI] = input[_MGI];\n  }\n  return entries;\n}, \"se_PublishInput\");\nvar se_PutDataProtectionPolicyInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_RA] != null) {\n    entries[_RA] = input[_RA];\n  }\n  if (input[_DPP] != null) {\n    entries[_DPP] = input[_DPP];\n  }\n  return entries;\n}, \"se_PutDataProtectionPolicyInput\");\nvar se_RemovePermissionInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  if (input[_L] != null) {\n    entries[_L] = input[_L];\n  }\n  return entries;\n}, \"se_RemovePermissionInput\");\nvar se_SetEndpointAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_EA] != null) {\n    entries[_EA] = input[_EA];\n  }\n  if (input[_At] != null) {\n    const memberEntries = se_MapStringToString(input[_At], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Attributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_SetEndpointAttributesInput\");\nvar se_SetPlatformApplicationAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PAA] != null) {\n    entries[_PAA] = input[_PAA];\n  }\n  if (input[_At] != null) {\n    const memberEntries = se_MapStringToString(input[_At], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Attributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_SetPlatformApplicationAttributesInput\");\nvar se_SetSMSAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_a] != null) {\n    const memberEntries = se_MapStringToString(input[_a], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `attributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_SetSMSAttributesInput\");\nvar se_SetSubscriptionAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_SA] != null) {\n    entries[_SA] = input[_SA];\n  }\n  if (input[_ANt] != null) {\n    entries[_ANt] = input[_ANt];\n  }\n  if (input[_AV] != null) {\n    entries[_AV] = input[_AV];\n  }\n  return entries;\n}, \"se_SetSubscriptionAttributesInput\");\nvar se_SetTopicAttributesInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  if (input[_ANt] != null) {\n    entries[_ANt] = input[_ANt];\n  }\n  if (input[_AV] != null) {\n    entries[_AV] = input[_AV];\n  }\n  return entries;\n}, \"se_SetTopicAttributesInput\");\nvar se_SubscribeInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_TA] != null) {\n    entries[_TA] = input[_TA];\n  }\n  if (input[_Pr] != null) {\n    entries[_Pr] = input[_Pr];\n  }\n  if (input[_E] != null) {\n    entries[_E] = input[_E];\n  }\n  if (input[_At] != null) {\n    const memberEntries = se_SubscriptionAttributesMap(input[_At], context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Attributes.${key}`;\n      entries[loc] = value;\n    });\n  }\n  if (input[_RSA] != null) {\n    entries[_RSA] = input[_RSA];\n  }\n  return entries;\n}, \"se_SubscribeInput\");\nvar se_SubscriptionAttributesMap = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  Object.keys(input).filter((key) => input[key] != null).forEach((key) => {\n    entries[`entry.${counter}.key`] = key;\n    entries[`entry.${counter}.value`] = input[key];\n    counter++;\n  });\n  return entries;\n}, \"se_SubscriptionAttributesMap\");\nvar se_Tag = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_K] != null) {\n    entries[_K] = input[_K];\n  }\n  if (input[_Va] != null) {\n    entries[_Va] = input[_Va];\n  }\n  return entries;\n}, \"se_Tag\");\nvar se_TagKeyList = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    entries[`member.${counter}`] = entry;\n    counter++;\n  }\n  return entries;\n}, \"se_TagKeyList\");\nvar se_TagList = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  for (const entry of input) {\n    if (entry === null) {\n      continue;\n    }\n    const memberEntries = se_Tag(entry, context);\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      entries[`member.${counter}.${key}`] = value;\n    });\n    counter++;\n  }\n  return entries;\n}, \"se_TagList\");\nvar se_TagResourceRequest = /* @__PURE__ */ __name((input, context) => {\n  var _a2;\n  const entries = {};\n  if (input[_RA] != null) {\n    entries[_RA] = input[_RA];\n  }\n  if (input[_Ta] != null) {\n    const memberEntries = se_TagList(input[_Ta], context);\n    if (((_a2 = input[_Ta]) == null ? void 0 : _a2.length) === 0) {\n      entries.Tags = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `Tags.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_TagResourceRequest\");\nvar se_TopicAttributesMap = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  let counter = 1;\n  Object.keys(input).filter((key) => input[key] != null).forEach((key) => {\n    entries[`entry.${counter}.key`] = key;\n    entries[`entry.${counter}.value`] = input[key];\n    counter++;\n  });\n  return entries;\n}, \"se_TopicAttributesMap\");\nvar se_UnsubscribeInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_SA] != null) {\n    entries[_SA] = input[_SA];\n  }\n  return entries;\n}, \"se_UnsubscribeInput\");\nvar se_UntagResourceRequest = /* @__PURE__ */ __name((input, context) => {\n  var _a2;\n  const entries = {};\n  if (input[_RA] != null) {\n    entries[_RA] = input[_RA];\n  }\n  if (input[_TK] != null) {\n    const memberEntries = se_TagKeyList(input[_TK], context);\n    if (((_a2 = input[_TK]) == null ? void 0 : _a2.length) === 0) {\n      entries.TagKeys = [];\n    }\n    Object.entries(memberEntries).forEach(([key, value]) => {\n      const loc = `TagKeys.${key}`;\n      entries[loc] = value;\n    });\n  }\n  return entries;\n}, \"se_UntagResourceRequest\");\nvar se_VerifySMSSandboxPhoneNumberInput = /* @__PURE__ */ __name((input, context) => {\n  const entries = {};\n  if (input[_PN] != null) {\n    entries[_PN] = input[_PN];\n  }\n  if (input[_OTP] != null) {\n    entries[_OTP] = input[_OTP];\n  }\n  return entries;\n}, \"se_VerifySMSSandboxPhoneNumberInput\");\nvar de_AuthorizationErrorException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_AuthorizationErrorException\");\nvar de_BatchEntryIdsNotDistinctException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_BatchEntryIdsNotDistinctException\");\nvar de_BatchRequestTooLongException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_BatchRequestTooLongException\");\nvar de_BatchResultErrorEntry = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_I] != null) {\n    contents[_I] = (0, import_smithy_client.expectString)(output[_I]);\n  }\n  if (output[_C] != null) {\n    contents[_C] = (0, import_smithy_client.expectString)(output[_C]);\n  }\n  if (output[_M] != null) {\n    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n  }\n  if (output[_SF] != null) {\n    contents[_SF] = (0, import_smithy_client.parseBoolean)(output[_SF]);\n  }\n  return contents;\n}, \"de_BatchResultErrorEntry\");\nvar de_BatchResultErrorEntryList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_BatchResultErrorEntry(entry, context);\n  });\n}, \"de_BatchResultErrorEntryList\");\nvar de_CheckIfPhoneNumberIsOptedOutResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_iOO] != null) {\n    contents[_iOO] = (0, import_smithy_client.parseBoolean)(output[_iOO]);\n  }\n  return contents;\n}, \"de_CheckIfPhoneNumberIsOptedOutResponse\");\nvar de_ConcurrentAccessException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_ConcurrentAccessException\");\nvar de_ConfirmSubscriptionResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_SA] != null) {\n    contents[_SA] = (0, import_smithy_client.expectString)(output[_SA]);\n  }\n  return contents;\n}, \"de_ConfirmSubscriptionResponse\");\nvar de_CreateEndpointResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_EA] != null) {\n    contents[_EA] = (0, import_smithy_client.expectString)(output[_EA]);\n  }\n  return contents;\n}, \"de_CreateEndpointResponse\");\nvar de_CreatePlatformApplicationResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_PAA] != null) {\n    contents[_PAA] = (0, import_smithy_client.expectString)(output[_PAA]);\n  }\n  return contents;\n}, \"de_CreatePlatformApplicationResponse\");\nvar de_CreateSMSSandboxPhoneNumberResult = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  return contents;\n}, \"de_CreateSMSSandboxPhoneNumberResult\");\nvar de_CreateTopicResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_TA] != null) {\n    contents[_TA] = (0, import_smithy_client.expectString)(output[_TA]);\n  }\n  return contents;\n}, \"de_CreateTopicResponse\");\nvar de_DeleteSMSSandboxPhoneNumberResult = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  return contents;\n}, \"de_DeleteSMSSandboxPhoneNumberResult\");\nvar de_EmptyBatchRequestException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_EmptyBatchRequestException\");\nvar de_Endpoint = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_EA] != null) {\n    contents[_EA] = (0, import_smithy_client.expectString)(output[_EA]);\n  }\n  if (output.Attributes === \"\") {\n    contents[_At] = {};\n  } else if (output[_At] != null && output[_At][_e] != null) {\n    contents[_At] = de_MapStringToString((0, import_smithy_client.getArrayIfSingleItem)(output[_At][_e]), context);\n  }\n  return contents;\n}, \"de_Endpoint\");\nvar de_EndpointDisabledException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_EndpointDisabledException\");\nvar de_FilterPolicyLimitExceededException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_FilterPolicyLimitExceededException\");\nvar de_GetDataProtectionPolicyResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_DPP] != null) {\n    contents[_DPP] = (0, import_smithy_client.expectString)(output[_DPP]);\n  }\n  return contents;\n}, \"de_GetDataProtectionPolicyResponse\");\nvar de_GetEndpointAttributesResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Attributes === \"\") {\n    contents[_At] = {};\n  } else if (output[_At] != null && output[_At][_e] != null) {\n    contents[_At] = de_MapStringToString((0, import_smithy_client.getArrayIfSingleItem)(output[_At][_e]), context);\n  }\n  return contents;\n}, \"de_GetEndpointAttributesResponse\");\nvar de_GetPlatformApplicationAttributesResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Attributes === \"\") {\n    contents[_At] = {};\n  } else if (output[_At] != null && output[_At][_e] != null) {\n    contents[_At] = de_MapStringToString((0, import_smithy_client.getArrayIfSingleItem)(output[_At][_e]), context);\n  }\n  return contents;\n}, \"de_GetPlatformApplicationAttributesResponse\");\nvar de_GetSMSAttributesResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.attributes === \"\") {\n    contents[_a] = {};\n  } else if (output[_a] != null && output[_a][_e] != null) {\n    contents[_a] = de_MapStringToString((0, import_smithy_client.getArrayIfSingleItem)(output[_a][_e]), context);\n  }\n  return contents;\n}, \"de_GetSMSAttributesResponse\");\nvar de_GetSMSSandboxAccountStatusResult = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_IIS] != null) {\n    contents[_IIS] = (0, import_smithy_client.parseBoolean)(output[_IIS]);\n  }\n  return contents;\n}, \"de_GetSMSSandboxAccountStatusResult\");\nvar de_GetSubscriptionAttributesResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Attributes === \"\") {\n    contents[_At] = {};\n  } else if (output[_At] != null && output[_At][_e] != null) {\n    contents[_At] = de_SubscriptionAttributesMap((0, import_smithy_client.getArrayIfSingleItem)(output[_At][_e]), context);\n  }\n  return contents;\n}, \"de_GetSubscriptionAttributesResponse\");\nvar de_GetTopicAttributesResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Attributes === \"\") {\n    contents[_At] = {};\n  } else if (output[_At] != null && output[_At][_e] != null) {\n    contents[_At] = de_TopicAttributesMap((0, import_smithy_client.getArrayIfSingleItem)(output[_At][_e]), context);\n  }\n  return contents;\n}, \"de_GetTopicAttributesResponse\");\nvar de_InternalErrorException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_InternalErrorException\");\nvar de_InvalidBatchEntryIdException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_InvalidBatchEntryIdException\");\nvar de_InvalidParameterException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_InvalidParameterException\");\nvar de_InvalidParameterValueException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_InvalidParameterValueException\");\nvar de_InvalidSecurityException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_InvalidSecurityException\");\nvar de_InvalidStateException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_InvalidStateException\");\nvar de_KMSAccessDeniedException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_KMSAccessDeniedException\");\nvar de_KMSDisabledException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_KMSDisabledException\");\nvar de_KMSInvalidStateException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_KMSInvalidStateException\");\nvar de_KMSNotFoundException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_KMSNotFoundException\");\nvar de_KMSOptInRequired = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_KMSOptInRequired\");\nvar de_KMSThrottlingException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_KMSThrottlingException\");\nvar de_ListEndpointsByPlatformApplicationResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Endpoints === \"\") {\n    contents[_En] = [];\n  } else if (output[_En] != null && output[_En][_me] != null) {\n    contents[_En] = de_ListOfEndpoints((0, import_smithy_client.getArrayIfSingleItem)(output[_En][_me]), context);\n  }\n  if (output[_NT] != null) {\n    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);\n  }\n  return contents;\n}, \"de_ListEndpointsByPlatformApplicationResponse\");\nvar de_ListOfEndpoints = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_Endpoint(entry, context);\n  });\n}, \"de_ListOfEndpoints\");\nvar de_ListOfPlatformApplications = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_PlatformApplication(entry, context);\n  });\n}, \"de_ListOfPlatformApplications\");\nvar de_ListOriginationNumbersResult = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_NT] != null) {\n    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);\n  }\n  if (output.PhoneNumbers === \"\") {\n    contents[_PNh] = [];\n  } else if (output[_PNh] != null && output[_PNh][_me] != null) {\n    contents[_PNh] = de_PhoneNumberInformationList((0, import_smithy_client.getArrayIfSingleItem)(output[_PNh][_me]), context);\n  }\n  return contents;\n}, \"de_ListOriginationNumbersResult\");\nvar de_ListPhoneNumbersOptedOutResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.phoneNumbers === \"\") {\n    contents[_pNh] = [];\n  } else if (output[_pNh] != null && output[_pNh][_me] != null) {\n    contents[_pNh] = de_PhoneNumberList((0, import_smithy_client.getArrayIfSingleItem)(output[_pNh][_me]), context);\n  }\n  if (output[_nT] != null) {\n    contents[_nT] = (0, import_smithy_client.expectString)(output[_nT]);\n  }\n  return contents;\n}, \"de_ListPhoneNumbersOptedOutResponse\");\nvar de_ListPlatformApplicationsResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.PlatformApplications === \"\") {\n    contents[_PA] = [];\n  } else if (output[_PA] != null && output[_PA][_me] != null) {\n    contents[_PA] = de_ListOfPlatformApplications((0, import_smithy_client.getArrayIfSingleItem)(output[_PA][_me]), context);\n  }\n  if (output[_NT] != null) {\n    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);\n  }\n  return contents;\n}, \"de_ListPlatformApplicationsResponse\");\nvar de_ListSMSSandboxPhoneNumbersResult = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.PhoneNumbers === \"\") {\n    contents[_PNh] = [];\n  } else if (output[_PNh] != null && output[_PNh][_me] != null) {\n    contents[_PNh] = de_SMSSandboxPhoneNumberList((0, import_smithy_client.getArrayIfSingleItem)(output[_PNh][_me]), context);\n  }\n  if (output[_NT] != null) {\n    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);\n  }\n  return contents;\n}, \"de_ListSMSSandboxPhoneNumbersResult\");\nvar de_ListSubscriptionsByTopicResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Subscriptions === \"\") {\n    contents[_Sub] = [];\n  } else if (output[_Sub] != null && output[_Sub][_me] != null) {\n    contents[_Sub] = de_SubscriptionsList((0, import_smithy_client.getArrayIfSingleItem)(output[_Sub][_me]), context);\n  }\n  if (output[_NT] != null) {\n    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);\n  }\n  return contents;\n}, \"de_ListSubscriptionsByTopicResponse\");\nvar de_ListSubscriptionsResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Subscriptions === \"\") {\n    contents[_Sub] = [];\n  } else if (output[_Sub] != null && output[_Sub][_me] != null) {\n    contents[_Sub] = de_SubscriptionsList((0, import_smithy_client.getArrayIfSingleItem)(output[_Sub][_me]), context);\n  }\n  if (output[_NT] != null) {\n    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);\n  }\n  return contents;\n}, \"de_ListSubscriptionsResponse\");\nvar de_ListTagsForResourceResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Tags === \"\") {\n    contents[_Ta] = [];\n  } else if (output[_Ta] != null && output[_Ta][_me] != null) {\n    contents[_Ta] = de_TagList((0, import_smithy_client.getArrayIfSingleItem)(output[_Ta][_me]), context);\n  }\n  return contents;\n}, \"de_ListTagsForResourceResponse\");\nvar de_ListTopicsResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Topics === \"\") {\n    contents[_To] = [];\n  } else if (output[_To] != null && output[_To][_me] != null) {\n    contents[_To] = de_TopicsList((0, import_smithy_client.getArrayIfSingleItem)(output[_To][_me]), context);\n  }\n  if (output[_NT] != null) {\n    contents[_NT] = (0, import_smithy_client.expectString)(output[_NT]);\n  }\n  return contents;\n}, \"de_ListTopicsResponse\");\nvar de_MapStringToString = /* @__PURE__ */ __name((output, context) => {\n  return output.reduce((acc, pair) => {\n    if (pair[\"value\"] === null) {\n      return acc;\n    }\n    acc[pair[\"key\"]] = (0, import_smithy_client.expectString)(pair[\"value\"]);\n    return acc;\n  }, {});\n}, \"de_MapStringToString\");\nvar de_NotFoundException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_NotFoundException\");\nvar de_NumberCapabilityList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return (0, import_smithy_client.expectString)(entry);\n  });\n}, \"de_NumberCapabilityList\");\nvar de_OptedOutException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_OptedOutException\");\nvar de_OptInPhoneNumberResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  return contents;\n}, \"de_OptInPhoneNumberResponse\");\nvar de_PhoneNumberInformation = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_CA] != null) {\n    contents[_CA] = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseRfc3339DateTimeWithOffset)(output[_CA]));\n  }\n  if (output[_PN] != null) {\n    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n  }\n  if (output[_St] != null) {\n    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n  }\n  if (output[_ICC] != null) {\n    contents[_ICC] = (0, import_smithy_client.expectString)(output[_ICC]);\n  }\n  if (output[_RT] != null) {\n    contents[_RT] = (0, import_smithy_client.expectString)(output[_RT]);\n  }\n  if (output.NumberCapabilities === \"\") {\n    contents[_NC] = [];\n  } else if (output[_NC] != null && output[_NC][_me] != null) {\n    contents[_NC] = de_NumberCapabilityList((0, import_smithy_client.getArrayIfSingleItem)(output[_NC][_me]), context);\n  }\n  return contents;\n}, \"de_PhoneNumberInformation\");\nvar de_PhoneNumberInformationList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_PhoneNumberInformation(entry, context);\n  });\n}, \"de_PhoneNumberInformationList\");\nvar de_PhoneNumberList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return (0, import_smithy_client.expectString)(entry);\n  });\n}, \"de_PhoneNumberList\");\nvar de_PlatformApplication = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_PAA] != null) {\n    contents[_PAA] = (0, import_smithy_client.expectString)(output[_PAA]);\n  }\n  if (output.Attributes === \"\") {\n    contents[_At] = {};\n  } else if (output[_At] != null && output[_At][_e] != null) {\n    contents[_At] = de_MapStringToString((0, import_smithy_client.getArrayIfSingleItem)(output[_At][_e]), context);\n  }\n  return contents;\n}, \"de_PlatformApplication\");\nvar de_PlatformApplicationDisabledException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_PlatformApplicationDisabledException\");\nvar de_PublishBatchResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output.Successful === \"\") {\n    contents[_Suc] = [];\n  } else if (output[_Suc] != null && output[_Suc][_me] != null) {\n    contents[_Suc] = de_PublishBatchResultEntryList((0, import_smithy_client.getArrayIfSingleItem)(output[_Suc][_me]), context);\n  }\n  if (output.Failed === \"\") {\n    contents[_F] = [];\n  } else if (output[_F] != null && output[_F][_me] != null) {\n    contents[_F] = de_BatchResultErrorEntryList((0, import_smithy_client.getArrayIfSingleItem)(output[_F][_me]), context);\n  }\n  return contents;\n}, \"de_PublishBatchResponse\");\nvar de_PublishBatchResultEntry = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_I] != null) {\n    contents[_I] = (0, import_smithy_client.expectString)(output[_I]);\n  }\n  if (output[_MI] != null) {\n    contents[_MI] = (0, import_smithy_client.expectString)(output[_MI]);\n  }\n  if (output[_SN] != null) {\n    contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);\n  }\n  return contents;\n}, \"de_PublishBatchResultEntry\");\nvar de_PublishBatchResultEntryList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_PublishBatchResultEntry(entry, context);\n  });\n}, \"de_PublishBatchResultEntryList\");\nvar de_PublishResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_MI] != null) {\n    contents[_MI] = (0, import_smithy_client.expectString)(output[_MI]);\n  }\n  if (output[_SN] != null) {\n    contents[_SN] = (0, import_smithy_client.expectString)(output[_SN]);\n  }\n  return contents;\n}, \"de_PublishResponse\");\nvar de_ReplayLimitExceededException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_ReplayLimitExceededException\");\nvar de_ResourceNotFoundException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_ResourceNotFoundException\");\nvar de_SetSMSAttributesResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  return contents;\n}, \"de_SetSMSAttributesResponse\");\nvar de_SMSSandboxPhoneNumber = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_PN] != null) {\n    contents[_PN] = (0, import_smithy_client.expectString)(output[_PN]);\n  }\n  if (output[_St] != null) {\n    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n  }\n  return contents;\n}, \"de_SMSSandboxPhoneNumber\");\nvar de_SMSSandboxPhoneNumberList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_SMSSandboxPhoneNumber(entry, context);\n  });\n}, \"de_SMSSandboxPhoneNumberList\");\nvar de_StaleTagException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_StaleTagException\");\nvar de_SubscribeResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_SA] != null) {\n    contents[_SA] = (0, import_smithy_client.expectString)(output[_SA]);\n  }\n  return contents;\n}, \"de_SubscribeResponse\");\nvar de_Subscription = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_SA] != null) {\n    contents[_SA] = (0, import_smithy_client.expectString)(output[_SA]);\n  }\n  if (output[_O] != null) {\n    contents[_O] = (0, import_smithy_client.expectString)(output[_O]);\n  }\n  if (output[_Pr] != null) {\n    contents[_Pr] = (0, import_smithy_client.expectString)(output[_Pr]);\n  }\n  if (output[_E] != null) {\n    contents[_E] = (0, import_smithy_client.expectString)(output[_E]);\n  }\n  if (output[_TA] != null) {\n    contents[_TA] = (0, import_smithy_client.expectString)(output[_TA]);\n  }\n  return contents;\n}, \"de_Subscription\");\nvar de_SubscriptionAttributesMap = /* @__PURE__ */ __name((output, context) => {\n  return output.reduce((acc, pair) => {\n    if (pair[\"value\"] === null) {\n      return acc;\n    }\n    acc[pair[\"key\"]] = (0, import_smithy_client.expectString)(pair[\"value\"]);\n    return acc;\n  }, {});\n}, \"de_SubscriptionAttributesMap\");\nvar de_SubscriptionLimitExceededException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_SubscriptionLimitExceededException\");\nvar de_SubscriptionsList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_Subscription(entry, context);\n  });\n}, \"de_SubscriptionsList\");\nvar de_Tag = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_K] != null) {\n    contents[_K] = (0, import_smithy_client.expectString)(output[_K]);\n  }\n  if (output[_Va] != null) {\n    contents[_Va] = (0, import_smithy_client.expectString)(output[_Va]);\n  }\n  return contents;\n}, \"de_Tag\");\nvar de_TagLimitExceededException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_TagLimitExceededException\");\nvar de_TagList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_Tag(entry, context);\n  });\n}, \"de_TagList\");\nvar de_TagPolicyException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_TagPolicyException\");\nvar de_TagResourceResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  return contents;\n}, \"de_TagResourceResponse\");\nvar de_ThrottledException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_ThrottledException\");\nvar de_TooManyEntriesInBatchRequestException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_TooManyEntriesInBatchRequestException\");\nvar de_Topic = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_TA] != null) {\n    contents[_TA] = (0, import_smithy_client.expectString)(output[_TA]);\n  }\n  return contents;\n}, \"de_Topic\");\nvar de_TopicAttributesMap = /* @__PURE__ */ __name((output, context) => {\n  return output.reduce((acc, pair) => {\n    if (pair[\"value\"] === null) {\n      return acc;\n    }\n    acc[pair[\"key\"]] = (0, import_smithy_client.expectString)(pair[\"value\"]);\n    return acc;\n  }, {});\n}, \"de_TopicAttributesMap\");\nvar de_TopicLimitExceededException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_TopicLimitExceededException\");\nvar de_TopicsList = /* @__PURE__ */ __name((output, context) => {\n  return (output || []).filter((e) => e != null).map((entry) => {\n    return de_Topic(entry, context);\n  });\n}, \"de_TopicsList\");\nvar de_UntagResourceResponse = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  return contents;\n}, \"de_UntagResourceResponse\");\nvar de_UserErrorException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_m] != null) {\n    contents[_m] = (0, import_smithy_client.expectString)(output[_m]);\n  }\n  return contents;\n}, \"de_UserErrorException\");\nvar de_ValidationException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_M] != null) {\n    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n  }\n  return contents;\n}, \"de_ValidationException\");\nvar de_VerificationException = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  if (output[_M] != null) {\n    contents[_M] = (0, import_smithy_client.expectString)(output[_M]);\n  }\n  if (output[_St] != null) {\n    contents[_St] = (0, import_smithy_client.expectString)(output[_St]);\n  }\n  return contents;\n}, \"de_VerificationException\");\nvar de_VerifySMSSandboxPhoneNumberResult = /* @__PURE__ */ __name((output, context) => {\n  const contents = {};\n  return contents;\n}, \"de_VerifySMSSandboxPhoneNumberResult\");\nvar deserializeMetadata = /* @__PURE__ */ __name((output) => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n}), \"deserializeMetadata\");\nvar throwDefaultError = (0, import_smithy_client.withBaseException)(SNSServiceException);\nvar buildHttpRpcRequest = /* @__PURE__ */ __name(async (context, headers, path, resolvedHostname, body) => {\n  const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n  const contents = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n    headers\n  };\n  if (resolvedHostname !== void 0) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== void 0) {\n    contents.body = body;\n  }\n  return new import_protocol_http.HttpRequest(contents);\n}, \"buildHttpRpcRequest\");\nvar SHARED_HEADERS = {\n  \"content-type\": \"application/x-www-form-urlencoded\"\n};\nvar _ = \"2010-03-31\";\nvar _A = \"Action\";\nvar _AN = \"ActionName\";\nvar _ANt = \"AttributeName\";\nvar _AOU = \"AuthenticateOnUnsubscribe\";\nvar _AP = \"AddPermission\";\nvar _AV = \"AttributeValue\";\nvar _AWSAI = \"AWSAccountId\";\nvar _At = \"Attributes\";\nvar _BV = \"BinaryValue\";\nvar _C = \"Code\";\nvar _CA = \"CreatedAt\";\nvar _CIPNIOO = \"CheckIfPhoneNumberIsOptedOut\";\nvar _CPA = \"CreatePlatformApplication\";\nvar _CPE = \"CreatePlatformEndpoint\";\nvar _CS = \"ConfirmSubscription\";\nvar _CSMSSPN = \"CreateSMSSandboxPhoneNumber\";\nvar _CT = \"CreateTopic\";\nvar _CUD = \"CustomUserData\";\nvar _DE = \"DeleteEndpoint\";\nvar _DPA = \"DeletePlatformApplication\";\nvar _DPP = \"DataProtectionPolicy\";\nvar _DSMSSPN = \"DeleteSMSSandboxPhoneNumber\";\nvar _DT = \"DeleteTopic\";\nvar _DTa = \"DataType\";\nvar _E = \"Endpoint\";\nvar _EA = \"EndpointArn\";\nvar _En = \"Endpoints\";\nvar _F = \"Failed\";\nvar _GDPP = \"GetDataProtectionPolicy\";\nvar _GEA = \"GetEndpointAttributes\";\nvar _GPAA = \"GetPlatformApplicationAttributes\";\nvar _GSA = \"GetSubscriptionAttributes\";\nvar _GSMSA = \"GetSMSAttributes\";\nvar _GSMSSAS = \"GetSMSSandboxAccountStatus\";\nvar _GTA = \"GetTopicAttributes\";\nvar _I = \"Id\";\nvar _ICC = \"Iso2CountryCode\";\nvar _IIS = \"IsInSandbox\";\nvar _K = \"Key\";\nvar _L = \"Label\";\nvar _LC = \"LanguageCode\";\nvar _LEBPA = \"ListEndpointsByPlatformApplication\";\nvar _LON = \"ListOriginationNumbers\";\nvar _LPA = \"ListPlatformApplications\";\nvar _LPNOO = \"ListPhoneNumbersOptedOut\";\nvar _LS = \"ListSubscriptions\";\nvar _LSBT = \"ListSubscriptionsByTopic\";\nvar _LSMSSPN = \"ListSMSSandboxPhoneNumbers\";\nvar _LT = \"ListTopics\";\nvar _LTFR = \"ListTagsForResource\";\nvar _M = \"Message\";\nvar _MA = \"MessageAttributes\";\nvar _MDI = \"MessageDeduplicationId\";\nvar _MGI = \"MessageGroupId\";\nvar _MI = \"MessageId\";\nvar _MR = \"MaxResults\";\nvar _MS = \"MessageStructure\";\nvar _N = \"Name\";\nvar _NC = \"NumberCapabilities\";\nvar _NT = \"NextToken\";\nvar _O = \"Owner\";\nvar _OIPN = \"OptInPhoneNumber\";\nvar _OTP = \"OneTimePassword\";\nvar _P = \"Publish\";\nvar _PA = \"PlatformApplications\";\nvar _PAA = \"PlatformApplicationArn\";\nvar _PB = \"PublishBatch\";\nvar _PBRE = \"PublishBatchRequestEntries\";\nvar _PDPP = \"PutDataProtectionPolicy\";\nvar _PN = \"PhoneNumber\";\nvar _PNh = \"PhoneNumbers\";\nvar _Pl = \"Platform\";\nvar _Pr = \"Protocol\";\nvar _RA = \"ResourceArn\";\nvar _RP = \"RemovePermission\";\nvar _RSA = \"ReturnSubscriptionArn\";\nvar _RT = \"RouteType\";\nvar _S = \"Subscribe\";\nvar _SA = \"SubscriptionArn\";\nvar _SEA = \"SetEndpointAttributes\";\nvar _SF = \"SenderFault\";\nvar _SN = \"SequenceNumber\";\nvar _SPAA = \"SetPlatformApplicationAttributes\";\nvar _SSA = \"SetSubscriptionAttributes\";\nvar _SSMSA = \"SetSMSAttributes\";\nvar _STA = \"SetTopicAttributes\";\nvar _SV = \"StringValue\";\nvar _St = \"Status\";\nvar _Su = \"Subject\";\nvar _Sub = \"Subscriptions\";\nvar _Suc = \"Successful\";\nvar _T = \"Token\";\nvar _TA = \"TopicArn\";\nvar _TAa = \"TargetArn\";\nvar _TK = \"TagKeys\";\nvar _TR = \"TagResource\";\nvar _Ta = \"Tags\";\nvar _To = \"Topics\";\nvar _U = \"Unsubscribe\";\nvar _UR = \"UntagResource\";\nvar _V = \"Version\";\nvar _VSMSSPN = \"VerifySMSSandboxPhoneNumber\";\nvar _Va = \"Value\";\nvar _a = \"attributes\";\nvar _e = \"entry\";\nvar _iOO = \"isOptedOut\";\nvar _m = \"message\";\nvar _me = \"member\";\nvar _nT = \"nextToken\";\nvar _pN = \"phoneNumber\";\nvar _pNh = \"phoneNumbers\";\nvar buildFormUrlencodedString = /* @__PURE__ */ __name((formEntries) => Object.entries(formEntries).map(([key, value]) => (0, import_smithy_client.extendedEncodeURIComponent)(key) + \"=\" + (0, import_smithy_client.extendedEncodeURIComponent)(value)).join(\"&\"), \"buildFormUrlencodedString\");\nvar loadQueryErrorCode = /* @__PURE__ */ __name((output, data) => {\n  var _a2;\n  if (((_a2 = data.Error) == null ? void 0 : _a2.Code) !== void 0) {\n    return data.Error.Code;\n  }\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n}, \"loadQueryErrorCode\");\n\n// src/commands/AddPermissionCommand.ts\nvar _AddPermissionCommand = class _AddPermissionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"AddPermission\", {}).n(\"SNSClient\", \"AddPermissionCommand\").f(void 0, void 0).ser(se_AddPermissionCommand).de(de_AddPermissionCommand).build() {\n};\n__name(_AddPermissionCommand, \"AddPermissionCommand\");\nvar AddPermissionCommand = _AddPermissionCommand;\n\n// src/commands/CheckIfPhoneNumberIsOptedOutCommand.ts\n\n\n\nvar _CheckIfPhoneNumberIsOptedOutCommand = class _CheckIfPhoneNumberIsOptedOutCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"CheckIfPhoneNumberIsOptedOut\", {}).n(\"SNSClient\", \"CheckIfPhoneNumberIsOptedOutCommand\").f(CheckIfPhoneNumberIsOptedOutInputFilterSensitiveLog, void 0).ser(se_CheckIfPhoneNumberIsOptedOutCommand).de(de_CheckIfPhoneNumberIsOptedOutCommand).build() {\n};\n__name(_CheckIfPhoneNumberIsOptedOutCommand, \"CheckIfPhoneNumberIsOptedOutCommand\");\nvar CheckIfPhoneNumberIsOptedOutCommand = _CheckIfPhoneNumberIsOptedOutCommand;\n\n// src/commands/ConfirmSubscriptionCommand.ts\n\n\n\nvar _ConfirmSubscriptionCommand = class _ConfirmSubscriptionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ConfirmSubscription\", {}).n(\"SNSClient\", \"ConfirmSubscriptionCommand\").f(void 0, void 0).ser(se_ConfirmSubscriptionCommand).de(de_ConfirmSubscriptionCommand).build() {\n};\n__name(_ConfirmSubscriptionCommand, \"ConfirmSubscriptionCommand\");\nvar ConfirmSubscriptionCommand = _ConfirmSubscriptionCommand;\n\n// src/commands/CreatePlatformApplicationCommand.ts\n\n\n\nvar _CreatePlatformApplicationCommand = class _CreatePlatformApplicationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"CreatePlatformApplication\", {}).n(\"SNSClient\", \"CreatePlatformApplicationCommand\").f(void 0, void 0).ser(se_CreatePlatformApplicationCommand).de(de_CreatePlatformApplicationCommand).build() {\n};\n__name(_CreatePlatformApplicationCommand, \"CreatePlatformApplicationCommand\");\nvar CreatePlatformApplicationCommand = _CreatePlatformApplicationCommand;\n\n// src/commands/CreatePlatformEndpointCommand.ts\n\n\n\nvar _CreatePlatformEndpointCommand = class _CreatePlatformEndpointCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"CreatePlatformEndpoint\", {}).n(\"SNSClient\", \"CreatePlatformEndpointCommand\").f(void 0, void 0).ser(se_CreatePlatformEndpointCommand).de(de_CreatePlatformEndpointCommand).build() {\n};\n__name(_CreatePlatformEndpointCommand, \"CreatePlatformEndpointCommand\");\nvar CreatePlatformEndpointCommand = _CreatePlatformEndpointCommand;\n\n// src/commands/CreateSMSSandboxPhoneNumberCommand.ts\n\n\n\nvar _CreateSMSSandboxPhoneNumberCommand = class _CreateSMSSandboxPhoneNumberCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"CreateSMSSandboxPhoneNumber\", {}).n(\"SNSClient\", \"CreateSMSSandboxPhoneNumberCommand\").f(CreateSMSSandboxPhoneNumberInputFilterSensitiveLog, void 0).ser(se_CreateSMSSandboxPhoneNumberCommand).de(de_CreateSMSSandboxPhoneNumberCommand).build() {\n};\n__name(_CreateSMSSandboxPhoneNumberCommand, \"CreateSMSSandboxPhoneNumberCommand\");\nvar CreateSMSSandboxPhoneNumberCommand = _CreateSMSSandboxPhoneNumberCommand;\n\n// src/commands/CreateTopicCommand.ts\n\n\n\nvar _CreateTopicCommand = class _CreateTopicCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"CreateTopic\", {}).n(\"SNSClient\", \"CreateTopicCommand\").f(void 0, void 0).ser(se_CreateTopicCommand).de(de_CreateTopicCommand).build() {\n};\n__name(_CreateTopicCommand, \"CreateTopicCommand\");\nvar CreateTopicCommand = _CreateTopicCommand;\n\n// src/commands/DeleteEndpointCommand.ts\n\n\n\nvar _DeleteEndpointCommand = class _DeleteEndpointCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"DeleteEndpoint\", {}).n(\"SNSClient\", \"DeleteEndpointCommand\").f(void 0, void 0).ser(se_DeleteEndpointCommand).de(de_DeleteEndpointCommand).build() {\n};\n__name(_DeleteEndpointCommand, \"DeleteEndpointCommand\");\nvar DeleteEndpointCommand = _DeleteEndpointCommand;\n\n// src/commands/DeletePlatformApplicationCommand.ts\n\n\n\nvar _DeletePlatformApplicationCommand = class _DeletePlatformApplicationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"DeletePlatformApplication\", {}).n(\"SNSClient\", \"DeletePlatformApplicationCommand\").f(void 0, void 0).ser(se_DeletePlatformApplicationCommand).de(de_DeletePlatformApplicationCommand).build() {\n};\n__name(_DeletePlatformApplicationCommand, \"DeletePlatformApplicationCommand\");\nvar DeletePlatformApplicationCommand = _DeletePlatformApplicationCommand;\n\n// src/commands/DeleteSMSSandboxPhoneNumberCommand.ts\n\n\n\nvar _DeleteSMSSandboxPhoneNumberCommand = class _DeleteSMSSandboxPhoneNumberCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"DeleteSMSSandboxPhoneNumber\", {}).n(\"SNSClient\", \"DeleteSMSSandboxPhoneNumberCommand\").f(DeleteSMSSandboxPhoneNumberInputFilterSensitiveLog, void 0).ser(se_DeleteSMSSandboxPhoneNumberCommand).de(de_DeleteSMSSandboxPhoneNumberCommand).build() {\n};\n__name(_DeleteSMSSandboxPhoneNumberCommand, \"DeleteSMSSandboxPhoneNumberCommand\");\nvar DeleteSMSSandboxPhoneNumberCommand = _DeleteSMSSandboxPhoneNumberCommand;\n\n// src/commands/DeleteTopicCommand.ts\n\n\n\nvar _DeleteTopicCommand = class _DeleteTopicCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"DeleteTopic\", {}).n(\"SNSClient\", \"DeleteTopicCommand\").f(void 0, void 0).ser(se_DeleteTopicCommand).de(de_DeleteTopicCommand).build() {\n};\n__name(_DeleteTopicCommand, \"DeleteTopicCommand\");\nvar DeleteTopicCommand = _DeleteTopicCommand;\n\n// src/commands/GetDataProtectionPolicyCommand.ts\n\n\n\nvar _GetDataProtectionPolicyCommand = class _GetDataProtectionPolicyCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"GetDataProtectionPolicy\", {}).n(\"SNSClient\", \"GetDataProtectionPolicyCommand\").f(void 0, void 0).ser(se_GetDataProtectionPolicyCommand).de(de_GetDataProtectionPolicyCommand).build() {\n};\n__name(_GetDataProtectionPolicyCommand, \"GetDataProtectionPolicyCommand\");\nvar GetDataProtectionPolicyCommand = _GetDataProtectionPolicyCommand;\n\n// src/commands/GetEndpointAttributesCommand.ts\n\n\n\nvar _GetEndpointAttributesCommand = class _GetEndpointAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"GetEndpointAttributes\", {}).n(\"SNSClient\", \"GetEndpointAttributesCommand\").f(void 0, void 0).ser(se_GetEndpointAttributesCommand).de(de_GetEndpointAttributesCommand).build() {\n};\n__name(_GetEndpointAttributesCommand, \"GetEndpointAttributesCommand\");\nvar GetEndpointAttributesCommand = _GetEndpointAttributesCommand;\n\n// src/commands/GetPlatformApplicationAttributesCommand.ts\n\n\n\nvar _GetPlatformApplicationAttributesCommand = class _GetPlatformApplicationAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"GetPlatformApplicationAttributes\", {}).n(\"SNSClient\", \"GetPlatformApplicationAttributesCommand\").f(void 0, void 0).ser(se_GetPlatformApplicationAttributesCommand).de(de_GetPlatformApplicationAttributesCommand).build() {\n};\n__name(_GetPlatformApplicationAttributesCommand, \"GetPlatformApplicationAttributesCommand\");\nvar GetPlatformApplicationAttributesCommand = _GetPlatformApplicationAttributesCommand;\n\n// src/commands/GetSMSAttributesCommand.ts\n\n\n\nvar _GetSMSAttributesCommand = class _GetSMSAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"GetSMSAttributes\", {}).n(\"SNSClient\", \"GetSMSAttributesCommand\").f(void 0, void 0).ser(se_GetSMSAttributesCommand).de(de_GetSMSAttributesCommand).build() {\n};\n__name(_GetSMSAttributesCommand, \"GetSMSAttributesCommand\");\nvar GetSMSAttributesCommand = _GetSMSAttributesCommand;\n\n// src/commands/GetSMSSandboxAccountStatusCommand.ts\n\n\n\nvar _GetSMSSandboxAccountStatusCommand = class _GetSMSSandboxAccountStatusCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"GetSMSSandboxAccountStatus\", {}).n(\"SNSClient\", \"GetSMSSandboxAccountStatusCommand\").f(void 0, void 0).ser(se_GetSMSSandboxAccountStatusCommand).de(de_GetSMSSandboxAccountStatusCommand).build() {\n};\n__name(_GetSMSSandboxAccountStatusCommand, \"GetSMSSandboxAccountStatusCommand\");\nvar GetSMSSandboxAccountStatusCommand = _GetSMSSandboxAccountStatusCommand;\n\n// src/commands/GetSubscriptionAttributesCommand.ts\n\n\n\nvar _GetSubscriptionAttributesCommand = class _GetSubscriptionAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"GetSubscriptionAttributes\", {}).n(\"SNSClient\", \"GetSubscriptionAttributesCommand\").f(void 0, void 0).ser(se_GetSubscriptionAttributesCommand).de(de_GetSubscriptionAttributesCommand).build() {\n};\n__name(_GetSubscriptionAttributesCommand, \"GetSubscriptionAttributesCommand\");\nvar GetSubscriptionAttributesCommand = _GetSubscriptionAttributesCommand;\n\n// src/commands/GetTopicAttributesCommand.ts\n\n\n\nvar _GetTopicAttributesCommand = class _GetTopicAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"GetTopicAttributes\", {}).n(\"SNSClient\", \"GetTopicAttributesCommand\").f(void 0, void 0).ser(se_GetTopicAttributesCommand).de(de_GetTopicAttributesCommand).build() {\n};\n__name(_GetTopicAttributesCommand, \"GetTopicAttributesCommand\");\nvar GetTopicAttributesCommand = _GetTopicAttributesCommand;\n\n// src/commands/ListEndpointsByPlatformApplicationCommand.ts\n\n\n\nvar _ListEndpointsByPlatformApplicationCommand = class _ListEndpointsByPlatformApplicationCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListEndpointsByPlatformApplication\", {}).n(\"SNSClient\", \"ListEndpointsByPlatformApplicationCommand\").f(void 0, void 0).ser(se_ListEndpointsByPlatformApplicationCommand).de(de_ListEndpointsByPlatformApplicationCommand).build() {\n};\n__name(_ListEndpointsByPlatformApplicationCommand, \"ListEndpointsByPlatformApplicationCommand\");\nvar ListEndpointsByPlatformApplicationCommand = _ListEndpointsByPlatformApplicationCommand;\n\n// src/commands/ListOriginationNumbersCommand.ts\n\n\n\nvar _ListOriginationNumbersCommand = class _ListOriginationNumbersCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListOriginationNumbers\", {}).n(\"SNSClient\", \"ListOriginationNumbersCommand\").f(void 0, ListOriginationNumbersResultFilterSensitiveLog).ser(se_ListOriginationNumbersCommand).de(de_ListOriginationNumbersCommand).build() {\n};\n__name(_ListOriginationNumbersCommand, \"ListOriginationNumbersCommand\");\nvar ListOriginationNumbersCommand = _ListOriginationNumbersCommand;\n\n// src/commands/ListPhoneNumbersOptedOutCommand.ts\n\n\n\nvar _ListPhoneNumbersOptedOutCommand = class _ListPhoneNumbersOptedOutCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListPhoneNumbersOptedOut\", {}).n(\"SNSClient\", \"ListPhoneNumbersOptedOutCommand\").f(void 0, ListPhoneNumbersOptedOutResponseFilterSensitiveLog).ser(se_ListPhoneNumbersOptedOutCommand).de(de_ListPhoneNumbersOptedOutCommand).build() {\n};\n__name(_ListPhoneNumbersOptedOutCommand, \"ListPhoneNumbersOptedOutCommand\");\nvar ListPhoneNumbersOptedOutCommand = _ListPhoneNumbersOptedOutCommand;\n\n// src/commands/ListPlatformApplicationsCommand.ts\n\n\n\nvar _ListPlatformApplicationsCommand = class _ListPlatformApplicationsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListPlatformApplications\", {}).n(\"SNSClient\", \"ListPlatformApplicationsCommand\").f(void 0, void 0).ser(se_ListPlatformApplicationsCommand).de(de_ListPlatformApplicationsCommand).build() {\n};\n__name(_ListPlatformApplicationsCommand, \"ListPlatformApplicationsCommand\");\nvar ListPlatformApplicationsCommand = _ListPlatformApplicationsCommand;\n\n// src/commands/ListSMSSandboxPhoneNumbersCommand.ts\n\n\n\nvar _ListSMSSandboxPhoneNumbersCommand = class _ListSMSSandboxPhoneNumbersCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListSMSSandboxPhoneNumbers\", {}).n(\"SNSClient\", \"ListSMSSandboxPhoneNumbersCommand\").f(void 0, ListSMSSandboxPhoneNumbersResultFilterSensitiveLog).ser(se_ListSMSSandboxPhoneNumbersCommand).de(de_ListSMSSandboxPhoneNumbersCommand).build() {\n};\n__name(_ListSMSSandboxPhoneNumbersCommand, \"ListSMSSandboxPhoneNumbersCommand\");\nvar ListSMSSandboxPhoneNumbersCommand = _ListSMSSandboxPhoneNumbersCommand;\n\n// src/commands/ListSubscriptionsByTopicCommand.ts\n\n\n\nvar _ListSubscriptionsByTopicCommand = class _ListSubscriptionsByTopicCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListSubscriptionsByTopic\", {}).n(\"SNSClient\", \"ListSubscriptionsByTopicCommand\").f(void 0, void 0).ser(se_ListSubscriptionsByTopicCommand).de(de_ListSubscriptionsByTopicCommand).build() {\n};\n__name(_ListSubscriptionsByTopicCommand, \"ListSubscriptionsByTopicCommand\");\nvar ListSubscriptionsByTopicCommand = _ListSubscriptionsByTopicCommand;\n\n// src/commands/ListSubscriptionsCommand.ts\n\n\n\nvar _ListSubscriptionsCommand = class _ListSubscriptionsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListSubscriptions\", {}).n(\"SNSClient\", \"ListSubscriptionsCommand\").f(void 0, void 0).ser(se_ListSubscriptionsCommand).de(de_ListSubscriptionsCommand).build() {\n};\n__name(_ListSubscriptionsCommand, \"ListSubscriptionsCommand\");\nvar ListSubscriptionsCommand = _ListSubscriptionsCommand;\n\n// src/commands/ListTagsForResourceCommand.ts\n\n\n\nvar _ListTagsForResourceCommand = class _ListTagsForResourceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListTagsForResource\", {}).n(\"SNSClient\", \"ListTagsForResourceCommand\").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {\n};\n__name(_ListTagsForResourceCommand, \"ListTagsForResourceCommand\");\nvar ListTagsForResourceCommand = _ListTagsForResourceCommand;\n\n// src/commands/ListTopicsCommand.ts\n\n\n\nvar _ListTopicsCommand = class _ListTopicsCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"ListTopics\", {}).n(\"SNSClient\", \"ListTopicsCommand\").f(void 0, void 0).ser(se_ListTopicsCommand).de(de_ListTopicsCommand).build() {\n};\n__name(_ListTopicsCommand, \"ListTopicsCommand\");\nvar ListTopicsCommand = _ListTopicsCommand;\n\n// src/commands/OptInPhoneNumberCommand.ts\n\n\n\nvar _OptInPhoneNumberCommand = class _OptInPhoneNumberCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"OptInPhoneNumber\", {}).n(\"SNSClient\", \"OptInPhoneNumberCommand\").f(OptInPhoneNumberInputFilterSensitiveLog, void 0).ser(se_OptInPhoneNumberCommand).de(de_OptInPhoneNumberCommand).build() {\n};\n__name(_OptInPhoneNumberCommand, \"OptInPhoneNumberCommand\");\nvar OptInPhoneNumberCommand = _OptInPhoneNumberCommand;\n\n// src/commands/PublishBatchCommand.ts\n\n\n\nvar _PublishBatchCommand = class _PublishBatchCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"PublishBatch\", {}).n(\"SNSClient\", \"PublishBatchCommand\").f(void 0, void 0).ser(se_PublishBatchCommand).de(de_PublishBatchCommand).build() {\n};\n__name(_PublishBatchCommand, \"PublishBatchCommand\");\nvar PublishBatchCommand = _PublishBatchCommand;\n\n// src/commands/PublishCommand.ts\n\n\n\nvar _PublishCommand = class _PublishCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"Publish\", {}).n(\"SNSClient\", \"PublishCommand\").f(PublishInputFilterSensitiveLog, void 0).ser(se_PublishCommand).de(de_PublishCommand).build() {\n};\n__name(_PublishCommand, \"PublishCommand\");\nvar PublishCommand = _PublishCommand;\n\n// src/commands/PutDataProtectionPolicyCommand.ts\n\n\n\nvar _PutDataProtectionPolicyCommand = class _PutDataProtectionPolicyCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"PutDataProtectionPolicy\", {}).n(\"SNSClient\", \"PutDataProtectionPolicyCommand\").f(void 0, void 0).ser(se_PutDataProtectionPolicyCommand).de(de_PutDataProtectionPolicyCommand).build() {\n};\n__name(_PutDataProtectionPolicyCommand, \"PutDataProtectionPolicyCommand\");\nvar PutDataProtectionPolicyCommand = _PutDataProtectionPolicyCommand;\n\n// src/commands/RemovePermissionCommand.ts\n\n\n\nvar _RemovePermissionCommand = class _RemovePermissionCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"RemovePermission\", {}).n(\"SNSClient\", \"RemovePermissionCommand\").f(void 0, void 0).ser(se_RemovePermissionCommand).de(de_RemovePermissionCommand).build() {\n};\n__name(_RemovePermissionCommand, \"RemovePermissionCommand\");\nvar RemovePermissionCommand = _RemovePermissionCommand;\n\n// src/commands/SetEndpointAttributesCommand.ts\n\n\n\nvar _SetEndpointAttributesCommand = class _SetEndpointAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"SetEndpointAttributes\", {}).n(\"SNSClient\", \"SetEndpointAttributesCommand\").f(void 0, void 0).ser(se_SetEndpointAttributesCommand).de(de_SetEndpointAttributesCommand).build() {\n};\n__name(_SetEndpointAttributesCommand, \"SetEndpointAttributesCommand\");\nvar SetEndpointAttributesCommand = _SetEndpointAttributesCommand;\n\n// src/commands/SetPlatformApplicationAttributesCommand.ts\n\n\n\nvar _SetPlatformApplicationAttributesCommand = class _SetPlatformApplicationAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"SetPlatformApplicationAttributes\", {}).n(\"SNSClient\", \"SetPlatformApplicationAttributesCommand\").f(void 0, void 0).ser(se_SetPlatformApplicationAttributesCommand).de(de_SetPlatformApplicationAttributesCommand).build() {\n};\n__name(_SetPlatformApplicationAttributesCommand, \"SetPlatformApplicationAttributesCommand\");\nvar SetPlatformApplicationAttributesCommand = _SetPlatformApplicationAttributesCommand;\n\n// src/commands/SetSMSAttributesCommand.ts\n\n\n\nvar _SetSMSAttributesCommand = class _SetSMSAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"SetSMSAttributes\", {}).n(\"SNSClient\", \"SetSMSAttributesCommand\").f(void 0, void 0).ser(se_SetSMSAttributesCommand).de(de_SetSMSAttributesCommand).build() {\n};\n__name(_SetSMSAttributesCommand, \"SetSMSAttributesCommand\");\nvar SetSMSAttributesCommand = _SetSMSAttributesCommand;\n\n// src/commands/SetSubscriptionAttributesCommand.ts\n\n\n\nvar _SetSubscriptionAttributesCommand = class _SetSubscriptionAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"SetSubscriptionAttributes\", {}).n(\"SNSClient\", \"SetSubscriptionAttributesCommand\").f(void 0, void 0).ser(se_SetSubscriptionAttributesCommand).de(de_SetSubscriptionAttributesCommand).build() {\n};\n__name(_SetSubscriptionAttributesCommand, \"SetSubscriptionAttributesCommand\");\nvar SetSubscriptionAttributesCommand = _SetSubscriptionAttributesCommand;\n\n// src/commands/SetTopicAttributesCommand.ts\n\n\n\nvar _SetTopicAttributesCommand = class _SetTopicAttributesCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"SetTopicAttributes\", {}).n(\"SNSClient\", \"SetTopicAttributesCommand\").f(void 0, void 0).ser(se_SetTopicAttributesCommand).de(de_SetTopicAttributesCommand).build() {\n};\n__name(_SetTopicAttributesCommand, \"SetTopicAttributesCommand\");\nvar SetTopicAttributesCommand = _SetTopicAttributesCommand;\n\n// src/commands/SubscribeCommand.ts\n\n\n\nvar _SubscribeCommand = class _SubscribeCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"Subscribe\", {}).n(\"SNSClient\", \"SubscribeCommand\").f(void 0, void 0).ser(se_SubscribeCommand).de(de_SubscribeCommand).build() {\n};\n__name(_SubscribeCommand, \"SubscribeCommand\");\nvar SubscribeCommand = _SubscribeCommand;\n\n// src/commands/TagResourceCommand.ts\n\n\n\nvar _TagResourceCommand = class _TagResourceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"TagResource\", {}).n(\"SNSClient\", \"TagResourceCommand\").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {\n};\n__name(_TagResourceCommand, \"TagResourceCommand\");\nvar TagResourceCommand = _TagResourceCommand;\n\n// src/commands/UnsubscribeCommand.ts\n\n\n\nvar _UnsubscribeCommand = class _UnsubscribeCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"Unsubscribe\", {}).n(\"SNSClient\", \"UnsubscribeCommand\").f(void 0, void 0).ser(se_UnsubscribeCommand).de(de_UnsubscribeCommand).build() {\n};\n__name(_UnsubscribeCommand, \"UnsubscribeCommand\");\nvar UnsubscribeCommand = _UnsubscribeCommand;\n\n// src/commands/UntagResourceCommand.ts\n\n\n\nvar _UntagResourceCommand = class _UntagResourceCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"UntagResource\", {}).n(\"SNSClient\", \"UntagResourceCommand\").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {\n};\n__name(_UntagResourceCommand, \"UntagResourceCommand\");\nvar UntagResourceCommand = _UntagResourceCommand;\n\n// src/commands/VerifySMSSandboxPhoneNumberCommand.ts\n\n\n\nvar _VerifySMSSandboxPhoneNumberCommand = class _VerifySMSSandboxPhoneNumberCommand extends import_smithy_client.Command.classBuilder().ep({\n  ...commonParams\n}).m(function(Command, cs, config, o) {\n  return [\n    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),\n    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())\n  ];\n}).s(\"AmazonSimpleNotificationService\", \"VerifySMSSandboxPhoneNumber\", {}).n(\"SNSClient\", \"VerifySMSSandboxPhoneNumberCommand\").f(VerifySMSSandboxPhoneNumberInputFilterSensitiveLog, void 0).ser(se_VerifySMSSandboxPhoneNumberCommand).de(de_VerifySMSSandboxPhoneNumberCommand).build() {\n};\n__name(_VerifySMSSandboxPhoneNumberCommand, \"VerifySMSSandboxPhoneNumberCommand\");\nvar VerifySMSSandboxPhoneNumberCommand = _VerifySMSSandboxPhoneNumberCommand;\n\n// src/SNS.ts\nvar commands = {\n  AddPermissionCommand,\n  CheckIfPhoneNumberIsOptedOutCommand,\n  ConfirmSubscriptionCommand,\n  CreatePlatformApplicationCommand,\n  CreatePlatformEndpointCommand,\n  CreateSMSSandboxPhoneNumberCommand,\n  CreateTopicCommand,\n  DeleteEndpointCommand,\n  DeletePlatformApplicationCommand,\n  DeleteSMSSandboxPhoneNumberCommand,\n  DeleteTopicCommand,\n  GetDataProtectionPolicyCommand,\n  GetEndpointAttributesCommand,\n  GetPlatformApplicationAttributesCommand,\n  GetSMSAttributesCommand,\n  GetSMSSandboxAccountStatusCommand,\n  GetSubscriptionAttributesCommand,\n  GetTopicAttributesCommand,\n  ListEndpointsByPlatformApplicationCommand,\n  ListOriginationNumbersCommand,\n  ListPhoneNumbersOptedOutCommand,\n  ListPlatformApplicationsCommand,\n  ListSMSSandboxPhoneNumbersCommand,\n  ListSubscriptionsCommand,\n  ListSubscriptionsByTopicCommand,\n  ListTagsForResourceCommand,\n  ListTopicsCommand,\n  OptInPhoneNumberCommand,\n  PublishCommand,\n  PublishBatchCommand,\n  PutDataProtectionPolicyCommand,\n  RemovePermissionCommand,\n  SetEndpointAttributesCommand,\n  SetPlatformApplicationAttributesCommand,\n  SetSMSAttributesCommand,\n  SetSubscriptionAttributesCommand,\n  SetTopicAttributesCommand,\n  SubscribeCommand,\n  TagResourceCommand,\n  UnsubscribeCommand,\n  UntagResourceCommand,\n  VerifySMSSandboxPhoneNumberCommand\n};\nvar _SNS = class _SNS extends SNSClient {\n};\n__name(_SNS, \"SNS\");\nvar SNS = _SNS;\n(0, import_smithy_client.createAggregatedClient)(commands, SNS);\n\n// src/pagination/ListEndpointsByPlatformApplicationPaginator.ts\n\nvar paginateListEndpointsByPlatformApplication = (0, import_core.createPaginator)(SNSClient, ListEndpointsByPlatformApplicationCommand, \"NextToken\", \"NextToken\", \"\");\n\n// src/pagination/ListOriginationNumbersPaginator.ts\n\nvar paginateListOriginationNumbers = (0, import_core.createPaginator)(SNSClient, ListOriginationNumbersCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListPhoneNumbersOptedOutPaginator.ts\n\nvar paginateListPhoneNumbersOptedOut = (0, import_core.createPaginator)(SNSClient, ListPhoneNumbersOptedOutCommand, \"nextToken\", \"nextToken\", \"\");\n\n// src/pagination/ListPlatformApplicationsPaginator.ts\n\nvar paginateListPlatformApplications = (0, import_core.createPaginator)(SNSClient, ListPlatformApplicationsCommand, \"NextToken\", \"NextToken\", \"\");\n\n// src/pagination/ListSMSSandboxPhoneNumbersPaginator.ts\n\nvar paginateListSMSSandboxPhoneNumbers = (0, import_core.createPaginator)(SNSClient, ListSMSSandboxPhoneNumbersCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\n// src/pagination/ListSubscriptionsByTopicPaginator.ts\n\nvar paginateListSubscriptionsByTopic = (0, import_core.createPaginator)(SNSClient, ListSubscriptionsByTopicCommand, \"NextToken\", \"NextToken\", \"\");\n\n// src/pagination/ListSubscriptionsPaginator.ts\n\nvar paginateListSubscriptions = (0, import_core.createPaginator)(SNSClient, ListSubscriptionsCommand, \"NextToken\", \"NextToken\", \"\");\n\n// src/pagination/ListTopicsPaginator.ts\n\nvar paginateListTopics = (0, import_core.createPaginator)(SNSClient, ListTopicsCommand, \"NextToken\", \"NextToken\", \"\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  SNSServiceException,\n  __Client,\n  SNSClient,\n  SNS,\n  $Command,\n  AddPermissionCommand,\n  CheckIfPhoneNumberIsOptedOutCommand,\n  ConfirmSubscriptionCommand,\n  CreatePlatformApplicationCommand,\n  CreatePlatformEndpointCommand,\n  CreateSMSSandboxPhoneNumberCommand,\n  CreateTopicCommand,\n  DeleteEndpointCommand,\n  DeletePlatformApplicationCommand,\n  DeleteSMSSandboxPhoneNumberCommand,\n  DeleteTopicCommand,\n  GetDataProtectionPolicyCommand,\n  GetEndpointAttributesCommand,\n  GetPlatformApplicationAttributesCommand,\n  GetSMSAttributesCommand,\n  GetSMSSandboxAccountStatusCommand,\n  GetSubscriptionAttributesCommand,\n  GetTopicAttributesCommand,\n  ListEndpointsByPlatformApplicationCommand,\n  ListOriginationNumbersCommand,\n  ListPhoneNumbersOptedOutCommand,\n  ListPlatformApplicationsCommand,\n  ListSMSSandboxPhoneNumbersCommand,\n  ListSubscriptionsByTopicCommand,\n  ListSubscriptionsCommand,\n  ListTagsForResourceCommand,\n  ListTopicsCommand,\n  OptInPhoneNumberCommand,\n  PublishBatchCommand,\n  PublishCommand,\n  PutDataProtectionPolicyCommand,\n  RemovePermissionCommand,\n  SetEndpointAttributesCommand,\n  SetPlatformApplicationAttributesCommand,\n  SetSMSAttributesCommand,\n  SetSubscriptionAttributesCommand,\n  SetTopicAttributesCommand,\n  SubscribeCommand,\n  TagResourceCommand,\n  UnsubscribeCommand,\n  UntagResourceCommand,\n  VerifySMSSandboxPhoneNumberCommand,\n  paginateListEndpointsByPlatformApplication,\n  paginateListOriginationNumbers,\n  paginateListPhoneNumbersOptedOut,\n  paginateListPlatformApplications,\n  paginateListSMSSandboxPhoneNumbers,\n  paginateListSubscriptionsByTopic,\n  paginateListSubscriptions,\n  paginateListTopics,\n  AuthorizationErrorException,\n  InternalErrorException,\n  InvalidParameterException,\n  NotFoundException,\n  ThrottledException,\n  FilterPolicyLimitExceededException,\n  ReplayLimitExceededException,\n  SubscriptionLimitExceededException,\n  LanguageCodeString,\n  OptedOutException,\n  UserErrorException,\n  ConcurrentAccessException,\n  InvalidSecurityException,\n  StaleTagException,\n  TagLimitExceededException,\n  TagPolicyException,\n  TopicLimitExceededException,\n  ResourceNotFoundException,\n  InvalidStateException,\n  NumberCapability,\n  RouteType,\n  ValidationException,\n  SMSSandboxPhoneNumberVerificationStatus,\n  EndpointDisabledException,\n  InvalidParameterValueException,\n  KMSAccessDeniedException,\n  KMSDisabledException,\n  KMSInvalidStateException,\n  KMSNotFoundException,\n  KMSOptInRequired,\n  KMSThrottlingException,\n  PlatformApplicationDisabledException,\n  BatchEntryIdsNotDistinctException,\n  BatchRequestTooLongException,\n  EmptyBatchRequestException,\n  InvalidBatchEntryIdException,\n  TooManyEntriesInBatchRequestException,\n  VerificationException,\n  CheckIfPhoneNumberIsOptedOutInputFilterSensitiveLog,\n  CreateSMSSandboxPhoneNumberInputFilterSensitiveLog,\n  DeleteSMSSandboxPhoneNumberInputFilterSensitiveLog,\n  PhoneNumberInformationFilterSensitiveLog,\n  ListOriginationNumbersResultFilterSensitiveLog,\n  ListPhoneNumbersOptedOutResponseFilterSensitiveLog,\n  SMSSandboxPhoneNumberFilterSensitiveLog,\n  ListSMSSandboxPhoneNumbersResultFilterSensitiveLog,\n  OptInPhoneNumberInputFilterSensitiveLog,\n  PublishInputFilterSensitiveLog,\n  VerifySMSSandboxPhoneNumberInputFilterSensitiveLog\n});\n\n", "// Logic for ingesting events from event hub and publishing on SNS topic\n\nimport {Handler, ScheduledEvent, Context } from \"aws-lambda\";\n\nimport * as envConstants from \"lib/ts/v1/initConstants\";\nimport { getParameters } from \"lib/ts/v1/parameters\";\nimport { EventHubParameters, EventHubIngestEngine } from \"lib/ts/v1/eventHubIngest\";\n\nconst SSM_PARAMS = ['event-hub-connection-string', 'event-hub-name', 'event-hub-consumer-group', 'database-name'];\nlet checkpointDatabase: string;\n\nconst eventHubParamsPromise = getParameters(SSM_PARAMS, envConstants.default.SERVICE);\nconst eventHubParameters: EventHubParameters = {};\neventHubParamsPromise.then((params) => {\n    eventHubParameters.connectionString = params.get('event-hub-connection-string');\n    eventHubParameters.eventHubName = params.get('event-hub-name');\n    eventHubParameters.consumerGroup = params.get('event-hub-consumer-group');\n    checkpointDatabase = params.get('database-name');\n});\n\ninterface EventPayload {\n  body: {\n    field_one: string;\n    field_two: string;\n  };\n}\n\nfunction parseMessageAttributesFromEvent(event: EventPayload) {\n\n  return {\n    fieldOne: event.body.field_one,\n    fieldTwo: event.body.field_two\n  }\n}\n\nconst ingestEvents: Handler = async (event: ScheduledEvent, context: Context) => {\n\n  await eventHubParamsPromise;\n  const eventHubIngestEngine: EventHubIngestEngine = new EventHubIngestEngine(\n    eventHubParameters, checkpointDatabase, parseMessageAttributesFromEvent);\n  await eventHubIngestEngine.run(context);\n\n}\n\nexport { ingestEvents }", "// TODO: get rid of this spurious module\n\nlet IS_DEPLOYED: boolean = true;\nlet ACCOUNT_ID: string;\nif (process.env.STAGE && process.env.STAGE === 'local') {\n  IS_DEPLOYED = false;\n  ACCOUNT_ID = '123456789012'\n}\nelse {\n  ACCOUNT_ID = process.env.ACCOUNT_ID || 'N/A';\n}\n\nconst SERVICE: string = process.env.SERVICE || 'N/A';\nconst STAGE: string = process.env.STAGE  || 'local';\nconst REGION: string  = process.env.REGION || 'N/A';\n\nexport default {\n    IS_DEPLOYED,\n    SERVICE,\n    STAGE,\n    ACCOUNT_ID,\n    REGION\n};", "/**\n * Check if a value is a record.\n *\n * @example\n * ```typescript\n * import { isRecord } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const value = { key: 'value' };\n * if (isRecord(value)) {\n *   // value is a record\n * }\n * ```\n *\n * @param value The value to check\n */\nconst isRecord = (value) => {\n    return (Object.prototype.toString.call(value) === '[object Object]' &&\n        !Object.is(value, null));\n};\n/**\n * Check if a value is a string.\n *\n * @example\n * ```typescript\n * import { isString } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const value = 'foo';\n * if (isString(value)) {\n *   // value is a string\n * }\n * ```\n *\n * @param value The value to check\n */\nconst isString = (value) => {\n    return typeof value === 'string';\n};\n/**\n * Check if a value is a number.\n *\n * @example\n * ```typescript\n * import { isNumber } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const value = 42;\n * if (isNumber(value)) {\n *   // value is a number\n * }\n * ```\n *\n * @param value The value to check\n */\nconst isNumber = (value) => {\n    return typeof value === 'number';\n};\n/**\n * Check if a value is an integer number.\n *\n * @example\n * ```typescript\n * import { isIntegerNumber } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const value = 42;\n * if (isIntegerNumber(value)) {\n *   // value is an integer number\n * }\n * ```\n *\n * @param value The value to check\n */\nconst isIntegerNumber = (value) => {\n    return isNumber(value) && Number.isInteger(value);\n};\n/**\n * Check if a value is truthy.\n *\n * @example\n * ```typescript\n * import { isTruthy } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const value = 'yes';\n * if (isTruthy(value)) {\n *   // value is truthy\n * }\n * ```\n *\n * @see https://github.com/getify/You-Dont-Know-JS/blob/2nd-ed/types-grammar/ch4.md#toboolean\n *\n * @param value The value to check\n */\nconst isTruthy = (value) => {\n    if (isString(value)) {\n        return value !== '';\n    }\n    else if (isNumber(value)) {\n        return value !== 0;\n    }\n    else if (typeof value === 'boolean') {\n        return value;\n    }\n    else if (Array.isArray(value)) {\n        return value.length > 0;\n    }\n    else if (isRecord(value)) {\n        return Object.keys(value).length > 0;\n    }\n    else {\n        return false;\n    }\n};\n/**\n * Check if a value is `null`.\n *\n * @example\n * ```typescript\n * import { isNull } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const value = null;\n * if (isNull(value)) {\n *   // value is null\n * }\n * ```\n *\n * @param value The value to check\n */\nconst isNull = (value) => {\n    return Object.is(value, null);\n};\n/**\n * Check if a value is `null` or `undefined`.\n *\n * @example\n * ```typescript\n * import { isNullOrUndefined } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const value = null;\n * if (isNullOrUndefined(value)) {\n *   // value is null or undefined\n * }\n * ```\n *\n * @param value The value to check\n */\nconst isNullOrUndefined = (value) => {\n    return isNull(value) || Object.is(value, undefined);\n};\n/**\n * Get the type of a value as a string.\n *\n * @example\n * ```typescript\n * import { getType } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const type = getType('foo'); // 'string'\n * const otherType = getType(42); // 'number'\n * const anotherType = getType({ key: 'value' }); // 'object'\n * const unknownType = getType(Symbol('foo')); // 'unknown'\n * ```\n *\n * @param value The value to check\n */\nconst getType = (value) => {\n    if (Array.isArray(value)) {\n        return 'array';\n    }\n    else if (isRecord(value)) {\n        return 'object';\n    }\n    else if (isString(value)) {\n        return 'string';\n    }\n    else if (isNumber(value)) {\n        return 'number';\n    }\n    else if (typeof value === 'boolean') {\n        return 'boolean';\n    }\n    else if (isNull(value)) {\n        return 'null';\n    }\n    else {\n        return 'unknown';\n    }\n};\n/**\n * Compare two arrays for strict equality.\n *\n * This function compares each element in the arrays, regardless of order.\n *\n * @example\n * ```typescript\n * import { areArraysEqual } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const left = [1, 2, 3];\n * const right = [3, 2, 1];\n * const equal = areArraysEqual(left, right); // true\n *\n * const otherLeft = [1, 2, 3];\n * const otherRight = [1, 2, 4];\n * const otherEqual = areArraysEqual(otherLeft, otherRight); // false\n * ```\n *\n * @param left The left array to compare\n * @param right The right array to compare\n */\nconst areArraysEqual = (left, right) => {\n    if (left.length !== right.length) {\n        return false;\n    }\n    return left.every((value, i) => isStrictEqual(value, right[i]));\n};\n/**\n * Compare two records for strict equality.\n *\n * @example\n * ```typescript\n * import { areRecordsEqual } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const left = { key: 'value' };\n * const right = { key: 'value' };\n * const equal = areRecordsEqual(left, right); // true\n *\n * const otherLeft = { key: 'value' };\n * const otherRight = { key: 'other value' };\n * const otherEqual = areRecordsEqual(otherLeft, otherRight); // false\n * ```\n *\n * @param left The left record to compare\n * @param right The right record to compare\n */\nconst areRecordsEqual = (left, right) => {\n    const leftKeys = Object.keys(left);\n    const rightKeys = Object.keys(right);\n    if (leftKeys.length !== rightKeys.length) {\n        return false;\n    }\n    return leftKeys.every((key) => isStrictEqual(left[key], right[key]));\n};\n/**\n * Check if two unknown values are strictly equal.\n *\n * If the values are arrays, then each element is compared, regardless of\n * order. If the values are objects, then each key and value from left\n * is compared to the corresponding key and value from right. If the\n * values are primitives, then they are compared using strict equality.\n *\n * @example\n * ```typescript\n * import { isStrictEqual } from '@aws-lambda-powertools/commons/typeUtils';\n *\n * const left = { key: 'value' };\n * const right = { key: 'value' };\n * const equal = isStrictEqual(left, right); // true\n *\n * const otherLeft = [1, 2, 3];\n * const otherRight = [3, 2, 1];\n * const otherEqual = isStrictEqual(otherLeft, otherRight); // true\n *\n * const anotherLeft = 'foo';\n * const anotherRight = 'bar';\n * const anotherEqual = isStrictEqual(anotherLeft, anotherRight); // false\n *\n * const yetAnotherLeft = 42;\n * const yetAnotherRight = 42;\n * const yetAnotherEqual = isStrictEqual(yetAnotherLeft, yetAnotherRight); // true\n * ```\n *\n * @param left Left side of strict equality comparison\n * @param right Right side of strict equality comparison\n */\nconst isStrictEqual = (left, right) => {\n    if (left === right) {\n        return true;\n    }\n    if (typeof left !== typeof right) {\n        return false;\n    }\n    if (Array.isArray(left) && Array.isArray(right)) {\n        return areArraysEqual(left, right);\n    }\n    if (isRecord(left) && isRecord(right)) {\n        return areRecordsEqual(left, right);\n    }\n    return false;\n};\nexport { isRecord, isString, isNumber, isIntegerNumber, isTruthy, isNull, isNullOrUndefined, getType, isStrictEqual, };\n", "/**\n * `Utility` is a base class that other Powertools for AWS Lambda (TypeScript) utilites can extend to inherit shared logic.\n *\n * Its main purpose is to encapsulate the cold start heuristic logic. Cold start is a term commonly used to describe the `Init` phase of a Lambda function.\n * In this phase, Lambda creates or unfreezes an execution environment with the configured resources, downloads the code for the function and all layers,\n * initializes any extensions, initializes the runtime, and then runs the function\u2019s initialization code (the code outside the main handler).\n *\n * The Init phase happens either during the first invocation, or in advance of function invocations if you have enabled provisioned concurrency.\n *\n * To learn more about the Lambda execution environment lifecycle, see the [Execution environment section](https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html) of the AWS Lambda documentation.\n *\n * As a Powertools for AWS Lambda (TypeScript) user you probably won't be using this class directly, in fact if you use other Powertools for AWS utilities the cold start heuristic found here is already used to:\n * * Add a `coldStart` key to the structured logs when injecting context information in `Logger`\n * * Emit a metric during a cold start function invocation in `Metrics`\n * * Annotate the invocation segment with a `coldStart` key in `Tracer`\n *\n * If you want to use this logic in your own utilities, `Utility` provides two methods:\n *\n * `Utility.getColdStart()`\n *\n * Since the `Utility` class is instantiated outside of the Lambda handler it will persist across invocations of the same execution environment. This means that if you call `getColdStart()` multiple times, it will return `true` during the first invocation, and `false` afterwards.\n *\n * @example\n * ```typescript\n * import { Utility } from '@aws-lambda-powertools/commons';\n *\n * const utility = new Utility();\n *\n * export const handler = async (_event: any, _context: any) => {\n *   utility.getColdStart();\n * };\n * ```\n *\n * `Utility.isColdStart()`\n *\n * This method is an alias of `getColdStart()` and is exposed for convenience and better readability in certain usages.\n *\n * @example\n * ```typescript\n * import { Utility } from '@aws-lambda-powertools/commons';\n *\n * const utility = new Utility();\n *\n * export const handler = async (_event: any, _context: any) => {\n *   if (utility.isColdStart()) {\n *     // do something, this block is only executed on the first invocation of the function\n *   } else {\n *     // do something else, this block gets executed on all subsequent invocations\n *   }\n * };\n * ```\n */\nexport class Utility {\n    coldStart = true;\n    defaultServiceName = 'service_undefined';\n    /**\n     * Get the cold start status of the current execution environment.\n     *\n     * @example\n     * ```typescript\n     * import { Utility } from '@aws-lambda-powertools/commons';\n     *\n     * const utility = new Utility();\n     * utility.isColdStart(); // true\n     * utility.isColdStart(); // false\n     * ```\n     *\n     * The method also flips the cold start status to `false` after the first invocation.\n     */\n    getColdStart() {\n        if (this.coldStart) {\n            this.coldStart = false;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Get the cold start status of the current execution environment.\n     *\n     * @example\n     * ```typescript\n     * import { Utility } from '@aws-lambda-powertools/commons';\n     *\n     * const utility = new Utility();\n     * utility.isColdStart(); // true\n     * utility.isColdStart(); // false\n     * ```\n     *\n     * @see {@link getColdStart}\n     */\n    isColdStart() {\n        return this.getColdStart();\n    }\n    /**\n     * Get the default service name.\n     */\n    getDefaultServiceName() {\n        return this.defaultServiceName;\n    }\n    /**\n     * Validate that the service name provided is valid.\n     * Used internally during initialization.\n     *\n     * @param serviceName Service name to validate\n     */\n    isValidServiceName(serviceName) {\n        return typeof serviceName === 'string' && serviceName.trim().length > 0;\n    }\n}\n", "/**\n * This class is used to fetch environment variables that are available in the execution environment.\n *\n * These variables can be a mix of runtime environment variables set by AWS and\n * other environment variables that are set by the developer to configure Powertools for AWS Lambda.\n *\n * @example\n * ```typescript\n * import { EnvironmentVariablesService } from '@aws-lambda-powertools/commons/';\n *\n * const config = new EnvironmentVariablesService();\n * const serviceName = config.getServiceName();\n * ```\n *\n * @see https://docs.powertools.aws.dev/lambda/typescript/latest/#environment-variables\n *\n * @class\n * @implements {ConfigServiceInterface}\n */\nclass EnvironmentVariablesService {\n    /**\n     * Increase JSON indentation for Logger to ease debugging when running functions locally or in a non-production environment\n     */\n    devModeVariable = 'POWERTOOLS_DEV';\n    /**\n     * Set service name used for tracing namespace, metrics dimension and structured logging\n     */\n    serviceNameVariable = 'POWERTOOLS_SERVICE_NAME';\n    /**\n     * AWS X-Ray Trace ID environment variable\n     * @private\n     */\n    xRayTraceIdVariable = '_X_AMZN_TRACE_ID';\n    /**\n     * Get the value of an environment variable by name.\n     *\n     * @param {string} name The name of the environment variable to fetch.\n     */\n    get(name) {\n        return process.env[name]?.trim() || '';\n    }\n    /**\n     * Get the value of the `POWERTOOLS_SERVICE_NAME` environment variable.\n     */\n    getServiceName() {\n        return this.get(this.serviceNameVariable);\n    }\n    /**\n     * Get the value of the `_X_AMZN_TRACE_ID` environment variable.\n     *\n     * The AWS X-Ray Trace data available in the environment variable has this format:\n     * `Root=1-5759e988-bd862e3fe1be46a994272793;Parent=557abcec3ee5a047;Sampled=1`,\n     *\n     * The actual Trace ID is: `1-5759e988-bd862e3fe1be46a994272793`.\n     */\n    getXrayTraceId() {\n        const xRayTraceData = this.getXrayTraceData();\n        return xRayTraceData?.Root;\n    }\n    /**\n     * Determine if the current invocation is part of a sampled X-Ray trace.\n     *\n     * The AWS X-Ray Trace data available in the environment variable has this format:\n     * `Root=1-5759e988-bd862e3fe1be46a994272793;Parent=557abcec3ee5a047;Sampled=1`,\n     */\n    getXrayTraceSampled() {\n        const xRayTraceData = this.getXrayTraceData();\n        return xRayTraceData?.Sampled === '1';\n    }\n    /**\n     * Determine if the current invocation is running in a development environment.\n     */\n    isDevMode() {\n        return this.isValueTrue(this.get(this.devModeVariable));\n    }\n    /**\n     * Helper function to determine if a value is considered thruthy.\n     *\n     * @param value The value to check for truthiness.\n     */\n    isValueTrue(value) {\n        const truthyValues = ['1', 'y', 'yes', 't', 'true', 'on'];\n        return truthyValues.includes(value.toLowerCase());\n    }\n    /**\n     * Get the AWS X-Ray Trace data from the environment variable.\n     *\n     * The method parses the environment variable `_X_AMZN_TRACE_ID` and returns an object with the key-value pairs.\n     */\n    getXrayTraceData() {\n        const xRayTraceEnv = this.get(this.xRayTraceIdVariable);\n        if (xRayTraceEnv === '')\n            return undefined;\n        if (!xRayTraceEnv.includes('='))\n            return { Root: xRayTraceEnv };\n        const xRayTraceData = {};\n        xRayTraceEnv.split(';').forEach((field) => {\n            const [key, value] = field.split('=');\n            xRayTraceData[key] = value;\n        });\n        return xRayTraceData;\n    }\n}\nexport { EnvironmentVariablesService };\n", "// this file is auto generated, do not modify\nexport const PT_VERSION = '2.4.0';\n", "import { PT_VERSION } from './version.js';\nconst EXEC_ENV = process.env.AWS_EXECUTION_ENV || 'NA';\nconst middlewareOptions = {\n    relation: 'after',\n    toMiddleware: 'getUserAgentMiddleware',\n    name: 'addPowertoolsToUserAgent',\n    tags: ['POWERTOOLS', 'USER_AGENT'],\n};\n/**\n * Type guard to check if the client provided is a valid AWS SDK v3 client.\n *\n * @internal\n */\nconst isSdkClient = (client) => typeof client === 'object' &&\n    client !== null &&\n    'send' in client &&\n    typeof client.send === 'function' &&\n    'config' in client &&\n    client.config !== undefined &&\n    typeof client.config === 'object' &&\n    client.config !== null &&\n    'middlewareStack' in client &&\n    client.middlewareStack !== undefined &&\n    typeof client.middlewareStack === 'object' &&\n    client.middlewareStack !== null &&\n    'identify' in client.middlewareStack &&\n    typeof client.middlewareStack.identify === 'function' &&\n    'addRelativeTo' in client.middlewareStack &&\n    typeof client.middlewareStack.addRelativeTo === 'function';\n/**\n * Helper function to create a custom user agent middleware for the AWS SDK v3 clients.\n *\n * The middleware will append the provided feature name and the current version of\n * the Powertools for AWS Lambda library to the user agent string.\n *\n * @example \"PT/Tracer/2.1.0 PTEnv/nodejs20x\"\n *\n * @param feature The feature name to be added to the user agent\n *\n * @internal\n */\nconst customUserAgentMiddleware = (feature) => {\n    return (next) => async (args) => {\n        const powertoolsUserAgent = `PT/${feature}/${PT_VERSION} PTEnv/${EXEC_ENV}`;\n        args.request.headers['user-agent'] =\n            `${args.request.headers['user-agent']} ${powertoolsUserAgent}`;\n        return await next(args);\n    };\n};\n/**\n * Check if the provided middleware stack already has the Powertools for AWS Lambda\n * user agent middleware.\n *\n * @param middlewareStack The middleware stack to check\n *\n * @internal\n */\nconst hasPowertools = (middlewareStack) => {\n    let found = false;\n    for (const middleware of middlewareStack) {\n        if (middleware.includes('addPowertoolsToUserAgent')) {\n            found = true;\n        }\n    }\n    return found;\n};\n/**\n * Add the Powertools for AWS Lambda user agent middleware to the\n * AWS SDK v3 client provided.\n *\n * We use this middleware to unbotrusively track the usage of the library\n * and secure continued investment in the project.\n *\n * @param client The AWS SDK v3 client to add the middleware to\n * @param feature The feature name to be added to the user agent\n */\nconst addUserAgentMiddleware = (client, feature) => {\n    try {\n        if (isSdkClient(client)) {\n            if (hasPowertools(client.middlewareStack.identify())) {\n                return;\n            }\n            client.middlewareStack.addRelativeTo(customUserAgentMiddleware(feature), middlewareOptions);\n        }\n        else {\n            throw new Error(`The client provided does not match the expected interface`);\n        }\n    }\n    catch (error) {\n        console.warn('Failed to add user agent middleware', error);\n    }\n};\nexport { customUserAgentMiddleware, addUserAgentMiddleware, isSdkClient };\n", "/**\n * These constants are used to store cleanup functions in Middy's `request.internal` object.\n * They are used by the `cleanupPowertools` function to check if any cleanup function\n * is present and execute it.\n */\nconst PREFIX = 'powertools-for-aws';\n/**\n * Key to store the tracer instance in the `request.internal` object.\n *\n * @see {@link cleanupMiddlewares}\n */\nconst TRACER_KEY = `${PREFIX}.tracer`;\n/**\n * Key to store the metrics instance in the `request.internal` object.\n *\n * @see {@link cleanupMiddlewares}\n */\nconst METRICS_KEY = `${PREFIX}.metrics`;\n/**\n * Key to store the logger instance in the `request.internal` object.\n *\n * @see {@link cleanupMiddlewares}\n */\nconst LOGGER_KEY = `${PREFIX}.logger`;\n/**\n * Key to store the idempotency instance in the `request.internal` object.\n *\n * @see {@link cleanupMiddlewares}\n */\nconst IDEMPOTENCY_KEY = `${PREFIX}.idempotency`;\nexport { PREFIX, TRACER_KEY, METRICS_KEY, LOGGER_KEY, IDEMPOTENCY_KEY };\n", "import { Utility } from '@aws-lambda-powertools/commons';\nimport merge from 'lodash.merge';\nimport { Console } from 'node:console';\nimport { randomInt } from 'node:crypto';\nimport { EnvironmentVariablesService } from './config/EnvironmentVariablesService.js';\nimport { LogJsonIndent } from './constants.js';\nimport { PowertoolsLogFormatter } from './formatter/PowertoolsLogFormatter.js';\n/**\n * ## Intro\n * The Logger utility provides an opinionated logger with output structured as JSON.\n *\n * ## Key features\n *  * Capture key fields from Lambda context, cold start and structures logging output as JSON\n *  * Log Lambda context when instructed (disabled by default)\n *  * Log sampling prints all logs for a percentage of invocations (disabled by default)\n *  * Append additional keys to structured log at any point in time\n *\n * ## Usage\n *\n * For more usage examples, see [our documentation](https://docs.powertools.aws.dev/lambda/typescript/latest/core/logger/).\n *\n * ### Basic usage\n *\n * @example\n * ```typescript\n * import { Logger } from '@aws-lambda-powertools/logger';\n *\n * // Logger parameters fetched from the environment variables:\n * const logger = new Logger();\n * ```\n *\n * ### Functions usage with middleware\n *\n * If you use function-based Lambda handlers you can use the [injectLambdaContext()](#injectLambdaContext)\n * middy middleware to automatically add context to your Lambda logs.\n *\n * @example\n * ```typescript\n * import { Logger } from '@aws-lambda-powertools/logger';\n * import { injectLambdaContext } from '@aws-lambda-powertools/logger/middleware';\n * import middy from '@middy/core';\n *\n * const logger = new Logger();\n *\n * const lambdaHandler = async (_event: unknown, _context: unknown) => {\n *     logger.info('This is an INFO log with some context');\n * };\n *\n * export const handler = middy(lambdaHandler).use(injectLambdaContext(logger));\n * ```\n *\n * ### Object oriented usage with decorators\n *\n * If instead you use TypeScript classes to wrap your Lambda handler you can use the [@logger.injectLambdaContext()](./_aws_lambda_powertools_logger.Logger.html#injectLambdaContext) decorator.\n *\n * @example\n * ```typescript\n * import { Logger } from '@aws-lambda-powertools/logger';\n * import type { LambdaInterface } from '@aws-lambda-powertools/commons/types';\n *\n * const logger = new Logger();\n *\n * class Lambda implements LambdaInterface {\n *     // Decorate your handler class method\n *     \u2063@logger.injectLambdaContext()\n *     public async handler(_event: unknown, _context: unknown): Promise<void> {\n *         logger.info('This is an INFO log with some context');\n *     }\n * }\n *\n * const handlerClass = new Lambda();\n * export const handler = handlerClass.handler.bind(handlerClass);\n * ```\n *\n * ### Functions usage with manual instrumentation\n *\n * If you prefer to manually instrument your Lambda handler you can use the methods in the Logger class directly.\n *\n * @example\n * ```typescript\n * import { Logger } from '@aws-lambda-powertools/logger';\n *\n * const logger = new Logger();\n *\n * export const handler = async (_event, context) => {\n *     logger.addContext(context);\n *     logger.info('This is an INFO log with some context');\n * };\n * ```\n *\n * @class\n * @implements {ClassThatLogs}\n * @see https://docs.powertools.aws.dev/lambda/typescript/latest/core/logger/\n */\nclass Logger extends Utility {\n    /**\n     * Console instance used to print logs.\n     *\n     * In AWS Lambda, we create a new instance of the Console class so that we can have\n     * full control over the output of the logs. In testing environments, we use the\n     * default console instance.\n     *\n     * This property is initialized in the constructor in setOptions().\n     *\n     * @private\n     */\n    console;\n    /**\n     * Custom config service instance used to configure the logger.\n     */\n    customConfigService;\n    /**\n     * Environment variables service instance used to fetch environment variables.\n     */\n    envVarsService = new EnvironmentVariablesService();\n    /**\n     * Whether to print the Lambda invocation event in the logs.\n     */\n    logEvent = false;\n    /**\n     * Formatter used to format the log items.\n     * @default new PowertoolsLogFormatter()\n     */\n    logFormatter;\n    /**\n     * JSON indentation used to format the logs.\n     */\n    logIndentation = LogJsonIndent.COMPACT;\n    /**\n     * Log level used internally by the current instance of Logger.\n     */\n    logLevel = 12;\n    /**\n     * Log level thresholds used internally by the current instance of Logger.\n     *\n     * The levels are in ascending order from the most verbose to the least verbose (no logs).\n     */\n    logLevelThresholds = {\n        DEBUG: 8,\n        INFO: 12,\n        WARN: 16,\n        ERROR: 20,\n        CRITICAL: 24,\n        SILENT: 28,\n    };\n    /**\n     * Persistent log attributes that will be logged in all log items.\n     */\n    persistentLogAttributes = {};\n    /**\n     * Standard attributes managed by Powertools that will be logged in all log items.\n     */\n    powertoolsLogData = {};\n    /**\n     * Temporary log attributes that can be appended with `appendKeys()` method.\n     */\n    temporaryLogAttributes = {};\n    /**\n     * Buffer used to store logs until the logger is initialized.\n     *\n     * Sometimes we need to log warnings before the logger is fully initialized, however we can't log them\n     * immediately because the logger is not ready yet. This buffer stores those logs until the logger is ready.\n     */\n    #buffer = [];\n    /**\n     * Flag used to determine if the logger is initialized.\n     */\n    #isInitialized = false;\n    /**\n     * Map used to hold the list of keys and their type.\n     *\n     * Because keys of different types can be overwritten, we keep a list of keys that were added and their last\n     * type. We then use this map at log preparation time to pick the last one.\n     */\n    #keys = new Map();\n    /**\n     * This is the initial log leval as set during the initialization of the logger.\n     *\n     * We keep this value to be able to reset the log level to the initial value when the sample rate is refreshed.\n     */\n    #initialLogLevel = 12;\n    /**\n     * Log level used by the current instance of Logger.\n     *\n     * Returns the log level as a number. The higher the number, the less verbose the logs.\n     * To get the log level name, use the {@link getLevelName()} method.\n     */\n    get level() {\n        return this.logLevel;\n    }\n    /**\n     * It initializes the Logger class with an optional set of options (settings).\n     * *\n     * @param {ConstructorOptions} options\n     */\n    constructor(options = {}) {\n        super();\n        const { customConfigService, ...rest } = options;\n        this.setCustomConfigService(customConfigService);\n        // all logs are buffered until the logger is initialized\n        this.setOptions(rest);\n        this.#isInitialized = true;\n        for (const [level, log] of this.#buffer) {\n            // we call the method directly and create the log item just in time\n            this.printLog(level, this.createAndPopulateLogItem(...log));\n        }\n        this.#buffer = [];\n    }\n    /**\n     * It adds the current Lambda function's invocation context data to the powertoolLogData property of the instance.\n     * This context data will be part of all printed log items.\n     *\n     * @param {Context} context\n     * @returns {void}\n     */\n    addContext(context) {\n        this.addToPowertoolsLogData({\n            lambdaContext: {\n                invokedFunctionArn: context.invokedFunctionArn,\n                coldStart: this.getColdStart(),\n                awsRequestId: context.awsRequestId,\n                memoryLimitInMB: context.memoryLimitInMB,\n                functionName: context.functionName,\n                functionVersion: context.functionVersion,\n            },\n        });\n    }\n    /**\n     * It adds the given persistent attributes (key-value pairs) to all log items generated by this Logger instance.\n     *\n     * @deprecated This method is deprecated and will be removed in the future major versions, please use {@link appendPersistentKeys()} instead.\n     *\n     * @param {LogAttributes} attributes\n     * @returns {void}\n     */\n    addPersistentLogAttributes(attributes) {\n        this.appendPersistentKeys(attributes);\n    }\n    /**\n     * It adds the given temporary attributes (key-value pairs) to all log items generated by this Logger instance.\n     *\n     * @param {LogAttributes} attributes\n     * @returns {void}\n     */\n    appendKeys(attributes) {\n        for (const attributeKey of Object.keys(attributes)) {\n            this.#keys.set(attributeKey, 'temp');\n        }\n        merge(this.temporaryLogAttributes, attributes);\n    }\n    /**\n     * It adds the given persistent attributes (key-value pairs) to all log items generated by this Logger instance.\n     *\n     * @param attributes - The attributes to add to all log items.\n     */\n    appendPersistentKeys(attributes) {\n        for (const attributeKey of Object.keys(attributes)) {\n            this.#keys.set(attributeKey, 'persistent');\n        }\n        merge(this.persistentLogAttributes, attributes);\n    }\n    /**\n     * It creates a separate Logger instance, identical to the current one\n     * It's possible to overwrite the new instance options by passing them.\n     *\n     * @param {ConstructorOptions} options\n     * @returns {Logger}\n     */\n    createChild(options = {}) {\n        const childLogger = this.createLogger(\n        // Merge parent logger options with options passed to createChild,\n        // the latter having precedence.\n        merge({}, {\n            logLevel: this.getLevelName(),\n            serviceName: this.powertoolsLogData.serviceName,\n            sampleRateValue: this.powertoolsLogData.sampleRateValue,\n            logFormatter: this.getLogFormatter(),\n            customConfigService: this.getCustomConfigService(),\n            environment: this.powertoolsLogData.environment,\n            persistentLogAttributes: this.persistentLogAttributes,\n            temporaryLogAttributes: this.temporaryLogAttributes,\n        }, options));\n        if (this.powertoolsLogData.lambdaContext)\n            childLogger.addContext(this.powertoolsLogData.lambdaContext);\n        return childLogger;\n    }\n    /**\n     * It prints a log item with level CRITICAL.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     */\n    critical(input, ...extraInput) {\n        this.processLogItem(24, input, extraInput);\n    }\n    /**\n     * It prints a log item with level DEBUG.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     * @returns {void}\n     */\n    debug(input, ...extraInput) {\n        this.processLogItem(8, input, extraInput);\n    }\n    /**\n     * It prints a log item with level ERROR.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     * @returns {void}\n     */\n    error(input, ...extraInput) {\n        this.processLogItem(20, input, extraInput);\n    }\n    /**\n     * Get the log level name of the current instance of Logger.\n     *\n     * It returns the log level name, i.e. `INFO`, `DEBUG`, etc.\n     * To get the log level as a number, use the {@link Logger.level} property.\n     *\n     * @returns {Uppercase<LogLevel>} The log level name.\n     */\n    getLevelName() {\n        return this.getLogLevelNameFromNumber(this.logLevel);\n    }\n    /**\n     * It returns a boolean value. True means that the Lambda invocation events\n     * are printed in the logs.\n     *\n     * @returns {boolean}\n     */\n    getLogEvent() {\n        return this.logEvent;\n    }\n    /**\n     * It returns the persistent log attributes, which are the attributes\n     * that will be logged in all log items.\n     *\n     * @private\n     * @returns {LogAttributes}\n     */\n    getPersistentLogAttributes() {\n        return this.persistentLogAttributes;\n    }\n    /**\n     * It prints a log item with level INFO.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     * @returns {void}\n     */\n    info(input, ...extraInput) {\n        this.processLogItem(12, input, extraInput);\n    }\n    /**\n     * Method decorator that adds the current Lambda function context as extra\n     * information in all log items.\n     *\n     * The decorator can be used only when attached to a Lambda function handler which\n     * is written as method of a class, and should be declared just before the handler declaration.\n     *\n     * Note: Currently TypeScript only supports decorators on classes and methods. If you are using the\n     * function syntax, you should use the middleware instead.\n     *\n     * @example\n     * ```typescript\n     * import { Logger } from '@aws-lambda-powertools/logger';\n     * import type { LambdaInterface } from '@aws-lambda-powertools/commons/types';\n     *\n     * const logger = new Logger();\n     *\n     * class Lambda implements LambdaInterface {\n     *     // Decorate your handler class method\n     *     \u2063@logger.injectLambdaContext()\n     *     public async handler(_event: unknown, _context: unknown): Promise<void> {\n     *         logger.info('This is an INFO log with some context');\n     *     }\n     * }\n     *\n     * const handlerClass = new Lambda();\n     * export const handler = handlerClass.handler.bind(handlerClass);\n     * ```\n     *\n     * @see https://www.typescriptlang.org/docs/handbook/decorators.html#method-decorators\n     * @returns {HandlerMethodDecorator}\n     */\n    injectLambdaContext(options) {\n        return (_target, _propertyKey, descriptor) => {\n            /**\n             * The descriptor.value is the method this decorator decorates, it cannot be undefined.\n             */\n            /* eslint-disable  @typescript-eslint/no-non-null-assertion */\n            const originalMethod = descriptor.value;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const loggerRef = this;\n            // Use a function() {} instead of an () => {} arrow function so that we can\n            // access `myClass` as `this` in a decorated `myClass.myMethod()`.\n            descriptor.value = async function (event, context, callback) {\n                Logger.injectLambdaContextBefore(loggerRef, event, context, options);\n                let result;\n                try {\n                    result = await originalMethod.apply(this, [event, context, callback]);\n                }\n                catch (error) {\n                    throw error;\n                }\n                finally {\n                    if (options?.clearState || options?.resetKeys)\n                        loggerRef.resetKeys();\n                }\n                return result;\n            };\n        };\n    }\n    /**\n     * @deprecated This method is deprecated and will be removed in the future major versions. Use {@link resetKeys()} instead.\n     */\n    /* istanbul ignore next */\n    static injectLambdaContextAfterOrOnError(logger, _persistentAttributes, options) {\n        if (options && (options.clearState || options?.resetKeys)) {\n            logger.resetKeys();\n        }\n    }\n    static injectLambdaContextBefore(logger, event, context, options) {\n        logger.addContext(context);\n        let shouldLogEvent = undefined;\n        if (options && Object.hasOwn(options, 'logEvent')) {\n            shouldLogEvent = options.logEvent;\n        }\n        logger.logEventIfEnabled(event, shouldLogEvent);\n    }\n    /**\n     * Logs a Lambda invocation event, if it *should*.\n     *\n     ** @param {unknown} event\n     * @param {boolean} [overwriteValue]\n     * @returns {void}\n     */\n    logEventIfEnabled(event, overwriteValue) {\n        if (!this.shouldLogEvent(overwriteValue))\n            return;\n        this.info('Lambda invocation event', { event });\n    }\n    /**\n     * This method allows recalculating the initial sampling decision for changing\n     * the log level to DEBUG based on a sample rate value used during initialization,\n     * potentially yielding a different outcome.\n     *\n     * @returns {void}\n     */\n    refreshSampleRateCalculation() {\n        this.setInitialSampleRate(this.powertoolsLogData.sampleRateValue);\n    }\n    /**\n     * It removes temporary attributes based on provided keys to all log items generated by this Logger instance.\n     *\n     * @param {string[]} keys\n     * @returns {void}\n     */\n    removeKeys(keys) {\n        for (const key of keys) {\n            this.temporaryLogAttributes[key] = undefined;\n            if (this.persistentLogAttributes[key]) {\n                this.#keys.set(key, 'persistent');\n            }\n            else {\n                this.#keys.delete(key);\n            }\n        }\n    }\n    /**\n     * Remove the given keys from the persistent keys.\n     *\n     * @example\n     * ```typescript\n     * import { Logger } from '@aws-lambda-powertools/logger';\n     *\n     * const logger = new Logger({\n     *   persistentKeys: {\n     *     environment: 'prod',\n     *   },\n     * });\n     *\n     * logger.removePersistentKeys(['environment']);\n     * ```\n     *\n     * @param keys - The keys to remove from the persistent attributes.\n     */\n    removePersistentKeys(keys) {\n        for (const key of keys) {\n            this.persistentLogAttributes[key] = undefined;\n            if (this.temporaryLogAttributes[key]) {\n                this.#keys.set(key, 'temp');\n            }\n            else {\n                this.#keys.delete(key);\n            }\n        }\n    }\n    /**\n     * @deprecated This method is deprecated and will be removed in the future major versions. Use {@link removePersistentKeys()} instead.\n     *\n     * @param {string[]} keys\n     * @returns {void}\n     */\n    removePersistentLogAttributes(keys) {\n        this.removePersistentKeys(keys);\n    }\n    /**\n     * It removes all temporary log attributes added with `appendKeys()` method.\n     */\n    resetKeys() {\n        for (const key of Object.keys(this.temporaryLogAttributes)) {\n            if (this.persistentLogAttributes[key]) {\n                this.#keys.set(key, 'persistent');\n            }\n            else {\n                this.#keys.delete(key);\n            }\n        }\n        this.temporaryLogAttributes = {};\n    }\n    /**\n     * Set the log level for this Logger instance.\n     *\n     * If the log level is set using AWS Lambda Advanced Logging Controls, it sets it\n     * instead of the given log level to avoid data loss.\n     *\n     * @param logLevel The log level to set, i.e. `error`, `warn`, `info`, `debug`, etc.\n     */\n    setLogLevel(logLevel) {\n        if (this.awsLogLevelShortCircuit(logLevel))\n            return;\n        if (this.isValidLogLevel(logLevel)) {\n            this.logLevel = this.logLevelThresholds[logLevel];\n        }\n        else {\n            throw new Error(`Invalid log level: ${logLevel}`);\n        }\n    }\n    /**\n     * It sets the given attributes (key-value pairs) to all log items generated by this Logger instance.\n     * Note: this replaces the pre-existing value.\n     *\n     * @deprecated This method is deprecated and will be removed in the future major versions, please use {@link appendPersistentKeys()} instead.\n     *\n     * @param {LogAttributes} attributes\n     * @returns {void}\n     */\n    setPersistentLogAttributes(attributes) {\n        this.persistentLogAttributes = attributes;\n    }\n    /**\n     * It checks whether the current Lambda invocation event should be printed in the logs or not.\n     *\n     * @private\n     * @param {boolean} [overwriteValue]\n     * @returns {boolean}\n     */\n    shouldLogEvent(overwriteValue) {\n        if (typeof overwriteValue === 'boolean') {\n            return overwriteValue;\n        }\n        return this.getLogEvent();\n    }\n    /**\n     * It prints a log item with level WARN.\n     *\n     * @param {LogItemMessage} input\n     * @param {Error | LogAttributes | string} extraInput\n     * @returns {void}\n     */\n    warn(input, ...extraInput) {\n        this.processLogItem(16, input, extraInput);\n    }\n    /**\n     * Factory method for instantiating logger instances. Used by `createChild` method.\n     * Important for customization and subclassing. It allows subclasses, like `MyOwnLogger`,\n     * to override its behavior while keeping the main business logic in `createChild` intact.\n     *\n     * @example\n     * ```typescript\n     * // MyOwnLogger subclass\n     * class MyOwnLogger extends Logger {\n     *   protected createLogger(options?: ConstructorOptions): MyOwnLogger {\n     *     return new MyOwnLogger(options);\n     *   }\n     *   // No need to re-implement business logic from `createChild` and keep track on changes\n     *   public createChild(options?: ConstructorOptions): MyOwnLogger {\n     *     return super.createChild(options) as MyOwnLogger;\n     *   }\n     * }\n     * ```\n     *\n     * @param {ConstructorOptions} [options] Logger configuration options.\n     * @returns {Logger} A new logger instance.\n     */\n    createLogger(options) {\n        return new Logger(options);\n    }\n    /**\n     * It stores information that is printed in all log items.\n     *\n     * @param {Partial<PowertoolsLogData>} attributes\n     * @private\n     * @returns {void}\n     */\n    addToPowertoolsLogData(attributes) {\n        merge(this.powertoolsLogData, attributes);\n    }\n    awsLogLevelShortCircuit(selectedLogLevel) {\n        const awsLogLevel = this.getEnvVarsService().getAwsLogLevel();\n        if (this.isValidLogLevel(awsLogLevel)) {\n            this.logLevel = this.logLevelThresholds[awsLogLevel];\n            if (this.isValidLogLevel(selectedLogLevel) &&\n                this.logLevel > this.logLevelThresholds[selectedLogLevel]) {\n                this.warn(`Current log level (${selectedLogLevel}) does not match AWS Lambda Advanced Logging Controls minimum log level (${awsLogLevel}). This can lead to data loss, consider adjusting them.`);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Create a log item and populate it with the given log level, input, and extra input.\n     *\n     * We start with creating an object with base attributes managed by Powertools.\n     * Then we create a second object with persistent attributes provided by customers either\n     * directly to the log entry or through initial configuration and `appendKeys` method.\n     *\n     * Once we have the two objects, we pass them to the formatter that will apply the desired\n     * formatting to the log item.\n     *\n     * @param logLevel The log level of the log item to be printed\n     * @param input The main input of the log item, this can be a string or an object with additional attributes\n     * @param extraInput Additional attributes to be added to the log item\n     */\n    createAndPopulateLogItem(logLevel, input, extraInput) {\n        let message = '';\n        let otherInput = {};\n        if (typeof input === 'string') {\n            message = input;\n        }\n        else {\n            const { message: inputMessage, ...rest } = input;\n            message = inputMessage;\n            otherInput = rest;\n        }\n        // create base attributes\n        const unformattedBaseAttributes = {\n            logLevel: this.getLogLevelNameFromNumber(logLevel),\n            timestamp: new Date(),\n            message,\n            xRayTraceId: this.envVarsService.getXrayTraceId(),\n            ...this.getPowertoolsLogData(),\n        };\n        const additionalAttributes = {};\n        // gradually add additional attributes picking only the last added for each key\n        for (const [key, type] of this.#keys) {\n            if (type === 'persistent') {\n                additionalAttributes[key] = this.persistentLogAttributes[key];\n            }\n            else {\n                additionalAttributes[key] = this.temporaryLogAttributes[key];\n            }\n        }\n        // if the main input is not a string, then it's an object with additional attributes, so we merge it\n        merge(additionalAttributes, otherInput);\n        // then we merge the extra input attributes (if any)\n        for (const item of extraInput) {\n            const attributes = item instanceof Error\n                ? { error: item }\n                : typeof item === 'string'\n                    ? { extra: item }\n                    : item;\n            merge(additionalAttributes, attributes);\n        }\n        return this.getLogFormatter().formatAttributes(unformattedBaseAttributes, additionalAttributes);\n    }\n    /**\n     * It returns the custom config service, an abstraction used to fetch environment variables.\n     *\n     * @private\n     * @returns {ConfigServiceInterface | undefined}\n     */\n    getCustomConfigService() {\n        return this.customConfigService;\n    }\n    /**\n     * It returns the instance of a service that fetches environment variables.\n     *\n     * @private\n     * @returns {EnvironmentVariablesService}\n     */\n    getEnvVarsService() {\n        return this.envVarsService;\n    }\n    /**\n     * It returns the instance of a service that formats the structure of a\n     * log item's keys and values in the desired way.\n     *\n     * @private\n     * @returns {LogFormatterInterface}\n     */\n    getLogFormatter() {\n        return this.logFormatter;\n    }\n    /**\n     * Get the log level name from the log level number.\n     *\n     * For example, if the log level is 16, it will return 'WARN'.\n     *\n     * @param logLevel - The log level to get the name of\n     * @returns - The name of the log level\n     */\n    getLogLevelNameFromNumber(logLevel) {\n        let found;\n        for (const [key, value] of Object.entries(this.logLevelThresholds)) {\n            if (value === logLevel) {\n                found = key;\n                break;\n            }\n        }\n        return found;\n    }\n    /**\n     * It returns information that will be added in all log item by\n     * this Logger instance (different from user-provided persistent attributes).\n     *\n     * @private\n     * @returns {LogAttributes}\n     */\n    getPowertoolsLogData() {\n        return this.powertoolsLogData;\n    }\n    /**\n     * When the data added in the log item contains object references or BigInt values,\n     * `JSON.stringify()` can't handle them and instead throws errors:\n     * `TypeError: cyclic object value` or `TypeError: Do not know how to serialize a BigInt`.\n     * To mitigate these issues, this method will find and remove all cyclic references and convert BigInt values to strings.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#exceptions\n     * @private\n     */\n    getReplacer() {\n        const references = new WeakSet();\n        return (key, value) => {\n            let item = value;\n            if (item instanceof Error) {\n                item = this.getLogFormatter().formatError(item);\n            }\n            if (typeof item === 'bigint') {\n                return item.toString();\n            }\n            if (typeof item === 'object' && value !== null) {\n                if (references.has(item)) {\n                    return;\n                }\n                references.add(item);\n            }\n            return item;\n        };\n    }\n    /**\n     * It returns true and type guards the log level if a given log level is valid.\n     *\n     * @param {LogLevel} logLevel\n     * @private\n     * @returns {boolean}\n     */\n    isValidLogLevel(logLevel) {\n        return typeof logLevel === 'string' && logLevel in this.logLevelThresholds;\n    }\n    /**\n     * It returns true and type guards the sample rate value if a given value is valid.\n     *\n     * @param sampleRateValue\n     * @private\n     * @returns {boolean}\n     */\n    isValidSampleRate(sampleRateValue) {\n        return (typeof sampleRateValue === 'number' &&\n            0 <= sampleRateValue &&\n            sampleRateValue <= 1);\n    }\n    /**\n     * It prints a given log with given log level.\n     *\n     * @param {number} logLevel\n     * @param {LogItem} log\n     * @private\n     */\n    printLog(logLevel, log) {\n        log.prepareForPrint();\n        const consoleMethod = logLevel === 24\n            ? 'error'\n            : this.getLogLevelNameFromNumber(logLevel).toLowerCase();\n        this.console[consoleMethod](JSON.stringify(log.getAttributes(), this.getReplacer(), this.logIndentation));\n    }\n    /**\n     * It prints a given log with given log level.\n     *\n     * @param {number} logLevel\n     * @param {LogItemMessage} input\n     * @param {LogItemExtraInput} extraInput\n     * @private\n     */\n    processLogItem(logLevel, input, extraInput) {\n        if (logLevel >= this.logLevel) {\n            if (this.#isInitialized) {\n                this.printLog(logLevel, this.createAndPopulateLogItem(logLevel, input, extraInput));\n            }\n            else {\n                this.#buffer.push([logLevel, [logLevel, input, extraInput]]);\n            }\n        }\n    }\n    /**\n     * It initializes console property as an instance of the internal version of Console() class (PR #748)\n     * or as the global node console if the `POWERTOOLS_DEV' env variable is set and has truthy value.\n     *\n     * @private\n     * @returns {void}\n     */\n    setConsole() {\n        if (!this.getEnvVarsService().isDevMode()) {\n            this.console = new Console({\n                stdout: process.stdout,\n                stderr: process.stderr,\n            });\n        }\n        else {\n            this.console = console;\n        }\n    }\n    /**\n     * Sets the Logger's customer config service instance, which will be used\n     * to fetch environment variables.\n     *\n     * @private\n     * @param {ConfigServiceInterface} customConfigService\n     * @returns {void}\n     */\n    setCustomConfigService(customConfigService) {\n        this.customConfigService = customConfigService\n            ? customConfigService\n            : undefined;\n    }\n    /**\n     * Sets the initial Logger log level based on the following order:\n     * 1. If a log level is set using AWS Lambda Advanced Logging Controls, it sets it.\n     * 2. If a log level is passed to the constructor, it sets it.\n     * 3. If a log level is set via custom config service, it sets it.\n     * 4. If a log level is set via env variables, it sets it.\n     *\n     * If none of the above is true, the default log level applies (`INFO`).\n     *\n     * @private\n     * @param {LogLevel} [logLevel] - Log level passed to the constructor\n     */\n    setInitialLogLevel(logLevel) {\n        const constructorLogLevel = logLevel?.toUpperCase();\n        if (this.awsLogLevelShortCircuit(constructorLogLevel))\n            return;\n        if (this.isValidLogLevel(constructorLogLevel)) {\n            this.logLevel = this.logLevelThresholds[constructorLogLevel];\n            this.#initialLogLevel = this.logLevel;\n            return;\n        }\n        const customConfigValue = this.getCustomConfigService()\n            ?.getLogLevel()\n            ?.toUpperCase();\n        if (this.isValidLogLevel(customConfigValue)) {\n            this.logLevel = this.logLevelThresholds[customConfigValue];\n            this.#initialLogLevel = this.logLevel;\n            return;\n        }\n        const envVarsValue = this.getEnvVarsService()?.getLogLevel()?.toUpperCase();\n        if (this.isValidLogLevel(envVarsValue)) {\n            this.logLevel = this.logLevelThresholds[envVarsValue];\n            this.#initialLogLevel = this.logLevel;\n            return;\n        }\n    }\n    /**\n     * It sets sample rate value with the following prioprity:\n     * 1. Constructor value\n     * 2. Custom config service value\n     * 3. Environment variable value\n     * 4. Default value (zero)\n     *\n     * @private\n     * @param {number} [sampleRateValue]\n     * @returns {void}\n     */\n    setInitialSampleRate(sampleRateValue) {\n        this.powertoolsLogData.sampleRateValue = 0;\n        const constructorValue = sampleRateValue;\n        const customConfigValue = this.getCustomConfigService()?.getSampleRateValue();\n        const envVarsValue = this.getEnvVarsService().getSampleRateValue();\n        for (const value of [constructorValue, customConfigValue, envVarsValue]) {\n            if (this.isValidSampleRate(value)) {\n                this.powertoolsLogData.sampleRateValue = value;\n                if (value && randomInt(0, 100) / 100 <= value) {\n                    this.setLogLevel('DEBUG');\n                    this.debug('Setting log level to DEBUG due to sampling rate');\n                }\n                else {\n                    this.setLogLevel(this.getLogLevelNameFromNumber(this.#initialLogLevel));\n                }\n                return;\n            }\n        }\n    }\n    /**\n     * If the log event feature is enabled via env variable, it sets a property that tracks whether\n     * the event passed to the Lambda function handler should be logged or not.\n     *\n     * @private\n     * @returns {void}\n     */\n    setLogEvent() {\n        if (this.getEnvVarsService().getLogEvent()) {\n            this.logEvent = true;\n        }\n    }\n    /**\n     * It sets the log formatter instance, in charge of giving a custom format\n     * to the structured logs\n     *\n     * @private\n     * @param {LogFormatterInterface} logFormatter\n     * @returns {void}\n     */\n    setLogFormatter(logFormatter) {\n        this.logFormatter =\n            logFormatter ??\n                new PowertoolsLogFormatter({ envVarsService: this.getEnvVarsService() });\n    }\n    /**\n     * If the `POWERTOOLS_DEV` env variable is set,\n     * it adds JSON indentation for pretty printing logs.\n     *\n     * @private\n     * @returns {void}\n     */\n    setLogIndentation() {\n        if (this.getEnvVarsService().isDevMode()) {\n            this.logIndentation = LogJsonIndent.PRETTY;\n        }\n    }\n    /**\n     * It configures the Logger instance settings that will affect the Logger's behaviour\n     * and the content of all logs.\n     *\n     * @private\n     * @param options Options to configure the Logger instance\n     */\n    setOptions(options) {\n        const { logLevel, serviceName, sampleRateValue, logFormatter, persistentKeys, persistentLogAttributes, // deprecated in favor of persistentKeys\n        environment, } = options;\n        if (persistentLogAttributes && persistentKeys) {\n            this.warn('Both persistentLogAttributes and persistentKeys options were provided. Using persistentKeys as persistentLogAttributes is deprecated and will be removed in future releases');\n        }\n        // configurations that affect log content\n        this.setPowertoolsLogData(serviceName, environment, persistentKeys || persistentLogAttributes);\n        // configurations that affect Logger behavior\n        this.setLogEvent();\n        this.setInitialLogLevel(logLevel);\n        this.setInitialSampleRate(sampleRateValue);\n        // configurations that affect how logs are printed\n        this.setLogFormatter(logFormatter);\n        this.setConsole();\n        this.setLogIndentation();\n        return this;\n    }\n    /**\n     * It adds important data to the Logger instance that will affect the content of all logs.\n     *\n     * @param {string} serviceName\n     * @param {Environment} environment\n     * @param {LogAttributes} persistentLogAttributes\n     * @private\n     * @returns {void}\n     */\n    setPowertoolsLogData(serviceName, environment, persistentLogAttributes = {}) {\n        this.addToPowertoolsLogData({\n            awsRegion: this.getEnvVarsService().getAwsRegion(),\n            environment: environment ||\n                this.getCustomConfigService()?.getCurrentEnvironment() ||\n                this.getEnvVarsService().getCurrentEnvironment(),\n            serviceName: serviceName ||\n                this.getCustomConfigService()?.getServiceName() ||\n                this.getEnvVarsService().getServiceName() ||\n                this.getDefaultServiceName(),\n        });\n        this.appendPersistentKeys(persistentLogAttributes);\n    }\n}\nexport { Logger };\n", "import { EnvironmentVariablesService as CommonEnvironmentVariablesService } from '@aws-lambda-powertools/commons';\n/**\n * Class EnvironmentVariablesService\n *\n * This class is used to return environment variables that are available in the runtime of\n * the current Lambda invocation.\n * These variables can be a mix of runtime environment variables set by AWS and\n * variables that can be set by the developer additionally.\n *\n * @class\n * @extends {CommonEnvironmentVariablesService}\n * @implements {ConfigServiceInterface}\n * @see https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime\n * @see https://docs.powertools.aws.dev/lambda/typescript/latest/#environment-variables\n */\nclass EnvironmentVariablesService extends CommonEnvironmentVariablesService {\n    // Reserved environment variables\n    awsLogLevelVariable = 'AWS_LAMBDA_LOG_LEVEL';\n    awsRegionVariable = 'AWS_REGION';\n    currentEnvironmentVariable = 'ENVIRONMENT';\n    functionNameVariable = 'AWS_LAMBDA_FUNCTION_NAME';\n    functionVersionVariable = 'AWS_LAMBDA_FUNCTION_VERSION';\n    logEventVariable = 'POWERTOOLS_LOGGER_LOG_EVENT';\n    logLevelVariable = 'POWERTOOLS_LOG_LEVEL';\n    logLevelVariableLegacy = 'LOG_LEVEL';\n    memoryLimitInMBVariable = 'AWS_LAMBDA_FUNCTION_MEMORY_SIZE';\n    sampleRateValueVariable = 'POWERTOOLS_LOGGER_SAMPLE_RATE';\n    tzVariable = 'TZ';\n    /**\n     * It returns the value of the `AWS_LAMBDA_LOG_LEVEL` environment variable.\n     *\n     * The `AWS_LAMBDA_LOG_LEVEL` environment variable is set by AWS Lambda when configuring\n     * the function's log level using the Advanced Logging Controls feature. This value always\n     * takes precedence over other means of configuring the log level.\n     *\n     * @note we need to map the `FATAL` log level to `CRITICAL`, see {@link https://docs.aws.amazon.com/lambda/latest/dg/configuration-logging.html#configuration-logging-log-levels AWS Lambda Log Levels}.\n     *\n     * @returns {string}\n     */\n    getAwsLogLevel() {\n        const awsLogLevelVariable = this.get(this.awsLogLevelVariable);\n        return awsLogLevelVariable === 'FATAL' ? 'CRITICAL' : awsLogLevelVariable;\n    }\n    /**\n     * It returns the value of the AWS_REGION environment variable.\n     *\n     * @returns {string}\n     */\n    getAwsRegion() {\n        return this.get(this.awsRegionVariable);\n    }\n    /**\n     * It returns the value of the ENVIRONMENT environment variable.\n     *\n     * @returns {string}\n     */\n    getCurrentEnvironment() {\n        return this.get(this.currentEnvironmentVariable);\n    }\n    /**\n     * It returns the value of the AWS_LAMBDA_FUNCTION_MEMORY_SIZE environment variable.\n     *\n     * @returns {string}\n     */\n    getFunctionMemory() {\n        const value = this.get(this.memoryLimitInMBVariable);\n        return Number(value);\n    }\n    /**\n     * It returns the value of the AWS_LAMBDA_FUNCTION_NAME environment variable.\n     *\n     * @returns {string}\n     */\n    getFunctionName() {\n        return this.get(this.functionNameVariable);\n    }\n    /**\n     * It returns the value of the AWS_LAMBDA_FUNCTION_VERSION environment variable.\n     *\n     * @returns {string}\n     */\n    getFunctionVersion() {\n        return this.get(this.functionVersionVariable);\n    }\n    /**\n     * It returns the value of the POWERTOOLS_LOGGER_LOG_EVENT environment variable.\n     *\n     * @returns {boolean}\n     */\n    getLogEvent() {\n        const value = this.get(this.logEventVariable);\n        return this.isValueTrue(value);\n    }\n    /**\n     * It returns the value of the `POWERTOOLS_LOG_LEVEL, or `LOG_LEVEL` (legacy) environment variables\n     * when the first one is not set.\n     *\n     * @note The `LOG_LEVEL` environment variable is considered legacy and will be removed in a future release.\n     * @note The `AWS_LAMBDA_LOG_LEVEL` environment variable always takes precedence over the ones above.\n     *\n     * @returns {string}\n     */\n    getLogLevel() {\n        const logLevelVariable = this.get(this.logLevelVariable);\n        const logLevelVariableAlias = this.get(this.logLevelVariableLegacy);\n        return logLevelVariable !== '' ? logLevelVariable : logLevelVariableAlias;\n    }\n    /**\n     * It returns the value of the POWERTOOLS_LOGGER_SAMPLE_RATE environment variable.\n     *\n     * @returns {number|undefined}\n     */\n    getSampleRateValue() {\n        const value = this.get(this.sampleRateValueVariable);\n        return value && value.length > 0 ? Number(value) : undefined;\n    }\n    /**\n     * It returns the value of the `TZ` environment variable or `UTC` if it is not set.\n     *\n     * @returns {string}\n     */\n    getTimezone() {\n        const value = this.get(this.tzVariable);\n        return value.length > 0 ? value : 'UTC';\n    }\n}\nexport { EnvironmentVariablesService };\n", "/**\n * The indent level for JSON logs.\n *\n * By default Logger will use the `LogJsonIndent.COMPACT` indent level, which\n * produces logs on a single line. This is the most efficient option for\n * CloudWatch Logs.\n *\n * When enabling the `POWERTOOLS_DEV` environment variable, Logger will use the\n * `LogJsonIndent.PRETTY` indent level, which indents the JSON logs for easier\n * reading.\n */\nconst LogJsonIndent = {\n    PRETTY: 4,\n    COMPACT: 0,\n};\nexport { LogJsonIndent };\n", "/**\n * This class defines and implements common methods for the formatting of log attributes.\n *\n * @class\n * @abstract\n * @implements {LogFormatterInterface}\n */\nclass LogFormatter {\n    /**\n     * EnvironmentVariablesService instance.\n     * If set, it allows to access environment variables.\n     */\n    envVarsService;\n    constructor(options) {\n        this.envVarsService = options?.envVarsService;\n    }\n    /**\n     * It formats a given Error parameter.\n     *\n     * @param {Error} error\n     * @returns {LogAttributes}\n     */\n    formatError(error) {\n        return {\n            name: error.name,\n            location: this.getCodeLocation(error.stack),\n            message: error.message,\n            stack: error.stack,\n            cause: error.cause instanceof Error\n                ? this.formatError(error.cause)\n                : error.cause,\n        };\n    }\n    /**\n     * Formats a given date into an ISO 8601 string, considering the configured timezone.\n     * If `envVarsService` is set and the configured timezone differs from 'UTC',\n     * the date is formatted to that timezone. Otherwise, it defaults to 'UTC'.\n     *\n     * @param {Date} now\n     * @returns {string}\n     */\n    formatTimestamp(now) {\n        const defaultTimezone = 'UTC';\n        /**\n         * If a specific timezone is configured and it's not the default `UTC`,\n         * format the timestamp with the appropriate timezone offset.\n         **/\n        const configuredTimezone = this.envVarsService?.getTimezone();\n        if (configuredTimezone && !configuredTimezone.includes(defaultTimezone))\n            return this.#generateISOTimestampWithOffset(now, configuredTimezone);\n        return now.toISOString();\n    }\n    /**\n     * It returns a string containing the location of an error, given a particular stack trace.\n     *\n     * @param stack\n     * @returns {string}\n     */\n    getCodeLocation(stack) {\n        if (!stack) {\n            return '';\n        }\n        const stackLines = stack.split('\\n');\n        const regex = /\\(([^)]*?):(\\d+?):(\\d+?)\\)\\\\?$/;\n        let i;\n        for (i = 0; i < stackLines.length; i++) {\n            const match = regex.exec(stackLines[i]);\n            if (Array.isArray(match)) {\n                return `${match[1]}:${Number(match[2])}`;\n            }\n        }\n        return '';\n    }\n    /**\n     * Generates a new Intl.DateTimeFormat object configured with the specified time zone\n     * and formatting options. The time is displayed in 24-hour format (hour12: false).\n     *\n     * @param {string} timeZone - the IANA time zone identifier (e.g., \"Asia/Dhaka\").\n     */\n    #getDateFormatter = (timeZone) => {\n        const twoDigitFormatOption = '2-digit';\n        return new Intl.DateTimeFormat('en', {\n            year: 'numeric',\n            month: twoDigitFormatOption,\n            day: twoDigitFormatOption,\n            hour: twoDigitFormatOption,\n            minute: twoDigitFormatOption,\n            second: twoDigitFormatOption,\n            hour12: false,\n            timeZone,\n        });\n    };\n    /**\n     * Generates an ISO 8601 timestamp string with the specified time zone and the local time zone offset.\n     *\n     * @param {Date} date - the date to format\n     * @param {string} timeZone - the IANA time zone identifier (e.g., \"Asia/Dhaka\").\n     */\n    #generateISOTimestampWithOffset(date, timeZone) {\n        const { year, month, day, hour, minute, second } = this.#getDateFormatter(timeZone)\n            .formatToParts(date)\n            .reduce((acc, item) => {\n            acc[item.type] = item.value;\n            return acc;\n        }, {});\n        const datePart = `${year}-${month}-${day}T${hour}:${minute}:${second}`;\n        const offset = -date.getTimezoneOffset();\n        const offsetSign = offset >= 0 ? '+' : '-';\n        const offsetHours = Math.abs(Math.floor(offset / 60))\n            .toString()\n            .padStart(2, '0');\n        const offsetMinutes = Math.abs(offset % 60)\n            .toString()\n            .padStart(2, '0');\n        const millisecondPart = date.getMilliseconds().toString().padStart(3, '0');\n        const offsetPart = `${offsetSign}${offsetHours}:${offsetMinutes}`;\n        return `${datePart}.${millisecondPart}${offsetPart}`;\n    }\n}\nexport { LogFormatter };\n", "import merge from 'lodash.merge';\nclass LogItem {\n    attributes = {};\n    constructor(params) {\n        // Add attributes in the log item in this order:\n        // - Base attributes supported by the Powertool by default\n        // - Persistent attributes provided by developer, not formatted (done later)\n        // - Ephemeral attributes provided as parameters for a single log item (done later)\n        this.addAttributes(params.attributes);\n    }\n    addAttributes(attributes) {\n        merge(this.attributes, attributes);\n        return this;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    prepareForPrint() {\n        this.setAttributes(this.removeEmptyKeys(this.getAttributes()));\n    }\n    removeEmptyKeys(attributes) {\n        const newAttributes = {};\n        for (const key in attributes) {\n            if (attributes[key] !== undefined &&\n                attributes[key] !== '' &&\n                attributes[key] !== null) {\n                newAttributes[key] = attributes[key];\n            }\n        }\n        return newAttributes;\n    }\n    setAttributes(attributes) {\n        this.attributes = attributes;\n    }\n}\nexport { LogItem };\n", "import { LogFormatter } from './LogFormatter.js';\nimport { LogItem } from './LogItem.js';\n/**\n * This class is used to transform a set of log key-value pairs\n * in the Powertools for AWS Lambda default structure log format.\n *\n * @class\n * @extends {LogFormatter}\n */\nclass PowertoolsLogFormatter extends LogFormatter {\n    /**\n     * It formats key-value pairs of log attributes.\n     *\n     * @param {UnformattedAttributes} attributes\n     * @param {LogAttributes} additionalLogAttributes\n     * @returns {LogItem}\n     */\n    formatAttributes(attributes, additionalLogAttributes) {\n        const baseAttributes = {\n            cold_start: attributes.lambdaContext?.coldStart,\n            function_arn: attributes.lambdaContext?.invokedFunctionArn,\n            function_memory_size: attributes.lambdaContext?.memoryLimitInMB,\n            function_name: attributes.lambdaContext?.functionName,\n            function_request_id: attributes.lambdaContext?.awsRequestId,\n            level: attributes.logLevel,\n            message: attributes.message,\n            sampling_rate: attributes.sampleRateValue,\n            service: attributes.serviceName,\n            timestamp: this.formatTimestamp(attributes.timestamp),\n            xray_trace_id: attributes.xRayTraceId,\n        };\n        const powertoolsLogItem = new LogItem({ attributes: baseAttributes });\n        powertoolsLogItem.addAttributes(additionalLogAttributes);\n        return powertoolsLogItem;\n    }\n}\nexport { PowertoolsLogFormatter };\n", "import { Console } from 'node:console';\nimport { Utility } from '@aws-lambda-powertools/commons';\nimport { EnvironmentVariablesService } from './config/EnvironmentVariablesService.js';\nimport { MAX_DIMENSION_COUNT, MAX_METRICS_SIZE, DEFAULT_NAMESPACE, COLD_START_METRIC, MAX_METRIC_VALUES_SIZE, MetricUnit as MetricUnits, MetricResolution as MetricResolutions, } from './constants.js';\n/**\n * ## Intro\n * Metrics creates custom metrics asynchronously by logging metrics to standard output following Amazon CloudWatch Embedded Metric Format (EMF).\n *\n * These metrics can be visualized through Amazon CloudWatch Console.\n *\n * ## Key features\n *   * Aggregate up to 100 metrics using a single CloudWatch EMF object (large JSON blob)\n *   * Validate against common metric definitions mistakes (metric unit, values, max dimensions, max metrics, etc)\n *   * Metrics are created asynchronously by CloudWatch service, no custom stacks needed\n *   * Context manager to create a one off metric with a different dimension\n *\n * ## Usage\n *\n * ### Functions usage with middleware\n *\n * Using this middleware on your handler function will automatically flush metrics after the function returns or throws an error.\n * Additionally, you can configure the middleware to easily:\n * * ensure that at least one metric is emitted before you flush them\n * * capture a `ColdStart` a metric\n * * set default dimensions for all your metrics\n *\n * @example\n * ```typescript\n * import { Metrics } from '@aws-lambda-powertools/metrics';\n * import { logMetrics } from '@aws-lambda-powertools/metrics/middleware';\n * import middy from '@middy/core';\n *\n * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n *\n * const lambdaHandler = async (_event: unknown, _context: unknown) => {\n *   ...\n * };\n *\n * export const handler = middy(lambdaHandler).use(logMetrics(metrics));\n * ```\n *\n * ### Object oriented way with decorator\n *\n * If you are used to TypeScript Class usage to encapsulate your Lambda handler you can leverage the [@metrics.logMetrics()](./_aws_lambda_powertools_metrics.Metrics.html#logMetrics) decorator to automatically:\n *   * capture a `ColdStart` metric\n *   * flush buffered metrics\n *   * throw on empty metrics\n *\n * @example\n *\n * ```typescript\n * import { Metrics, MetricUnit } from '@aws-lambda-powertools/metrics';\n * import type { LambdaInterface } from '@aws-lambda-powertools/commons/types';\n *\n * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n *\n * class Lambda implements LambdaInterface {\n *   // Decorate your handler with the logMetrics decorator\n *   \u2063@metrics.logMetrics({ captureColdStartMetric: true, throwOnEmptyMetrics: true })\n *   public handler(_event: unknown, _context: unknown): Promise<void> {\n *     // ...\n *     metrics.addMetric('test-metric', MetricUnit.Count, 10);\n *     // ...\n *   }\n * }\n *\n * const handlerClass = new Lambda();\n * export const handler = handlerClass.handler.bind(handlerClass);\n * ```\n *\n * ### Standard function\n *\n * If you are used to classic JavaScript functions, you can leverage the different methods provided to create and publish metrics.\n *\n * @example\n *\n * ```typescript\n * import { Metrics, MetricUnit } from '@aws-lambda-powertools/metrics';\n *\n * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n *\n * export const handler = async (_event: unknown, __context: unknown): Promise<void> => {\n *   metrics.captureColdStartMetric();\n *   metrics.addMetric('test-metric', MetricUnit.Count, 10);\n *   metrics.publishStoredMetrics();\n * };\n * ```\n */\nclass Metrics extends Utility {\n    /**\n     * Console instance used to print logs.\n     *\n     * In AWS Lambda, we create a new instance of the Console class so that we can have\n     * full control over the output of the logs. In testing environments, we use the\n     * default console instance.\n     *\n     * This property is initialized in the constructor in setOptions().\n     *\n     * @private\n     */\n    console;\n    customConfigService;\n    defaultDimensions = {};\n    dimensions = {};\n    envVarsService;\n    functionName;\n    isSingleMetric = false;\n    metadata = {};\n    namespace;\n    shouldThrowOnEmptyMetrics = false;\n    storedMetrics = {};\n    constructor(options = {}) {\n        super();\n        this.dimensions = {};\n        this.setOptions(options);\n    }\n    /**\n     * Add a dimension to the metrics.\n     *\n     * A dimension is a key-value pair that is used to group metrics.\n     *\n     * @see https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension for more details.\n     * @param name\n     * @param value\n     */\n    addDimension(name, value) {\n        if (MAX_DIMENSION_COUNT <= this.getCurrentDimensionsCount()) {\n            throw new RangeError(`The number of metric dimensions must be lower than ${MAX_DIMENSION_COUNT}`);\n        }\n        this.dimensions[name] = value;\n    }\n    /**\n     * Add multiple dimensions to the metrics.\n     *\n     * A dimension is a key-value pair that is used to group metrics.\n     *\n     * @param dimensions A key-value pair of dimensions\n     */\n    addDimensions(dimensions) {\n        const newDimensions = { ...this.dimensions };\n        Object.keys(dimensions).forEach((dimensionName) => {\n            newDimensions[dimensionName] = dimensions[dimensionName];\n        });\n        if (Object.keys(newDimensions).length > MAX_DIMENSION_COUNT) {\n            throw new RangeError(`Unable to add ${Object.keys(dimensions).length} dimensions: the number of metric dimensions must be lower than ${MAX_DIMENSION_COUNT}`);\n        }\n        this.dimensions = newDimensions;\n    }\n    /**\n     * A high-cardinality data part of your Metrics log.\n     *\n     * This is useful when you want to search highly contextual information along with your metrics in your logs.\n     *\n     * @param key The key of the metadata\n     * @param value The value of the metadata\n     */\n    addMetadata(key, value) {\n        this.metadata[key] = value;\n    }\n    /**\n     * Add a metric to the metrics buffer.\n     *\n     * By default, metrics are buffered and flushed at the end of the Lambda invocation\n     * or when calling {@link Metrics.publishStoredMetrics}.\n     *\n     * You can add a metric by specifying the metric name, unit, and value. For convenience,\n     * we provide a set of constants for the most common units in {@link MetricUnit}.\n     *\n     * @example\n     * ```typescript\n     * import { Metrics, MetricUnit } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n     *\n     * metrics.addMetric('successfulBooking', MetricUnit.Count, 1);\n     * ```\n     *\n     * Optionally, you can specify the metric resolution, which can be either `High` or `Standard`.\n     * By default, metrics are published with a resolution of `Standard`, click [here](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Resolution_definition)\n     * to learn more about metric resolutions.\n     *\n     * @example\n     * ```typescript\n     * import { Metrics, MetricUnit, MetricResolution } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n     *\n     * metrics.addMetric('successfulBooking', MetricUnit.Count, 1, MetricResolution.High);\n     * ```\n     *\n     * @param name - The metric name\n     * @param unit - The metric unit\n     * @param value - The metric value\n     * @param resolution - The metric resolution\n     */\n    addMetric(name, unit, value, resolution = MetricResolutions.Standard) {\n        this.storeMetric(name, unit, value, resolution);\n        if (this.isSingleMetric)\n            this.publishStoredMetrics();\n    }\n    /**\n     * Create a singleMetric to capture cold start.\n     *\n     * If it's a cold start invocation, this feature will:\n     *   * Create a separate EMF blob that contains a single metric named ColdStart\n     *   * Add function_name and service dimensions\n     *\n     * This has the advantage of keeping cold start metric separate from your application metrics, where you might have unrelated dimensions,\n     * as well as avoiding potential data loss from metrics not being published for other reasons.\n     *\n     * @example\n     * ```typescript\n     * import { Metrics } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n     *\n     * export const handler = async (_event: unknown, __context: unknown): Promise<void> => {\n     *     metrics.captureColdStartMetric();\n     * };\n     * ```\n     */\n    captureColdStartMetric() {\n        if (!this.isColdStart())\n            return;\n        const singleMetric = this.singleMetric();\n        if (this.defaultDimensions.service) {\n            singleMetric.setDefaultDimensions({\n                service: this.defaultDimensions.service,\n            });\n        }\n        if (this.functionName != null) {\n            singleMetric.addDimension('function_name', this.functionName);\n        }\n        singleMetric.addMetric(COLD_START_METRIC, MetricUnits.Count, 1);\n    }\n    /**\n     * Clear all default dimensions.\n     */\n    clearDefaultDimensions() {\n        this.defaultDimensions = {};\n    }\n    /**\n     * Clear all dimensions.\n     */\n    clearDimensions() {\n        this.dimensions = {};\n    }\n    /**\n     * Clear all metadata.\n     */\n    clearMetadata() {\n        this.metadata = {};\n    }\n    /**\n     * Clear all the metrics stored in the buffer.\n     */\n    clearMetrics() {\n        this.storedMetrics = {};\n    }\n    /**\n     * A decorator automating coldstart capture, throw on empty metrics and publishing metrics on handler exit.\n     *\n     * @example\n     *\n     * ```typescript\n     * import { Metrics } from '@aws-lambda-powertools/metrics';\n     * import type { LambdaInterface } from '@aws-lambda-powertools/commons/types';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' });\n     *\n     * class Lambda implements LambdaInterface {\n     *   @metrics.logMetrics({ captureColdStartMetric: true })\n     *   public handler(_event: unknown, __context: unknown): Promise<void> {\n     *     // ...\n     *   }\n     * }\n     *\n     * const handlerClass = new Lambda();\n     * export const handler = handlerClass.handler.bind(handlerClass);\n     * ```\n     *\n     * @decorator Class\n     */\n    logMetrics(options = {}) {\n        const { throwOnEmptyMetrics, defaultDimensions, captureColdStartMetric } = options;\n        if (throwOnEmptyMetrics) {\n            this.throwOnEmptyMetrics();\n        }\n        if (defaultDimensions !== undefined) {\n            this.setDefaultDimensions(defaultDimensions);\n        }\n        return (_target, _propertyKey, descriptor) => {\n            /**\n             * The descriptor.value is the method this decorator decorates, it cannot be undefined.\n             */\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const originalMethod = descriptor.value;\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const metricsRef = this;\n            // Use a function() {} instead of an () => {} arrow function so that we can\n            // access `myClass` as `this` in a decorated `myClass.myMethod()`.\n            descriptor.value = async function (event, context, callback) {\n                metricsRef.functionName = context.functionName;\n                if (captureColdStartMetric)\n                    metricsRef.captureColdStartMetric();\n                let result;\n                try {\n                    result = await originalMethod.apply(this, [event, context, callback]);\n                }\n                catch (error) {\n                    throw error;\n                }\n                finally {\n                    metricsRef.publishStoredMetrics();\n                }\n                return result;\n            };\n            return descriptor;\n        };\n    }\n    /**\n     * Synchronous function to actually publish your metrics. (Not needed if using logMetrics decorator).\n     * It will create a new EMF blob and log it to standard output to be then ingested by Cloudwatch logs and processed automatically for metrics creation.\n     *\n     * @example\n     *\n     * ```typescript\n     * import { Metrics, MetricUnit } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName: 'orders' }); // Sets metric namespace, and service as a metric dimension\n     *\n     * export const handler = async (_event: unknown, __context: unknown): Promise<void> => {\n     *   metrics.addMetric('test-metric', MetricUnit.Count, 10);\n     *   metrics.publishStoredMetrics();\n     * };\n     * ```\n     */\n    publishStoredMetrics() {\n        if (!this.shouldThrowOnEmptyMetrics &&\n            Object.keys(this.storedMetrics).length === 0) {\n            console.warn('No application metrics to publish. The cold-start metric may be published if enabled. ' +\n                'If application metrics should never be empty, consider using `throwOnEmptyMetrics`');\n        }\n        const target = this.serializeMetrics();\n        this.console.log(JSON.stringify(target));\n        this.clearMetrics();\n        this.clearDimensions();\n        this.clearMetadata();\n    }\n    /**\n     * Function to create a new metric object compliant with the EMF (Embedded Metric Format) schema which\n     * includes the metric name, unit, and optionally storage resolution.\n     *\n     * The function will create a new EMF blob and log it to standard output to be then ingested by Cloudwatch\n     * logs and processed automatically for metrics creation.\n     *\n     * @returns metrics as JSON object compliant EMF Schema Specification\n     * @see https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Embedded_Metric_Format_Specification.html for more details\n     */\n    serializeMetrics() {\n        // Storage resolution is included only for High resolution metrics\n        const metricDefinitions = Object.values(this.storedMetrics).map((metricDefinition) => ({\n            Name: metricDefinition.name,\n            Unit: metricDefinition.unit,\n            ...(metricDefinition.resolution === MetricResolutions.High\n                ? { StorageResolution: metricDefinition.resolution }\n                : {}),\n        }));\n        if (metricDefinitions.length === 0 && this.shouldThrowOnEmptyMetrics) {\n            throw new RangeError('The number of metrics recorded must be higher than zero');\n        }\n        if (!this.namespace)\n            console.warn('Namespace should be defined, default used');\n        // We reduce the stored metrics to a single object with the metric\n        // name as the key and the value as the value.\n        const metricValues = Object.values(this.storedMetrics).reduce((result, { name, value }) => {\n            result[name] = value;\n            return result;\n        }, {});\n        const dimensionNames = [\n            ...new Set([\n                ...Object.keys(this.defaultDimensions),\n                ...Object.keys(this.dimensions),\n            ]),\n        ];\n        return {\n            _aws: {\n                Timestamp: new Date().getTime(),\n                CloudWatchMetrics: [\n                    {\n                        Namespace: this.namespace || DEFAULT_NAMESPACE,\n                        Dimensions: [dimensionNames],\n                        Metrics: metricDefinitions,\n                    },\n                ],\n            },\n            ...this.defaultDimensions,\n            ...this.dimensions,\n            ...metricValues,\n            ...this.metadata,\n        };\n    }\n    /**\n     * Sets default dimensions that will be added to all metrics.\n     *\n     * @param dimensions The default dimensions to be added to all metrics.\n     */\n    setDefaultDimensions(dimensions) {\n        const targetDimensions = {\n            ...this.defaultDimensions,\n            ...dimensions,\n        };\n        if (MAX_DIMENSION_COUNT <= Object.keys(targetDimensions).length) {\n            throw new Error('Max dimension count hit');\n        }\n        this.defaultDimensions = targetDimensions;\n    }\n    /**\n     * Sets the function name to be added to the metric.\n     *\n     * @param value The function name to be added to the metric.\n     */\n    setFunctionName(value) {\n        this.functionName = value;\n    }\n    /**\n     * CloudWatch EMF uses the same dimensions across all your metrics. Use singleMetric if you have a metric that should have different dimensions.\n     *\n     * You don't need to call publishStoredMetrics() after calling addMetric for a singleMetrics, they will be flushed directly.\n     *\n     * @example\n     *\n     * ```typescript\n     * const singleMetric = metrics.singleMetric();\n     * singleMetric.addDimension('InnerDimension', 'true');\n     * singleMetric.addMetric('single-metric', MetricUnit.Percent, 50);\n     * ```\n     *\n     * @returns the Metrics\n     */\n    singleMetric() {\n        return new Metrics({\n            namespace: this.namespace,\n            serviceName: this.dimensions.service,\n            defaultDimensions: this.defaultDimensions,\n            singleMetric: true,\n        });\n    }\n    /**\n     * Throw an Error if the metrics buffer is empty.\n     *\n     * @example\n     *\n     * ```typescript\n     * import { Metrics } from '@aws-lambda-powertools/metrics';\n     *\n     * const metrics = new Metrics({ namespace: 'serverlessAirline', serviceName:'orders' });\n     *\n     * export const handler = async (_event: unknown, __context: unknown): Promise<void> => {\n     *     metrics.throwOnEmptyMetrics();\n     *     metrics.publishStoredMetrics(); // will throw since no metrics added.\n     * };\n     * ```\n     */\n    throwOnEmptyMetrics() {\n        this.shouldThrowOnEmptyMetrics = true;\n    }\n    /**\n     * Gets the current number of dimensions stored.\n     *\n     * @returns the number of dimensions currently stored\n     */\n    getCurrentDimensionsCount() {\n        return (Object.keys(this.dimensions).length +\n            Object.keys(this.defaultDimensions).length);\n    }\n    /**\n     * Gets the custom config service if it exists.\n     *\n     * @returns the custom config service if it exists, undefined otherwise\n     */\n    getCustomConfigService() {\n        return this.customConfigService;\n    }\n    /**\n     * Gets the environment variables service.\n     *\n     * @returns the environment variables service\n     */\n    getEnvVarsService() {\n        return this.envVarsService;\n    }\n    /**\n     * Checks if a metric is new or not.\n     *\n     * A metric is considered new if there is no metric with the same name already stored.\n     *\n     * When a metric is not new, we also check if the unit is consistent with the stored metric with\n     * the same name. If the units are inconsistent, we throw an error as this is likely a bug or typo.\n     * This can happen if a metric is added without using the `MetricUnit` helper in JavaScript codebases.\n     *\n     * @param name The name of the metric\n     * @param unit The unit of the metric\n     * @returns true if the metric is new, false if another metric with the same name already exists\n     */\n    isNewMetric(name, unit) {\n        if (this.storedMetrics[name]) {\n            if (this.storedMetrics[name].unit !== unit) {\n                const currentUnit = this.storedMetrics[name].unit;\n                throw new Error(`Metric \"${name}\" has already been added with unit \"${currentUnit}\", but we received unit \"${unit}\". Did you mean to use metric unit \"${currentUnit}\"?`);\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * It initializes console property as an instance of the internal version of Console() class (PR #748)\n     * or as the global node console if the `POWERTOOLS_DEV' env variable is set and has truthy value.\n     *\n     * @private\n     * @returns {void}\n     */\n    setConsole() {\n        if (!this.getEnvVarsService().isDevMode()) {\n            this.console = new Console({\n                stdout: process.stdout,\n                stderr: process.stderr,\n            });\n        }\n        else {\n            this.console = console;\n        }\n    }\n    /**\n     * Sets the custom config service to be used.\n     *\n     * @param customConfigService The custom config service to be used\n     */\n    setCustomConfigService(customConfigService) {\n        this.customConfigService = customConfigService\n            ? customConfigService\n            : undefined;\n    }\n    /**\n     * Sets the environment variables service to be used.\n     */\n    setEnvVarsService() {\n        this.envVarsService = new EnvironmentVariablesService();\n    }\n    /**\n     * Sets the namespace to be used.\n     *\n     * @param namespace The namespace to be used\n     */\n    setNamespace(namespace) {\n        this.namespace = (namespace ||\n            this.getCustomConfigService()?.getNamespace() ||\n            this.getEnvVarsService().getNamespace());\n    }\n    /**\n     * Sets the options to be used by the Metrics instance.\n     *\n     * This method is used during the initialization of the Metrics instance.\n     *\n     * @param options The options to be used\n     * @returns the Metrics instance\n     */\n    setOptions(options) {\n        const { customConfigService, namespace, serviceName, singleMetric, defaultDimensions, } = options;\n        this.setEnvVarsService();\n        this.setConsole();\n        this.setCustomConfigService(customConfigService);\n        this.setNamespace(namespace);\n        this.setService(serviceName);\n        this.setDefaultDimensions(defaultDimensions);\n        this.isSingleMetric = singleMetric || false;\n        return this;\n    }\n    /**\n     * Sets the service to be used.\n     *\n     * @param service The service to be used\n     */\n    setService(service) {\n        const targetService = (service ||\n            this.getCustomConfigService()?.getServiceName() ||\n            this.getEnvVarsService().getServiceName()) ||\n            this.getDefaultServiceName();\n        if (targetService.length > 0) {\n            this.setDefaultDimensions({ service: targetService });\n        }\n    }\n    /**\n     * Stores a metric in the buffer.\n     *\n     * If the buffer is full, or the metric reaches the maximum number of values,\n     * the buffer is published to stdout.\n     *\n     * @param name The name of the metric to store\n     * @param unit The unit of the metric to store\n     * @param value The value of the metric to store\n     * @param resolution The resolution of the metric to store\n     */\n    storeMetric(name, unit, value, resolution) {\n        if (Object.keys(this.storedMetrics).length >= MAX_METRICS_SIZE) {\n            this.publishStoredMetrics();\n        }\n        if (this.isNewMetric(name, unit)) {\n            this.storedMetrics[name] = {\n                unit,\n                value,\n                name,\n                resolution,\n            };\n        }\n        else {\n            const storedMetric = this.storedMetrics[name];\n            if (!Array.isArray(storedMetric.value)) {\n                storedMetric.value = [storedMetric.value];\n            }\n            storedMetric.value.push(value);\n            if (storedMetric.value.length === MAX_METRIC_VALUES_SIZE) {\n                this.publishStoredMetrics();\n            }\n        }\n    }\n}\nexport { Metrics };\n", "import { EnvironmentVariablesService as CommonEnvironmentVariablesService } from '@aws-lambda-powertools/commons';\nclass EnvironmentVariablesService extends CommonEnvironmentVariablesService {\n    namespaceVariable = 'POWERTOOLS_METRICS_NAMESPACE';\n    /**\n     * It returns the value of the POWERTOOLS_METRICS_NAMESPACE environment variable.\n     *\n     * @returns {string}\n     */\n    getNamespace() {\n        return this.get(this.namespaceVariable);\n    }\n}\nexport { EnvironmentVariablesService };\n", "const COLD_START_METRIC = 'ColdStart';\nconst DEFAULT_NAMESPACE = 'default_namespace';\nconst MAX_METRICS_SIZE = 100;\nconst MAX_METRIC_VALUES_SIZE = 100;\nconst MAX_DIMENSION_COUNT = 29;\nconst MetricUnit = {\n    Seconds: 'Seconds',\n    Microseconds: 'Microseconds',\n    Milliseconds: 'Milliseconds',\n    Bytes: 'Bytes',\n    Kilobytes: 'Kilobytes',\n    Megabytes: 'Megabytes',\n    Gigabytes: 'Gigabytes',\n    Terabytes: 'Terabytes',\n    Bits: 'Bits',\n    Kilobits: 'Kilobits',\n    Megabits: 'Megabits',\n    Gigabits: 'Gigabits',\n    Terabits: 'Terabits',\n    Percent: 'Percent',\n    Count: 'Count',\n    BytesPerSecond: 'Bytes/Second',\n    KilobytesPerSecond: 'Kilobytes/Second',\n    MegabytesPerSecond: 'Megabytes/Second',\n    GigabytesPerSecond: 'Gigabytes/Second',\n    TerabytesPerSecond: 'Terabytes/Second',\n    BitsPerSecond: 'Bits/Second',\n    KilobitsPerSecond: 'Kilobits/Second',\n    MegabitsPerSecond: 'Megabits/Second',\n    GigabitsPerSecond: 'Gigabits/Second',\n    TerabitsPerSecond: 'Terabits/Second',\n    CountPerSecond: 'Count/Second',\n};\nconst MetricResolution = {\n    Standard: 60,\n    High: 1,\n};\nexport { COLD_START_METRIC, DEFAULT_NAMESPACE, MAX_METRICS_SIZE, MAX_METRIC_VALUES_SIZE, MAX_DIMENSION_COUNT, MetricUnit, MetricResolution, };\n", "import { Logger as DeployedLogger } from '@aws-lambda-powertools/logger';\nimport { Metrics } from '@aws-lambda-powertools/metrics';\n\nimport * as envConstants from \"./initConstants\";\n\nclass LocalLogger {\n\n    private _formatMessages(messages: unknown[]): string {\n        return messages.map(m =>\n            typeof m === 'object' ? JSON.stringify(m) : m\n        ).join(' ');\n    }\n\n    debug(...messages: unknown[]) {\n        console.log(`[DEBUG]:`, new Date().toISOString(), `:`, this._formatMessages(messages));\n    }\n\n    info(...messages: unknown[]) {\n        console.log(`[INFO]:`, new Date().toISOString(), `:`, this._formatMessages(messages));\n    }\n\n    error(...messages: unknown[]) {\n        console.error(`[ERROR]:`, new Date().toISOString(), `:`, this._formatMessages(messages));\n    }\n\n    warn(...messages: unknown[]) {\n        console.warn(`[WARNING]:`, new Date().toISOString(), `:`, this._formatMessages(messages));\n    }\n\n    addContext() {\n        // This method is intentionally left blank for compatibility with DeployedLogger\n    }\n}\n\nconst logger = envConstants.default.IS_DEPLOYED\n    ? new DeployedLogger({\n        persistentLogAttributes: {\n            aws_account_id: envConstants.default.ACCOUNT_ID,\n            aws_region: envConstants.default.REGION,\n        },\n    })\n    : new LocalLogger();\n\nconst metrics = new Metrics({\n    defaultDimensions: {\n        aws_account_id: envConstants.default.ACCOUNT_ID,\n        aws_region: envConstants.default.REGION\n    }\n});\n\n\nexport {\n    logger,\n    metrics\n};\n", "import { logger } from \"./utilities\";\nimport { readFileSync } from \"fs\";\nimport * as envConstants from \"./initConstants\";\nimport { getParametersByName } from \"@aws-lambda-powertools/parameters/ssm\";\nimport { SSMGetParametersByNameOptions } from \"@aws-lambda-powertools/parameters/ssm/types\";\n\nconst TTL_PARAM_CACHE = 300 // 5 minutes\nconst LOCAL_ENV_PATH = \"./.env\" // rom the perspective of an executing stack, align with rigid offline ssm location\n\n\nasync function _awsGetParameters(fullyQualifiedParamNames: Array<string>): Promise<Map<string, string>> {\n\n    logger.debug(\"Fetching following parameters from AWS: \", { params: fullyQualifiedParamNames });\n    const paramOptions: SSMGetParametersByNameOptions = { maxAge: TTL_PARAM_CACHE };\n    const props = fullyQualifiedParamNames.reduce((acc, param) => {\n        acc[param] = paramOptions;\n        return acc;\n    }, {} as Record<string, SSMGetParametersByNameOptions>);\n\n    const { _errors: errors, ...results } = await getParametersByName(props, {\n        throwOnError: false,\n        decrypt: true,\n    });\n\n    if (errors && errors.length) {\n        throw Error(`Unable to retrieve parameters: ${errors.join(',')}`);\n    }\n\n    const params: Map<string, string> = new Map();\n    for (const paramName of fullyQualifiedParamNames) {\n        if (results[paramName]) {\n            params.set(paramName, results[paramName] as string);\n        } else {\n            throw Error(`Parameter ${paramName} not found.`);\n        }\n    }\n\n    return params;\n\n}\n\nasync function _localGetParameters(fullyQualifiedParamNames: Array<string>): Promise<Map<string, string>> {\n\n    // Local deployment using params in .env file\n    logger.debug(\"Fetching following parameters from file (local mode): \", { params: fullyQualifiedParamNames });\n    const params = new Map<string, string>();\n    const lines = readFileSync(LOCAL_ENV_PATH, { encoding: \"utf-8\" }).trim().split(\"\\n\");\n\n    for (const line of lines) {\n        const firstEqualsIndex = line.indexOf('=');\n        if (firstEqualsIndex !== -1) {\n            const key = line.substring(0, firstEqualsIndex);\n            const value = line.substring(firstEqualsIndex + 1);\n            if (value && fullyQualifiedParamNames.includes(key)) {  // Only return params requested\n                params.set(key, value);\n            }\n        }\n    }\n\n    const paramsObject = Object.fromEntries(params);\n    logger.debug(\"Returning parameters: \" + JSON.stringify(paramsObject));  // Local only: sensitive values\n\n    return params;\n\n}\n\nasync function _getParameters(paramShortNames: Array<string>, service: string): Promise<Map<string, string>> {\n\n    const fullyQualifiedParamNames =\n        paramShortNames.map((paramName) => `/${service}/${envConstants.default.STAGE}/${paramName}`);\n\n    // TODO (NP): This is operating as a lambda-level cache (i.e. each lambda maintains its own cache)\n    // If we end up hitting our Parameter Store quota limits in AWS with this setup, we can create a *new* lambda\n    // that caches parameters and gets invoked by all other lambdas (i.e. a service-level parameter cache)\n    const shouldUseLocal = envConstants.default.IS_DEPLOYED !== true;  // Assuming it's set to either true or false\n\n    const getParametersFunction = shouldUseLocal ? _localGetParameters : _awsGetParameters\n\n    const result = await getParametersFunction(fullyQualifiedParamNames);\n\n    // For keys in response, use convenient param short name (as was passed to us)\n    const params = new Map<string, string>();\n    fullyQualifiedParamNames.forEach((fqParam, idx) => {\n        const paramShortName = paramShortNames[idx];\n        params.set(paramShortName, result.get(fqParam) as string);\n    });\n    logger.info(`Successfully fetched values from SSM for params ${Array.from(params.keys())}.`);\n\n    return params;\n\n}\n\n// supports getting a single or multiple parameters from a given service\n// TODO (NP): Figure out whether/how to make this service-agnostic\nasync function getParameters(params: string | Array<string>, service: string): Promise<Map<string, string>> {\n\n    if (typeof (params) === \"string\") {\n        params = new Array(params);\n    }\n    return _getParameters(params, service);\n}\n\nexport {\n    getParameters\n}\n\n", "const DEFAULT_MAX_AGE_SECS = 5;\nconst TRANSFORM_METHOD_JSON = 'json';\nconst TRANSFORM_METHOD_BINARY = 'binary';\nconst TRANSFORM_METHOD_AUTO = 'auto';\nconst APPCONFIG_TOKEN_EXPIRATION = 23 * 60 * 60 * 1000 + 45 * 60 * 1000; // 23 hrs 45 min\n/**\n * Transform methods for values retrieved by parameter providers.\n */\nconst Transform = {\n    /**\n     * Transform the retrieved value using `JSON.parse`.\n     */\n    JSON: TRANSFORM_METHOD_JSON,\n    /**\n     * Transform a base64-encoded value from `Uint8Array` to `string`.\n     */\n    BINARY: TRANSFORM_METHOD_BINARY,\n    /**\n     * Automatically detect the transform method based on the parameter' name suffix.\n     */\n    AUTO: TRANSFORM_METHOD_AUTO,\n};\nexport { APPCONFIG_TOKEN_EXPIRATION, DEFAULT_MAX_AGE_SECS, TRANSFORM_METHOD_JSON, TRANSFORM_METHOD_BINARY, TRANSFORM_METHOD_AUTO, Transform, };\n", "import { DEFAULT_MAX_AGE_SECS } from '../constants.js';\n/**\n * Options for the `get` method.\n *\n * It merges the default options with the provided options.\n */\nclass GetOptions {\n    forceFetch = false;\n    maxAge;\n    sdkOptions;\n    transform;\n    constructor(options = {}, envVarsService) {\n        Object.assign(this, options);\n        if (options.maxAge === undefined) {\n            this.maxAge =\n                envVarsService.getParametersMaxAge() ?? DEFAULT_MAX_AGE_SECS;\n        }\n    }\n}\nexport { GetOptions };\n", "import { GetOptions } from './GetOptions.js';\n/**\n * Options for the `getMultiple` method.\n *\n * Extends the `GetOptions` class and adds the `throwOnTransformError` option.\n */\nclass GetMultipleOptions extends GetOptions {\n    throwOnTransformError = false;\n    constructor(options = {}, envVarsService) {\n        super(options, envVarsService);\n        if (options.throwOnTransformError !== undefined) {\n            this.throwOnTransformError = options.throwOnTransformError;\n        }\n    }\n}\nexport { GetMultipleOptions };\n", "/**\n * Class to represent a value that can expire.\n *\n * Upon creation, the value is assigned a TTL (time to live) that is calculated\n * by adding the current time with the maximum age.\n */\nclass ExpirableValue {\n    ttl;\n    value;\n    /**\n     *\n     * @param value - Value to be cached\n     * @param maxAge - Maximum age in seconds for the value to be cached\n     */\n    constructor(value, maxAge) {\n        this.value = value;\n        const timeNow = new Date();\n        this.ttl = timeNow.setSeconds(timeNow.getSeconds() + maxAge);\n    }\n    /**\n     * Check if the value has expired.\n     *\n     * @returns {boolean} - True if the value has expired, false otherwise\n     */\n    isExpired() {\n        return this.ttl < Date.now();\n    }\n}\nexport { ExpirableValue };\n", "/**\n * Error thrown when a parameter cannot be retrieved.\n */\nclass GetParameterError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'GetParameterError';\n    }\n}\n/**\n * Error thrown when a transform fails.\n */\nclass TransformParameterError extends Error {\n    constructor(transform, message) {\n        super(message);\n        this.name = 'TransformParameterError';\n        this.message = `Unable to transform value using '${transform}' transform: ${message}`;\n    }\n}\nexport { GetParameterError, TransformParameterError };\n", "import { DEFAULT_MAX_AGE_SECS } from '../constants.js';\nimport { EnvironmentVariablesService as CommonEnvironmentVariablesService } from '@aws-lambda-powertools/commons';\nclass EnvironmentVariablesService extends CommonEnvironmentVariablesService {\n    // Environment variables\n    parametersMaxAgeVariable = 'POWERTOOLS_PARAMETERS_MAX_AGE';\n    ssmDecryptVariable = 'POWERTOOLS_PARAMETERS_SSM_DECRYPT';\n    /**\n     * It returns the value of the POWERTOOLS_PARAMETERS_MAX_AGE environment variable.\n     *\n     * @returns {number|undefined}\n     */\n    getParametersMaxAge() {\n        const maxAge = this.get(this.parametersMaxAgeVariable);\n        if (maxAge.length === 0)\n            return undefined;\n        const maxAgeAsNumber = parseInt(maxAge, 10);\n        if (isNaN(maxAgeAsNumber)) {\n            console.warn(`Invalid value for ${this.parametersMaxAgeVariable} environment variable: [${maxAge}], using default value of ${DEFAULT_MAX_AGE_SECS} seconds`);\n        }\n        else {\n            return maxAgeAsNumber;\n        }\n    }\n    /**\n     * It returns the value of the POWERTOOLS_PARAMETERS_SSM_DECRYPT environment variable.\n     *\n     * @returns {string}\n     */\n    getSSMDecrypt() {\n        return this.get(this.ssmDecryptVariable);\n    }\n}\nexport { EnvironmentVariablesService };\n", "const BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\n/**\n * Convert a base64 string to a Uint8Array.\n *\n * The input string must be a valid base64 string, otherwise an error will be thrown.\n *\n * The encoding parameter is optional and defaults to 'utf-8'.\n *\n * @example\n * ```ts\n * import { fromBase64 } from '@aws-lambda-powertools/commons/utils/base64';\n *\n * const encodedValue = 'aGVsbG8gd29ybGQ=';\n *\n * const decoded = fromBase64(encodedValue);\n * // new Uint8Array([ 97, 71, 86, 115, 98, 71, 56, 103, 100, 50, 57, 121, 98, 71, 81, 61 ]);\n * ```\n *\n * @param input The base64 string to convert to a Uint8Array\n * @param encoding The encoding of the input string (optional)\n */\nconst fromBase64 = (input, encoding) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexport { fromBase64 };\n", "import { isString } from '@aws-lambda-powertools/commons';\nimport { fromBase64 } from '@aws-lambda-powertools/commons/utils/base64';\nimport { TRANSFORM_METHOD_BINARY, TRANSFORM_METHOD_JSON, } from '../constants.js';\nimport { TransformParameterError } from '../errors.js';\n/**\n * Utility function to transform a value.\n *\n * It supports JSON and binary transformations, as well as an `auto` mode that will try to transform the value based on the key.\n *\n * The function supports both `string` and `Uint8Array` values as input. Other types will be returned as-is.\n *\n * If the value is a `Uint8Array`, it will be decoded to a string first. Then, when the transform is `json` or `auto` and the key ends with `.json`,\n * the value will be parsed as JSON using the `JSON.parse` function.\n *\n * When the transform is `binary` or `auto` and the key ends with `.binary`, the value will be decoded from base64 using the `fromBase64` function\n * from the `@aws-lambda-powertools/commons/utils/base64` package.\n *\n * If the transformation fails, the function will return the value as-is unless `throwOnTransformError` is set to `true`.\n *\n * @note When using `auto` mode, the key must end with either `.json` or `.binary` to be transformed. Automatic transformation is supported only for\n * `getMultiple` calls.\n *\n * @param {string | Uint8Array} value - Value to be transformed\n * @param {TransformOptions} transform - Transform to be applied, can be `json`, `binary`, or `auto`\n * @param {boolean} throwOnTransformError - Whether to throw an error if the transformation fails, when transforming multiple values this can be set to false\n * @param {string} key - Key of the value to be transformed, used to determine the transformation method when using 'auto'\n */\nconst transformValue = (value, transform, throwOnTransformError, key) => {\n    const normalizedTransform = transform.toLowerCase();\n    const isAutoTransform = normalizedTransform === 'auto';\n    const isAutoJsonTransform = isAutoTransform && key.toLowerCase().endsWith(`.${TRANSFORM_METHOD_JSON}`);\n    const isAutoBinaryTransform = isAutoTransform &&\n        key.toLowerCase().endsWith(`.${TRANSFORM_METHOD_BINARY}`);\n    const isJsonTransform = normalizedTransform === TRANSFORM_METHOD_JSON;\n    const isBinaryTransform = normalizedTransform === TRANSFORM_METHOD_BINARY;\n    // If the value is not a string or Uint8Array, or if the transform is `auto`\n    // and the key does not end with `.json` or `.binary`, return the value as-is\n    if (!(value instanceof Uint8Array || isString(value)) ||\n        (isAutoTransform && !isAutoJsonTransform && !isAutoBinaryTransform)) {\n        return value;\n    }\n    try {\n        // If the value is a Uint8Array, decode it to a string first\n        if (value instanceof Uint8Array) {\n            value = new TextDecoder('utf-8').decode(value);\n        }\n        // If the transform is `json` or `auto` and the key ends with `.json`, parse the value as JSON\n        if (isJsonTransform || isAutoJsonTransform) {\n            return JSON.parse(value);\n            // If the transform is `binary` or `auto` and the key ends with `.binary`, decode the value from base64\n        }\n        else if (isBinaryTransform || isAutoBinaryTransform) {\n            return new TextDecoder('utf-8').decode(fromBase64(value, 'base64'));\n        }\n    }\n    catch (error) {\n        if (throwOnTransformError)\n            throw new TransformParameterError(transform, error.message);\n        return;\n    }\n};\nexport { transformValue };\n", "import { addUserAgentMiddleware, isNullOrUndefined, isRecord, isSdkClient, isString, } from '@aws-lambda-powertools/commons';\nimport { GetOptions } from './GetOptions.js';\nimport { GetMultipleOptions } from './GetMultipleOptions.js';\nimport { ExpirableValue } from './ExpirableValue.js';\nimport { GetParameterError, TransformParameterError } from '../errors.js';\nimport { EnvironmentVariablesService } from '../config/EnvironmentVariablesService.js';\nimport { transformValue } from './transformValue.js';\n/**\n * Base class for all providers.\n *\n * As an abstract class, it should not be used directly, but rather extended by other providers.\n *\n * It implements the common logic for all providers, such as caching, transformation, etc.\n * Each provider that extends this class must implement the `_get` and `_getMultiple` abstract methods.\n *\n * These methods are responsible for retrieving the values from the underlying parameter store. They are\n * called by the `get` and `getMultiple` methods, which are responsible for caching and transformation.\n *\n * If there are multiple calls to the same parameter but in a different transform, they will be stored multiple times.\n * This allows us to optimize by transforming the data only once per retrieval, thus there is no need to transform cached values multiple times.\n *\n * However, this means that we need to make multiple calls to the underlying parameter store if we need to return it in different transforms.\n *\n * Since the number of supported transform is small and the probability that a given parameter will always be used in a specific transform,\n * this should be an acceptable tradeoff.\n */\nclass BaseProvider {\n    envVarsService;\n    client;\n    store;\n    constructor({ awsSdkV3Client, clientConfig, proto, }) {\n        this.store = new Map();\n        this.envVarsService = new EnvironmentVariablesService();\n        if (awsSdkV3Client) {\n            if (!isSdkClient(awsSdkV3Client)) {\n                console.warn('awsSdkV3Client is not an AWS SDK v3 client, using default client');\n                this.client = new proto(clientConfig ?? {});\n            }\n            else {\n                this.client = awsSdkV3Client;\n            }\n        }\n        else {\n            this.client = new proto(clientConfig ?? {});\n        }\n        addUserAgentMiddleware(this.client, 'parameters');\n    }\n    /**\n     * Add a value to the cache.\n     *\n     * @param {string} key - Key of the cached value\n     * @param {string | Uint8Array | Record<string, unknown>} value - Value to be cached\n     * @param {number} maxAge - Maximum age in seconds for the value to be cached\n     */\n    addToCache(key, value, maxAge) {\n        if (maxAge <= 0)\n            return;\n        this.store.set(key, new ExpirableValue(value, maxAge));\n    }\n    /**\n     * Clear the cache.\n     */\n    clearCache() {\n        this.store.clear();\n    }\n    /**\n     * Retrieve a parameter value or return the cached value.\n     *\n     * @param {string} name - Parameter name\n     * @param {GetOptionsInterface} options - Options to configure maximum age, trasformation, AWS SDK options, or force fetch\n     */\n    async get(name, options) {\n        const configs = new GetOptions(options, this.envVarsService);\n        const key = [name, configs.transform].toString();\n        if (!configs.forceFetch && !this.hasKeyExpiredInCache(key)) {\n            return this.store.get(key)?.value;\n        }\n        try {\n            let value = await this._get(name, options);\n            if (isNullOrUndefined(value))\n                return undefined;\n            if (configs.transform &&\n                (isString(value) || value instanceof Uint8Array)) {\n                value = transformValue(value, configs.transform, true, name);\n            }\n            this.addToCache(key, value, configs.maxAge);\n            return value;\n        }\n        catch (error) {\n            if (error instanceof TransformParameterError)\n                throw error;\n            throw new GetParameterError(error.message);\n        }\n    }\n    /**\n     * Retrieve multiple parameter values or return the cached values.\n     *\n     * @param {string} path - Parameters path\n     * @param {GetMultipleOptionsInterface} options - Options to configure maximum age, trasformation, AWS SDK options, or force fetch\n     * @returns\n     */\n    async getMultiple(path, options) {\n        const configs = new GetMultipleOptions(options, this.envVarsService);\n        const key = [path, configs.transform].toString();\n        if (!configs.forceFetch && !this.hasKeyExpiredInCache(key)) {\n            // If the code enters in this block, then the key must exist & not have been expired\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.store.get(key).value;\n        }\n        let values;\n        try {\n            values = await this._getMultiple(path, options);\n            if (!isRecord(values)) {\n                throw new GetParameterError(`Expected result to be a Record<string, unknown> but got ${typeof values}`);\n            }\n        }\n        catch (error) {\n            throw new GetParameterError(error.message);\n        }\n        if (configs.transform) {\n            for (const [entryKey, entryValue] of Object.entries(values)) {\n                if (!(isString(entryValue) || entryValue instanceof Uint8Array))\n                    continue;\n                try {\n                    values[entryKey] = transformValue(entryValue, configs.transform, configs.throwOnTransformError, entryKey);\n                }\n                catch (error) {\n                    if (configs.throwOnTransformError)\n                        throw new TransformParameterError(configs.transform, error.message);\n                }\n            }\n        }\n        if (Object.keys(values).length !== 0) {\n            this.addToCache(key, values, configs.maxAge);\n        }\n        return values;\n    }\n    /**\n     * Check whether a key has expired in the cache or not.\n     *\n     * It returns true if the key is expired or not present in the cache.\n     *\n     * @param {string} key - Stringified representation of the key to retrieve\n     */\n    hasKeyExpiredInCache(key) {\n        const value = this.store.get(key);\n        if (value)\n            return value.isExpired();\n        return true;\n    }\n}\nexport { BaseProvider };\n", "import { BaseProvider } from '../base/BaseProvider.js';\nimport { transformValue } from '../base/transformValue.js';\nimport { GetParameterError } from '../errors.js';\nimport { DEFAULT_MAX_AGE_SECS } from '../constants.js';\nimport { SSMClient, GetParameterCommand, paginateGetParametersByPath, GetParametersCommand, } from '@aws-sdk/client-ssm';\n/**\n * ## Intro\n * The Parameters utility provides a SSMProvider that allows to retrieve parameters from AWS Systems Manager.\n *\n * ## Getting started\n *\n * This utility supports AWS SDK v3 for JavaScript only (`@aws-sdk/client-ssm`). This allows the utility to be modular, and you to install only\n * the SDK packages you need and keep your bundle size small.\n *\n * ## Basic usage\n *\n * Retrieve a parameter from SSM:\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve a parameter from SSM\n *   const parameter = await parametersProvider.get('/my-parameter');\n * };\n * ```\n *\n * If you want to retrieve a parameter without customizing the provider, you can use the {@link getParameter} function instead.\n *\n * You can also retrieve parameters at once. If you want to get multiple parameters under the same path, you can use the `getMultiple` method.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *  // Retrieve multiple parameters by path from SSM\n *  const parameters = await parametersProvider.getMultiple('/my-parameters-path');\n * };\n * ```\n *\n * If you don't need to customize the provider, you can also use the {@link getParameters} function instead.\n *\n * If instead you want to retrieve multiple parameters by name, you can use the `getParametersByName` method.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve multiple parameters by name from SSM\n *   const parameters = await parametersProvider.getParametersByName({\n *     '/my-parameter-1': {}, // Use default options\n *     '/my-parameter-2': { transform: 'json' }, // Parse the value as JSON\n *   });\n * };\n * ```\n *\n * If you don't need to customize the provider, you can also use the {@link getParametersByName} function instead.\n *\n * ## Advanced usage\n *\n * ### Caching\n *\n * By default, the provider will cache parameters retrieved in-memory for 5 seconds.\n * You can adjust how long values should be kept in cache by using the `maxAge` parameter.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve a parameter and cache it for 10 seconds\n *   const parameter = await parametersProvider.get('/my-parameter', { maxAge: 10 });\n *   // Retrieve multiple parameters by path and cache them for 20 seconds\n *   const parameters = await parametersProvider.getMultiple('/my-parameters-path', { maxAge: 20 });\n * };\n * ```\n *\n * When using the `getParametersByName` method, you can set a different `maxAge` for each parameter or set a default `maxAge` for all parameters.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve multiple parameters by name and cache them individually\n *   const parameters = await parametersProvider.getParametersByName({\n *     '/my-parameter-1': { maxAge: 10 }, // Cache for 10 seconds\n *     '/my-parameter-2': { maxAge: 20 }, // Cache for 20 seconds\n *   });\n *   // Retrieve multiple parameters by name and cache them all for 20 seconds\n *   const parameters = await parametersProvider.getParametersByName({\n *     '/my-parameter-1': {},\n *     '/my-parameter-2': {},\n *   }, { maxAge: 20 });\n * };\n * ```\n *\n * If instead you'd like to always ensure you fetch the latest parameter from the store regardless if already available in cache, use the `forceFetch` parameter.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve a parameter and skip cache\n *   const parameter = await parametersProvider.get('/my-parameter', { forceFetch: true });\n *   // Retrieve multiple parameters and skip cache\n *   const parameters = await parametersProvider.getMultiple('/my-parameters-path', { forceFetch: true });\n * };\n * ```\n *\n * Likewise, you can use the `forceFetch` parameter with the `getParametersByName` method both for individual parameters and for all parameters.\n *\n * ### Decryption\n *\n * If you want to retrieve a parameter that is encrypted, you can use the `decrypt` parameter. This parameter is compatible with `get`, `getMultiple` and `getParametersByName`.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve a parameter and decrypt it\n *   const parameter = await parametersProvider.get('/my-parameter', { decrypt: true });\n *   // Retrieve multiple parameters and decrypt them\n *   const parameters = await parametersProvider.getMultiple('/my-parameters-path', { decrypt: true });\n * };\n * ```\n *\n * ### Transformations\n *\n * For parameters stored as JSON you can use the transform argument for deserialization. This will return a JavaScript object instead of a string.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve a parameter and parse it as JSON\n *   const parameter = await parametersProvider.get('/my-parameter', { transform: 'json' });\n *   // Retrieve multiple parameters and parse them as JSON\n *   const parameters = await parametersProvider.getMultiple('/my-parameters-path', { transform: 'json' });\n * };\n * ```\n *\n * For parameters that are instead stored as base64-encoded binary data, you can use the transform argument set to `binary` for decoding. This will return a decoded string.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve a base64-encoded string and decode it\n *   const parameter = await parametersProvider.get('/my-parameter', { transform: 'binary' });\n *   // Retrieve multiple base64-encoded strings and decode them\n *   const parameters = await parametersProvider.getMultiple('/my-parameters-path', { transform: 'binary' });\n * };\n * ```\n *\n * Both type of transformations are compatible also with the `getParametersByName` method.\n *\n * ### Extra SDK options\n *\n * When retrieving parameters, you can pass extra options to the AWS SDK v3 for JavaScript client by using the `sdkOptions` parameter.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider();\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve a parameter and pass extra options to the AWS SDK v3 for JavaScript client\n *   const parameter = await parametersProvider.get('/my-parameter', {\n *     sdkOptions: {\n *       WithDecryption: true,\n *     },\n *   });\n * };\n * ```\n *\n * The objects accept the same options as respectively the [AWS SDK v3 for JavaScript GetParameter command](https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-ssm/classes/getparametercommand.html) and the [AWS SDK v3 for JavaScript GetParametersByPath command](https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-ssm/classes/getparametersbypathcommand.html).\n *\n * ### Customize AWS SDK v3 for JavaScript client\n *\n * By default, the provider will create a new SSM client using the default configuration.\n *\n * You can customize the client by passing a custom configuration object to the provider.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n *\n * const parametersProvider = new SSMProvider({\n *   clientConfig: { region: 'eu-west-1' },\n * });\n * ```\n *\n * This object accepts the same options as the [AWS SDK v3 for JavaScript SSM client constructor](https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-ssm/classes/ssmclient.html#constructor).\n *\n * Otherwise, if you want to use a custom client altogether, you can pass it to the provider.\n *\n * @example\n * ```typescript\n * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n * import { SSMClient } from '@aws-sdk/client-ssm';\n *\n * const client = new SSMClient({ region: 'eu-west-1' });\n * const parametersProvider = new SSMProvider({\n *   awsSdkV3Client: client,\n * });\n * ```\n *\n * This object must be an instance of the [AWS SDK v3 for JavaScript SSM client](https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/clients/client-ssm/classes/ssmclient.html).\n *\n * For more usage examples, see [our documentation](https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/).\n */\nclass SSMProvider extends BaseProvider {\n    errorsKey = '_errors';\n    maxGetParametersItems = 10;\n    /**\n     * It initializes the SSMProvider class.\n     *\n     * @param {SSMProviderOptions} config - The configuration object.\n     */\n    constructor(config) {\n        super({\n            proto: SSMClient,\n            ...(config ?? {}),\n        });\n    }\n    /**\n     * Retrieve a value from AWS Systems Manager.\n     *\n     * @example\n     * ```typescript\n     * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n     *\n     * const parametersProvider = new SSMProvider();\n     *\n     * export const handler = async (): Promise<void> => {\n     *   // Retrieve a parameter from SSM\n     *   const parameter = await parametersProvider.get('/my-parameter');\n     * };\n     * ```\n     *\n     * You can customize the retrieval of the value by passing options to the function:\n     * * `maxAge` - The maximum age of the value in cache before fetching a new one (in seconds) (default: 5)\n     * * `forceFetch` - Whether to always fetch a new value from the store regardless if already available in cache\n     * * `transform` - Whether to transform the value before returning it. Supported values: `json`, `binary`\n     * * `sdkOptions` - Extra options to pass to the AWS SDK v3 for JavaScript client\n     * * `decrypt` - Whether to decrypt the value before returning it.\n     *\n     * For usage examples check {@link SSMProvider}.\n     *\n     * @param {string} name - The name of the value to retrieve (i.e. the partition key)\n     * @param {SSMGetOptions} options - Options to configure the provider\n     * @see https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/\n     */\n    async get(name, options) {\n        return super.get(name, options);\n    }\n    /**\n     * Retrieve multiple values from AWS Systems Manager.\n     *\n     * @example\n     * ```typescript\n     * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n     *\n     * const parametersProvider = new SSMProvider();\n     *\n     * export const handler = async (): Promise<void> => {\n     *   // Retrieve multiple parameters from SSM\n     *   const parameters = await parametersProvider.getMultiple('/my-parameters-path');\n     * };\n     * ```\n     *\n     * You can customize the retrieval of the values by passing options to the function:\n     * * `maxAge` - The maximum age of the value in cache before fetching a new one (in seconds) (default: 5)\n     * * `forceFetch` - Whether to always fetch a new value from the store regardless if already available in cache\n     * * `transform` - Whether to transform the value before returning it. Supported values: `json`, `binary`\n     * * `sdkOptions` - Extra options to pass to the AWS SDK v3 for JavaScript client\n     * * `throwOnTransformError` - Whether to throw an error if the transform fails (default: `true`)\n     * * `decrypt` - Whether to decrypt the value before returning it.\n     * * `recursive` - Whether to recursively retrieve all parameters under the given path (default: `false`)\n     *\n     * For usage examples check {@link SSMProvider}.\n     *\n     * @param {string} path - The path of the parameters to retrieve\n     * @param {SSMGetMultipleOptions} options - Options to configure the retrieval\n     * @see https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/\n     */\n    async getMultiple(path, options) {\n        return super.getMultiple(path, options);\n    }\n    /**\n     * Retrieve multiple parameters by name from AWS Systems Manager.\n     *\n     * @example\n     * ```typescript\n     * import { SSMProvider } from '@aws-lambda-powertools/parameters/ssm';\n     *\n     * const parametersProvider = new SSMProvider();\n     *\n     * export const handler = async (): Promise<void> => {\n     *   // Retrieve multiple parameters by name from SSM\n     *   const parameters = await parametersProvider.getParametersByName({\n     *     '/my-parameter-1': {}, // Use default options\n     *     '/my-parameter-2': { transform: 'json' }, // Parse the value as JSON\n     *   });\n     * };\n     * ```\n     * You can customize the retrieval of the values by passing options to **both the function and the parameter**:\n     * * `maxAge` - The maximum age of the value in cache before fetching a new one (in seconds) (default: 5)\n     * * `forceFetch` - Whether to always fetch a new value from the store regardless if already available in cache\n     * * `transform` - Whether to transform the value before returning it. Supported values: `json`, `binary`\n     * * `sdkOptions` - Extra options to pass to the AWS SDK v3 for JavaScript client\n     * * `throwOnTransformError` - Whether to throw an error if the transform fails (default: `true`)\n     * * `decrypt` - Whether to decrypt the value before returning it\n     *\n     * `throwOnError` decides whether to throw an error if a parameter is not found:\n     * - A) Default fail-fast behavior: Throws a `GetParameterError` error upon any failure.\n     * - B) Gracefully aggregate all parameters that failed under \"_errors\" key.\n     *\n     * It transparently uses GetParameter and/or GetParameters depending on decryption requirements.\n     *\n     * ```sh\n     *                                \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     *                            \u250C\u2500\u2500\u2500\u25B6  Decrypt entire batch  \u2502\u2500\u2500\u2500\u2500\u2500\u2510\n     *                            \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2502     \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     *                            \u2502                                  \u251C\u2500\u2500\u2500\u2500\u2500\u25B6 GetParameters API  \u2502\n     *    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     *    \u2502   Split batch    \u2502\u2500\u2500\u2500 \u253C\u2500\u2500\u25B6\u2502 No decryption required \u2502\u2500\u2500\u2500\u2500\u2500\u2518\n     *    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     *                            \u2502                                        \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n     *                            \u2502   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u2502  GetParameter API  \u2502\n     *                            \u2514\u2500\u2500\u25B6\u2502Decrypt some but not all\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25B6\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n     *                                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502 GetParameters API  \u2502\n     *                                                                     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     * ```\n     *\n     * @param {Record<string, SSMGetParametersByNameOptions>} parameters - Object containing parameter names and any optional overrides\n     * @param {SSMGetParametersByNameOptions} options - Options to configure the retrieval\n     * @see https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/\n     */\n    async getParametersByName(parameters, options) {\n        const configs = {\n            ...{\n                decrypt: this.resolveDecryptionConfigValue({}) || false,\n                maxAge: DEFAULT_MAX_AGE_SECS,\n                throwOnError: true,\n            },\n            ...options,\n        };\n        let response = {};\n        // NOTE: We fail early to avoid unintended graceful errors being replaced with their '_errors' param values\n        SSMProvider.throwIfErrorsKeyIsPresent(parameters, this.errorsKey, configs.throwOnError);\n        const { parametersToFetchInBatch, parametersToDecrypt } = SSMProvider.splitBatchAndDecryptParameters(parameters, configs);\n        // NOTE: We need to find out whether all parameters must be decrypted or not to know which API to use\n        // Logic:\n        // GetParameters API -> When decrypt is used for all parameters in the the batch\n        // GetParameter  API -> When decrypt is used for one or more in the batch\n        if (Object.keys(parametersToDecrypt).length !== Object.keys(parameters).length) {\n            const { response: decryptResponse, errors: decryptErrors } = await this.getParametersByNameWithDecryptOption(parametersToDecrypt, configs.throwOnError);\n            const { response: batchResponse, errors: batchErrors } = await this.getParametersBatchByName(parametersToFetchInBatch, configs.throwOnError, false);\n            response = { ...decryptResponse, ...batchResponse };\n            // Fail-fast disabled, let's aggregate errors under \"_errors\" key so they can handle gracefully\n            if (!configs.throwOnError) {\n                response[this.errorsKey] = [...decryptErrors, ...batchErrors];\n            }\n        }\n        else {\n            const { response: batchResponse, errors: batchErrors } = await this.getParametersBatchByName(parametersToDecrypt, configs.throwOnError, true);\n            response = batchResponse;\n            // Fail-fast disabled, let's aggregate errors under \"_errors\" key so they can handle gracefully\n            if (!configs.throwOnError) {\n                response[this.errorsKey] = [...batchErrors];\n            }\n        }\n        return response;\n    }\n    /**\n     * Retrieve a parameter from AWS Systems Manager.\n     *\n     * @param {string} name - Name of the parameter to retrieve\n     * @param {SSMGetOptions} options - Options to customize the retrieval\n     */\n    async _get(name, options) {\n        const sdkOptions = {\n            ...(options?.sdkOptions || {}),\n            Name: name,\n        };\n        sdkOptions.WithDecryption = this.resolveDecryptionConfigValue(options, sdkOptions);\n        const result = await this.client.send(new GetParameterCommand(sdkOptions));\n        return result.Parameter?.Value;\n    }\n    /**\n     * Retrieve multiple items from AWS Systems Manager.\n     *\n     * @param {string} path - The path of the parameters to retrieve\n     * @param {SSMGetMultipleOptions} options - Options to configure the provider\n     */\n    async _getMultiple(path, options) {\n        const sdkOptions = {\n            ...(options?.sdkOptions || {}),\n            Path: path,\n        };\n        const paginationOptions = {\n            client: this.client,\n        };\n        sdkOptions.WithDecryption = this.resolveDecryptionConfigValue(options, sdkOptions);\n        sdkOptions.Recursive =\n            options?.recursive !== undefined\n                ? options.recursive\n                : sdkOptions.Recursive;\n        paginationOptions.pageSize =\n            sdkOptions.MaxResults !== undefined ? sdkOptions.MaxResults : undefined;\n        const parameters = {};\n        for await (const page of paginateGetParametersByPath(paginationOptions, sdkOptions)) {\n            for (const parameter of page.Parameters || []) {\n                /**\n                 * Standardize the parameter name\n                 *\n                 * The parameter name returned by SSM will contain the full path.\n                 * However, for readability, we should return only the part after the path.\n                 **/\n                // If the parameter is present in the response, then it has a Name\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                let name = parameter.Name;\n                name = name.replace(path, '');\n                if (name.startsWith('/')) {\n                    name = name.replace('/', '');\n                }\n                parameters[name] = parameter.Value;\n            }\n        }\n        return parameters;\n    }\n    /**\n     * Retrieve multiple items by name from AWS Systems Manager.\n     *\n     * @param {Record<string, SSMGetParametersByNameOptions>} parameters - An object of parameter names and their options\n     * @param {throwOnError} throwOnError - Whether to throw an error if any of the parameters' retrieval throws an error or handle them gracefully\n     * @param {boolean} decrypt - Whether to decrypt the parameters or not\n     */\n    async _getParametersByName(parameters, throwOnError, decrypt) {\n        const sdkOptions = {\n            Names: Object.keys(parameters),\n        };\n        if (decrypt) {\n            sdkOptions.WithDecryption = true;\n        }\n        const result = await this.client.send(new GetParametersCommand(sdkOptions));\n        const errors = SSMProvider.handleAnyInvalidGetParameterErrors(result, throwOnError);\n        const response = this.transformAndCacheGetParametersResponse(result, parameters, throwOnError);\n        return {\n            response,\n            errors,\n        };\n    }\n    /**\n     * Slice batch and fetch parameters using GetPrameters API by max permissible batch size\n     *\n     * @param {Record<string, SSMGetParametersByNameOptions>} parameters - An object of parameter names and their options\n     * @param {throwOnError} throwOnError - Whether to throw an error if any of the parameters' retrieval throws an error or handle them gracefully\n     * @param {boolean} decrypt - Whether to decrypt the parameters or not\n     */\n    async getParametersBatchByName(parameters, throwOnError, decrypt) {\n        let response = {};\n        let errors = [];\n        // Fetch each possible batch param from cache and return if entire batch is cached\n        const { cached, toFetch } = await this.getParametersByNameFromCache(parameters);\n        if (Object.keys(cached).length >= Object.keys(parameters).length) {\n            response = cached;\n            return {\n                response,\n                errors,\n            };\n        }\n        // Slice batch by max permitted GetParameters call and retrieve the ones that are not cached\n        const { response: batchResponse, errors: batchErrors } = await this.getParametersByNameInChunks(toFetch, throwOnError, decrypt);\n        response = { ...cached, ...batchResponse };\n        errors = batchErrors;\n        return {\n            response,\n            errors,\n        };\n    }\n    /**\n     * Fetch each parameter from batch that hasn't expired from cache\n     *\n     * @param {Record<string, SSMGetParametersByNameOptions>} parameters - An object of parameter names and their options\n     */\n    async getParametersByNameFromCache(parameters) {\n        const cached = {};\n        const toFetch = {};\n        for (const [parameterName, parameterOptions] of Object.entries(parameters)) {\n            const cacheKey = [parameterName, parameterOptions.transform].toString();\n            if (!this.hasKeyExpiredInCache(cacheKey)) {\n                // Since we know the key exists in the cache, we can safely use the non-null assertion operator\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                cached[parameterName] = this.store.get(cacheKey).value;\n            }\n            else {\n                toFetch[parameterName] = parameterOptions;\n            }\n        }\n        return {\n            cached,\n            toFetch,\n        };\n    }\n    /**\n     * Slice object into chunks of max permissible batch size and fetch parameters\n     *\n     * @param {Record<string, SSMGetParametersByNameOptions>} parameters - An object of parameter names and their options\n     * @param {boolean} throwOnError - Whether to throw an error if any of the parameters' retrieval throws an error or handle them gracefully\n     * @param {boolean} decrypt - Whether to decrypt the parameters or not\n     */\n    async getParametersByNameInChunks(parameters, throwOnError, decrypt) {\n        let response = {};\n        let errors = [];\n        // Slice object into chunks of max permissible batch size\n        const chunks = Object.entries(parameters).reduce((acc, [parameterName, parameterOptions], index) => {\n            const chunkIndex = Math.floor(index / this.maxGetParametersItems);\n            if (!acc[chunkIndex]) {\n                acc[chunkIndex] = {};\n            }\n            acc[chunkIndex][parameterName] = parameterOptions;\n            return acc;\n        }, []);\n        // Fetch each chunk and merge results\n        for (const chunk of chunks) {\n            const { response: chunkResponse, errors: chunkErrors } = await this._getParametersByName(chunk, throwOnError, decrypt);\n            response = { ...response, ...chunkResponse };\n            errors = [...errors, ...chunkErrors];\n        }\n        return {\n            response,\n            errors,\n        };\n    }\n    /**\n     * Fetch parameters by name while also decrypting them\n     *\n     * @param {Record<string, SSMGetParametersByNameOptions>} parameters - An object of parameter names and their options\n     * @param {boolean} throwOnError - Whether to throw an error if any of the parameters' retrieval throws an error or handle them gracefully\n     */\n    async getParametersByNameWithDecryptOption(parameters, throwOnError) {\n        const response = {};\n        const errors = [];\n        for (const [parameterName, parameterOptions] of Object.entries(parameters)) {\n            try {\n                response[parameterName] = await this._get(parameterName, parameterOptions);\n            }\n            catch (error) {\n                if (throwOnError) {\n                    throw error;\n                }\n                errors.push(parameterName);\n            }\n        }\n        return {\n            response,\n            errors,\n        };\n    }\n    /**\n     * Handle any invalid parameters returned by GetParameters API\n     * GetParameters is non-atomic. Failures don't always reflect in exceptions so we need to collect.\n     *\n     * @param {GetParametersCommandOutput} result - The result of the GetParameters API call\n     * @param {boolean} throwOnError - Whether to throw an error if any of the parameters' retrieval throws an error or handle them gracefully\n     */\n    static handleAnyInvalidGetParameterErrors(result, throwOnError) {\n        const errors = [];\n        if (result.InvalidParameters && result.InvalidParameters.length > 0) {\n            if (throwOnError) {\n                throw new GetParameterError(`Failed to fetch parameters: ${result.InvalidParameters.join(', ')}`);\n            }\n            errors.push(...result.InvalidParameters);\n        }\n        return errors;\n    }\n    resolveDecryptionConfigValue(options = {}, sdkOptions) {\n        if (options?.decrypt !== undefined)\n            return options.decrypt;\n        if (sdkOptions?.WithDecryption !== undefined)\n            return sdkOptions.WithDecryption;\n        if (this.envVarsService.getSSMDecrypt() !== '') {\n            return this.envVarsService.isValueTrue(this.envVarsService.getSSMDecrypt());\n        }\n        return undefined;\n    }\n    /**\n     * Split parameters that can be fetched by GetParameters vs GetParameter.\n     *\n     * @param {Record<string, SSMGetParametersByNameOptions>} parameters - An object of parameter names and their options\n     * @param {SSMGetParametersByNameOptions} configs - The configs passed down\n     */\n    static splitBatchAndDecryptParameters(parameters, configs) {\n        const parametersToFetchInBatch = {};\n        const parametersToDecrypt = {};\n        for (const [parameterName, parameterOptions] of Object.entries(parameters)) {\n            const overrides = parameterOptions;\n            overrides.transform = overrides.transform || configs.transform;\n            overrides.decrypt =\n                overrides.decrypt !== undefined ? overrides.decrypt : configs.decrypt;\n            overrides.maxAge =\n                overrides.maxAge !== undefined ? overrides.maxAge : configs.maxAge;\n            if (overrides.decrypt) {\n                parametersToDecrypt[parameterName] = overrides;\n            }\n            else {\n                parametersToFetchInBatch[parameterName] = overrides;\n            }\n        }\n        return {\n            parametersToFetchInBatch,\n            parametersToDecrypt,\n        };\n    }\n    /**\n     * Throw a GetParameterError if fail-fast is disabled and `_errors` key is in parameters list.\n     *\n     * @param {Record<string, unknown>} parameters\n     * @param {string} reservedParameter\n     * @param {boolean} throwOnError\n     */\n    static throwIfErrorsKeyIsPresent(parameters, reservedParameter, throwOnError) {\n        if (!throwOnError && Object.hasOwn(parameters, reservedParameter)) {\n            throw new GetParameterError(`You cannot fetch a parameter named ${reservedParameter} in graceful error mode.`);\n        }\n    }\n    /**\n     * Transform and cache the response from GetParameters API call\n     *\n     * @param {GetParametersCommandOutput} response - The response from the GetParameters API call\n     * @param {Record<string, SSMGetParametersByNameOptions>} parameters - An object of parameter names and their options\n     * @param {boolean} throwOnError - Whether to throw an error if any of the parameters' retrieval throws an error or handle them gracefully\n     */\n    transformAndCacheGetParametersResponse(response, parameters, throwOnError) {\n        const processedParameters = {};\n        for (const parameter of response.Parameters || []) {\n            // If the parameter is present in the response, then it has a Name\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const parameterName = parameter.Name;\n            const parameterValue = parameter.Value;\n            const parameterOptions = parameters[parameterName];\n            let value;\n            // NOTE: if transform is set, we do it before caching to reduce number of operations\n            if (parameterValue && parameterOptions.transform) {\n                value = transformValue(parameterValue, parameterOptions.transform, throwOnError, parameterName);\n            }\n            else if (parameterValue) {\n                value = parameterValue;\n            }\n            if (value) {\n                const cacheKey = [parameterName, parameterOptions.transform].toString();\n                this.addToCache(cacheKey, value, parameterOptions.maxAge || DEFAULT_MAX_AGE_SECS);\n            }\n            processedParameters[parameterName] = value;\n        }\n        return processedParameters;\n    }\n}\nexport { SSMProvider };\n", "// These providers are dinamycally intialized on first use of the helper functions\nconst DEFAULT_PROVIDERS = {};\n/**\n * Utility function to clear all the caches of the default providers.\n *\n * This is useful when you want to clear the cache of all the providers at once, for example during testing.\n */\nconst clearCaches = () => {\n    for (const provider of Object.values(DEFAULT_PROVIDERS)) {\n        if (provider.clearCache) {\n            provider.clearCache();\n        }\n    }\n};\nexport { DEFAULT_PROVIDERS, clearCaches };\n", "import { DEFAULT_PROVIDERS } from '../base/DefaultProviders.js';\nimport { SSMProvider } from './SSMProvider.js';\n/**\n * ## Intro\n * The Parameters utility provides an SSMProvider that allows to retrieve parameters from AWS Systems Manager.\n *\n * ## Getting started\n *\n * This utility supports AWS SDK v3 for JavaScript only. This allows the utility to be modular, and you to install only\n * the SDK packages you need and keep your bundle size small.\n *\n * To use the provider, you must install the Parameters utility and the AWS SDK v3 for JavaScript for AppConfig:\n *\n * ```sh\n * npm install @aws-lambda-powertools/parameters @aws-sdk/client-ssm\n * ```\n *\n * ## Basic usage\n *\n * @example\n * ```typescript\n * import { getParametersByName } from '@aws-lambda-powertools/parameters/ssm';\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve parameters and cache them for 10 seconds\n *   const parameters = await getParametersByName({\n *     '/my-parameter-1': {}, // Use default options\n *     '/my-parameter-2': { maxAge: 10 }, // Cache for 10 seconds\n *   });\n * };\n * ```\n *\n * ## Advanced usage\n *\n * ### Decryption\n *\n * If you have encrypted parameters, you can use the `decrypt` option to automatically decrypt them.\n *\n * @example\n * ```typescript\n * import { getParametersByName } from '@aws-lambda-powertools/parameters/ssm';\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve parameters and decrypt them\n *   const parameters = await getParametersByName({\n *     '/my-parameter-1': {}, // Use default options\n *     '/my-parameter-2': {}, // Use default options\n *   }, { decrypt: true });\n * };\n * ```\n *\n * ### Caching\n *\n * By default, the provider will cache parameters retrieved in-memory for 5 seconds.\n * You can adjust how long values should be kept in cache by using the `maxAge` parameter.\n *\n * @example\n * ```typescript\n * import { getParametersByName } from '@aws-lambda-powertools/parameters/ssm';\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve parameters and cache them for 10 seconds\n *   const parameters = await getParametersByName({\n *     '/my-parameter-1': {}, // Use default options\n *     '/my-parameter-2': {}, // Use default options\n *   }, { maxAge: 10 });\n * };\n * ```\n *\n * Alternatively, if you need more granular control over caching each parameter, you can pass it in the options object.\n *\n * @example\n * ```typescript\n * import { getParametersByName } from '@aws-lambda-powertools/parameters/ssm';\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve parameters and cache them individually\n *   const parameters = await getParametersByName({\n *     '/my-parameter-1': { maxAge: 10 }, // Cache for 10 seconds\n *     '/my-parameter-2': { maxAge: 20 }, // Cache for 20 seconds\n *   });\n * };\n * ```\n *\n * If instead you'd like to always ensure you fetch the latest values from the store regardless if already available in cache, use the `forceFetch` parameter.\n *\n * @example\n * ```typescript\n * import { getParametersByName } from '@aws-lambda-powertools/parameters/ssm';\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve parameters and pass extra options to skip cache\n *   const parameters = await getParametersByName({\n *     '/my-parameter-1': {}, // Use default options\n *     '/my-parameter-2': {}, // Use default options\n *   }, { forceFetch: true });\n * };\n * ```\n *\n * ### Transformations\n *\n * For parameters stored as JSON you can use the transform argument for deserialization. This will return a JavaScript objects instead of a strings.\n * For parameters that are instead stored as base64-encoded binary data, you can use the transform argument set to `binary` for decoding. This will return decoded strings for each parameter.\n *\n * @example\n * ```typescript\n * import { getParametersByName } from '@aws-lambda-powertools/parameters/ssm';\n *\n * export const handler = async (): Promise<void> => {\n *   // Retrieve parameters and pass extra options to transform them\n *   const parameters = await getParametersByName({\n *     '/my-parameter-1': {}, // Use default options (no transformation)\n *     '/my-parameter-2': { transform: 'json' }, // Parse the value as JSON\n *     '/my-parameter-3': { transform: 'binary' }, // Parse the value as base64-encoded binary data\n *   });\n * };\n * ```\n *\n *\n * ### Built-in provider class\n *\n * For greater flexibility such as configuring the underlying SDK client used by built-in providers, you can use the {@link SSMProvider} class.\n *\n * ### Options\n *\n * * You can customize the retrieval of the value by passing options to **both the function and the parameter**:\n * * `maxAge` - The maximum age of the value in cache before fetching a new one (in seconds) (default: 5)\n * * `forceFetch` - Whether to always fetch a new value from the store regardless if already available in cache\n * * `transform` - Whether to transform the value before returning it. Supported values: `json`, `binary`\n * * `sdkOptions` - Extra options to pass to the AWS SDK v3 for JavaScript client\n * * `decrypt` - Whether to decrypt the value before returning it\n *\n * `throwOnError` decides whether to throw an error if a parameter is not found:\n * - A) Default fail-fast behavior: Throws a `GetParameterError` error upon any failure.\n * - B) Gracefully aggregate all parameters that failed under \"_errors\" key.\n *\n * It transparently uses GetParameter and/or getParametersByName depending on decryption requirements.\n *\n * ```sh\n *                                \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n *                            \u250C\u2500\u2500\u2500\u25B6  Decrypt entire batch  \u2502\u2500\u2500\u2500\u2500\u2500\u2510\n *                            \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2502     \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n *                            \u2502                                  \u251C\u2500\u2500\u2500\u2500\u2500\u25B6 getParametersByName API  \u2502\n *    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u2502     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n *    \u2502   Split batch    \u2502\u2500\u2500\u2500 \u253C\u2500\u2500\u25B6\u2502 No decryption required \u2502\u2500\u2500\u2500\u2500\u2500\u2518\n *    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n *                            \u2502                                        \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n *                            \u2502   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u2502  GetParameter API  \u2502\n *                            \u2514\u2500\u2500\u25B6\u2502Decrypt some but not all\u2502\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25B6\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n *                                \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502 getParametersByName API  \u2502\n *                                                                     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n * ```\n *\n * For more usage examples, see [our documentation](https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/).\n *\n * @param {Record<string, SSMGetParametersByNameOptions>} parameters - The path of the parameters to retrieve\n * @param {SSMGetParametersByNameOptions} options - Options to configure the provider\n * @see https://docs.powertools.aws.dev/lambda/typescript/latest/utilities/parameters/\n */\nconst getParametersByName = async (parameters, options) => {\n    if (!Object.hasOwn(DEFAULT_PROVIDERS, 'ssm')) {\n        DEFAULT_PROVIDERS.ssm = new SSMProvider();\n    }\n    return DEFAULT_PROVIDERS.ssm.getParametersByName(parameters, options);\n};\nexport { getParametersByName };\n", "// Engine that interacts with remote event hub via checkpoint and partition\n// implementation, and publishes events to SNS topic.\n\nimport { Context } from \"aws-lambda\";\nimport { earliestEventPosition, EventHubConsumerClient, PartitionContext, ReceivedEventData }\n  from \"@azure/event-hubs\";\n\nimport * as envConstants from \"./initConstants\";\nimport { DbCheckpointStore } from \"./eventHubDbCheckpointStore\";\nimport { DbCheckpoint } from \"./eventHubDbCheckpoint\";\nimport { loadDatabaseParams } from \"./database\";\nimport { logger } from \"./utilities\";\nimport { publishSnsMessage } from \"./sns\";\n\nconst INGEST_OPTIONS = {\n  startPosition: earliestEventPosition,\n  maxWaitTimeInSeconds: 60,\n  maxBatchSize: 100  // Impacts checkpointing frequency, should be able to do it in well under 10000\n};\n// In milliseconds, how long before Lambda timeout should it gracefully shut down\nconst LAMBDA_SHUTDOWN_HEADROOM = 10000;\n\n// Defaults, can be overridden by caller\nconst EVENTS_DESTINATION_TOPIC_SHORT_NAME = 'hydrated-events-topic-v1';\nconst DATABASE_SECRET_ARN = 'database-runtime-secret-arn';\n\ninterface EventHubParameters {\n  connectionString?: string;\n  eventHubName?: string;\n  consumerGroup?: string;\n}\n\n/**\n * The `EventHubConsumerClient` class is used to consume events from an Event Hub.\n * Use the `options` parameter to configure retry policy or proxy settings.\n * @param consumerGroup - The name of the consumer group from which you want to process events.\n * @param connectionString - The connection string to use for connecting to the Event Hub instance.\n *   It is expected that the shared key properties and the Event Hub path are contained in this connection string.\n *   e.g. 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key;EntityPath=my-event-hub-name'.\n * @param options - A set of options to apply when configuring the client.\n *   - `retryOptions`   : Configures the retry policy for all the operations on the client.\n *       For example, `{ \"maxRetries\": 4 }` or `{ \"maxRetries\": 4, \"retryDelayInMs\": 30000 }`.\n *   - `webSocketOptions`: Configures the channelling of the AMQP connection over Web Sockets.\n *   - `userAgent`      : A string to append to the built-in user agent string that is passed to the service.\n *\n * The options that can be provided while creating the EventHubConsumerClient.\n * - `loadBalancingOptions` : Options to tune how the EventHubConsumerClient claims partitions.\n *    - `strategy`: `balanced` or `greedy`, default: `balanced`\n *    - `updateIntervalInMs`: The length of time between attempts to claim partitions, default: 10000\n *    - `partitionOwnershipExpirationIntervalInMs`: The length of time a partition claim is valid, default: 60000\n * - `userAgent`: A string to append to the built-in user agent string that is passed as a connection property\n *      to the service.\n * - `webSocketOptions`: Options to configure the channelling of the AMQP connection over Web Sockets.\n *    - `websocket` : The WebSocket constructor used to create an AMQP connection if you choose to make the connection\n *        over a WebSocket.\n *    - `webSocketConstructorOptions` : Options to pass to the Websocket constructor when you choose to make the connection\n *        over a WebSocket.\n * - `retryOptions`: The retry options for all the operations on the client/producer/consumer.\n *    - `maxRetries` : The number of times the operation can be retried in case of a retryable error.\n *    - `maxRetryDelayInMs`: The maximum delay between retries. Applicable only when performing exponential retries.\n *    - `mode`: Which retry mode to apply, specified by the `RetryMode` enum. Options are `Exponential` and `Fixed`. Defaults to `Fixed`.\n *    - `retryDelayInMs`: Amount of time to wait in milliseconds before making the next attempt. When `mode` is set to `Exponential`,\n *        this is used to compute the exponentially increasing delays between retries. Default: 30000 milliseconds.\n *    - `timeoutInMs`: Amount of time in milliseconds to wait before the operation times out. This will trigger a retry if there are any\n *        retry attempts remaining. Minimum value: 60000 milliseconds.\n */\n\nclass EventHubIngestEngine {\n\n  eventHubParameters: EventHubParameters;\n  checkpointDatabase: string;\n  snsMessageAttributeParser?: (event: object) => object;\n  databaseSecretArn: string;\n  snsDestinationTopicShortName: string;\n\n  checkpointStore: DbCheckpointStore;\n  consumerClient: EventHubConsumerClient;\n  processedEventCount: number;\n  batchLowestSequenceNumber: number;\n\n  constructor(eventHubParameters: EventHubParameters, checkpointDatabase: string,\n              snsMessageAttributeParser?: (event: object) => object, databaseSecretArn = DATABASE_SECRET_ARN,\n              snsDestinationTopicShortName: string = EVENTS_DESTINATION_TOPIC_SHORT_NAME) {\n\n    this.eventHubParameters = eventHubParameters;\n    this.checkpointDatabase = checkpointDatabase;\n    this.snsMessageAttributeParser = snsMessageAttributeParser;\n    this.databaseSecretArn = databaseSecretArn;\n    this.snsDestinationTopicShortName = snsDestinationTopicShortName;\n\n    this.checkpointStore = new DbCheckpointStore(this.checkpointDatabase);\n    this.consumerClient = new EventHubConsumerClient(\n      this.eventHubParameters.consumerGroup, this.eventHubParameters.connectionString, this.eventHubParameters.eventHubName,\n      this.checkpointStore, {}\n    );\n    this.processedEventCount = 0;\n    this.batchLowestSequenceNumber = Infinity;\n\n  }\n\n  private async processEvent(event: ReceivedEventData): Promise<void> {\n\n    const messageAttributes: object = typeof this.snsMessageAttributeParser === 'function'\n      ? this.snsMessageAttributeParser(event)\n      : {};\n    await publishSnsMessage(\n      this.snsDestinationTopicShortName, JSON.stringify(event), messageAttributes, true\n    );\n    this.batchLowestSequenceNumber = event.sequenceNumber < this.batchLowestSequenceNumber\n      ? event.sequenceNumber\n      : this.batchLowestSequenceNumber;\n    this.processedEventCount += 1;\n\n  }\n\n  private async checkBatchSequenceNumber(events: ReceivedEventData[], context: PartitionContext): Promise<void> {\n\n    const formerCheckpoint: DbCheckpoint = await DbCheckpoint.getCurrentCheckpoint(\n      this.checkpointDatabase, context.fullyQualifiedNamespace, context.eventHubName, context.consumerGroup,\n      context.partitionId\n    )\n    if (events !== undefined && events.length > 0) {\n      await context.updateCheckpoint(events[events.length - 1]);\n      if (formerCheckpoint !== undefined) {\n        if (this.batchLowestSequenceNumber - formerCheckpoint.sequenceNumber > 1 && this.batchLowestSequenceNumber !== Infinity) {\n          logger.warn(`There is a gap between the former checkpoint sequence number of ` +\n            `${formerCheckpoint.sequenceNumber} and lowest sequence number of ${this.batchLowestSequenceNumber} ` +\n            `found in this batch of events. This may indicate an issue in processing.`\n          )\n        }\n      }\n    }\n  }\n\n  public async run(context: Context) {\n\n    await loadDatabaseParams(envConstants.default.SERVICE, this.databaseSecretArn);\n    logger.debug(\n      `Event hub ingest engine initialized, fetching events from ${this.eventHubParameters.eventHubName} using checkpoint database ${this.checkpointDatabase}....`\n    );\n    await new Promise<void>(() => {\n      const subscription = this.consumerClient.subscribe({\n          processEvents: async (events: ReceivedEventData[], context: PartitionContext) => {\n            // It is possible for `events` to be an empty array. This can happen if there were no new\n            // events to receive in the `maxWaitTimeInSeconds`, which is defaulted to 60 seconds.\n            logger.info(`Processing events from partition ${context.partitionId}....`)\n            this.batchLowestSequenceNumber = Infinity;\n            await Promise.all(events.map(event => this.processEvent(event)));\n            await this.checkBatchSequenceNumber(events, context);\n          },\n          processError: async (err, context) => {\n            logger.warn(`Error on partition \"${context.partitionId}\": ${JSON.stringify(err.message)}: ` +\n              `${JSON.stringify(err.stack)}. And context is ${JSON.stringify(context)}.`);\n          }\n        },\n        INGEST_OPTIONS\n      );\n\n      // Close out before Lambda times out\n      setTimeout(async () => {\n        await subscription.close();\n        await this.consumerClient.close();\n        logger.info(`Done with this Lambda execution, shutting down after collecting ${this.processedEventCount} events.`);\n      }, context.getRemainingTimeInMillis() - LAMBDA_SHUTDOWN_HEADROOM);\n    });\n    }\n\n\n\n}\n\nexport { EventHubIngestEngine };\nexport type { EventHubParameters };\n", "// Perform interactions with the RDBMS checkpoint store\n\nimport {v4 as uuidv4} from \"uuid\";\nimport { Checkpoint, CheckpointStore, PartitionOwnership } from \"@azure/event-hubs\";\n\nimport { logger } from \"./utilities\";\nimport { readFromDatabase, writeToDatabase, beginTransaction, commitTransaction } from \"./database\";\nimport { SqlValuesType } from \"./dataApiUtil\";\nimport { DbCheckpoint } from \"./eventHubDbCheckpoint\";\nimport { DbPartitionOwnership } from \"./eventHubDbPartitionOwnership\";\n\nexport class DbCheckpointStore implements CheckpointStore {\n\n  static database: string;\n  constructor(database: string) {\n    DbCheckpointStore.database = database;\n  }\n\n  // https://learn.microsoft.com/en-us/javascript/api/%40azure/event-hubs/operationoptions?view=azure-node-latest\n  public async listOwnership(fullyQualifiedNamespace: string, eventHubName: string,\n                             consumerGroup: string): Promise<DbPartitionOwnership[]> {\n\n    logger.info(`Listing ownerships for ${fullyQualifiedNamespace}, ${eventHubName}, ${consumerGroup}....`);\n    let ownershipRecords: Record<string, string | number>[];\n    try {\n      ownershipRecords = await readFromDatabase(\n        DbCheckpointStore.database, DbPartitionOwnership.getSelectOwnershipsSql(DbCheckpointStore.database),\n        DbPartitionOwnership.buildSelectOwnershipsSqlParameters(\n            fullyQualifiedNamespace, eventHubName, consumerGroup\n        ) as SqlValuesType\n      );\n    } catch (e) {\n      logger.warn(`Error encountered: ${e.message}.`)\n    }\n\n    const ownerships: DbPartitionOwnership[] = [];\n    ownershipRecords.forEach((record: Record<string, string | number>) => {\n      ownerships.push(new DbPartitionOwnership(\n        DbCheckpointStore.database, record.fully_qualified_namespace as string, record.event_hub_name as string,\n        record.consumer_group as string, record.partition_id as string, record.owner_id as string,\n        record.last_modified_time_in_ms as number, record.e_tag as string\n      ));\n    });\n    logger.info(`${ownerships.length} partition ownership(s) returned: ${JSON.stringify(ownerships)}`);\n\n    return ownerships;\n  }\n\n  public listCheckpoints(fullyQualifiedNamespace: string, eventHubName: string, consumerGroup: string): Promise<DbCheckpoint[]> {\n    logger.info(`Listing checkpoints for ${fullyQualifiedNamespace}, ${eventHubName}, ${consumerGroup}....`);\n    return readFromDatabase(DbCheckpointStore.database, DbCheckpoint.getSelectCheckpointsSql(DbCheckpointStore.database),\n        DbCheckpoint.buildSelectSqlParameters(fullyQualifiedNamespace, eventHubName, consumerGroup)\n    ).then((checkpoint_records: Record<string, string | number>[]) => {\n      const checkpoints: DbCheckpoint[] = [];\n      checkpoint_records.forEach((record: Record<string, string | number>) => {\n        const checkpoint: DbCheckpoint = new DbCheckpoint(\n          DbCheckpointStore.database, record.fully_qualified_namespace as string, record.event_hub_name as string,\n          record.consumer_group as string, record.partition_id as string, record.sequence_number as number,\n          record.offset as number, record.e_tag as string\n        );\n        checkpoints.push(checkpoint)\n        logger.debug(`Adding checkpoint ${checkpoint} to response.`)\n      });\n\n      logger.info(`Returning ${checkpoints.length} checkpoints.`)\n      return checkpoints;\n    }).catch((e) => {\n      logger.warn(`Error occurred: ${e.message}: ${e.stack}.`)\n      throw e;\n    });\n  }\n\n  public async claimOwnership(requestedPartitionOwnerships: PartitionOwnership[]): Promise<DbPartitionOwnership[]> {\n    if (!requestedPartitionOwnerships || requestedPartitionOwnerships.length === 0) {\n      return [];\n    }\n\n    logger.debug(`Processing claim request for ${requestedPartitionOwnerships.length} partition(s): ` +\n        `${JSON.stringify(requestedPartitionOwnerships)}....`);\n    const currentPartitionOwnerships: DbPartitionOwnership[] = [];\n    for (const partitionOwnership of requestedPartitionOwnerships) {\n\n      // Into our extended object\n      const dbPartitionOwnership = new DbPartitionOwnership(\n        DbCheckpointStore.database, partitionOwnership.fullyQualifiedNamespace, partitionOwnership.eventHubName,\n        partitionOwnership.consumerGroup, partitionOwnership.partitionId, partitionOwnership.ownerId,\n        partitionOwnership.lastModifiedTimeInMs, partitionOwnership.etag\n      );\n\n      // For new partition ownerships, there will have been no record in the database and thus no etag. Instead\n      // of inserting 'undefined' (string) into database let's form a proper etag.\n      dbPartitionOwnership.etag = dbPartitionOwnership.etag === undefined ? uuidv4() : dbPartitionOwnership.etag;\n\n      dbPartitionOwnership.lastModifiedTimeInMs = Date.now();\n\n      logger.info(`Processing claim for partition ownership ${dbPartitionOwnership}....`);\n\n      // See UPSERT_OWNERSHIP_SQL logic (which performs an etag check and generates new etag) for context\n      // with respect to the below\n      const transactionId: string = await beginTransaction(DbCheckpointStore.database);\n      let updatedPartitionOwnership: DbPartitionOwnership | undefined;\n      try {\n        await writeToDatabase(\n            DbCheckpointStore.database, DbPartitionOwnership.getUpsertOwnershipSql(DbCheckpointStore.database),\n            dbPartitionOwnership.buildOwnershipUpsertSqlParameters(), transactionId\n        );\n        logger.debug(`Fetching updated record from database for partition ownership ${dbPartitionOwnership} in order ` +\n            `to get the latest etag generated by the row insertion/update.`);\n        updatedPartitionOwnership = await dbPartitionOwnership.fetchPersistedRecordFromDatabase(transactionId) as DbPartitionOwnership;\n      } catch (e) {\n          logger.warn(`Error encountered during partition claim processing: ${e.message}: ${e.stack}.`);\n          continue;\n      } finally {\n          await commitTransaction(transactionId);  // Safe now that we have updated ownership from table\n      }\n\n      if (updatedPartitionOwnership === undefined) {  // Insert/update failed, suggesting etag conflict\n        logger.info(`Partition ownership ${dbPartitionOwnership} represents possible conflicting request ` +\n            `for ownership of partition ${dbPartitionOwnership.partitionId}, claim request denied.`\n        )\n        continue;\n      }\n      currentPartitionOwnerships.push(updatedPartitionOwnership);\n      logger.info(\n        updatedPartitionOwnership.ownerId\n        ? `${updatedPartitionOwnership.ownerId} claimed ownership of partition ${updatedPartitionOwnership.partitionId}, last modified time of ${updatedPartitionOwnership.lastModifiedTimeInMs}.`\n        : `Partition ${updatedPartitionOwnership.partitionId} gracefully released from ownership with last modified time of ${updatedPartitionOwnership.lastModifiedTimeInMs}.`\n      );\n\n    }\n\n    return currentPartitionOwnerships;\n  }\n\n  public async updateCheckpoint(checkpoint: Checkpoint): Promise<void> {\n    const dbCheckpoint = new DbCheckpoint(DbCheckpointStore.database, checkpoint.fullyQualifiedNamespace,\n      checkpoint.eventHubName, checkpoint.consumerGroup, checkpoint.partitionId, checkpoint.sequenceNumber,\n      checkpoint.offset, uuidv4()\n    );\n    logger.info(`Updating checkpoint to ${dbCheckpoint}....`);\n\n    await writeToDatabase(\n      DbCheckpointStore.database, DbCheckpoint.getUpsertCheckpointSql(DbCheckpointStore.database),\n      dbCheckpoint.buildUpsertSqlParameters()\n    );\n\n    logger.info(`Updated checkpoint for partition ${checkpoint.partitionId} with sequence number ` +\n      `${checkpoint.sequenceNumber}.`)\n\n    }\n}\n", "import {\n  RDSDataClient, ExecuteStatementCommand, ExecuteStatementCommandInput, RDSDataClientConfig, ColumnMetadata,\n  BeginTransactionCommand, CommitTransactionCommand, BatchExecuteStatementCommand, BatchExecuteStatementResponse,\n  SqlParameter, ExecuteStatementResponse, UpdateResult\n} from \"@aws-sdk/client-rds-data\";\nimport { logger } from \"./utilities\";\nimport { getParameters } from \"./parameters\";\nimport * as envConstants from \"./initConstants\";\nimport { encodeParams, decodeRows, SqlValuesType, encodeRow, encodeRows } from \"./dataApiUtil\";\n\nconst LONG_RUNNING_QUERY_SECS = 10  // Consider anything longer than this as \"long-running\"\n\n// Consistent short names for database params regardless the service\nconst neededParams = [\"database-resource-arn\", \"database-endpoint\"];\n\nlet rdsConfig: RDSDataClientConfig | undefined;\nlet client: RDSDataClient | undefined;\nlet baseDbConnectionParams: Partial<ExecuteStatementCommandInput> | undefined;\n\n/**\n * Asynchronously loads and sets database configuration parameters for the current process based\n * on the service name, and applies that configuration to the RDS client and database connection.\n *\n * This function expects certain environment variables to be set for configuring the RDS client.\n * It uses `process.env.REGION` for the AWS region configuration. If the application is not deployed\n * (as indicated by `envConstants.default.IS_DEPLOYED`), it sets the RDS client's credentials and endpoint manually.\n *\n * The function initializes `baseDbConnectionParams` with essential connection information like\n * resource ARN and secret ARN, to be augmented with additional parameters later on.\n *\n * @param service - The name of the service for which database parameters are to be loaded; e.g.,\n *   'opfyx-data-fr24'.\n * @param secretArnShortName - SSM short name of secret ARN param in service's parameters path; e.g.,\n *   'database-runtime-secret-arn'.\n *\n * @returns A promise that resolves when the database parameters have been successfully loaded and set.\n *\n * @example\n * ```typescript\n * await loadDatabaseParams('my-service');\n * // Now the RDS client and baseDbConnectionParams are configured and ready for use.\n * ```\n */\nasync function loadDatabaseParams(service: string, secretArnShortName: string): Promise<void> {\n\n  neededParams.push(secretArnShortName);\n  const params = await getParameters(neededParams, service);\n\n  rdsConfig = {\n      region: process.env.REGION\n  }\n  if (!envConstants.default.IS_DEPLOYED) {\n      rdsConfig.credentials = { accessKeyId: 'aaa', secretAccessKey: 'bbb' };\n      rdsConfig.endpoint = params.get('database-endpoint');\n      logger.info(`Using local database at ${rdsConfig.endpoint}.`);\n  }\n  client = new RDSDataClient(rdsConfig);\n\n  baseDbConnectionParams = {  // Init now, augment with additional arguments later\n      resourceArn: params.get('database-resource-arn'),  // required\n      secretArn: params.get(secretArnShortName),  // required\n      includeResultMetadata: true\n  };\n\n}\n\n// Type guards for overloaded response type from Data API\nfunction isExecuteStatementResponse(response: ExecuteStatementResponse | BatchExecuteStatementResponse):\n  response is ExecuteStatementResponse {\n\n  return 'numberOfRecordsUpdated' in response;\n}\n\nfunction isBatchExecuteStatementResponse(response: ExecuteStatementResponse | BatchExecuteStatementResponse):\n  response is BatchExecuteStatementResponse {\n\n  return 'updateResults' in response;\n}\n\n/**\n * Begin new transaction and returns its ID.\n */\nasync function beginTransaction(database: string): Promise<string> {\n\n    await loadDatabaseParams;\n    if (!client || !baseDbConnectionParams) {\n      throw new Error(\"RDS client or connection params not initialized! Check database configuration.\");\n    }\n    const inputBeginTrans = {\n      resourceArn: baseDbConnectionParams['resourceArn'], secretArn: baseDbConnectionParams['secretArn'], database\n    };\n    const commandBeginTrans = new BeginTransactionCommand(inputBeginTrans);\n    const responseBeginTrans = await client.send(commandBeginTrans);\n\n  return responseBeginTrans['transactionId'];\n}\n\n/**\n * Commit existing transaction.\n */\nasync function commitTransaction(transactionId: string): Promise<void> {\n\n  await loadDatabaseParams;\n  if (!client || !baseDbConnectionParams) {\n    throw new Error(\"RDS client or connection params not initialized! Check database configuration.\");\n  }\n\n  const inputCommitTrans = {\n    resourceArn: baseDbConnectionParams['resourceArn'],\n    secretArn: baseDbConnectionParams['secretArn'],\n    transactionId: transactionId\n  };\n\n  const commandCommitTrans = new CommitTransactionCommand(inputCommitTrans);\n  client.send(commandCommitTrans);\n}\n\n/**\n * Lower-level wrapper for executing SQL statement on a specified database using the AWS Data API. Provides more\n * granular access to the Data API where read/write functions do not provide sufficient coverage.\n *\n * @param {string} database - The name of the database to execute the statement on.\n * @param {string} sql - The SQL statement to be executed.\n * @param {SqlParameter[] | SqlParameter[][]} [parameters] - Optional parameters to bind to the SQL statement.\n * @param {boolean} [batch] - Indicates whether the statement should be executed as a batch (if supported).\n * @param {string} [transactionId] - An optional transaction identifier if the statement is part of a transaction.\n *\n * @throws {Error} Throws an error if the RDS client or connection parameters are not initialized.\n *\n * @returns {Promise<ExecuteStatementResponse | BatchExecuteStatementResponse>} A Promise that resolves with the response\n * from executing the SQL statement. The response type depends on whether the statement is executed as a batch or not.\n */\nasync function executeStatement(database: string, sql: string, parameters?: SqlParameter[] | SqlParameter[][],\n  batch?: boolean, transactionId?: string): Promise<ExecuteStatementResponse | BatchExecuteStatementResponse> {\n\n  await loadDatabaseParams;\n  if (!client || !baseDbConnectionParams) {\n    throw new Error(\"RDS client or connection params not initialized! Check database configuration.\");\n  }\n\n  // Augment base config with our query-specific arguments, automatically committed if no transaction ID\n  const mergedParams = {\n    ...baseDbConnectionParams, sql, database, ...(transactionId !== undefined ? { transactionId } : {}),\n    ...(!batch ? { parameters } : { parameterSets: parameters })\n  } as ExecuteStatementCommandInput;\n\n  const command = !batch ? new ExecuteStatementCommand(mergedParams) : new BatchExecuteStatementCommand(mergedParams);\n\n  logger.debug(\n    `Executing SQL ${sql} on database ${database} with parameters ${JSON.stringify(parameters)}....`\n  );\n\n  let response: ExecuteStatementResponse | BatchExecuteStatementResponse;\n  const startTime = Date.now();\n  try {\n    response = (!batch)\n      ? await client.send(command) as ExecuteStatementResponse\n      : await client.send(command) as BatchExecuteStatementResponse;\n  } catch (e) {\n    logger.warn(`Error executing SQL: ${e.message}: ${e.stack}.`);\n    throw e;\n  }\n  const endTime = Date.now();\n\n  logger.debug(`Response from database: ${JSON.stringify(response).replace(/\\n/g, ' ')}.`);\n  const duration = (endTime - startTime) / 1000;\n  if (duration > LONG_RUNNING_QUERY_SECS) {\n    logger.info(`Long-running query took ${duration}s to process: ${sql} with parameters ${parameters}.`);\n  }\n\n  return response;\n}\n\n/**\n * Reads data from a specified database by executing an SQL query using the AWS Data API. Handles the\n * encoding of parameters from more intuitive SqlValuesType into Data API context, and coming the other\n * direction the decoding/parsing of Data API response structure into SqlValuesType.\n *\n * @param {string} database - The name of the database to read data from.\n * @param {string} sql - The SQL query to execute for data retrieval.\n * @param {SqlValuesType} [parameters] - Optional parameters to bind to the SQL query.\n * @param {string} [transactionId] - Optionally include as part of a transaction.\n *\n * @returns {<T>Promise<T[]>} A Promise that resolves with an array of objects representing the retrieved data.\n *   Each object contains key-value pairs where keys are column names and values are corresponding values\n *   from the database.\n */\nasync function readFromDatabase<T>(database: string, sql: string, parameters?: SqlValuesType,\n  transactionId?: string): Promise<T[]> | undefined {\n\n  const encodedParameters: SqlParameter[] = encodeParams(parameters);\n  const response = await executeStatement(database, sql, encodedParameters, false, transactionId);\n\n  if (isExecuteStatementResponse(response)) {\n    const decodedRows: SqlValuesType[] = decodeRows(\n      response.records, response.columnMetadata.map((col: ColumnMetadata) => col.label),\n      response.columnMetadata.map((col: ColumnMetadata) => col.typeName)\n    );\n    logger.debug(`${decodedRows.length} rows returned from database:\\n${JSON.stringify(decodedRows)}.`);\n\n    return decodedRows as T[];\n  } else {\n    throw Error(`Unexpected response type encountered from Data API: ${typeof (response)}.`);\n  }\n}\n\n/**\n * Performs single-record SQL write (insert/upsert/delete) operation to specified database by executing an\n * SQL statement using the AWS Data API. Handles the encoding of parameters from more intuitive SqlValuesType\n * into Data API context.\n *\n * @param {string} database - The name of the database to write data to.\n * @param {string} sql - The SQL statement to execute for data writing (e.g., INSERT, UPDATE, DELETE).\n * @param {<T>} row - Object representing the column names/values to be written to the database.\n *    Must be mappable to key/value pairs via JS Object.\n * @param {string} [transactionId] - Optional transaction identifier if the write operation is part of a transaction.\n *    Auto commit is performed if no transaction ID is provided.\n *\n * @returns {Promise<{\"Records updated\": number}>} A Promise that resolves with an object containing the number\n *   of records updated as a result of executing the SQL statement.\n */\nasync function writeToDatabase<T>(database: string, sql: string, row: T,\n  transactionId?: string): Promise<ExecuteStatementResponse> {\n\n  const encodedRow: SqlParameter[] = encodeRow(row);\n  const response = await executeStatement(database, sql, encodedRow, false, transactionId);\n\n  if (isExecuteStatementResponse(response)) {\n    logger.debug(`${response.numberOfRecordsUpdated} records updated.`);\n    return response;\n  } else {\n    throw Error(`Unexpected response type encountered from Data API: ${typeof (response)}.`);\n  }\n}\n\n/**\n * Performs batch insert of set of records to specified database by executing an SQL statement using the AWS Data API.\n * Handles the encoding of parameters into Data API context from object-based interface/model corresponding to\n * definition of the target database table.\n *\n * @param {string} database - The name of the database to write data to.\n * @param {string} sql - The SQL statement to execute for data writing (e.g., INSERT, UPDATE, DELETE).\n * @param {<T>>T[]} rows - Array of objects representing multiple records to be written to the database. Must be\n *    mappable to key/value pairs via JS Object.\n * Each object contains key-value pairs where keys are column names and values are data values.\n * @param {string} [transactionId] - Optional transaction identifier if the write operation is part of a transaction.\n *\n * @returns {Promise<{\"Records updated\": number}>} A Promise that resolves with an object containing the number\n * of records updated as a result of executing the SQL statement.\n */\nasync function writeBatchToDatabase<T>(database: string, sql: string, rows: T[],\n  transactionId?: string): Promise<{ \"Update results\": UpdateResult[] }> {\n\n  const encodedRows: SqlParameter[][] = encodeRows(rows);\n  const response = await executeStatement(database, sql, encodedRows, true, transactionId);\n  if (transactionId !== undefined) {\n    await commitTransaction(transactionId);\n  }\n\n  if (isBatchExecuteStatementResponse(response)) {\n    return { \"Update results\": response.updateResults };\n  }\n}\n\nexport {\n    readFromDatabase, writeToDatabase, executeStatement, writeBatchToDatabase, commitTransaction, beginTransaction, loadDatabaseParams\n}\n", "import { Field, SqlParameter } from \"@aws-sdk/client-rds-data\";\nimport { TypeHint } from \"@aws-sdk/client-rds-data\";\n\ntype OptionalTypeHint = {\n    typeHint?: TypeHint;\n}\n\ntype SqlValue = string | number | boolean | object | (string | number | boolean | object)[];\n\n/**\n * Represents user/developer-friendly mapping of database column names to column values for:\n * - Set of parameters submitted to these functions as part of a SQL query (select or upsert), where\n *     functions in this module encode this mapping to the Data API spec prior to submitting.\n * - Set of rows returned from a SQL query, where functions in this module decode the Data API response\n *     into this more accessible mapping.\n */\ntype SqlValuesType = Record<string, SqlValue>;\n\nfunction encodeRows<T>(rowsList: T[]): SqlParameter[][] {\n    return rowsList.map((row) => encodeRow(row));\n}\n\nfunction encodeRow<T>(row: T): SqlParameter[] {\n    return Object.entries(row).map(([k, v]) => encodeItem(k, v));\n}\n\nfunction encodeParams(params: SqlValuesType): SqlParameter[] {\n    if (params === undefined) { return [] }\n    return Object.entries(params).map(([k, v]) => encodeItem(k, v));\n}\n\nfunction encodeItem<T>(name: string, value: T): SqlParameter {\n    const [val, typeHint] = encodeValue(value);\n    return { name: name, value: val, ...typeHint };\n}\n\nfunction decodeRows(records: Field[][], colNames: string[], colTypeNames: string[]): SqlValuesType[] {\n    const results: SqlValuesType[] = [];\n    records.forEach((record) => {\n        const resultRow: SqlValuesType = {};\n        record.forEach((val, idx) => {\n            resultRow[colNames.at(idx)] = decodeValue(val, colTypeNames.at(idx));\n        });\n        results.push(resultRow as SqlValuesType);\n    });\n\n    return results;\n}\n\nfunction decodeValue(s: Field, colTypeName: string): SqlValue {\n    const result = s.stringValue || s.longValue || s.doubleValue || s.booleanValue || (s.$unknown as unknown as string);\n    return colTypeName==\"JSON\" ? JSON.parse(s.stringValue) as object : result\n}\n\nfunction encodeValue<T>(value: T): [Field, OptionalTypeHint?] {\n    const valueType = typeof value;\n    switch (valueType) {\n        case 'string': {\n            const result = { stringValue: value as unknown as string };\n            if (containsDateTime(value as unknown as string)) {\n                result['stringValue'] = result['stringValue'].replace('T', ' ');\n                return [result, { typeHint: \"TIMESTAMP\" }];\n            } else if (containsDate(value as unknown as string)) {\n                return [result, {typeHint: \"DATE\"}];\n            } else {\n                return [result];\n            }\n        }\n        case 'boolean': {\n            return [{ booleanValue: Boolean(value) }];\n        }\n        case 'number': {\n            if (Number.isInteger(value)) {\n                return [{ longValue: Number(value) }];\n            } else {\n                return [{ doubleValue: Number(value) }];\n            }\n        }\n        case 'object': {\n            return [{ stringValue: JSON.stringify(value) }];\n        }\n    }\n\n    // TODO (JDL): This needs to be vetted/adjusted to accommodate mysql....?\n    if (Array.isArray(value)) {\n        return [{ stringValue: JSON.stringify(value).replace('[', '{').replace(']', '}') }];\n    } else if (value as unknown as string === 'IS NULL' || value === null) {\n        return [{ isNull: true }];\n    } else if (value as unknown as string === 'IS NOT NULL') {\n        return [{ isNull: false }];\n    }\n\n    return [{ stringValue: String(value) }];\n}\n\nfunction containsDateTime(value: string): boolean {\n    // Regular expression to match datetime format (YYYY-MM-DD HH:mm:ss)\n    const datetimeRegex = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/;\n    return datetimeRegex.test(value);\n}\n\nfunction containsDate(value: string): boolean {\n    // Regular expression to match datetime format (YYYY-MM-DDTHH:mm:ss)\n    const datetimeRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n    return datetimeRegex.test(value);\n}\n\nexport { encodeRow, encodeRows, decodeRows, encodeParams };\nexport type { SqlValuesType };\n", "// Implementation of event hub Checkpoint to support using with RDBMS\n\nimport { Checkpoint } from \"@azure/event-hubs\";\nimport { SqlValuesType } from \"./dataApiUtil\";\nimport { readFromDatabase } from \"./database\";\n\nconst tableName = 'ctl.event_hub_checkpoint';\n\nexport class DbCheckpoint implements Checkpoint {\n\n  static database: string;\n  fullyQualifiedNamespace: string;\n  eventHubName: string;\n  consumerGroup: string;\n  partitionId: string;\n  sequenceNumber: number;\n  offset: number;\n  etag: string;\n\n  constructor(database: string, fullyQualifiedNamespace: string, eventHubName: string, consumerGroup: string, partitionId: string,\n                sequenceNumber: number, offset: number, etag: string) {\n    DbCheckpoint.database = database;\n    this.fullyQualifiedNamespace = fullyQualifiedNamespace;\n    this.eventHubName = eventHubName;\n    this.consumerGroup = consumerGroup;\n    this.partitionId = partitionId;\n    this.sequenceNumber = sequenceNumber;\n    this.offset = offset;\n    this.etag = etag;\n  }\n\n  static getSelectCheckpointsSql(database: string): string {\n    return `\n      SELECT fully_qualified_namespace, event_hub_name, consumer_group, partition_id, sequence_number, \"offset\", e_tag\n      FROM ${database}.${tableName}\n      WHERE fully_qualified_namespace = :fully_qualified_namespace \n        AND event_hub_name = :event_hub_name AND consumer_group = :consumer_group;\n      `;\n  }\n\n  /**\n * Generate PostgresSQL INSERT that handles maintenance of offset value in checkpoint table.\n * key = fqn || ehn || cg || pid\n *\n * @param database - The name of the database to be accessed.\n *\n * MySQL Equivalent:\n *    return `\n *      INSERT INTO ${database}.${tableName} (\n *        fully_qualified_namespace, event_hub_name, consumer_group, partition_id, \"offset\", sequence_number, e_tag\n *      ) VALUES (\n *        :fully_qualified_namespace, :event_hub_name, :consumer_group, :partition_id, :offset, :sequence_number, :e_tag\n *      ) ON duplicate KEY UPDATE\n *        offset = VALUES(offset), sequence_number = VALUES(sequence_number);\n *      `;\n */\n  static getUpsertCheckpointSql(database: string): string {\n    return `\n      insert into ${database}.${tableName} (\n        fully_qualified_namespace, event_hub_name, consumer_group, partition_id, \"offset\", sequence_number, e_tag\n      ) values (\n        :fully_qualified_namespace, :event_hub_name, :consumer_group, :partition_id, :offset, :sequence_number, :e_tag::uuid\n      )\n      on conflict (fully_qualified_namespace, event_hub_name, consumer_group, partition_id) do update\n      set\n        \"offset\" = excluded.\"offset\",\n        sequence_number = excluded.sequence_number;\n      `;\n  }\n\n  static getUpdateCheckpointTimestampSql(database: string): string {\n    return `\n      UPDATE ${database}.${tableName}\n      SET sequence_number = sequence_number\n      WHERE fully_qualified_namespace = :fully_qualified_namespace\n        AND event_hub_name = :event_hub_name AND consumer_group = :consumer_group\n        AND partition_id = :partition_id;\n      `;\n  }\n\n  static buildSelectSqlParameters(fullyQualifiedNamespace: string, eventHubName: string,\n                                  consumerGroup: string): SqlValuesType {\n\n    return {\n      fully_qualified_namespace: fullyQualifiedNamespace,\n      event_hub_name: eventHubName,\n      consumer_group: consumerGroup\n    }\n  }\n\n  buildUpsertSqlParameters(): SqlValuesType {\n\n    return {\n      fully_qualified_namespace: this.fullyQualifiedNamespace,\n      event_hub_name: this.eventHubName,\n      consumer_group: this.consumerGroup,\n      partition_id: this.partitionId,\n      offset: this.offset,\n      sequence_number: this.sequenceNumber,\n      e_tag: this.etag\n    }\n  }\n\n  toString(): string {\n    return `DbCheckpoint(database: ${DbCheckpoint.database}, fullyQualifiedNamespace: ${this.fullyQualifiedNamespace}, ` +\n      `eventHubName: ${this.eventHubName}, consumerGroup: ${this.consumerGroup}, partitionId: ${this.partitionId}, ` +\n      `sequenceNumber: ${this.sequenceNumber}, offset: ${this.offset}, etag: ${this.etag})`;\n  }\n\n  static async getCurrentCheckpoint(database: string, fullyQualifiedNamespace: string, eventHubName: string,\n                                    consumerGroup: string | undefined, partitionId: string): Promise<DbCheckpoint | undefined> {\n\n    const parameters: SqlValuesType = {\n      fully_qualified_namespace: fullyQualifiedNamespace, event_hub_name: eventHubName,\n      consumer_group: consumerGroup, partition_id: partitionId\n    }\n    const records: SqlValuesType[] = await readFromDatabase(database, `\n        SELECT fully_qualified_namespace, event_hub_name, consumer_group, partition_id, \"offset\", sequence_number, e_tag\n        FROM ${database}.${tableName}\n        WHERE fully_qualified_namespace = :fully_qualified_namespace AND event_hub_name = :event_hub_name\n          AND consumer_group = :consumer_group AND partition_id = :partition_id;\n    `, parameters\n    );\n\n    if (records !== undefined && records.length > 0) {\n      const r: SqlValuesType = records[0];\n      return new DbCheckpoint(DbCheckpoint.database, r.fully_qualified_namespace as string, r.event_hub_name as string,\n        r.consumer_group as string, r.partition_id as string, r.sequence_number as number, r.offset as number,\n        r.e_tag as string\n      )\n    } else {\n      return undefined;\n    }\n  }\n}\n\n\n", "// Implementation of event hub PartitionOwnership to support using with RDBMS\n\nimport { PartitionOwnership } from '@azure/event-hubs';\nimport { SqlValuesType } from \"./dataApiUtil\";\nimport { readFromDatabase } from \"./database\";\n\n// Remove schema for MySQL\nconst tableName = 'ctl.event_hub_partition_ownership';\n\nexport class DbPartitionOwnership implements PartitionOwnership {\n\n  static database: string;\n  fullyQualifiedNamespace: string;\n  eventHubName: string;\n  consumerGroup: string;\n  partitionId: string;\n  ownerId: string;\n  lastModifiedTimeInMs: number;\n  etag: string;\n\n  constructor(database: string, fullyQualifiedNamespace: string, eventHubName: string, consumerGroup: string, partitionId: string, ownerId: string, lastModifiedTimeInMs: number, etag: string) {\n    DbPartitionOwnership.database = database;\n    this.fullyQualifiedNamespace = fullyQualifiedNamespace;\n    this.eventHubName = eventHubName;\n    this.consumerGroup = consumerGroup;\n    this.partitionId = partitionId;\n    this.ownerId = ownerId;\n    this.lastModifiedTimeInMs = lastModifiedTimeInMs;\n    this.etag = etag;\n  }\n\n  // Select specific ownership\n  static getSelectOwnershipSql(database: string): string {\n    return `\n      SELECT fully_qualified_namespace, event_hub_name, consumer_group, partition_id, owner_id, last_modified_time_in_ms, e_tag\n      FROM ${database}.${tableName}\n      WHERE fully_qualified_namespace = :fully_qualified_namespace \n        AND event_hub_name = :event_hub_name \n        AND consumer_group = :consumer_group\n        AND partition_id = :partition_id\n        AND owner_id = :owner_id\n        AND last_modified_time_in_ms = :last_modified_time_in_ms;\n      `;\n  }\n\n  // All ownerships for given fqn / ehn / cg\n  static getSelectOwnershipsSql(database: string): string {\n    return `\n      SELECT fully_qualified_namespace, event_hub_name, consumer_group, partition_id, owner_id, last_modified_time_in_ms, e_tag\n      FROM ${database}.${tableName}\n      WHERE fully_qualified_namespace = :fully_qualified_namespace \n        AND event_hub_name = :event_hub_name \n        AND consumer_group = :consumer_group;\n      `;\n  }\n\n/**\n * Generate PostgresSQL INSERT that handles maintenance of operational fields in the partition ownership table.\n * key = fqn || ehn || cg || pid\n *\n * @param database - The name of the database to be accessed.\n *\n * MySQL Equivalent:\n *    return `\n *      INSERT INTO ${database}.${tableName} (\n *        fully_qualified_namespace, event_hub_name, consumer_group, partition_id, owner_id, last_modified_time_in_ms, e_tag\n *      )\n *      VALUES (:fully_qualified_namespace, :event_hub_name, :consumer_group, :partition_id, :owner_id, :last_modified_time_in_ms, :e_tag)\n *      ON DUPLICATE KEY UPDATE\n *        owner_id = IF (e_tag IS NULL OR e_tag = VALUES (e_tag), VALUES (owner_id), owner_id),\n *        last_modified_time_in_ms = IF (e_tag IS NULL OR e_tag = VALUES (e_tag), VALUES (last_modified_time_in_ms), last_modified_time_in_ms),\n *        e_tag = IF (e_tag IS NULL OR e_tag = VALUES (e_tag), UUID(), e_tag);\n *     `;\n */\n  static getUpsertOwnershipSql(database: string): string {\n    return `\n      insert into ${database}.${tableName} (\n        fully_qualified_namespace, event_hub_name, consumer_group, partition_id, owner_id, last_modified_time_in_ms, e_tag\n      )\n      values (\n        :fully_qualified_namespace, :event_hub_name, :consumer_group, :partition_id, :owner_id, :last_modified_time_in_ms, :e_tag::uuid\n      )\n      on conflict (fully_qualified_namespace, event_hub_name, consumer_group, partition_id) do update\n      set\n        owner_id = case \n          when excluded.e_tag is null or excluded.e_tag = ${database}.${tableName}.e_tag\n          then excluded.owner_id \n          else ${database}.${tableName}.owner_id \n        end,\n        last_modified_time_in_ms = case \n          when excluded.e_tag is null or excluded.e_tag = ${database}.${tableName}.e_tag\n          then excluded.last_modified_time_in_ms\n          else ${database}.${tableName}.last_modified_time_in_ms \n        end,\n        e_tag = case \n          when excluded.e_tag is null or excluded.e_tag = ${database}.${tableName}.e_tag\n          then gen_random_uuid()\n          else ${database}.${tableName}.e_tag::uuid\n        end;\n      `;\n  }\n\n  static buildSelectOwnershipsSqlParameters(fullyQualifiedNamespace: string, eventHubName: string, consumerGroup: string): SqlValuesType {\n\n    return {\n      fully_qualified_namespace: fullyQualifiedNamespace,\n      event_hub_name: eventHubName,\n      consumer_group: consumerGroup\n    }\n  }\n\n  public buildSelectOwnershipSqlParameters(): SqlValuesType {\n\n    return {\n      fully_qualified_namespace: this.fullyQualifiedNamespace,\n      event_hub_name: this.eventHubName,\n      consumer_group: this.consumerGroup,\n      partition_id: this.partitionId,\n      owner_id: this.ownerId,\n      last_modified_time_in_ms: this.lastModifiedTimeInMs\n    }\n  }\n\n  public buildOwnershipUpsertSqlParameters(): SqlValuesType {\n\n    return {\n      fully_qualified_namespace: this.fullyQualifiedNamespace,\n      event_hub_name: this.eventHubName,\n      consumer_group: this.consumerGroup,\n      partition_id: this.partitionId,\n      owner_id: this.ownerId,\n      last_modified_time_in_ms: this.lastModifiedTimeInMs,\n      e_tag: this.etag\n    }\n  }\n\n  public async fetchPersistedRecordFromDatabase(transactionID?: string): Promise<DbPartitionOwnership | undefined> {\n\n    const rows: Record<string, unknown>[] = await readFromDatabase(\n      DbPartitionOwnership.database, DbPartitionOwnership.getSelectOwnershipSql(DbPartitionOwnership.database),\n      this.buildSelectOwnershipSqlParameters() as SqlValuesType, transactionID\n    )\n    if (rows.length === 0) {\n      return undefined\n    } else {  // Database constraints mean never having more than 1\n      const row = rows[0];\n      return new DbPartitionOwnership(DbPartitionOwnership.database, row.fully_qualified_namespace as string,\n        row.event_hub_name as string, row.consumer_group as string, row.partition_id as string, row.owner_id as string,\n        row.last_modified_time_in_ms as number, row.e_tag as string);\n    }\n  }\n\n  toString(): string {\n    return `DbPartitionOwnership(database: ${DbPartitionOwnership.database}, fullyQualifiedNamespace: ${this.fullyQualifiedNamespace}, ` +\n      `eventHubName: ${this.eventHubName}, consumerGroup: ${this.consumerGroup}, partitionId: ${this.partitionId}, ` +\n      `ownerId: ${this.ownerId}, etag: ${this.etag})`;\n  }\n}\n", "import * as envConstants from \"./initConstants\"\nimport { logger } from \"./utilities\"\nimport { SNS, SNSClientConfig, PublishCommandInput, PublishCommandOutput, MessageAttributeValue } from \"@aws-sdk/client-sns\"\n\nconst shouldUseLocal = envConstants.default.IS_DEPLOYED !== true;  // Assuming it's set to either true or false\n\nconst snsConfig: SNSClientConfig = {\n  region: envConstants.default.REGION,\n  ...(shouldUseLocal && { endpoint: \"http://127.0.0.1:4002\" })  // Bypass DNS (ipv4 vs ipv6 resolution in node)\n};\nconst snsClient = new SNS(snsConfig);\n\nfunction buildTopicArnFromName(topicName: string): string {\n    return `arn:aws:sns:${envConstants.default.REGION}:${envConstants.default.ACCOUNT_ID}:${topicName}`;\n}\n\nfunction encodeAttribute(val: number | string): MessageAttributeValue {\n    return {\n        DataType: typeof (val) === 'string' ? 'String' : 'Number',\n        StringValue: val.toString()\n    }\n}\n\n/**\n * Asynchronously publishes a message to an AWS SNS topic with optional message attributes.\n * It accepts message attributes as key/value pairs which are encoded to the extended format\n * expected by SNS. When `shortTopicName` is true, the function constructs the full topic name\n * using app/stage environment params.\n *\n * @param topicName - The name of the SNS topic to which the message will be published.\n *   This can be a full name or a short name based on the `shortTopicName` flag, where short name does not\n *   include the '<app>-' prefix nor '-<stage>' suffix. Short name should generally be used to accommodate\n *   portability.\n * @param message - The message to be published to the SNS topic.\n * @param messageAttributes - An object containing the message attributes as simple key/value pairs,\n *   encoded by this function to the extended format expected by the SNS service. Any attributes with\n *   undefined value are filtered out before publishing.\n * @param shortTopicName - Optional. A boolean flag indicating whether the provided `topicName`\n *   is a short name that needs to be expanded to a full topic name. Defaults to false.\n *\n * @returns A Promise that resolves to the result of the SNS publish command (PublishCommandOutput).\n *\n * Example usage:\n * ```typescript\n * const messageAttributes = { attr1: 'value1', attr2: 123 };\n * publishSnsMessage('my-topic-v1', 'Hello SNS', messageAttributes, true)\n *   .then(response => console.log(response))\n *   .catch(error => console.error(error));\n * ```\n */\nexport async function publishSnsMessage(topicName: string, message: string, messageAttributes: object, shortTopicName?: boolean): Promise<PublishCommandOutput> {\n    const encodedMessageAttributes = Object.fromEntries(\n        Object.entries(messageAttributes)\n        .map(([key, value]) => {\n            return (value !== undefined) ? [key, encodeAttribute(value)] : undefined;\n        })\n        .filter(Boolean)\n    );\n    const targetTopic = shortTopicName === true ? `${envConstants.default.SERVICE}-${topicName}-${envConstants.default.STAGE}` : topicName;\n    const pubCommandInput: PublishCommandInput = {\n        TopicArn: buildTopicArnFromName(targetTopic),\n        Message: message,\n        MessageAttributes: encodedMessageAttributes\n    };\n    logger.info(`Publishing message on topic ${targetTopic} with ${JSON.stringify(pubCommandInput)}`);\n    return snsClient.publish(pubCommandInput)\n}"],
  "mappings": "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",
  "names": ["module", "Buffer", "Symbol", "Uint8Array", "Map", "merge", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "HttpApiKeyAuthLocation", "SMITHY_CONTEXT_KEY", "HttpApiKeyAuthLocation2", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "HttpRequest", "HttpResponse", "import_types", "_HttpRequest", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_protocol_http", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "logger", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_protocol_http", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "EndpointError", "isIpAddress", "resolveEndpoint", "import_types3", "logger", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_protocol_http", "version", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "getSmithyContext", "normalizeProvider", "import_types", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_util_middleware", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "_ProviderError", "logger", "_CredentialsProviderError", "_TokenProviderError", "getHomeDir", "getSSOTokenFilepath", "getSSOTokenFromFile", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_types", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "logger", "endpointUrl", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "serializerMiddlewareOption", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "endpointMiddlewareOptions", "import_util_middleware", "import_middleware_serde", "import_types", "import_util_middleware", "crypto", "version", "URL", "crypto", "import_crypto", "import_crypto", "crypto", "crypto", "import_crypto", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "BASE64_REGEX", "fromBase64", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "toBase64", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__copyProps", "__toCommonJS", "getAwsChunkedEncodingStream", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__create", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__getProtoOf", "__hasOwnProp", "__export", "__copyProps", "__toESM", "__toCommonJS", "import_protocol_http", "_NodeHttpHandler", "logger", "_NodeHttp2Handler", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_protocol_http", "_FetchHttpHandler", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "sdkStreamMixin", "sdkStreamMixin", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "_Uint8ArrayBlobAdapter", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "collectBody", "emitWarningIfUnsupportedVersion", "expectUnion", "getValueFromTextNode", "logger", "resolvedPath", "import_types", "logger2", "_ServiceException", "warningEmitted", "version", "_LazyJsonString", "resolvedPath2", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "retryMiddlewareOptions", "import_protocol_http", "import_uuid", "import_util_middleware", "import_smithy_client", "import_types", "import_types", "getSmithyContext", "import_protocol_http", "client", "getSmithyContext", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_protocol_http", "version", "import_protocol_http", "import_protocol_http", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "SignatureV4", "import_util_middleware", "_Int64", "init_httpAuthSchemes", "val", "import_smithy_client", "import_smithy_client", "val", "module", "val", "module", "entityName", "val", "module", "module", "val", "result", "entityName", "val", "module", "XMLParser", "module", "attStr", "module", "val", "module", "XMLParser", "import_smithy_client", "val", "dist_es_exports", "init_dist_es", "init_httpAuthSchemes", "v", "d", "b", "__assign", "module", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "logger", "_InstanceMetadataV1FallbackError", "logger", "logger", "require_dist_cjs", "require_httpAuthSchemeProvider", "require_package", "module", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_crypto", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_fs", "require_dist_cjs", "module", "__create", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__getProtoOf", "__hasOwnProp", "__export", "__copyProps", "__toESM", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_smithy_client", "import_core", "import_middleware_endpoint", "import_middleware_retry", "import_protocol_http", "import_middleware_serde", "_SSOServiceException", "_InvalidRequestException", "_ResourceNotFoundException", "_TooManyRequestsException", "_UnauthorizedException", "import_core2", "require_httpAuthSchemeProvider", "require_package", "module", "require_ruleset", "require_endpointResolver", "require_runtimeConfig_shared", "require_runtimeConfig", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_smithy_client", "import_core", "import_middleware_endpoint", "import_middleware_retry", "import_protocol_http", "import_middleware_serde", "_SSOOIDCServiceException", "_AccessDeniedException", "_AuthorizationPendingException", "_ExpiredTokenException", "_InternalServerException", "_InvalidClientException", "_InvalidGrantException", "_InvalidRequestException", "_InvalidScopeException", "_SlowDownException", "_UnauthorizedClientException", "_UnsupportedGrantTypeException", "_InvalidRequestRegionException", "_InvalidClientMetadataException", "_InvalidRedirectUriException", "import_core2", "require_dist_cjs", "module", "__create", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__getProtoOf", "__hasOwnProp", "__export", "__copyProps", "__toESM", "__toCommonJS", "import_fs", "logger", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__esm", "__export", "__copyProps", "__toCommonJS", "logger", "require_httpAuthSchemeProvider", "require_package", "module", "require_ruleset", "require_endpointResolver", "require_runtimeConfig_shared", "require_runtimeConfig", "STSClient", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "import_middleware_endpoint", "import_middleware_serde", "import_smithy_client", "_STSServiceException", "_ExpiredTokenException", "_MalformedPolicyDocumentException", "_PackedPolicyTooLargeException", "_RegionDisabledException", "_IDPRejectedClaimException", "_InvalidIdentityTokenException", "_IDPCommunicationErrorException", "_InvalidAuthorizationMessageException", "import_core", "import_protocol_http", "logger", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "logger", "__createBinding", "__setModuleDefault", "__importStar", "fromWebToken", "fromTokenFile", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__copyProps", "__toCommonJS", "require_dist_cjs", "module", "__create", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__getProtoOf", "__hasOwnProp", "__export", "__copyProps", "__toESM", "__toCommonJS", "logger", "fromTokenFile", "require_dist_cjs", "module", "__create", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__getProtoOf", "__hasOwnProp", "__export", "__copyProps", "__toESM", "__toCommonJS", "fromTokenFile", "require_ruleset", "require_endpointResolver", "require_runtimeConfig_shared", "require_runtimeConfig", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "client", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "GetParameterCommand", "GetParametersCommand", "SSMClient", "import_smithy_client", "paginateGetParametersByPath", "import_core", "import_middleware_endpoint", "import_middleware_retry", "import_protocol_http", "import_middleware_serde", "import_core2", "import_uuid", "_SSMServiceException", "_InternalServerError", "_InvalidResourceId", "_InvalidResourceType", "_TooManyTagsError", "_TooManyUpdates", "_AlreadyExistsException", "_OpsItemConflictException", "_OpsItemInvalidParameterException", "_OpsItemLimitExceededException", "_OpsItemNotFoundException", "_OpsItemRelatedItemAlreadyExistsException", "_DuplicateInstanceId", "_InvalidCommandId", "_InvalidInstanceId", "_DoesNotExistException", "_InvalidParameters", "_AssociationAlreadyExists", "_AssociationLimitExceeded", "_InvalidDocument", "_InvalidDocumentVersion", "_InvalidOutputLocation", "_InvalidSchedule", "_InvalidTag", "_InvalidTarget", "_InvalidTargetMaps", "_UnsupportedPlatformType", "_DocumentAlreadyExists", "_DocumentLimitExceeded", "_InvalidDocumentContent", "_InvalidDocumentSchemaVersion", "_MaxDocumentSizeExceeded", "_IdempotentParameterMismatch", "_ResourceLimitExceededException", "_OpsItemAccessDeniedException", "_OpsItemAlreadyExistsException", "_OpsMetadataAlreadyExistsException", "_OpsMetadataInvalidArgumentException", "_OpsMetadataLimitExceededException", "_OpsMetadataTooManyUpdatesException", "_ResourceDataSyncAlreadyExistsException", "_ResourceDataSyncCountExceededException", "_ResourceDataSyncInvalidConfigurationException", "_InvalidActivation", "_InvalidActivationId", "_AssociationDoesNotExist", "_AssociatedInstances", "_InvalidDocumentOperation", "_InvalidDeleteInventoryParametersException", "_InvalidInventoryRequestException", "_InvalidOptionException", "_InvalidTypeNameException", "_OpsMetadataNotFoundException", "_ParameterNotFound", "_ResourceInUseException", "_ResourceDataSyncNotFoundException", "_MalformedResourcePolicyDocumentException", "_ResourceNotFoundException", "_ResourcePolicyConflictException", "_ResourcePolicyInvalidParameterException", "_ResourcePolicyNotFoundException", "_TargetInUseException", "_InvalidFilter", "_InvalidNextToken", "_InvalidAssociationVersion", "_AssociationExecutionDoesNotExist", "_InvalidFilterKey", "_InvalidFilterValue", "_AutomationExecutionNotFoundException", "_InvalidPermissionType", "_UnsupportedOperatingSystem", "_InvalidInstanceInformationFilterValue", "_InvalidInstancePropertyFilterValue", "_InvalidDeletionIdException", "_InvalidFilterOption", "_OpsItemRelatedItemAssociationNotFoundException", "_InvalidDocumentType", "_UnsupportedCalendarException", "_InvalidPluginName", "_InvocationDoesNotExist", "_UnsupportedFeatureRequiredException", "_InvalidAggregatorException", "_InvalidInventoryGroupException", "_InvalidResultAttributeException", "_InvalidKeyId", "_ParameterVersionNotFound", "_ServiceSettingNotFound", "_ParameterVersionLabelLimitExceeded", "_DocumentPermissionLimit", "_ComplianceTypeCountLimitExceededException", "_InvalidItemContentException", "_ItemSizeLimitExceededException", "_TotalSizeLimitExceededException", "_CustomSchemaCountLimitExceededException", "_InvalidInventoryItemContextException", "_ItemContentMismatchException", "_SubTypeCountLimitExceededException", "_UnsupportedInventoryItemContextException", "_UnsupportedInventorySchemaVersionException", "_HierarchyLevelLimitExceededException", "_HierarchyTypeMismatchException", "_IncompatiblePolicyException", "_InvalidAllowedPatternException", "_InvalidPolicyAttributeException", "_InvalidPolicyTypeException", "_ParameterAlreadyExists", "_ParameterLimitExceeded", "_ParameterMaxVersionLimitExceeded", "_ParameterPatternMismatchException", "_PoliciesLimitExceededException", "_UnsupportedParameterType", "_ResourcePolicyLimitExceededException", "_FeatureNotAvailableException", "_AutomationStepNotFoundException", "_InvalidAutomationSignalException", "_InvalidNotificationConfig", "_InvalidOutputFolder", "_InvalidRole", "_InvalidAssociation", "_AutomationDefinitionNotFoundException", "_AutomationDefinitionVersionNotFoundException", "_AutomationExecutionLimitExceededException", "_InvalidAutomationExecutionParametersException", "_AutomationDefinitionNotApprovedException", "_TargetNotConnected", "_InvalidAutomationStatusUpdateException", "_AssociationVersionLimitExceeded", "_InvalidUpdate", "_StatusUnchanged", "_DocumentVersionLimitExceeded", "_DuplicateDocumentContent", "_DuplicateDocumentVersionName", "_OpsMetadataKeyLimitExceededException", "_ResourceDataSyncConflictException", "client", "AbortController", "process", "logger", "module", "TypeError", "require_util", "module", "module", "f", "module", "module", "val", "parse", "module", "self", "val", "module", "module", "module", "version", "module", "val", "useColors", "module", "require_log", "module", "module", "module", "self", "e", "module", "module", "c", "module", "module", "window", "message", "link", "self", "module", "message", "self", "d", "merge", "link", "module", "self", "module", "ReceiverEvents", "SenderEvents", "SessionEvents", "ConnectionEvents", "module", "module", "module", "AmqpResponseStatusCode", "LinkType", "delivery", "msg", "SenderType", "val", "EventContext", "isString", "isNumber", "ConditionStatusMapper", "ConditionErrorNameMapper", "ErrorNameConditionMapper", "SystemErrorConditionMapper", "RetryMode", "RetryOperationType", "TokenType", "module", "logger", "createClientLogger", "isObjectWithProperties", "isDefined", "Constants", "translate", "ErrorNameConditionMapper", "earliestEventPosition", "objectHasProperty", "CloseReason", "message", "Buffer", "AmqpAnnotatedMessage", "types", "randomUUID", "client", "defaultCancellableLock", "TokenType", "isSasTokenProvider", "azureLogger", "AbortError", "StandardAbortMessage", "retry", "RetryOperationType", "createAbortablePromise", "AbortController", "createTracingClient", "delay", "parseConnectionString", "ConditionErrorNameMapper", "isMessagingError", "isAmqpError", "RequestResponseLink", "SenderEvents", "ReceiverEvents", "ConnectionConfig", "os", "isTokenCredential", "isNamedKeyCredential", "isSASCredential", "ConnectionContext", "ConnectionContextBase", "ConnectionEvents", "_a", "createSasTokenProvider", "EventHubConsumerClient", "cancelablePromiseRace", "require_httpAuthSchemeProvider", "require_package", "module", "require_ruleset", "require_endpointResolver", "require_runtimeConfig_shared", "require_runtimeConfig", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "BatchExecuteStatementCommand", "BeginTransactionCommand", "CommitTransactionCommand", "ExecuteStatementCommand", "RDSDataClient", "import_smithy_client", "import_core", "import_middleware_endpoint", "import_middleware_retry", "import_protocol_http", "import_middleware_serde", "import_core2", "_RDSDataServiceException", "_AccessDeniedException", "_BadRequestException", "_DatabaseErrorException", "_DatabaseNotFoundException", "_DatabaseUnavailableException", "_ForbiddenException", "_HttpEndpointNotEnabledException", "_InternalServerErrorException", "_InvalidSecretException", "_SecretsErrorException", "_ServiceUnavailableError", "_StatementTimeoutException", "_TransactionNotFoundException", "_NotFoundException", "_UnsupportedResultException", "require_httpAuthSchemeProvider", "require_package", "module", "require_ruleset", "require_endpointResolver", "require_runtimeConfig_shared", "require_runtimeConfig", "require_dist_cjs", "module", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__export", "__copyProps", "__toCommonJS", "SNS", "import_smithy_client", "import_core", "import_middleware_endpoint", "import_middleware_retry", "import_protocol_http", "import_middleware_serde", "import_core2", "_SNSServiceException", "_AuthorizationErrorException", "_InternalErrorException", "_InvalidParameterException", "_NotFoundException", "_ThrottledException", "_FilterPolicyLimitExceededException", "_ReplayLimitExceededException", "_SubscriptionLimitExceededException", "_OptedOutException", "_UserErrorException", "_ConcurrentAccessException", "_InvalidSecurityException", "_StaleTagException", "_TagLimitExceededException", "_TagPolicyException", "_TopicLimitExceededException", "_ResourceNotFoundException", "_InvalidStateException", "_ValidationException", "_EndpointDisabledException", "_InvalidParameterValueException", "_KMSAccessDeniedException", "_KMSDisabledException", "_KMSInvalidStateException", "_KMSNotFoundException", "_KMSOptInRequired", "_KMSThrottlingException", "_PlatformApplicationDisabledException", "_BatchEntryIdsNotDistinctException", "_BatchRequestTooLongException", "_EmptyBatchRequestException", "_InvalidBatchEntryIdException", "_TooManyEntriesInBatchRequestException", "_VerificationException", "client", "import_lodash", "EnvironmentVariablesService", "merge", "EnvironmentVariablesService", "merge", "logger", "import_node_console", "EnvironmentVariablesService", "EnvironmentVariablesService", "EnvironmentVariablesService", "fromBase64", "fromBase64", "EnvironmentVariablesService", "shouldUseLocal", "getParameters", "val", "getParameters", "tableName", "val", "eventHubParameters", "checkpointDatabase", "context", "getParameters"]
}
